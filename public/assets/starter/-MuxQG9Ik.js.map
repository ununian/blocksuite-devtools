{"version":3,"mappings":"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","names":["database","workspace","id","page","pageBlockId","Text","noteId","pId","model","assertExists","databaseId","resolve","numberPureColumnConfig","richTextPureColumnConfig","datePureColumnConfig","linkPureColumnConfig","progressPureColumnConfig","checkboxPureColumnConfig","multiSelectColumnConfig","type","embed","surfaceId","empty","Y","Workspace","createAsyncCallRPCProviderCreator","flavour","channel","options","_id","doc","config","awareness","docMap","cache","rpc","AsyncCall","guid","targetClientId","update","clientId","encodeAwarenessUpdate","awarenessUpdate","applyAwarenessUpdate","merge","updateHandlerWeakMap","subdocsHandlerWeakMap","destroyHandlerWeakMap","createOrGetUpdateHandler","handler","origin","createOrGetSubdocsHandler","event","unregisterDoc","createOrGetDestroyHandler","awarenessUpdateHandler","changes","changedClients","res","cur","registerDoc","initDocMap","initDoc","connected","subDoc","apis","createBroadcastChannelProvider","args","BroadcastMessageChannel","eventListener","f","e","data","params","room","providerArgs","blobStorageArgs","featureArgs","IndexedDBProviderWrapper","createIndexedDBProvider","defaultMode","initParam","isE2E","getOptions","fn","store","blocks","globalUtils","editor","createWorkspaceOptions","providerCreators","blobStorages","schema","Schema","AffineSchemas","__unstableSchemas","idGenerator","Generator","createMemoryStorage","createIndexeddbStorage","createSimpleServerStorage","createEditor","element","AffineEditorContainer","toStyledEntry","key","value","devtoolsFormatter","obj","props","propsArr","heavy","pageId","count","i","SHAPE_TYPES","heavyWhiteboard","surfaceBlockElements","x","y","nanoid","native2Y","Boxed","linked","pageA","pageBId","pageB","pageCId","pageC","multiEditor","app","node","multiEditorVertical","pendingStructs","tempPage","vec","diff","presetMarkdown","preset","MarkdownTransformer.importMarkdown","versionMismatch","paragraphId","paragraph","initFunctions","examples","StartPanel","LitElement","html","repeat","urlParams","css","__decorateClass","customElement","CustomFramePanel","WithDisposable","ShadowlessElement","registerFramePanelComponents","components","name","component","nothing","state","property","CustomOutlinePanel","registerOutlinePanelComponents","SidePanel","ele","extendFormatBar","AffineFormatBarWidget","formatBar","selectionManager","getSurfaceElementFromEditor","editorHost","surfaceModel","surfaceElement","cssVariablesMap","extractCssVariables","plate","ColorVariables","OTHER_CSS_VARIABLES","StyleVariables","variable","SizeVariables","FontFamilyVariables","styleDebugMenuLoaded","basePath","setBasePath","initStyleDebugMenu","styleMenu","style","sizeFolder","fontFamilyFolder","colorFolder","othersFolder","plateKey","getSelectedBlocks","host","ctx","next","selections","selection","block","BlocksUtils","DebugMenu","matchMedia","readSelectionFromURL","root","sel","json","lz.decompressFromEncodedURIComponent","provider","mode","toTreeNode","v","xywh","HtmlTransformer.exportPage","MarkdownTransformer.exportPage","file","ZipTransformer.exportPages","url","a","input","ZipTransformer.importPages","base64","Utils.encodeWorkspaceAsYjsUpdateV2","Pane","__vitePreload","hash","lz.compressToEncodedURIComponent","dark","html2","classKey","duration","$html","$style","slCSSKeys","changedProperties","appRoot","query","subscribePage","target","debugMenu","outlinePanel","framePanel","copilotPanelPanel","CopilotPanel","sidePanel","leftSidePanel","LeftSidePanel","pagesPanel","PagesPanel","initPageContentByParam","param","functionMap","main","Job","providers","TestUtils","exampleList"],"sources":["../../../apps/starter/data/database.ts","../../../apps/starter/data/embed.ts","../../../apps/starter/data/empty.ts","../../../../store/src/providers/async-call-rpc.ts","../../../../store/src/providers/broadcast-channel.ts","../../../apps/starter/utils.ts","../../../apps/starter/data/heavy.ts","../../../apps/starter/data/heavy-whiteboard.ts","../../../apps/starter/data/linked.ts","../../../apps/starter/data/multiple-editor.ts","../../../apps/starter/data/pending-structs.ts","../../../apps/starter/data/preset.ts","../../../apps/starter/data/version-mismatch.ts","../../../apps/starter/components/start-panel.ts","../../../apps/starter/components/custom-frame-panel.ts","../../../apps/starter/components/custom-outline-panel.ts","../../../apps/starter/components/side-panel.ts","../../../apps/starter/components/custom-format-bar.ts","../../../apps/starter/components/debug-menu.ts","../../../apps/starter/main.ts"],"sourcesContent":["import type { ListType, ParagraphType } from '@blocksuite/blocks';\nimport type { DatabaseService } from '@blocksuite/blocks';\nimport { checkboxPureColumnConfig } from '@blocksuite/blocks';\nimport { datePureColumnConfig } from '@blocksuite/blocks';\nimport { linkPureColumnConfig } from '@blocksuite/blocks';\nimport { multiSelectColumnConfig } from '@blocksuite/blocks';\nimport { numberPureColumnConfig } from '@blocksuite/blocks';\nimport { progressPureColumnConfig } from '@blocksuite/blocks';\nimport { richTextPureColumnConfig } from '@blocksuite/blocks';\nimport type { DatabaseBlockModel } from '@blocksuite/blocks/models';\nimport { assertExists } from '@blocksuite/global/utils';\nimport { Text, type Workspace } from '@blocksuite/store';\n\nimport { type InitFn } from './utils.js';\n\n// eslint-disable-next-line @typescript-eslint/no-misused-promises\nexport const database: InitFn = async (workspace: Workspace, id: string) => {\n  const page = workspace.createPage({ id });\n  page.awarenessStore.setFlag('enable_expand_database_block', true);\n\n  // eslint-disable-next-line @typescript-eslint/no-misused-promises\n  await page.load(async () => {\n    // Add page block and surface block at root level\n    const pageBlockId = page.addBlock('affine:page', {\n      title: new Text('BlockSuite Playground'),\n    });\n    page.addBlock('affine:surface', {}, pageBlockId);\n\n    // Add note block inside page block\n    const noteId = page.addBlock('affine:note', {}, pageBlockId);\n    const pId = page.addBlock('affine:paragraph', {}, noteId);\n    const model = page.getBlockById(pId);\n    assertExists(model);\n    // Add database block inside note block\n    const databaseId = page.addBlock(\n      'affine:database',\n      {\n        columns: [],\n        cells: {},\n      },\n      noteId\n    );\n\n    await new Promise(resolve => requestAnimationFrame(resolve));\n\n    const service = window.host.std.spec.getService(\n      'affine:database'\n    ) as DatabaseService;\n    service.initDatabaseBlock(page, model, databaseId, 'table', true);\n    const database = page.getBlockById(databaseId) as DatabaseBlockModel;\n    database.addColumn(\n      'end',\n      numberPureColumnConfig.create(numberPureColumnConfig.name)\n    );\n    database.addColumn(\n      'end',\n      richTextPureColumnConfig.create(richTextPureColumnConfig.name)\n    );\n    database.addColumn(\n      'end',\n      datePureColumnConfig.create(datePureColumnConfig.name)\n    );\n    database.addColumn(\n      'end',\n      linkPureColumnConfig.create(linkPureColumnConfig.name)\n    );\n    database.addColumn(\n      'end',\n      progressPureColumnConfig.create(progressPureColumnConfig.name)\n    );\n    database.addColumn(\n      'end',\n      checkboxPureColumnConfig.create(checkboxPureColumnConfig.name)\n    );\n    database.addColumn(\n      'end',\n      multiSelectColumnConfig.create(multiSelectColumnConfig.name)\n    );\n    database.updateView(database.views[0].id, () => {\n      return {\n        groupBy: {\n          columnId: database.columns[1].id,\n          type: 'groupBy',\n          name: 'select',\n        },\n      };\n    });\n    const paragraphTypes: ParagraphType[] = [\n      'text',\n      'quote',\n      'h1',\n      'h2',\n      'h3',\n      'h4',\n      'h5',\n      'h6',\n    ];\n    paragraphTypes.forEach(type => {\n      page.addBlock(\n        'affine:paragraph',\n        { type: type, text: new Text(`Paragraph type ${type}`) },\n        databaseId\n      );\n    });\n    const listTypes: ListType[] = ['numbered', 'bulleted', 'todo', 'toggle'];\n\n    listTypes.forEach(type => {\n      page.addBlock(\n        'affine:list',\n        { type: type, text: new Text(`List type ${type}`) },\n        databaseId\n      );\n    });\n    // Add a paragraph after database\n    page.addBlock('affine:paragraph', {}, noteId);\n    page.addBlock('affine:paragraph', {}, noteId);\n    page.addBlock('affine:paragraph', {}, noteId);\n    page.addBlock('affine:paragraph', {}, noteId);\n    page.addBlock('affine:paragraph', {}, noteId);\n    database.addView('kanban');\n  });\n\n  page.resetHistory();\n};\n\ndatabase.id = 'database';\ndatabase.displayName = 'Database Example';\ndatabase.description = 'Database block basic example';\n","import { Text, type Workspace } from '@blocksuite/store';\n\nimport { type InitFn } from './utils.js';\n\n// eslint-disable-next-line @typescript-eslint/no-misused-promises\nexport const embed: InitFn = async (workspace: Workspace, id: string) => {\n  const page = workspace.getPage(id) ?? workspace.createPage({ id });\n  page.clear();\n\n  await page.load(() => {\n    // Add page block and surface block at root level\n    const pageBlockId = page.addBlock('affine:page', {\n      title: new Text(),\n    });\n\n    const surfaceId = page.addBlock('affine:surface', {}, pageBlockId);\n\n    // Add note block inside page block\n    const noteId = page.addBlock('affine:note', {}, pageBlockId);\n    // Add paragraph block inside note block\n    page.addBlock('affine:paragraph', {}, noteId);\n\n    page.addBlock(\n      'affine:embed-github',\n      {\n        url: 'https://github.com/toeverything/AFFiNE/pull/5453',\n      },\n      noteId\n    );\n    page.addBlock(\n      'affine:embed-github',\n      {\n        url: 'https://www.github.com/toeverything/blocksuite/pull/5927',\n        style: 'vertical',\n        xywh: '[0, 400, 364, 390]',\n      },\n      surfaceId\n    );\n    page.addBlock(\n      'affine:embed-github',\n      {\n        url: 'https://github.com/Milkdown/milkdown/pull/1215',\n        xywh: '[500, 400, 752, 116]',\n      },\n      surfaceId\n    );\n    page.addBlock('affine:paragraph', {}, noteId);\n  });\n\n  page.resetHistory();\n};\n\nembed.id = 'embed';\nembed.displayName = 'Example for embed blocks';\nembed.description = 'Example for embed blocks';\n","import { Text, type Workspace } from '@blocksuite/store';\n\nimport { type InitFn } from './utils.js';\n\n// eslint-disable-next-line @typescript-eslint/no-misused-promises\nexport const empty: InitFn = async (workspace: Workspace, id: string) => {\n  const page = workspace.getPage(id) ?? workspace.createPage({ id });\n  page.clear();\n\n  await page.load(() => {\n    // Add page block and surface block at root level\n    const pageBlockId = page.addBlock('affine:page', {\n      title: new Text(),\n    });\n\n    page.addBlock('affine:surface', {}, pageBlockId);\n\n    // Add note block inside page block\n    const noteId = page.addBlock('affine:note', {}, pageBlockId);\n    // Add paragraph block inside note block\n    page.addBlock('affine:paragraph', {}, noteId);\n  });\n\n  page.resetHistory();\n};\n\nempty.id = 'empty';\nempty.displayName = 'Empty Editor';\nempty.description = 'Start from empty editor';\n","import type { AsyncCallOptions } from 'async-call-rpc';\nimport { AsyncCall } from 'async-call-rpc';\nimport { merge } from 'merge';\nimport {\n  applyAwarenessUpdate,\n  encodeAwarenessUpdate,\n} from 'y-protocols/awareness';\nimport type { Doc } from 'yjs';\n\nimport { Workspace } from '../workspace/index.js';\nimport type { SubdocEvent } from '../yjs/index.js';\nimport type { DocProviderCreator, PassiveDocProvider } from './type.js';\n\nconst Y = Workspace.Y;\n\nexport type AwarenessChanges = Record<\n  'added' | 'updated' | 'removed',\n  number[]\n>;\n\ntype Impl = {\n  //#region Doc\n  // request diff update from other clients\n  queryDocState: (\n    guid: string,\n    targetClientId?: number\n  ) => Promise<Uint8Array | false>;\n\n  // send update to other clients\n  sendDocUpdate: (guid: string, update: Uint8Array) => Promise<void>;\n  //#endregion\n\n  //#region Awareness\n  // request awareness from other clients\n  queryAwareness: () => Promise<Uint8Array>;\n\n  // send awareness to other clients\n  sendAwareness: (awarenessUpdate: Uint8Array) => Promise<void>;\n  //#endregion\n};\n\nexport const createAsyncCallRPCProviderCreator = (\n  flavour: string,\n  channel: AsyncCallOptions['channel'],\n  options: {\n    cleanup: () => void;\n    asyncCallOptions?: Omit<AsyncCallOptions, 'channel'>;\n  }\n): DocProviderCreator => {\n  return (_id, doc, config): PassiveDocProvider => {\n    const awareness = config.awareness;\n    const docMap = new Map<string, Doc>();\n    const cache = new Map<string, Uint8Array[]>();\n\n    const impl = {\n      queryDocState: async (guid, targetClientId) => {\n        const doc = docMap.get(guid);\n        if (!doc) {\n          return false;\n        }\n        if (targetClientId && targetClientId !== doc.clientID) {\n          return false;\n        }\n        return Y.encodeStateAsUpdate(doc);\n      },\n      sendDocUpdate: async (guid, update) => {\n        const doc = docMap.get(guid);\n        if (!doc) {\n          // This case happens when the father doc is not yet updated,\n          //  so that the child doc is not yet created.\n          //  We need to put it into cache so that it can be applied later.\n          if (!cache.has(guid)) {\n            cache.set(guid, [update]);\n          } else {\n            (cache.get(guid) as Uint8Array[]).push(update);\n          }\n          return;\n        }\n        if (cache.has(guid)) {\n          const updates = cache.get(guid) as Uint8Array[];\n          updates.forEach(update => Y.applyUpdate(doc, update, channel));\n          cache.delete(guid);\n        }\n        Y.applyUpdate(doc, update, channel);\n        if (doc.store.pendingStructs) {\n          for (const clientId of doc.store.pendingStructs.missing.keys()) {\n            const update = await rpc.queryDocState(doc.guid, clientId);\n            if (update) {\n              Y.applyUpdate(doc, update, channel);\n            }\n          }\n        }\n      },\n      queryAwareness: async () => {\n        return encodeAwarenessUpdate(awareness, [awareness.clientID]);\n      },\n      sendAwareness: async awarenessUpdate => {\n        applyAwarenessUpdate(awareness, awarenessUpdate, channel);\n      },\n    } satisfies Impl;\n\n    const rpc = AsyncCall<Impl>(impl, {\n      channel,\n      ...merge(\n        true,\n        {\n          log: {\n            // only log error message\n            beCalled: false,\n            localError: true,\n            remoteError: true,\n          },\n        },\n        options.asyncCallOptions ?? {}\n      ),\n    });\n\n    type UpdateHandler = (update: Uint8Array, origin: unknown) => void;\n\n    type SubdocsHandler = (event: SubdocEvent) => void;\n    type DestroyHandler = () => void;\n\n    const updateHandlerWeakMap = new WeakMap<Doc, UpdateHandler>();\n    const subdocsHandlerWeakMap = new WeakMap<Doc, SubdocsHandler>();\n    const destroyHandlerWeakMap = new WeakMap<Doc, DestroyHandler>();\n\n    const createOrGetUpdateHandler = (doc: Doc): UpdateHandler => {\n      if (updateHandlerWeakMap.has(doc)) {\n        return updateHandlerWeakMap.get(doc) as UpdateHandler;\n      }\n      const handler: UpdateHandler = (update, origin) => {\n        if (origin === channel) {\n          // not self update, ignore\n          return;\n        }\n\n        rpc.sendDocUpdate(doc.guid, update).catch(console.error);\n      };\n      updateHandlerWeakMap.set(doc, handler);\n      return handler;\n    };\n\n    const createOrGetSubdocsHandler = (doc: Doc): SubdocsHandler => {\n      if (subdocsHandlerWeakMap.has(doc)) {\n        return subdocsHandlerWeakMap.get(doc) as SubdocsHandler;\n      }\n\n      const handler: SubdocsHandler = event => {\n        event.added.forEach(doc => docMap.set(doc.guid, doc));\n        event.added.forEach(doc => {\n          rpc\n            .queryDocState(doc.guid)\n            .then(update => {\n              if (!update) {\n                return;\n              }\n              Y.applyUpdate(doc, update, channel);\n              doc.emit('load', []);\n            })\n            .catch(console.error);\n          doc.on('update', createOrGetUpdateHandler(doc));\n        });\n\n        event.removed.forEach(unregisterDoc);\n      };\n\n      subdocsHandlerWeakMap.set(doc, handler);\n      return handler;\n    };\n\n    const createOrGetDestroyHandler = (doc: Doc): DestroyHandler => {\n      if (destroyHandlerWeakMap.has(doc)) {\n        return destroyHandlerWeakMap.get(doc) as DestroyHandler;\n      }\n\n      const handler: DestroyHandler = () => {\n        unregisterDoc(doc);\n      };\n\n      destroyHandlerWeakMap.set(doc, handler);\n      return handler;\n    };\n\n    const awarenessUpdateHandler = (\n      changes: AwarenessChanges,\n      origin: unknown\n    ) => {\n      if (origin === channel) {\n        return;\n      }\n      const changedClients = Object.values(changes).reduce((res, cur) => [\n        ...res,\n        ...cur,\n      ]);\n      const update = encodeAwarenessUpdate(awareness, changedClients);\n      rpc.sendAwareness(update).catch(console.error);\n    };\n\n    function registerDoc(doc: Doc) {\n      initDocMap(doc);\n      // register subdocs\n      doc.on('subdocs', createOrGetSubdocsHandler(doc));\n      doc.subdocs.forEach(registerDoc);\n      // register update\n      doc.on('update', createOrGetUpdateHandler(doc));\n      doc.on('destroy', createOrGetDestroyHandler(doc));\n    }\n\n    async function initDoc(doc: Doc) {\n      // query diff update\n      const update = await rpc.queryDocState(doc.guid);\n      if (!connected) {\n        return;\n      }\n      if (update !== false) {\n        Y.applyUpdate(doc, update, channel);\n      }\n      doc.subdocs.forEach(subDoc => {\n        initDoc(subDoc).catch(console.error);\n      });\n    }\n\n    function unregisterDoc(doc: Doc) {\n      docMap.delete(doc.guid);\n      doc.subdocs.forEach(unregisterDoc);\n      doc.off('update', createOrGetUpdateHandler(doc));\n      doc.off('subdocs', createOrGetSubdocsHandler(doc));\n      doc.off('destroy', createOrGetDestroyHandler(doc));\n    }\n\n    // recursively register all doc into map\n    function initDocMap(doc: Doc) {\n      // register all doc into map\n      docMap.set(doc.guid, doc);\n      doc.subdocs.forEach(initDocMap);\n    }\n\n    let connected = false;\n    const apis = {\n      flavour,\n      passive: true,\n      connect() {\n        connected = true;\n        registerDoc(doc);\n        initDoc(doc).catch(console.error);\n        rpc\n          .queryAwareness()\n          .then(update => applyAwarenessUpdate(awareness, update, channel))\n          .catch(console.error);\n        awareness.on('update', awarenessUpdateHandler);\n      },\n      disconnect() {\n        unregisterDoc(doc);\n        awareness.off('update', awarenessUpdateHandler);\n        connected = false;\n      },\n      get connected(): boolean {\n        return connected;\n      },\n      cleanup: () => {\n        apis.disconnect();\n        cache.clear();\n        options.cleanup();\n      },\n    } as const;\n    return apis;\n  };\n};\n","import type { EventBasedChannel } from 'async-call-rpc';\n\nimport { createAsyncCallRPCProviderCreator } from './async-call-rpc.js';\nimport type { DocProviderCreator } from './type.js';\n\nexport const createBroadcastChannelProvider: DocProviderCreator = (...args) => {\n  class BroadcastMessageChannel\n    extends BroadcastChannel\n    implements EventBasedChannel\n  {\n    on(eventListener: (data: unknown) => void) {\n      const f = (e: MessageEvent): void => eventListener(e.data);\n      this.addEventListener('message', f);\n      return () => this.removeEventListener('message', f);\n    }\n    send(data: unknown) {\n      super.postMessage(data);\n    }\n  }\n\n  const id: string = args[0];\n  const channel = new BroadcastMessageChannel(id);\n  return createAsyncCallRPCProviderCreator('broadcast-channel', channel, {\n    cleanup: () => {\n      channel.close();\n    },\n  })(...args);\n};\n","import * as blocks from '@blocksuite/blocks';\nimport { __unstableSchemas, AffineSchemas } from '@blocksuite/blocks/models';\nimport * as globalUtils from '@blocksuite/global/utils';\nimport * as editor from '@blocksuite/presets';\nimport { AffineEditorContainer } from '@blocksuite/presets';\nimport type {\n  BlobStorage,\n  DocProviderCreator,\n  Page,\n  PassiveDocProvider,\n  Workspace,\n  Y,\n} from '@blocksuite/store';\nimport * as store from '@blocksuite/store';\nimport {\n  createIndexeddbStorage,\n  createMemoryStorage,\n  createSimpleServerStorage,\n  Generator,\n  Schema,\n  type WorkspaceOptions,\n} from '@blocksuite/store';\nimport { createBroadcastChannelProvider } from '@blocksuite/store/providers/broadcast-channel';\nimport type { IndexedDBProvider } from '@toeverything/y-indexeddb';\nimport { createIndexedDBProvider } from '@toeverything/y-indexeddb';\n\nconst params = new URLSearchParams(location.search);\nconst room = params.get('room') ?? Math.random().toString(16).slice(2, 8);\nconst providerArgs = (params.get('providers') ?? 'bc').split(',');\nconst blobStorageArgs = (params.get('blobStorage') ?? 'memory').split(',');\nconst featureArgs = (params.get('features') ?? '').split(',');\n\nclass IndexedDBProviderWrapper implements PassiveDocProvider {\n  public readonly flavour = 'blocksuite-indexeddb';\n  public readonly passive = true as const;\n  private _connected = false;\n  private _provider: IndexedDBProvider;\n  constructor(doc: Y.Doc) {\n    this._provider = createIndexedDBProvider(doc);\n  }\n  connect() {\n    this._provider.connect();\n    this._connected = true;\n  }\n  disconnect() {\n    this._provider.disconnect();\n    this._connected = false;\n  }\n  get connected() {\n    return this._connected;\n  }\n}\n\nexport const defaultMode =\n  params.get('mode') === 'edgeless' ? 'edgeless' : 'page';\nexport const initParam = params.get('init');\nexport const isE2E = room.startsWith('playwright');\n\nexport const getOptions = (\n  fn: (params: URLSearchParams) => Record<string, string | number>\n) => fn(params);\n\ndeclare global {\n  // eslint-disable-next-line no-var\n  var targetPageId: string | undefined;\n  // eslint-disable-next-line no-var\n  var debugWorkspace: Workspace | undefined;\n}\n\nif (isE2E) {\n  Object.defineProperty(window, '$blocksuite', {\n    value: Object.freeze({\n      store,\n      blocks,\n      global: { utils: globalUtils },\n      editor,\n    }),\n  });\n}\n\n/**\n * Provider configuration is specified by `?providers=broadcast` or `?providers=indexeddb,broadcast` in URL params.\n * We use BroadcastChannelProvider by default if the `providers` param is missing.\n */\nexport function createWorkspaceOptions(): WorkspaceOptions {\n  const providerCreators: DocProviderCreator[] = [];\n  const blobStorages: ((id: string) => BlobStorage)[] = [];\n  const schema = new Schema();\n  schema.register(AffineSchemas).register(__unstableSchemas);\n\n  let idGenerator: Generator = Generator.AutoIncrement; // works only in single user mode\n\n  if (providerArgs.includes('idb')) {\n    providerCreators.push((_id, doc) => new IndexedDBProviderWrapper(doc));\n    idGenerator = Generator.NanoID; // works in production\n  }\n\n  if (providerArgs.includes('bc')) {\n    providerCreators.push(createBroadcastChannelProvider);\n    idGenerator = Generator.NanoID; // works in production\n  }\n\n  if (blobStorageArgs.includes('memory')) {\n    blobStorages.push(createMemoryStorage);\n  }\n\n  if (blobStorageArgs.includes('idb')) {\n    blobStorages.push(createIndexeddbStorage);\n  }\n\n  if (blobStorageArgs.includes('mock')) {\n    blobStorages.push(createSimpleServerStorage);\n  }\n\n  if (isE2E) {\n    // We need a predictable id generator in single page test environment.\n    // Keep in mind that with this config, the collaboration will easily crash,\n    // because all clients will count id from 0.\n    idGenerator = Generator.AutoIncrement;\n  }\n\n  return {\n    id: room,\n    schema,\n    providerCreators,\n    idGenerator,\n    blobStorages,\n    defaultFlags: {\n      enable_bultin_ledits: featureArgs.includes('ledits'),\n      readonly: {\n        'page:home': false,\n      },\n    },\n  };\n}\n\nexport function createEditor(page: Page, element: HTMLElement) {\n  const editor = new AffineEditorContainer();\n  editor.page = page;\n  element.append(editor);\n\n  return editor;\n}\n\nfunction toStyledEntry(key: string, value: unknown) {\n  return [\n    ['span', { style: 'color: #c0c0c0' }, ` ${key}`],\n    ['span', { style: 'color: #fff' }, `: `],\n    ['span', { style: 'color: rgb(92, 213, 251)' }, `${JSON.stringify(value)}`],\n  ];\n}\n\nexport const devtoolsFormatter: typeof window.devtoolsFormatters = [\n  {\n    header: function (obj: unknown) {\n      if (\n        'flavour' in (obj as store.BlockModel) &&\n        'yBlock' in (obj as store.BlockModel)\n      ) {\n        globalUtils.assertType<store.BlockModel>(obj);\n        return [\n          'span',\n          { style: 'font-weight: bolder;' },\n          ['span', { style: 'color: #fff' }, `Block {`],\n          ...toStyledEntry('flavour', obj.flavour),\n          ['span', { style: 'color: #fff' }, `,`],\n          ...toStyledEntry('id', obj.id),\n          ['span', { style: 'color: #fff' }, `}`],\n        ] as HTMLTemplate;\n      }\n\n      return null;\n    },\n    hasBody: (obj: unknown) => {\n      if (\n        'flavour' in (obj as store.BlockModel) &&\n        'yBlock' in (obj as store.BlockModel)\n      ) {\n        return true;\n      }\n\n      return null;\n    },\n    body: (obj: unknown) => {\n      if (\n        'flavour' in (obj as store.BlockModel) &&\n        'yBlock' in (obj as store.BlockModel)\n      ) {\n        globalUtils.assertType<store.BlockModel>(obj);\n\n        // @ts-ignore\n        const { props } = obj.page._blockTree.getBlock(obj.id)._parseYBlock();\n\n        const propsArr = Object.entries(props).flatMap(([key]) => {\n          return [\n            // @ts-ignore\n            ...toStyledEntry(key, obj[key]),\n            ['div', {}, ''],\n          ] as HTMLTemplate[];\n        });\n\n        return ['div', { style: 'padding-left: 1em' }, ...propsArr];\n      }\n\n      return null;\n    },\n  },\n];\n\nwindow.devtoolsFormatters = devtoolsFormatter;\n","import { Text, type Workspace } from '@blocksuite/store';\n\nimport { getOptions } from '../utils.js';\nimport { type InitFn } from './utils.js';\n\n// eslint-disable-next-line @typescript-eslint/no-misused-promises\nexport const heavy: InitFn = async (workspace: Workspace, pageId: string) => {\n  const { count } = getOptions((params: URLSearchParams) => {\n    const count = Number(params.get('count')) || 1000;\n    return {\n      count,\n    };\n  }) as {\n    count: number;\n  };\n\n  const page = workspace.createPage({ id: pageId });\n  await page.load(() => {\n    // Add page block and surface block at root level\n    const pageBlockId = page.addBlock('affine:page', {\n      title: new Text(),\n    });\n    page.addBlock('affine:surface', {}, pageBlockId);\n\n    // Add note block inside page block\n    const noteId = page.addBlock('affine:note', {}, pageBlockId);\n    for (let i = 0; i < count; i++) {\n      // Add paragraph block inside note block\n      page.addBlock(\n        'affine:paragraph',\n        {\n          text: new Text('Hello, world! ' + i),\n        },\n        noteId\n      );\n    }\n  });\n};\n\nheavy.id = 'heavy';\nheavy.displayName = 'Heavy Example';\nheavy.description = 'Heavy example on thousands of paragraph blocks';\n","import {\n  Boxed,\n  nanoid,\n  native2Y,\n  Text,\n  type Workspace,\n} from '@blocksuite/store';\n\nimport { getOptions } from '../utils.js';\nimport { type InitFn } from './utils.js';\n\nconst SHAPE_TYPES = ['rect', 'triangle', 'ellipse', 'diamond'];\n\n// eslint-disable-next-line @typescript-eslint/no-misused-promises\nexport const heavyWhiteboard: InitFn = async (\n  workspace: Workspace,\n  id: string\n) => {\n  const { count } = getOptions((params: URLSearchParams) => {\n    const count = Number(params.get('count')) || 100;\n    return {\n      count,\n    };\n  }) as {\n    count: number;\n  };\n\n  const page = workspace.createPage({ id });\n  await page.load(() => {\n    // Add page block and surface block at root level\n    const pageBlockId = page.addBlock('affine:page', {\n      title: new Text(),\n    });\n\n    const surfaceBlockElements: Record<string, unknown> = {};\n\n    let i = 0;\n\n    // Add note block inside page block\n    for (; i < count; i++) {\n      const x = Math.random() * count * 2;\n      const y = Math.random() * count * 2;\n      const id = nanoid();\n      surfaceBlockElements[id] = native2Y(\n        {\n          id,\n          index: 'a0',\n          type: 'shape',\n          xywh: `[${x},${y},100,100]`,\n          seed: Math.floor(Math.random() * 2 ** 31),\n\n          shapeType: SHAPE_TYPES[Math.floor(Math.random() * 40) % 4],\n\n          radius: 0,\n          filled: false,\n          fillColor: '--affine-palette-shape-yellow',\n          strokeWidth: 4,\n          strokeColor: '--affine-palette-line-yellow',\n          strokeStyle: 'solid',\n          roughness: 1.4,\n        },\n        { deep: false }\n      );\n    }\n\n    page.addBlock(\n      'affine:surface',\n      { elements: new Boxed(native2Y(surfaceBlockElements, { deep: false })) },\n      pageBlockId\n    );\n\n    // Add note block inside page block\n    for (i = 0; i < count; i++) {\n      const x = Math.random() * -count * 2 - 100;\n      const y = Math.random() * count * 2;\n      const noteId = page.addBlock(\n        'affine:note',\n        {\n          xywh: `[${x}, ${y}, 100, 50]`,\n        },\n        pageBlockId\n      );\n      // Add paragraph block inside note block\n      page.addBlock(\n        'affine:paragraph',\n        {\n          text: new Text('Note #' + i),\n        },\n        noteId\n      );\n    }\n  });\n};\n\nheavyWhiteboard.id = 'heavy-whiteboard';\nheavyWhiteboard.displayName = 'Heavy Whiteboard';\nheavyWhiteboard.description = 'Heavy Whiteboard on 200 elements by default';\n","import { Text, type Workspace } from '@blocksuite/store';\n\nimport { type InitFn } from './utils.js';\n\n// eslint-disable-next-line @typescript-eslint/no-misused-promises\nexport const linked: InitFn = async (workspace: Workspace, id: string) => {\n  const pageA = workspace.getPage(id) ?? workspace.createPage({ id });\n\n  const pageBId = 'page:page-linked-doc';\n  const pageB =\n    workspace.getPage('pageB') ?? workspace.createPage({ id: pageBId });\n\n  const pageCId = 'page:page-linked-edgeless';\n  const pageC =\n    workspace.getPage('pageC') ?? workspace.createPage({ id: pageCId });\n\n  pageA.clear();\n  pageB.clear();\n  pageC.clear();\n\n  await pageB.load(() => {\n    const pageBlockId = pageB.addBlock('affine:page', {\n      title: new Text(''),\n    });\n\n    pageB.addBlock('affine:surface', {}, pageBlockId);\n\n    // Add note block inside page block\n    const noteId = pageB.addBlock('affine:note', {}, pageBlockId);\n    // Add paragraph block inside note block\n    pageB.addBlock('affine:paragraph', {}, noteId);\n  });\n\n  await pageC.load(() => {\n    const pageBlockId = pageC.addBlock('affine:page', {\n      title: new Text(''),\n    });\n\n    pageC.addBlock('affine:surface', {}, pageBlockId);\n\n    // Add note block inside page block\n    const noteId = pageC.addBlock('affine:note', {}, pageBlockId);\n    // Add paragraph block inside note block\n    pageC.addBlock('affine:paragraph', {}, noteId);\n  });\n\n  await pageA.load(async () => {\n    // Add page block and surface block at root level\n    const pageBlockId = pageA.addBlock('affine:page', {\n      title: new Text('Page A'),\n    });\n\n    pageA.addBlock('affine:surface', {}, pageBlockId);\n\n    // Add note block inside page block\n    const noteId = pageA.addBlock('affine:note', {}, pageBlockId);\n    // Add paragraph block inside note block\n    pageA.addBlock('affine:paragraph', {}, noteId);\n\n    pageA.addBlock('affine:embed-linked-doc', { pageId: pageBId }, noteId);\n\n    pageA.addBlock(\n      'affine:embed-linked-doc',\n      { pageId: 'page:deleted-example' },\n      noteId\n    );\n\n    pageA.addBlock('affine:embed-linked-doc', { pageId: pageCId }, noteId);\n\n    pageA.addBlock(\n      'affine:embed-linked-doc',\n      { pageId: 'page:deleted-example-edgeless' },\n      noteId\n    );\n  });\n\n  pageA.resetHistory();\n  pageB.resetHistory();\n  pageC.resetHistory();\n};\n\nlinked.id = 'linked';\nlinked.displayName = 'Linked Page Editor';\nlinked.description = 'A demo with linked pages';\n","import { AffineEditorContainer } from '@blocksuite/presets';\nimport { Text, type Workspace } from '@blocksuite/store';\n\nimport { createEditor } from '../utils.js';\nimport { type InitFn } from './utils.js';\n\n// eslint-disable-next-line @typescript-eslint/no-misused-promises\nexport const multiEditor: InitFn = async (workspace: Workspace, id: string) => {\n  const page = workspace.createPage({ id });\n  await page.load(() => {\n    // Add page block and surface block at root level\n    const pageBlockId = page.addBlock('affine:page', {\n      title: new Text(),\n    });\n\n    page.addBlock('affine:surface', {}, pageBlockId);\n\n    // Add note block inside page block\n    const noteId = page.addBlock('affine:note', {}, pageBlockId);\n    // Add paragraph block inside note block\n    page.addBlock('affine:paragraph', {}, noteId);\n  });\n\n  page.resetHistory();\n\n  const app = document.getElementById('app');\n  if (app) {\n    createEditor(page, app);\n    app.style.display = 'flex';\n    app.childNodes.forEach(node => {\n      if (node instanceof AffineEditorContainer) {\n        node.style.flex = '1';\n      }\n    });\n  }\n};\n\nmultiEditor.id = 'multiple-editor';\nmultiEditor.displayName = 'Multiple Editor Example';\nmultiEditor.description = 'Multiple Editor basic example';\n\n// eslint-disable-next-line @typescript-eslint/no-misused-promises\nexport const multiEditorVertical: InitFn = async (\n  workspace: Workspace,\n  pageId: string\n) => {\n  const page = workspace.createPage({ id: pageId });\n  await page.load(() => {\n    // Add page block and surface block at root level\n    const pageBlockId = page.addBlock('affine:page', {\n      title: new Text(),\n    });\n\n    page.addBlock('affine:surface', {}, pageBlockId);\n\n    // Add note block inside page block\n    const noteId = page.addBlock('affine:note', {}, pageBlockId);\n    // Add paragraph block inside note block\n    page.addBlock('affine:paragraph', {}, noteId);\n  });\n\n  page.resetHistory();\n\n  const app = document.getElementById('app');\n  if (app) {\n    createEditor(page, app);\n  }\n};\n\nmultiEditorVertical.id = 'multiple-editor-vertical';\nmultiEditorVertical.displayName = 'Vertical Multiple Editor Example';\nmultiEditorVertical.description = 'Multiple Editor vertical layout example';\n","import { Workspace } from '@blocksuite/store';\nimport { Text } from '@blocksuite/store';\n\nimport type { InitFn } from './utils.js';\n\n// eslint-disable-next-line @typescript-eslint/no-misused-promises\nexport const pendingStructs: InitFn = async (\n  workspace: Workspace,\n  id: string\n) => {\n  const page = workspace.createPage({ id });\n  const tempPage = workspace.createPage({ id: 'tempPage' });\n  await page.load();\n  await tempPage.load(() => {\n    const pageBlockId = tempPage.addBlock('affine:page', {\n      title: new Text('Pending Structs'),\n    });\n    const vec = Workspace.Y.encodeStateVector(tempPage.spaceDoc);\n\n    // To avoid pending structs, uncomment the following line\n    // const update = Workspace.Y.encodeStateAsUpdate(tempPage.spaceDoc);\n\n    tempPage.addBlock('affine:surface', {}, pageBlockId);\n    // Add note block inside page block\n    const noteId = tempPage.addBlock('affine:note', {}, pageBlockId);\n    tempPage.addBlock(\n      'affine:paragraph',\n      {\n        text: new Text('This is a paragraph block'),\n      },\n      noteId\n    );\n    const diff = Workspace.Y.encodeStateAsUpdate(tempPage.spaceDoc, vec);\n    // To avoid pending structs, uncomment the following line\n    // Workspace.Y.applyUpdate(page.spaceDoc, update);\n\n    Workspace.Y.applyUpdate(page.spaceDoc, diff);\n  });\n};\n\npendingStructs.id = 'pending-structs';\npendingStructs.displayName = 'Pending Structs';\npendingStructs.description = 'Page doc with pending structs';\n","import { MarkdownTransformer } from '@blocksuite/blocks';\nimport { Text, type Workspace } from '@blocksuite/store';\n\nimport { type InitFn } from './utils.js';\n\nconst presetMarkdown = `This playground is designed to:\n\n* 📝 Test basic editing experience.\n* ⚙️ Serve as E2E test entry.\n* 🔗 Demonstrate how BlockSuite reconciles real-time collaboration with [local-first](https://martin.kleppmann.com/papers/local-first.pdf) data ownership.\n\n## Controlling Playground Data Source\nYou might initially enter this page with the \\`?init\\` URL param. This is the default (opt-in) setup that automatically loads this built-in article. Meanwhile, you'll connect to a random single-user room via a broadcast channel provider by default. This is the \"single-user mode\" for local testing.\n\nTo test real-time collaboration, you can specify the room to join by adding the \\`?room=foo\\` config - Try opening this page with \\`?room=foo\\` in two different tabs and see what happens!\n\n> Note that the second and subsequent users should not open the page with the \\`?init\\` param in this case.\n\nIf you are the only user in the room, your content will be lost after refresh. This is great for local debugging. But if you want local persistence, you can open this page with the \\`?providers=idb&room=foo\\` config, then click the init button in the bottom-left corner to initialize this default content.\n\nAs a pro tip, you can combine multiple providers! For example, feel free to open this page with \\`?providers=idb,bc&room=hello\\` params (IndexedDB + BroadcastChannel), and see if everything works as expected. Have fun!\n\nFor any feedback, please visit [BlockSuite issues](https://github.com/toeverything/blocksuite/issues) 📍`;\n\n// eslint-disable-next-line @typescript-eslint/no-misused-promises\nexport const preset: InitFn = async (workspace: Workspace, id: string) => {\n  const page = workspace.createPage({ id });\n  await page.load(async () => {\n    // Add page block and surface block at root level\n    const pageBlockId = page.addBlock('affine:page', {\n      title: new Text('BlockSuite Playground'),\n    });\n    page.addBlock('affine:surface', {}, pageBlockId);\n\n    // Add note block inside page block\n    const noteId = page.addBlock(\n      'affine:note',\n      { xywh: '[0, 100, 800, 640]' },\n      pageBlockId\n    );\n\n    // Import preset markdown content inside note block\n    await MarkdownTransformer.importMarkdown({\n      page,\n      noteId,\n      markdown: presetMarkdown,\n    });\n\n    page.resetHistory();\n  });\n};\n\npreset.id = 'preset';\npreset.displayName = 'BlockSuite Starter';\npreset.description = 'Start from friendly introduction';\n","import type { Y } from '@blocksuite/store';\nimport { Workspace } from '@blocksuite/store';\n\nimport type { InitFn } from './utils.js';\n\n// eslint-disable-next-line @typescript-eslint/no-misused-promises\nexport const versionMismatch: InitFn = async (\n  workspace: Workspace,\n  id: string\n) => {\n  const page = workspace.createPage({ id });\n  const tempPage = workspace.createPage({ id: 'tempPage' });\n  await page.load();\n\n  await tempPage.load(() => {\n    const pageBlockId = tempPage.addBlock('affine:page', {});\n    tempPage.addBlock('affine:surface', {}, pageBlockId);\n    const noteId = tempPage.addBlock(\n      'affine:note',\n      { xywh: '[0, 100, 800, 640]' },\n      pageBlockId\n    );\n    const paragraphId = tempPage.addBlock('affine:paragraph', {}, noteId);\n    const blocks = tempPage.spaceDoc.get('blocks') as Y.Map<unknown>;\n    const paragraph = blocks.get(paragraphId) as Y.Map<unknown>;\n    paragraph.set('sys:version', (paragraph.get('sys:version') as number) + 1);\n\n    const update = Workspace.Y.encodeStateAsUpdate(tempPage.spaceDoc);\n\n    Workspace.Y.applyUpdate(page.spaceDoc, update);\n    page.addBlock('affine:paragraph', {}, noteId);\n  });\n\n  workspace.removePage('tempPage');\n  page.resetHistory();\n};\n\nversionMismatch.id = 'version-mismatch';\nversionMismatch.displayName = 'Version Mismatch';\nversionMismatch.description = 'Error boundary when version mismatch in data';\n","/* eslint-disable @typescript-eslint/no-restricted-imports */\nimport '@shoelace-style/shoelace/dist/components/card/card.js';\n\nimport { css, html, LitElement } from 'lit';\nimport { customElement } from 'lit/decorators.js';\nimport { repeat } from 'lit/directives/repeat.js';\n\nimport * as examples from '../data/index.js';\n\nconst initFunctions = Object.values(examples);\n\n@customElement('start-panel')\nexport class StartPanel extends LitElement {\n  static override styles = css`\n    .container {\n      display: flex;\n      flex-direction: row;\n      flex-wrap: wrap;\n      margin: 1rem;\n      gap: 1rem;\n    }\n\n    .card {\n      width: 300px;\n      font-family: var(--sl-input-font-family);\n      font-size: 14px;\n      cursor: pointer;\n    }\n  `;\n\n  override render() {\n    return html`\n      <div class=\"container\">\n        ${repeat(\n          initFunctions,\n          fn => html`\n            <sl-card\n              class=\"card\"\n              @click=${() => {\n                const urlParams = new URLSearchParams(window.location.search);\n                urlParams.set('init', fn.id);\n                window.location.search = urlParams.toString();\n              }}\n            >\n              <div slot=\"header\">${fn.displayName}</div>\n              ${fn.description}\n            </sl-card>\n          `\n        )}\n      </div>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'start-panel': StartPanel;\n  }\n}\n","import { ShadowlessElement, WithDisposable } from '@blocksuite/lit';\nimport type { AffineEditorContainer } from '@blocksuite/presets';\nimport { registerFramePanelComponents } from '@blocksuite/presets';\nimport { css, html, nothing } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\n\n@customElement('custom-frame-panel')\nexport class CustomFramePanel extends WithDisposable(ShadowlessElement) {\n  static override styles = css`\n    .custom-frame-container {\n      position: absolute;\n      top: 0;\n      right: 0;\n      border: 1px solid var(--affine-border-color, #e3e2e4);\n      background-color: var(--affine-background-primary-color);\n      height: 100vh;\n      width: 320px;\n      box-sizing: border-box;\n      padding-top: 16px;\n      z-index: 1;\n    }\n  `;\n  @state()\n  private _show = false;\n\n  @property({ attribute: false })\n  editor!: AffineEditorContainer;\n\n  private _renderPanel() {\n    return html`<frame-panel .editor=${this.editor}></frame-panel>`;\n  }\n\n  public toggleDisplay() {\n    this._show = !this._show;\n  }\n\n  override connectedCallback(): void {\n    super.connectedCallback();\n\n    registerFramePanelComponents(components => {\n      Object.entries(components).forEach(([name, component]) => {\n        customElements.define(name, component);\n      });\n    });\n\n    this.disposables.add(\n      this.editor.slots.pageModeSwitched.on(() => {\n        this.editor.updateComplete\n          .then(() => this.requestUpdate())\n          .catch(console.error);\n      })\n    );\n  }\n\n  override render() {\n    return html`\n      ${this._show\n        ? html`<div class=\"custom-frame-container blocksuite-overlay\">\n            ${this._renderPanel()}\n          </div>`\n        : nothing}\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'custom-frame-panel': CustomFramePanel;\n  }\n}\n","import { WithDisposable } from '@blocksuite/lit';\nimport {\n  type AffineEditorContainer,\n  registerOutlinePanelComponents,\n} from '@blocksuite/presets';\nimport { css, html, LitElement } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\n\n@customElement('custom-outline-panel')\nexport class CustomOutlinePanel extends WithDisposable(LitElement) {\n  static override styles = css`\n    .custom-outline-container {\n      position: absolute;\n      top: 0;\n      right: 0;\n      border: 1px solid var(--affine-border-color, #e3e2e4);\n      background: var(--affine-background-overlay-panel-color);\n      height: 100vh;\n      width: 320px;\n      box-sizing: border-box;\n      z-index: 1;\n    }\n  `;\n  @state()\n  private _show = false;\n\n  @property({ attribute: false })\n  editor!: AffineEditorContainer;\n\n  private _renderPanel() {\n    return html`<outline-panel\n      .editor=${this.editor}\n      .fitPadding=${[50, 360, 50, 50]}\n    ></outline-panel>`;\n  }\n\n  public toggleDisplay() {\n    this._show = !this._show;\n  }\n\n  override connectedCallback(): void {\n    super.connectedCallback();\n\n    registerOutlinePanelComponents(components => {\n      Object.entries(components).forEach(([name, component]) => {\n        customElements.define(name, component);\n      });\n    });\n  }\n\n  override render() {\n    return html`\n      ${this._show\n        ? html`\n            <div class=\"custom-outline-container blocksuite-overlay\">\n              ${this._renderPanel()}\n            </div>\n          `\n        : null}\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'custom-outline-panel': CustomOutlinePanel;\n  }\n}\n","import { ShadowlessElement } from '@blocksuite/lit';\nimport { css, html } from 'lit';\nimport { customElement } from 'lit/decorators.js';\n\n@customElement('side-panel')\nexport class SidePanel extends ShadowlessElement {\n  static override styles = css`\n    side-panel {\n      width: 300px;\n      background-color: var(--affine-background-secondary-color);\n      position: absolute;\n      top: 0;\n      right: 0;\n      height: 100%;\n      display: none;\n    }\n  `;\n  currentContent: HTMLElement | null = null;\n  showContent(ele: HTMLElement) {\n    if (this.currentContent) {\n      this.currentContent.remove();\n    }\n    this.style.display = 'block';\n    ele.classList.add('blocksuite-overlay');\n    this.currentContent = ele;\n    this.append(ele);\n  }\n  hideContent() {\n    if (this.currentContent) {\n      this.style.display = 'none';\n      this.currentContent.remove();\n      this.currentContent = null;\n    }\n  }\n\n  protected override render(): unknown {\n    return html``;\n  }\n\n  toggle(ele: HTMLElement) {\n    if (this.currentContent !== ele) {\n      this.showContent(ele);\n    } else {\n      this.hideContent();\n    }\n  }\n}\n","import { AffineFormatBarWidget } from '@blocksuite/blocks';\n\nexport function extendFormatBar() {\n  AffineFormatBarWidget.registerCustomElement({\n    init(formatBar: AffineFormatBarWidget): HTMLElement {\n      // If you are using react,\n      // you can use `createRoot` to mount the component here.\n      const element = document.createElement('div');\n      element.textContent = '❤️';\n      element.setAttribute('data-testid', 'custom-format-bar-element');\n      element.addEventListener('click', () => {\n        const host = formatBar.host;\n        const selectionManager = host.selection;\n        console.log('selections', selectionManager.value);\n      });\n      return element;\n    },\n  });\n}\n","/* eslint-disable @typescript-eslint/no-restricted-imports */\nimport '@shoelace-style/shoelace/dist/components/button-group/button-group.js';\nimport '@shoelace-style/shoelace/dist/components/button/button.js';\nimport '@shoelace-style/shoelace/dist/components/color-picker/color-picker.js';\nimport '@shoelace-style/shoelace/dist/components/divider/divider.js';\nimport '@shoelace-style/shoelace/dist/components/dropdown/dropdown.js';\nimport '@shoelace-style/shoelace/dist/components/icon-button/icon-button.js';\nimport '@shoelace-style/shoelace/dist/components/icon/icon.js';\nimport '@shoelace-style/shoelace/dist/components/menu-item/menu-item.js';\nimport '@shoelace-style/shoelace/dist/components/menu/menu.js';\nimport '@shoelace-style/shoelace/dist/components/select/select.js';\nimport '@shoelace-style/shoelace/dist/components/tab-group/tab-group.js';\nimport '@shoelace-style/shoelace/dist/components/tab/tab.js';\nimport '@shoelace-style/shoelace/dist/components/tooltip/tooltip.js';\nimport '@shoelace-style/shoelace/dist/themes/light.css';\nimport '@shoelace-style/shoelace/dist/themes/dark.css';\nimport './left-side-panel.js';\nimport './side-panel.js';\n\nimport type { PageService, TreeNode } from '@blocksuite/blocks';\nimport {\n  BlocksUtils,\n  ColorVariables,\n  extractCssVariables,\n  FontFamilyVariables,\n  HtmlTransformer,\n  MarkdownTransformer,\n  SizeVariables,\n  StyleVariables,\n  type SurfaceBlockComponent,\n  ZipTransformer,\n} from '@blocksuite/blocks';\nimport { assertExists } from '@blocksuite/global/utils';\nimport {\n  type BlockElement,\n  type EditorHost,\n  ShadowlessElement,\n} from '@blocksuite/lit';\nimport type { AffineEditorContainer, CopilotPanel } from '@blocksuite/presets';\nimport type { BlockModel } from '@blocksuite/store';\nimport { Utils, type Workspace } from '@blocksuite/store';\nimport type { SlDropdown } from '@shoelace-style/shoelace';\nimport { setBasePath } from '@shoelace-style/shoelace/dist/utilities/base-path.js';\nimport { css, html } from 'lit';\nimport { customElement, property, query, state } from 'lit/decorators.js';\nimport * as lz from 'lz-string';\nimport type { Pane } from 'tweakpane';\n\nimport { extendFormatBar } from './custom-format-bar.js';\nimport type { CustomFramePanel } from './custom-frame-panel.js';\nimport type { CustomOutlinePanel } from './custom-outline-panel.js';\nimport type { LeftSidePanel } from './left-side-panel.js';\nimport type { PagesPanel } from './pages-panel.js';\nimport type { SidePanel } from './side-panel.js';\n\nexport function getSurfaceElementFromEditor(editorHost: EditorHost) {\n  const { page } = editorHost;\n  const surfaceModel = page.getBlockByFlavour('affine:surface')[0];\n  assertExists(surfaceModel);\n\n  const surfaceId = surfaceModel.id;\n  const surfaceElement = editorHost.querySelector(\n    `affine-surface[data-block-id=\"${surfaceId}\"]`\n  ) as SurfaceBlockComponent;\n  assertExists(surfaceElement);\n\n  return surfaceElement;\n}\n\nconst cssVariablesMap = extractCssVariables(document.documentElement);\nconst plate: Record<string, string> = {};\nColorVariables.forEach((key: string) => {\n  plate[key] = cssVariablesMap[key];\n});\nconst OTHER_CSS_VARIABLES = StyleVariables.filter(\n  variable =>\n    !SizeVariables.includes(variable) &&\n    !ColorVariables.includes(variable) &&\n    !FontFamilyVariables.includes(variable)\n);\nlet styleDebugMenuLoaded = false;\n\nconst basePath = import.meta.env.DEV\n  ? '/node_modules/@shoelace-style/shoelace/dist'\n  : 'https://cdn.jsdelivr.net/npm/@shoelace-style/shoelace@2.11.2/dist';\nsetBasePath(basePath);\n\nfunction initStyleDebugMenu(styleMenu: Pane, style: CSSStyleDeclaration) {\n  const sizeFolder = styleMenu.addFolder({ title: 'Size', expanded: false });\n  const fontFamilyFolder = styleMenu.addFolder({\n    title: 'Font Family',\n    expanded: false,\n  });\n  const colorFolder = styleMenu.addFolder({ title: 'Color', expanded: false });\n  const othersFolder = styleMenu.addFolder({\n    title: 'Others',\n    expanded: false,\n  });\n  SizeVariables.forEach(name => {\n    sizeFolder\n      .addBinding(\n        {\n          [name]: isNaN(parseFloat(cssVariablesMap[name]))\n            ? 0\n            : parseFloat(cssVariablesMap[name]),\n        },\n        name,\n        {\n          min: 0,\n          max: 100,\n        }\n      )\n      .on('change', e => {\n        style.setProperty(name, `${Math.round(e.value)}px`);\n      });\n  });\n  FontFamilyVariables.forEach(name => {\n    fontFamilyFolder\n      .addBinding(\n        {\n          [name]: cssVariablesMap[name],\n        },\n        name\n      )\n      .on('change', e => {\n        style.setProperty(name, e.value);\n      });\n  });\n  OTHER_CSS_VARIABLES.forEach(name => {\n    othersFolder\n      .addBinding({ [name]: cssVariablesMap[name] }, name)\n      .on('change', e => {\n        style.setProperty(name, e.value);\n      });\n  });\n  fontFamilyFolder\n    .addBinding(\n      {\n        '--affine-font-family':\n          'Roboto Mono, apple-system, BlinkMacSystemFont,Helvetica Neue, Tahoma, PingFang SC, Microsoft Yahei, Arial,Hiragino Sans GB, sans-serif, Apple Color Emoji, Segoe UI Emoji,Segoe UI Symbol, Noto Color Emoji',\n      },\n      '--affine-font-family'\n    )\n    .on('change', e => {\n      style.setProperty('--affine-font-family', e.value);\n    });\n  for (const plateKey in plate) {\n    colorFolder.addBinding(plate, plateKey).on('change', e => {\n      style.setProperty(plateKey, e.value);\n    });\n  }\n}\nexport function getSelectedBlocks(host: EditorHost) {\n  let blocks: BlockElement[] = [];\n\n  host.std.command\n    .pipe()\n    .getBlockSelections()\n    .inline((ctx, next) => {\n      const selections = ctx.currentBlockSelections;\n      if (!selections) return;\n\n      blocks = selections\n        .map(selection => ctx.std.view.viewFromPath('block', selection.path))\n        .filter(\n          (block): block is BlockElement =>\n            block !== null &&\n            BlocksUtils.matchFlavours(block.model, [\n              'affine:paragraph',\n              'affine:list',\n              'affine:code',\n            ])\n        );\n\n      return next();\n    })\n    .run();\n\n  return blocks;\n}\n\n@customElement('debug-menu')\nexport class DebugMenu extends ShadowlessElement {\n  static override styles = css`\n    :root {\n      --sl-font-size-medium: var(--affine-font-xs);\n      --sl-input-font-size-small: var(--affine-font-xs);\n    }\n\n    .dg.ac {\n      z-index: 1001 !important;\n    }\n  `;\n\n  @property({ attribute: false })\n  workspace!: Workspace;\n\n  @property({ attribute: false })\n  editor!: AffineEditorContainer;\n\n  @property({ attribute: false })\n  outlinePanel!: CustomOutlinePanel;\n\n  @property({ attribute: false })\n  framePanel!: CustomFramePanel;\n\n  @property({ attribute: false })\n  copilotPanel!: CopilotPanel;\n\n  @property({ attribute: false })\n  sidePanel!: SidePanel;\n  @property({ attribute: false })\n  leftSidePanel!: LeftSidePanel;\n  @property({ attribute: false })\n  pagesPanel!: PagesPanel;\n\n  @state()\n  private _connected = true;\n\n  @state()\n  private _canUndo = false;\n\n  @state()\n  private _canRedo = false;\n\n  @property({ attribute: false })\n  mode: 'page' | 'edgeless' = 'page';\n\n  @property({ attribute: false })\n  readonly = false;\n\n  @state()\n  private _hasOffset = false;\n\n  @query('#block-type-dropdown')\n  blockTypeDropdown!: SlDropdown;\n\n  private _styleMenu!: Pane;\n  private _showStyleDebugMenu = false;\n\n  @state()\n  private _dark = localStorage.getItem('blocksuite:dark') === 'true';\n\n  get page() {\n    return this.editor.page;\n  }\n\n  get pageService() {\n    return this.editor.host.spec.getService('affine:page') as PageService;\n  }\n\n  override createRenderRoot() {\n    const matchMedia = window.matchMedia('(prefers-color-scheme: dark)');\n    this._setThemeMode(this._dark && matchMedia.matches);\n    matchMedia.addEventListener('change', this._darkModeChange);\n\n    return this;\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n\n    const readSelectionFromURL = async () => {\n      const root = this.editor.host;\n      if (!root) {\n        await new Promise(resolve => {\n          setTimeout(resolve, 500);\n        });\n        readSelectionFromURL().catch(console.error);\n        return;\n      }\n      const url = new URL(window.location.toString());\n      const sel = url.searchParams.get('sel');\n      if (!sel) return;\n      try {\n        const json = JSON.parse(lz.decompressFromEncodedURIComponent(sel));\n        root.std.selection.fromJSON(json);\n      } catch {\n        return;\n      }\n    };\n    readSelectionFromURL().catch(console.error);\n  }\n\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n\n    const matchMedia = window.matchMedia('(prefers-color-scheme: dark)');\n    matchMedia.removeEventListener('change', this._darkModeChange);\n  }\n\n  private _toggleConnection() {\n    if (this._connected) {\n      this.workspace.providers.forEach(provider => {\n        if ('passive' in provider && provider.connected) {\n          provider.disconnect();\n        }\n      });\n      this._connected = false;\n    } else {\n      this.workspace.providers.forEach(provider => {\n        if ('passive' in provider && !provider.connected) {\n          provider.connect();\n        }\n      });\n      this._connected = true;\n    }\n  }\n\n  private _switchEditorMode() {\n    const mode = this.editor.mode === 'page' ? 'edgeless' : 'page';\n    this.mode = mode;\n  }\n\n  private _toggleOutlinePanel() {\n    this.outlinePanel.toggleDisplay();\n  }\n\n  private _toggleFramePanel() {\n    this.framePanel.toggleDisplay();\n  }\n\n  private _toggleCopilotPanel() {\n    this.sidePanel.toggle(this.copilotPanel);\n  }\n  private _togglePagesPanel() {\n    this.leftSidePanel.toggle(this.pagesPanel);\n  }\n\n  private _createMindMap() {\n    function makeid(length: number) {\n      let result = '';\n      const characters =\n        'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n      const charactersLength = characters.length;\n      let counter = 0;\n      while (counter < length) {\n        result += characters.charAt(\n          Math.floor(Math.random() * charactersLength)\n        );\n        counter += 1;\n      }\n      return result;\n    }\n\n    const _genTree = (deep: number = 0): TreeNode => {\n      const count = Math.floor(Math.random() * 10) - deep - 2;\n      const children: TreeNode[] = [];\n      for (let i = 0; i < count; i++) {\n        children.push(_genTree(deep + 1));\n      }\n      return {\n        text: makeid(Math.random() * 200 + 30),\n        children,\n      };\n    };\n    const blocks = getSelectedBlocks(this.editor.host!);\n    const toTreeNode = (block: BlockModel): TreeNode => {\n      return {\n        text: block.text?.toString() ?? '',\n        children: block.children.map(toTreeNode),\n      };\n    };\n    const node = {\n      text: 'Root',\n      children: blocks.map(v => toTreeNode(v.model)),\n    };\n    // const node: TreeNode = genTree();\n    BlocksUtils.mindMap.drawInEdgeless(\n      getSurfaceElementFromEditor(this.editor.host),\n      node\n    );\n  }\n\n  private _switchOffsetMode() {\n    this._hasOffset = !this._hasOffset;\n  }\n\n  private _addNote() {\n    const root = this.page.root;\n    if (!root) return;\n    const pageId = root.id;\n\n    this.page.captureSync();\n\n    const count = root.children.length;\n    const xywh = `[0,${count * 60},800,95]`;\n\n    const noteId = this.page.addBlock('affine:note', { xywh }, pageId);\n    this.page.addBlock('affine:paragraph', {}, noteId);\n  }\n\n  private _exportPdf() {\n    this.pageService.exportManager.exportPdf().catch(console.error);\n  }\n\n  private _exportHtml() {\n    HtmlTransformer.exportPage(this.page).catch(console.error);\n  }\n\n  private async _exportMarkDown() {\n    MarkdownTransformer.exportPage(this.page).catch(console.error);\n  }\n\n  private _exportPng() {\n    this.pageService.exportManager.exportPng().catch(console.error);\n  }\n\n  private async _exportSnapshot() {\n    const file = await ZipTransformer.exportPages(this.workspace, [\n      ...this.workspace.pages.values(),\n    ]);\n    const url = URL.createObjectURL(file);\n    const a = document.createElement('a');\n    a.setAttribute('href', url);\n    a.setAttribute('download', `${this.page.id}.bs.zip`);\n    a.click();\n    a.remove();\n    URL.revokeObjectURL(url);\n  }\n\n  private _importSnapshot() {\n    const input = document.createElement('input');\n    input.setAttribute('type', 'file');\n    input.setAttribute('accept', '.zip');\n    input.multiple = false;\n    input.onchange = async () => {\n      const file = input.files?.item(0);\n      if (!file) {\n        return;\n      }\n      try {\n        await ZipTransformer.importPages(this.workspace, file);\n        this.requestUpdate();\n      } catch (e) {\n        console.error('Invalid snapshot.');\n        console.error(e);\n      } finally {\n        input.remove();\n      }\n    };\n    input.click();\n  }\n\n  private _shareUrl() {\n    const base64 = Utils.encodeWorkspaceAsYjsUpdateV2(this.workspace);\n    const url = new URL(window.location.toString());\n    url.searchParams.set('init', base64);\n    window.history.pushState({}, '', url);\n  }\n\n  private async _toggleStyleDebugMenu() {\n    if (!styleDebugMenuLoaded) {\n      styleDebugMenuLoaded = true;\n      const { Pane } = await import('tweakpane');\n      this._styleMenu = new Pane({ title: 'Waiting' });\n      this._styleMenu.hidden = true;\n      this._styleMenu.element.style.width = '650';\n      initStyleDebugMenu(this._styleMenu, document.documentElement.style);\n    }\n\n    this._showStyleDebugMenu = !this._showStyleDebugMenu;\n    this._showStyleDebugMenu\n      ? (this._styleMenu.hidden = false)\n      : (this._styleMenu.hidden = true);\n  }\n\n  private _toggleReadonly() {\n    const page = this.page;\n    page.awarenessStore.setReadonly(page, !page.readonly);\n  }\n\n  private _shareSelection() {\n    const selection = this.editor.host?.selection.value;\n    if (!selection || selection.length === 0) {\n      return;\n    }\n    const json = selection.map(sel => sel.toJSON());\n    const hash = lz.compressToEncodedURIComponent(JSON.stringify(json));\n    const url = new URL(window.location.toString());\n    url.searchParams.set('sel', hash);\n    window.history.pushState({}, '', url);\n  }\n\n  private _setThemeMode(dark: boolean) {\n    const html = document.querySelector('html');\n\n    this._dark = dark;\n    localStorage.setItem('blocksuite:dark', dark ? 'true' : 'false');\n    if (!html) return;\n    html.setAttribute('data-theme', dark ? 'dark' : 'light');\n\n    this._insertTransitionStyle('color-transition', 0);\n\n    if (dark) {\n      html.classList.add('dark');\n      html.classList.add('sl-theme-dark');\n    } else {\n      html.classList.remove('dark');\n      html.classList.remove('sl-theme-dark');\n    }\n  }\n\n  private _insertTransitionStyle(classKey: string, duration: number) {\n    const $html = document.documentElement;\n    const $style = document.createElement('style');\n    const slCSSKeys = ['sl-transition-x-fast'];\n    $style.innerHTML = `html.${classKey} * { transition: all ${duration}ms 0ms linear !important; } :root { ${slCSSKeys.map(\n      key => `--${key}: ${duration}ms`\n    )} }`;\n\n    $html.appendChild($style);\n    $html.classList.add(classKey);\n\n    setTimeout(() => {\n      $style.remove();\n      $html.classList.remove(classKey);\n    }, duration);\n  }\n\n  private _toggleDarkMode() {\n    this._setThemeMode(!this._dark);\n  }\n\n  private _darkModeChange = (e: MediaQueryListEvent) => {\n    this._setThemeMode(!!e.matches);\n  };\n\n  private _extendFormatBar() {\n    extendFormatBar();\n  }\n\n  override firstUpdated() {\n    this.page.slots.historyUpdated.on(() => {\n      this._canUndo = this.page.canUndo;\n      this._canRedo = this.page.canRedo;\n    });\n  }\n\n  override update(changedProperties: Map<string, unknown>) {\n    if (changedProperties.has('mode')) {\n      const mode = this.mode;\n      this.editor.mode = mode;\n    }\n    if (changedProperties.has('_hasOffset')) {\n      const appRoot = document.getElementById('app');\n      if (!appRoot) return;\n      const style: Partial<CSSStyleDeclaration> = this._hasOffset\n        ? {\n            margin: '60px 40px 240px 40px',\n            overflow: 'auto',\n            height: '400px',\n            boxShadow: '0 0 10px 0 rgba(0, 0, 0, 0.2)',\n          }\n        : {\n            margin: '0',\n            overflow: 'initial',\n            // edgeless needs the container height\n            height: '100%',\n            boxShadow: 'initial',\n          };\n      Object.assign(appRoot.style, style);\n    }\n    super.update(changedProperties);\n  }\n\n  override render() {\n    return html`\n      <style>\n        .debug-menu {\n          display: flex;\n          flex-wrap: nowrap;\n          position: fixed;\n          top: 0;\n          left: 0;\n          width: 100%;\n          overflow: auto;\n          z-index: 1000; /* for debug visibility */\n          pointer-events: none;\n        }\n\n        @media print {\n          .debug-menu {\n            display: none;\n          }\n        }\n\n        .default-toolbar {\n          display: flex;\n          gap: 5px;\n          padding: 8px;\n          width: 100%;\n          min-width: 390px;\n        }\n\n        .default-toolbar > * {\n          pointer-events: auto;\n        }\n\n        .edgeless-toolbar {\n          align-items: center;\n          margin-right: 17px;\n          pointer-events: auto;\n        }\n\n        .edgeless-toolbar sl-select,\n        .edgeless-toolbar sl-color-picker,\n        .edgeless-toolbar sl-button {\n          margin-right: 4px;\n        }\n      </style>\n      <div class=\"debug-menu default blocksuite-overlay\">\n        <div class=\"default-toolbar\">\n          <!-- undo/redo group -->\n          <sl-button-group label=\"History\">\n            <!-- undo -->\n            <sl-tooltip content=\"Undo\" placement=\"bottom\" hoist>\n              <sl-button\n                size=\"small\"\n                .disabled=${!this._canUndo}\n                @click=${() => this.page.undo()}\n              >\n                <sl-icon name=\"arrow-counterclockwise\" label=\"Undo\"></sl-icon>\n              </sl-button>\n            </sl-tooltip>\n            <!-- redo -->\n            <sl-tooltip content=\"Redo\" placement=\"bottom\" hoist>\n              <sl-button\n                size=\"small\"\n                .disabled=${!this._canRedo}\n                @click=${() => this.page.redo()}\n              >\n                <sl-icon name=\"arrow-clockwise\" label=\"Redo\"></sl-icon>\n              </sl-button>\n            </sl-tooltip>\n          </sl-button-group>\n\n          <!-- test operations -->\n          <sl-dropdown id=\"test-operations-dropdown\" placement=\"bottom\" hoist>\n            <sl-button size=\"small\" slot=\"trigger\" caret>\n              Test Operations\n            </sl-button>\n            <sl-menu>\n              <sl-menu-item @click=${this._toggleConnection}>\n                ${this._connected ? 'Disconnect' : 'Connect'}\n              </sl-menu-item>\n              <sl-menu-item @click=${this._exportMarkDown}>\n                Export Markdown\n              </sl-menu-item>\n              <sl-menu-item @click=${this._exportHtml}>\n                Export HTML\n              </sl-menu-item>\n              <sl-menu-item @click=${this._exportPdf}>\n                Export PDF\n              </sl-menu-item>\n              <sl-menu-item @click=${this._exportPng}>\n                Export PNG\n              </sl-menu-item>\n              <sl-menu-item @click=${this._exportSnapshot}>\n                Export Snapshot\n              </sl-menu-item>\n              <sl-menu-item @click=${this._importSnapshot}>\n                Import Snapshot\n              </sl-menu-item>\n              <sl-menu-item @click=${this._shareUrl}>Share URL</sl-menu-item>\n              <sl-menu-item @click=${this._toggleStyleDebugMenu}>\n                Toggle CSS Debug Menu\n              </sl-menu-item>\n              <sl-menu-item @click=${this._toggleReadonly}>\n                Toggle Readonly\n              </sl-menu-item>\n              <sl-menu-item @click=${this._shareSelection}>\n                Share Selection\n              </sl-menu-item>\n              <sl-menu-item @click=${this._switchOffsetMode}>\n                Switch Offset Mode\n              </sl-menu-item>\n              <sl-menu-item @click=${this._toggleOutlinePanel}>\n                Toggle Outline Panel\n              </sl-menu-item>\n              <sl-menu-item @click=${this._toggleFramePanel}>\n                Toggle Frame Panel\n              </sl-menu-item>\n              <sl-menu-item @click=${this._extendFormatBar}>\n                Extend Format Bar\n              </sl-menu-item>\n              <sl-menu-item @click=${this._createMindMap}>\n                Create Mind Map\n              </sl-menu-item>\n              <sl-menu-item @click=${this._addNote}>Add Note</sl-menu-item>\n            </sl-menu>\n          </sl-dropdown>\n\n          <sl-tooltip content=\"Switch Editor Mode\" placement=\"bottom\" hoist>\n            <sl-button size=\"small\" @click=${this._switchEditorMode}>\n              <sl-icon name=\"repeat\"></sl-icon>\n            </sl-button>\n          </sl-tooltip>\n\n          <sl-tooltip content=\"Toggle Dark Mode\" placement=\"bottom\" hoist>\n            <sl-button size=\"small\" @click=${this._toggleDarkMode}>\n              <sl-icon\n                name=${this._dark ? 'moon' : 'brightness-high'}\n              ></sl-icon>\n            </sl-button>\n          </sl-tooltip>\n\n          <sl-tooltip\n            content=\"🚧 Toggle Copilot Panel\"\n            placement=\"bottom\"\n            hoist\n          >\n            <sl-button size=\"small\" @click=${this._toggleCopilotPanel}>\n              <sl-icon name=\"stars\"></sl-icon>\n            </sl-button>\n          </sl-tooltip>\n          <sl-button\n            data-testid=\"pages-button\"\n            size=\"small\"\n            @click=${this._togglePagesPanel}\n          >\n            Pages\n          </sl-button>\n        </div>\n      </div>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'debug-menu': DebugMenu;\n  }\n}\n","/// <reference types=\"./env.d.ts\" />\nimport '@blocksuite/blocks';\nimport '@blocksuite/presets';\nimport './components/start-panel.js';\n// eslint-disable-next-line @typescript-eslint/no-restricted-imports\nimport '@blocksuite/presets/themes/affine.css';\n\nimport { TestUtils } from '@blocksuite/blocks';\nimport { AffineSchemas } from '@blocksuite/blocks/models';\nimport type { EditorHost } from '@blocksuite/lit';\nimport { CopilotPanel } from '@blocksuite/presets';\nimport type { DocProvider, Page } from '@blocksuite/store';\nimport { Job, Workspace } from '@blocksuite/store';\n\nimport { CustomFramePanel } from './components/custom-frame-panel.js';\nimport { CustomOutlinePanel } from './components/custom-outline-panel.js';\nimport { DebugMenu } from './components/debug-menu.js';\nimport { LeftSidePanel } from './components/left-side-panel.js';\nimport { PagesPanel } from './components/pages-panel.js';\nimport { SidePanel } from './components/side-panel.js';\nimport type { InitFn } from './data';\nimport {\n  createEditor,\n  createWorkspaceOptions,\n  defaultMode,\n  initParam,\n  isE2E,\n} from './utils.js';\n\nconst options = createWorkspaceOptions();\n\n// Subscribe for page update and create editor after page loaded.\nfunction subscribePage(workspace: Workspace) {\n  workspace.slots.pageAdded.once(pageId => {\n    if (typeof globalThis.targetPageId === 'string') {\n      if (pageId !== globalThis.targetPageId) {\n        // if there's `targetPageId` which not same as the `pageId`\n        return;\n      }\n    }\n    const app = document.getElementById('app');\n    if (!app) return;\n\n    const page = workspace.getPage(pageId) as Page;\n\n    const editor = createEditor(page, app);\n    editor.slots.pageLinkClicked.on(({ pageId }) => {\n      const target = page.workspace.getPage(pageId);\n      if (!target) {\n        throw new Error(`Failed to jump to page ${pageId}`);\n      }\n      editor.page = target;\n    });\n    const debugMenu = new DebugMenu();\n    const outlinePanel = new CustomOutlinePanel();\n    const framePanel = new CustomFramePanel();\n    const copilotPanelPanel = new CopilotPanel();\n    const sidePanel = new SidePanel();\n    const leftSidePanel = new LeftSidePanel();\n    const pagesPanel = new PagesPanel();\n\n    debugMenu.workspace = workspace;\n    debugMenu.editor = editor;\n    debugMenu.mode = defaultMode;\n    debugMenu.outlinePanel = outlinePanel;\n    debugMenu.framePanel = framePanel;\n    debugMenu.copilotPanel = copilotPanelPanel;\n    debugMenu.sidePanel = sidePanel;\n    debugMenu.leftSidePanel = leftSidePanel;\n    debugMenu.pagesPanel = pagesPanel;\n\n    outlinePanel.editor = editor;\n    copilotPanelPanel.editor = editor;\n    framePanel.editor = editor;\n    pagesPanel.editor = editor;\n\n    document.body.appendChild(debugMenu);\n    document.body.appendChild(outlinePanel);\n    document.body.appendChild(sidePanel);\n    document.body.appendChild(leftSidePanel);\n    document.body.appendChild(framePanel);\n\n    window.editor = editor;\n    window.page = page;\n  });\n}\n\nexport async function initPageContentByParam(\n  workspace: Workspace,\n  param: string,\n  pageId: string\n) {\n  const functionMap = new Map<\n    string,\n    (workspace: Workspace, id: string) => void\n  >();\n  Object.values(\n    (await import('./data/index.js')) as Record<string, InitFn>\n  ).forEach(fn => functionMap.set(fn.id, fn));\n  // Load the preset playground documentation when `?init` param provided\n  if (param === '') {\n    param = 'preset';\n  }\n\n  // Load built-in init function when `?init=heavy` param provided\n  if (functionMap.has(param)) {\n    functionMap.get(param)?.(workspace, pageId);\n    const page = workspace.getPage(pageId);\n    await page?.load();\n    page?.resetHistory();\n    return;\n  }\n}\n\nasync function main() {\n  if (window.workspace) return;\n\n  const workspace = new Workspace(options);\n  window.workspace = workspace;\n  window.job = new Job({ workspace });\n  window.blockSchemas = AffineSchemas;\n  window.Y = Workspace.Y;\n  Object.defineProperty(globalThis, 'host', {\n    get() {\n      return document.querySelector('editor-host') as EditorHost;\n    },\n  });\n\n  const syncProviders = async (providers: DocProvider[]) => {\n    for (const provider of providers) {\n      if ('active' in provider) {\n        provider.sync();\n        await provider.whenReady;\n      } else if ('passive' in provider) {\n        provider.connect();\n      }\n    }\n  };\n\n  await syncProviders(workspace.providers);\n\n  workspace.slots.pageAdded.on(async pageId => {\n    const page = workspace.getPage(pageId) as Page;\n    await page.load();\n  });\n\n  window.testUtils = new TestUtils();\n\n  // In E2E environment, initial state should be generated by test case,\n  // instead of using this default setup.\n  if (isE2E) return;\n\n  subscribePage(workspace);\n  if (initParam !== null) {\n    await initPageContentByParam(workspace, initParam, 'page:home');\n    return;\n  }\n\n  // Open default examples list when no `?init` param is provided\n  const exampleList = document.createElement('start-panel');\n  workspace.slots.pageAdded.once(() => exampleList.remove());\n  document.body.prepend(exampleList);\n}\n\nmain().catch(console.error);\n"],"file":"assets/starter/-MuxQG9Ik.js"}