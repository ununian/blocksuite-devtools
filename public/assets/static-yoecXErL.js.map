{"version":3,"mappings":"yjDACO,SAASA,GACdC,EACmD,CAC5C,OAAAA,IAAM,OAAOA,CAAC,CACvB,CAEO,SAASC,GAAcC,EAA4B,CAAC,CAE3C,SAAAC,EACdC,EACAC,EAA0B,qBACR,CACd,GAAAD,GAAQ,KACV,MAAIC,aAAmB,MACfA,EAEF,IAAI,MAAMA,CAAO,CAE3B,CAEgB,SAAAC,GACdF,EACAC,EAAU,aACuB,CAC7B,GAAAD,GAAQ,KACJ,UAAI,MAAMC,CAAO,CAE3B,CAkBgB,SAAAE,GACdH,EACAI,EACc,CACR,MAAAR,EAAID,GAAYK,CAAG,EACnBK,EAAIV,GAAYS,CAAQ,EAC9B,GAAIR,GAAKS,GACP,GAAI,CAAC,OAAO,GAAGL,EAAKI,CAAQ,EACnB,aAEX,IAAWR,IAAMS,EACR,SAEP,GAAI,MAAM,QAAQL,CAAG,GAAK,MAAM,QAAQI,CAAQ,EAC1C,OAAAJ,EAAI,SAAWI,EAAS,OACnB,GAEFJ,EAAI,MAAM,CAACM,EAAG,IAAMH,GAAQG,EAAGF,EAAS,CAAC,CAAC,CAAC,KACzC,OAAOJ,GAAQ,UAAY,OAAOI,GAAa,SAAU,CAC5D,MAAAG,EAAO,OAAO,QAAQP,CAA8B,EACpDQ,EAAO,OAAO,QAAQJ,CAAmC,EAC3D,OAAAG,EAAK,SAAWC,EAAK,OAChB,GAEFD,EAAK,MAAM,CAACD,EAAGG,IAAMN,GAAQG,EAAGE,EAAKC,CAAC,CAAC,CAAC,CACjD,EAEK,QACT,CACO,SAASC,GACdV,EACAI,EACAH,EAAU,8BACQ,CAClB,GAAI,CAACE,GAAQH,EAAKI,CAAQ,EAClB,UAAI,MAAMH,CAAO,CAE3B,CAKO,SAASU,GACdX,EACAI,EACAH,EAAU,kCACQ,CACd,KAAED,aAAeI,GACb,UAAI,MAAMH,CAAO,CAE3B,CC1FO,MAAMW,EAAsC,CAA5C,cACL,KAAQ,UAAY,GACpB,KAAQ,aAA6B,EAAC,CAEtC,IAAI,UAAW,CACb,OAAO,KAAK,SACd,CAMA,IAAIC,EAAiC,CAC/B,OAAOA,GAAM,WACX,KAAK,UAAaA,IACjB,KAAK,aAAa,KAAK,CAAE,QAASA,CAAG,GAEtC,KAAK,UAAWA,EAAE,QAAQ,EACpB,kBAAa,KAAKA,CAAC,CAEjC,CAoBA,aACEC,EACAC,EACAC,EACAC,EACA,CACA,KAAK,IAAI,CACP,QAAS,IAAM,CACNH,EAAA,oBAAoBC,EAAMC,EAAuBC,CAAY,CACtE,EACD,EACMH,EAAA,iBAAiBC,EAAMC,EAAuBC,CAAY,CACnE,CAEA,SAAU,CACRC,GAAW,KAAK,YAAY,EAC5B,KAAK,aAAe,GACpB,KAAK,UAAY,EACnB,CACF,CAEO,SAASC,GAAmBC,EAAuC,CACjE,OACL,QAAS,IAAMF,GAAWE,CAAW,EAEzC,CAEA,SAASF,GAAWE,EAA2B,CAC7C,UAAWC,KAAcD,EACnB,IACFC,EAAW,QAAQ,QACZC,EAAK,CACZ,QAAQ,MAAMA,CAAG,CACnB,CAEJ,CC7EO,MAAMC,CAAqC,CAA3C,cACL,KAAQ,UAAY,GACpB,KAAQ,WAAoC,GAC5C,KAAQ,aAA6B,GAqCzB,gBACVC,EACAC,EACAC,IAIG,CACC,IAAAC,EACJ,KAAM,CAAE,OAAAC,EAAQ,WAAAC,EAAa,OAAO,EAAG,EAAIH,GAAU,GAC9C,YAAK,GAAYI,GAAA,CACtB,GAAIF,GAAU,CAACA,EAAOE,CAAK,EACzB,OAEI,MAAAC,EAAYP,EAASM,CAAK,GAC5BH,IAAc,QAAa,CAACE,EAAWF,EAAWI,CAAS,KAC7DN,EAASM,CAAS,EACNJ,EAAAI,EACd,CACD,EACH,CAvDA,OAAOC,EAAqC,CACpC,MAAAC,EAAS,IAAIV,EAEZ,OAAAU,EAAA,aAAa,KAAK,CAAE,QAAS,IAAM,KAAK,UAAW,EAErD,QAAIC,GAAS,CACZF,EAAQE,CAAC,GACXD,EAAO,KAAKC,CAAC,CACf,CACD,EAEMD,CACT,CAEA,GAAGR,EAAyC,CAC1C,GAAI,KAAK,UAAW,CAClB,MAAMU,EAAc,CAAC,GAAG,KAAK,WAAYV,CAAQ,EACjD,KAAK,WAAaU,CAAA,MAEb,gBAAW,KAAKV,CAAQ,EAExB,OACL,QAAS,IAAM,CACb,GAAI,KAAK,UACP,KAAK,WAAa,KAAK,WAAW,OAAOS,GAAKA,IAAMT,CAAQ,MACvD,CACL,MAAMW,EAAQ,KAAK,WAAW,QAAQX,CAAQ,EAC1CW,EAAQ,IACL,gBAAW,OAAOA,EAAO,CAAC,CAEnC,CACF,EAEJ,CAwBA,KAAKX,EAAyC,CAC5C,IAAIY,EACE,MAAArB,EAAWkB,GAAS,CACxBT,EAASS,CAAC,EACNG,GACMA,GACV,EAEIhB,EAAa,KAAK,GAAGL,CAAO,EAClC,OAAAqB,EAAUhB,EAAW,QACdA,CACT,CAEA,QAAQI,EAAyC,CAC/C,GAAI,KAAK,UAAW,CAClB,MAAMU,EAAc,CAACV,EAAU,GAAG,KAAK,UAAU,EACjD,KAAK,WAAaU,CAAA,MAEb,gBAAW,QAAQV,CAAQ,EAE3B,OACL,QAAS,IAAM,CACb,GAAI,KAAK,UACP,KAAK,WAAa,KAAK,WAAW,OAAOS,GAAKA,IAAMT,CAAQ,MACvD,CACL,MAAMW,EAAQ,KAAK,WAAW,QAAQX,CAAQ,EAC1CW,EAAQ,IACL,gBAAW,OAAOA,EAAO,CAAC,CAEnC,CACF,EAEJ,CAEA,KAAKF,EAAM,CACT,MAAMI,EAAe,KAAK,UAC1B,KAAK,UAAY,GACZ,gBAAW,QAAaC,GAAA,CACvB,IACFA,EAAEL,CAAC,QACIZ,EAAK,CACZ,QAAQ,MAAMA,CAAG,CACnB,EACD,EACD,KAAK,UAAYgB,CACnB,CAEA,KAAKE,EAAwB,CAC3B,YAAK,WAAW,KAAKN,GAAKM,EAAK,KAAKN,CAAC,CAAC,EAC/B,IACT,CAEA,SAAU,CACWf,GAAA,KAAK,YAAY,EAAE,QAAQ,EAC9C,KAAK,WAAa,GAClB,KAAK,aAAe,EACtB,CAEA,UAAUC,EAAoC,CAC5C,OAAAA,EAAY,KAAK,IAAI,EACd,IACT,CACF,CC1HO,MAAMqB,GAAS,IAAM,IAAI,ICSnBC,GAAOC,GAAOA,EAAIA,EAAI,OAAS,CAAC,EAsBhCC,GAAW,CAACC,EAAMC,IAAQ,CACrC,QAASrC,EAAI,EAAGA,EAAIqC,EAAI,OAAQrC,IAC9BoC,EAAK,KAAKC,EAAIrC,CAAC,CAAC,CAEpB,EAUasC,GAAO,MAAM,KAgCbC,GAAO,CAACL,EAAKJ,IAAM,CAC9B,QAAS9B,EAAI,EAAGA,EAAIkC,EAAI,OAAQlC,IAC9B,GAAI8B,EAAEI,EAAIlC,CAAC,EAAGA,EAAGkC,CAAG,EAClB,MAAO,GAGX,MAAO,EACT,EAwBaM,GAAS,CAACC,EAAKX,IAAM,CAChC,MAAMY,EAAQ,IAAI,MAAMD,CAAG,EAC3B,QAASzC,EAAI,EAAGA,EAAIyC,EAAKzC,IACvB0C,EAAM1C,CAAC,EAAI8B,EAAE9B,EAAG0C,CAAK,EAEvB,OAAOA,CACT,EAWaC,GAAU,MAAM,QC3HhBC,GAAe,OAAO,aAa7BC,GAAc,GAAK,EAAE,YAAa,EAElCC,GAAgB,QAMTC,GAAW,GAAK,EAAE,QAAQD,GAAe,EAAE,EAElDE,GAAqB,WAOdC,GAAgB,CAAC,EAAGC,IAAcH,GAAS,EAAE,QAAQC,GAAoBG,GAAS,GAAGD,CAAS,GAAGL,GAAYM,CAAK,CAAC,EAAE,CAAC,EAatHC,GAAsBC,GAAO,CACxC,MAAMC,EAAgB,SAAS,mBAAmBD,CAAG,CAAC,EAChDZ,EAAMa,EAAc,OACpBC,EAAM,IAAI,WAAWd,CAAG,EAC9B,QAASzC,EAAI,EAAGA,EAAIyC,EAAKzC,IACvBuD,EAAIvD,CAAC,EAA2BsD,EAAc,YAAYtD,CAAC,EAE7D,OAAOuD,CACT,EAGaC,GAA8C,OAAO,YAAgB,IAAc,IAAI,YAAgB,KAMvGC,GAAoBJ,GAAOG,GAAgB,OAAOH,CAAG,EAOrDK,GAAaF,GAAkBC,GAAoBL,GAsBzD,IAAIO,GAAkB,OAAO,YAAgB,IAAc,KAAO,IAAI,YAAY,QAAS,CAAE,MAAO,GAAM,UAAW,EAAI,CAAE,EAG9HA,IAAmBA,GAAgB,OAAO,IAAI,UAAY,EAAE,SAAW,IAOzEA,GAAkB,MA6Bb,MAAMC,GAAS,CAACC,EAAQC,IAAMC,GAAaD,EAAG,IAAMD,CAAM,EAAE,KAAK,EAAE,EC1H7D7B,GAAS,IAAM,IAAI,IAUnBgC,GAAOC,GAAK,CACvB,MAAMC,EAAIlC,GAAQ,EAClB,OAAAiC,EAAE,QAAQ,CAACxC,EAAG0C,IAAM,CAAED,EAAE,IAAIC,EAAG1C,CAAC,EAAG,EAC5ByC,CACT,EAkBaE,GAAiB,CAACC,EAAKC,EAAKC,IAAY,CACnD,IAAIC,EAAMH,EAAI,IAAIC,CAAG,EACrB,OAAIE,IAAQ,QACVH,EAAI,IAAIC,EAAKE,EAAMD,EAAO,CAAE,EAEvBC,CACT,EAaaH,GAAM,CAACJ,EAAGnC,IAAM,CAC3B,MAAM2C,EAAM,CAAE,EACd,SAAW,CAACH,EAAKI,CAAK,IAAKT,EACzBQ,EAAI,KAAK3C,EAAE4C,EAAOJ,CAAG,CAAC,EAExB,OAAOG,CACT,EAcaE,GAAM,CAACV,EAAGnC,IAAM,CAC3B,SAAW,CAACwC,EAAKI,CAAK,IAAKT,EACzB,GAAInC,EAAE4C,EAAOJ,CAAG,EACd,MAAO,GAGX,MAAO,EACT,EChFaM,GAAkBnD,GAAKA,IAAM,OAAY,KAAOA,ECD7D,MAAMoD,EAAmB,CACvB,aAAe,CACb,KAAK,IAAM,IAAI,GAChB,CAMD,QAASP,EAAKQ,EAAU,CACtB,KAAK,IAAI,IAAIR,EAAKQ,CAAQ,CAC3B,CAKD,QAASR,EAAK,CACZ,OAAO,KAAK,IAAI,IAAIA,CAAG,CACxB,CACH,CAMA,IAAIS,GAAgB,IAAIF,GACpBG,GAAc,GAGlB,GAAI,CAEE,OAAO,aAAiB,KAAe,eACzCD,GAAgB,aAChBC,GAAc,GAElB,MAAY,CAAG,CAOR,MAAMC,GAAaF,GCvCbG,GAAS,OAAO,OAKhBC,GAAO,OAAO,KAOdC,GAAU,CAACC,EAAKvD,IAAM,CACjC,UAAWwC,KAAOe,EAChBvD,EAAEuD,EAAIf,CAAG,EAAGA,CAAG,CAEnB,EAsBagB,GAASD,GAAOF,GAAKE,CAAG,EAAE,OAmB1BE,GAAUF,GAAO,CAE5B,UAAWG,KAAMH,EACf,MAAO,GAET,MAAO,EACT,EAOaI,GAAQ,CAACJ,EAAKvD,IAAM,CAC/B,UAAWwC,KAAOe,EAChB,GAAI,CAACvD,EAAEuD,EAAIf,CAAG,EAAGA,CAAG,EAClB,MAAO,GAGX,MAAO,EACT,EASaoB,GAAc,CAACL,EAAKf,IAAQ,OAAO,UAAU,eAAe,KAAKe,EAAKf,CAAG,EAOzEqB,GAAY,CAACxG,EAAGS,IAAMT,IAAMS,GAAM0F,GAAOnG,CAAC,IAAMmG,GAAO1F,CAAC,GAAK6F,GAAMtG,EAAG,CAACI,EAAK+E,KAAS/E,IAAQ,QAAamG,GAAY9F,EAAG0E,CAAG,IAAM1E,EAAE0E,CAAG,IAAM/E,CAAG,EC5FhJqG,GAAU,CAACC,EAAIC,EAAM9F,EAAI,IAAM,CAC1C,GAAI,CACF,KAAOA,EAAI6F,EAAG,OAAQ7F,IACpB6F,EAAG7F,CAAC,EAAE,GAAG8F,CAAI,CAEnB,QAAY,CACJ9F,EAAI6F,EAAG,QACTD,GAAQC,EAAIC,EAAM9F,EAAI,CAAC,CAE1B,CACH,EAiBa+F,GAAK5G,GAAKA,EASV6G,GAAiB,CAAC7G,EAAGS,IAAMT,IAAMS,EAkBjCqG,GAAe,CAAC9G,EAAGS,IAAM,CACpC,GAAIT,GAAK,MAAQS,GAAK,KACpB,OAAOoG,GAAe7G,EAAGS,CAAC,EAE5B,GAAIT,EAAE,cAAgBS,EAAE,YACtB,MAAO,GAET,GAAIT,IAAMS,EACR,MAAO,GAET,OAAQT,EAAE,YAAW,CACnB,KAAK,YACHA,EAAI,IAAI,WAAWA,CAAC,EACpBS,EAAI,IAAI,WAAWA,CAAC,EAEtB,KAAK,WAAY,CACf,GAAIT,EAAE,aAAeS,EAAE,WACrB,MAAO,GAET,QAASI,EAAI,EAAGA,EAAIb,EAAE,OAAQa,IAC5B,GAAIb,EAAEa,CAAC,IAAMJ,EAAEI,CAAC,EACd,MAAO,GAGX,KACD,CACD,KAAK,IAAK,CACR,GAAIb,EAAE,OAASS,EAAE,KACf,MAAO,GAET,UAAW8E,KAASvF,EAClB,GAAI,CAACS,EAAE,IAAI8E,CAAK,EACd,MAAO,GAGX,KACD,CACD,KAAK,IAAK,CACR,GAAIvF,EAAE,OAASS,EAAE,KACf,MAAO,GAET,UAAW0E,KAAOnF,EAAE,OAClB,GAAI,CAACS,EAAE,IAAI0E,CAAG,GAAK,CAAC2B,GAAa9G,EAAE,IAAImF,CAAG,EAAG1E,EAAE,IAAI0E,CAAG,CAAC,EACrD,MAAO,GAGX,KACD,CACD,KAAK,OACH,GAAI4B,GAAc/G,CAAC,IAAM+G,GAActG,CAAC,EACtC,MAAO,GAET,UAAW0E,KAAOnF,EAChB,GAAI,CAACgH,GAAmBhH,EAAGmF,CAAG,GAAK,CAAC2B,GAAa9G,EAAEmF,CAAG,EAAG1E,EAAE0E,CAAG,CAAC,EAC7D,MAAO,GAGX,MACF,KAAK,MACH,GAAInF,EAAE,SAAWS,EAAE,OACjB,MAAO,GAET,QAASI,EAAI,EAAGA,EAAIb,EAAE,OAAQa,IAC5B,GAAI,CAACiG,GAAa9G,EAAEa,CAAC,EAAGJ,EAAEI,CAAC,CAAC,EAC1B,MAAO,GAGX,MACF,QACE,MAAO,EACV,CACD,MAAO,EACT,EAUaoG,GAAU,CAAC1B,EAAO2B,IAAYA,EAAQ,SAAS3B,CAAK,ECvJjE,IAAC4B,GAAA,q7BCMYC,GAAQ,KAAK,MAEbC,GAAM,KAAK,IAsBXC,GAAM,CAACtH,EAAGS,IAAMT,EAAIS,EAAIT,EAAIS,EAQ5B8G,GAAM,CAACvH,EAAGS,IAAMT,EAAIS,EAAIT,EAAIS,EAmB5B+G,GAAiB7C,GAAKA,IAAM,EAAIA,EAAI,EAAI,EAAIA,EAAI,EC5ChD8C,GAAO,EACPC,GAAO,EACPC,GAAO,EACPC,GAAO,EAEPC,GAAO,GACPC,GAAO,GACPC,GAAO,IAoCPC,GAAQ,GACRC,GAAQ,GACRC,GAAQ,IA2BRC,GAAS,WC5ETC,GAAmB,OAAO,iBAQ1BC,GAAY,OAAO,YAAcC,GAAO,OAAOA,GAAQ,UAAY,SAASA,CAAG,GAAKC,GAAWD,CAAG,IAAMA,GCoB9G,MAAME,EAAQ,CACnB,aAAe,CACb,KAAK,KAAO,EACZ,KAAK,KAAO,IAAI,WAAW,GAAG,EAI9B,KAAK,KAAO,CAAE,CACf,CACH,CAMO,MAAMC,GAAgB,IAAM,IAAID,GAkB1BrC,GAASuC,GAAW,CAC/B,IAAIpF,EAAMoF,EAAQ,KAClB,QAAS7H,EAAI,EAAGA,EAAI6H,EAAQ,KAAK,OAAQ7H,IACvCyC,GAAOoF,EAAQ,KAAK7H,CAAC,EAAE,OAEzB,OAAOyC,CACT,EAkBaqF,GAAeD,GAAW,CACrC,MAAME,EAAW,IAAI,WAAWzC,GAAOuC,CAAO,CAAC,EAC/C,IAAIG,EAAS,EACb,QAAShI,EAAI,EAAGA,EAAI6H,EAAQ,KAAK,OAAQ7H,IAAK,CAC5C,MAAMI,EAAIyH,EAAQ,KAAK7H,CAAC,EACxB+H,EAAS,IAAI3H,EAAG4H,CAAM,EACtBA,GAAU5H,EAAE,MACb,CACD,OAAA2H,EAAS,IAAI,IAAI,WAAWF,EAAQ,KAAK,OAAQ,EAAGA,EAAQ,IAAI,EAAGG,CAAM,EAClED,CACT,EASaE,GAAY,CAACJ,EAASpF,IAAQ,CACzC,MAAMyF,EAAYL,EAAQ,KAAK,OAC3BK,EAAYL,EAAQ,KAAOpF,IAC7BoF,EAAQ,KAAK,KAAK,IAAI,WAAWA,EAAQ,KAAK,OAAQ,EAAGA,EAAQ,IAAI,CAAC,EACtEA,EAAQ,KAAO,IAAI,WAAWM,GAASD,EAAWzF,CAAG,EAAI,CAAC,EAC1DoF,EAAQ,KAAO,EAEnB,EASaO,EAAQ,CAACP,EAASJ,IAAQ,CACrC,MAAMS,EAAYL,EAAQ,KAAK,OAC3BA,EAAQ,OAASK,IACnBL,EAAQ,KAAK,KAAKA,EAAQ,IAAI,EAC9BA,EAAQ,KAAO,IAAI,WAAWK,EAAY,CAAC,EAC3CL,EAAQ,KAAO,GAEjBA,EAAQ,KAAKA,EAAQ,MAAM,EAAIJ,CACjC,EAoCaY,GAAaD,EAsFbE,EAAe,CAACT,EAASJ,IAAQ,CAC5C,KAAOA,EAAMc,IACXH,EAAMP,EAASW,GAAeD,GAAed,CAAI,EACjDA,EAAMC,GAAWD,EAAM,GAAG,EAE5BW,EAAMP,EAASU,GAAed,CAAG,CACnC,EAWagB,GAAc,CAACZ,EAASJ,IAAQ,CAC3C,MAAMiB,EAAaC,GAAoBlB,CAAG,EAS1C,IARIiB,IACFjB,EAAM,CAACA,GAGTW,EAAMP,GAAUJ,EAAMmB,GAAeJ,GAAc,IAAME,EAAaG,GAAc,GAAMD,GAAenB,CAAI,EAC7GA,EAAMC,GAAWD,EAAM,EAAE,EAGlBA,EAAM,GACXW,EAAMP,GAAUJ,EAAMc,GAAeC,GAAc,GAAMD,GAAed,CAAI,EAC5EA,EAAMC,GAAWD,EAAM,GAAG,CAE9B,EAKMqB,GAAa,IAAI,WAAW,GAAK,EACjCC,GAAeD,GAAW,OAAS,EAS5BE,GAAwB,CAACnB,EAASxE,IAAQ,CACrD,GAAIA,EAAI,OAAS0F,GAAc,CAG7B,MAAME,EAAUC,GAAuB,WAAW7F,EAAKyF,EAAU,EAAE,SAAW,EAC9ER,EAAaT,EAASoB,CAAO,EAC7B,QAASjJ,EAAI,EAAGA,EAAIiJ,EAASjJ,IAC3BoI,EAAMP,EAASiB,GAAW9I,CAAC,CAAC,CAElC,MACImJ,GAAmBtB,EAASuB,GAAkB/F,CAAG,CAAC,CAEtD,EASagG,GAA0B,CAACxB,EAASxE,IAAQ,CACvD,MAAMC,EAAgB,SAAS,mBAAmBD,CAAG,CAAC,EAChDZ,EAAMa,EAAc,OAC1BgF,EAAaT,EAASpF,CAAG,EACzB,QAASzC,EAAI,EAAGA,EAAIyC,EAAKzC,IACvBoI,EAAMP,EAAgCvE,EAAc,YAAYtD,CAAC,CAAG,CAExE,EAUasJ,GAAkBJ,IAA8CA,GAAwB,WAAcF,GAAwBK,GAuD9HE,GAAqB,CAAC1B,EAAS2B,IAAWC,GAAgB5B,EAASC,GAAa0B,CAAM,CAAC,EASvFC,GAAkB,CAAC5B,EAAS6B,IAAe,CACtD,MAAMxB,EAAYL,EAAQ,KAAK,OACzB8B,EAAO9B,EAAQ,KACf+B,EAAcC,GAAS3B,EAAYyB,EAAMD,EAAW,MAAM,EAC1DI,EAAeJ,EAAW,OAASE,EACzC/B,EAAQ,KAAK,IAAI6B,EAAW,SAAS,EAAGE,CAAW,EAAGD,CAAI,EAC1D9B,EAAQ,MAAQ+B,EACZE,EAAe,IAGjBjC,EAAQ,KAAK,KAAKA,EAAQ,IAAI,EAE9BA,EAAQ,KAAO,IAAI,WAAWM,GAASD,EAAY,EAAG4B,CAAY,CAAC,EAEnEjC,EAAQ,KAAK,IAAI6B,EAAW,SAASE,CAAW,CAAC,EACjD/B,EAAQ,KAAOiC,EAEnB,EASaX,GAAqB,CAACtB,EAAS6B,IAAe,CACzDpB,EAAaT,EAAS6B,EAAW,UAAU,EAC3CD,GAAgB5B,EAAS6B,CAAU,CACrC,EAmBaK,GAAkB,CAAClC,EAASpF,IAAQ,CAC/CwF,GAAUJ,EAASpF,CAAG,EACtB,MAAMuH,EAAQ,IAAI,SAASnC,EAAQ,KAAK,OAAQA,EAAQ,KAAMpF,CAAG,EACjE,OAAAoF,EAAQ,MAAQpF,EACTuH,CACT,EAMaC,GAAe,CAACpC,EAASJ,IAAQsC,GAAgBlC,EAAS,CAAC,EAAE,WAAW,EAAGJ,EAAK,EAAK,EAMrFyC,GAAe,CAACrC,EAASJ,IAAQsC,GAAgBlC,EAAS,CAAC,EAAE,WAAW,EAAGJ,EAAK,EAAK,EAMrF0C,GAAgB,CAACtC,EAASJ,IAA4BsC,GAAgBlC,EAAS,CAAC,EAAG,YAAY,EAAGJ,EAAK,EAAK,EAQnH2C,GAAe,IAAI,SAAS,IAAI,YAAY,CAAC,CAAC,EAO9CC,GAAY5C,IAChB2C,GAAa,WAAW,EAAG3C,CAAG,EACvB2C,GAAa,WAAW,CAAC,IAAM3C,GAwC3B6C,GAAW,CAACzC,EAAS0C,IAAS,CACzC,OAAQ,OAAOA,EAAI,CACjB,IAAK,SAEHnC,EAAMP,EAAS,GAAG,EAClByB,GAAezB,EAAS0C,CAAI,EAC5B,MACF,IAAK,SACCC,GAAiBD,CAAI,GAAKE,GAASF,CAAI,GAAKG,IAE9CtC,EAAMP,EAAS,GAAG,EAClBY,GAAYZ,EAAS0C,CAAI,GAChBF,GAAUE,CAAI,GAEvBnC,EAAMP,EAAS,GAAG,EAClBoC,GAAapC,EAAS0C,CAAI,IAG1BnC,EAAMP,EAAS,GAAG,EAClBqC,GAAarC,EAAS0C,CAAI,GAE5B,MACF,IAAK,SAEHnC,EAAMP,EAAS,GAAG,EAClBsC,GAActC,EAAS0C,CAAI,EAC3B,MACF,IAAK,SACH,GAAIA,IAAS,KAEXnC,EAAMP,EAAS,GAAG,UACT8C,GAAcJ,CAAI,EAAG,CAE9BnC,EAAMP,EAAS,GAAG,EAClBS,EAAaT,EAAS0C,EAAK,MAAM,EACjC,QAASvK,EAAI,EAAGA,EAAIuK,EAAK,OAAQvK,IAC/BsK,GAASzC,EAAS0C,EAAKvK,CAAC,CAAC,CAEnC,SAAiBuK,aAAgB,WAEzBnC,EAAMP,EAAS,GAAG,EAClBsB,GAAmBtB,EAAS0C,CAAI,MAC3B,CAELnC,EAAMP,EAAS,GAAG,EAClB,MAAM1C,EAAO,OAAO,KAAKoF,CAAI,EAC7BjC,EAAaT,EAAS1C,EAAK,MAAM,EACjC,QAASnF,EAAI,EAAGA,EAAImF,EAAK,OAAQnF,IAAK,CACpC,MAAMsE,EAAMa,EAAKnF,CAAC,EAClBsJ,GAAezB,EAASvD,CAAG,EAC3BgG,GAASzC,EAAS0C,EAAKjG,CAAG,CAAC,CAC5B,CACF,CACD,MACF,IAAK,UAEH8D,EAAMP,EAAS0C,EAAO,IAAM,GAAG,EAC/B,MACF,QAEEnC,EAAMP,EAAS,GAAG,CACrB,CACH,EAiBO,MAAM+C,WAAmBjD,EAAQ,CAItC,YAAakD,EAAQ,CACnB,MAAO,EAIP,KAAK,EAAIA,EAKT,KAAK,EAAI,KACT,KAAK,MAAQ,CACd,CAKD,MAAOpJ,EAAG,CACJ,KAAK,IAAMA,EACb,KAAK,SAED,KAAK,MAAQ,GAEf6G,EAAa,KAAM,KAAK,MAAQ,CAAC,EAEnC,KAAK,MAAQ,EAEb,KAAK,EAAE,KAAM7G,CAAC,EACd,KAAK,EAAIA,EAEZ,CACH,CAwEA,MAAMqJ,GAAyBjD,GAAW,CACpCA,EAAQ,MAAQ,IAIlBY,GAAYZ,EAAQ,QAASA,EAAQ,QAAU,EAAIA,EAAQ,EAAI,CAACA,EAAQ,CAAC,EACrEA,EAAQ,MAAQ,GAClBS,EAAaT,EAAQ,QAASA,EAAQ,MAAQ,CAAC,EAGrD,EAUO,MAAMkD,EAAkB,CAC7B,aAAe,CACb,KAAK,QAAU,IAAIpD,GAInB,KAAK,EAAI,EACT,KAAK,MAAQ,CACd,CAKD,MAAOlG,EAAG,CACJ,KAAK,IAAMA,EACb,KAAK,SAELqJ,GAAuB,IAAI,EAC3B,KAAK,MAAQ,EACb,KAAK,EAAIrJ,EAEZ,CAOD,cAAgB,CACd,OAAAqJ,GAAuB,IAAI,EACpBhD,GAAa,KAAK,OAAO,CACjC,CACH,CA+CA,MAAMkD,GAA4BnD,GAAW,CAC3C,GAAIA,EAAQ,MAAQ,EAAG,CAGrB,MAAMoD,EAAcpD,EAAQ,KAAO,GAAKA,EAAQ,QAAU,EAAI,EAAI,GAIlEY,GAAYZ,EAAQ,QAASoD,CAAW,EACpCpD,EAAQ,MAAQ,GAClBS,EAAaT,EAAQ,QAASA,EAAQ,MAAQ,CAAC,CAElD,CACH,EAmBO,MAAMqD,EAAqB,CAChC,aAAe,CACb,KAAK,QAAU,IAAIvD,GAInB,KAAK,EAAI,EACT,KAAK,MAAQ,EACb,KAAK,KAAO,CACb,CAKD,MAAOlG,EAAG,CACJ,KAAK,OAASA,EAAI,KAAK,GACzB,KAAK,EAAIA,EACT,KAAK,UAELuJ,GAA0B,IAAI,EAC9B,KAAK,MAAQ,EACb,KAAK,KAAOvJ,EAAI,KAAK,EACrB,KAAK,EAAIA,EAEZ,CAOD,cAAgB,CACd,OAAAuJ,GAA0B,IAAI,EACvBlD,GAAa,KAAK,OAAO,CACjC,CACH,CAYO,MAAMqD,EAAc,CACzB,aAAe,CAIb,KAAK,KAAO,CAAE,EACd,KAAK,EAAI,GACT,KAAK,MAAQ,IAAIJ,EAClB,CAKD,MAAOK,EAAQ,CACb,KAAK,GAAKA,EACN,KAAK,EAAE,OAAS,KAClB,KAAK,KAAK,KAAK,KAAK,CAAC,EACrB,KAAK,EAAI,IAEX,KAAK,MAAM,MAAMA,EAAO,MAAM,CAC/B,CAED,cAAgB,CACd,MAAMvD,EAAU,IAAIF,GACpB,YAAK,KAAK,KAAK,KAAK,CAAC,EACrB,KAAK,EAAI,GACT2B,GAAezB,EAAS,KAAK,KAAK,KAAK,EAAE,CAAC,EAC1C4B,GAAgB5B,EAAS,KAAK,MAAM,aAAY,CAAE,EAC3CC,GAAaD,CAAO,CAC5B,CACH,CCt5BO,MAAM7F,GAAS,GAAK,IAAI,MAAM,CAAC,EAOzBqJ,GAAsB,IAAM,CACvC,MAAMrJ,GAAO,sBAAsB,CACrC,EAOasJ,GAAiB,IAAM,CAClC,MAAMtJ,GAAO,iBAAiB,CAChC,ECMMuJ,GAA4BC,GAAa,yBAAyB,EAClEC,GAAyBD,GAAa,sBAAsB,EAK3D,MAAME,EAAQ,CAInB,YAAahC,EAAY,CAMvB,KAAK,IAAMA,EAMX,KAAK,IAAM,CACZ,CACH,CAOO,MAAMiC,EAAgBjC,GAAc,IAAIgC,GAAQhC,CAAU,EAOpDkC,GAAaC,GAAWA,EAAQ,MAAQA,EAAQ,IAAI,OA4BpDC,GAAiB,CAACD,EAASpJ,IAAQ,CAC9C,MAAMsJ,EAAO,IAAI,WAAWF,EAAQ,IAAI,OAAQA,EAAQ,IAAMA,EAAQ,IAAI,WAAYpJ,CAAG,EACzF,OAAAoJ,EAAQ,KAAOpJ,EACRsJ,CACT,EAYaC,GAAoBH,GAAWC,GAAeD,EAASI,EAAYJ,CAAO,CAAC,EAwB3EK,GAAYL,GAAWA,EAAQ,IAAIA,EAAQ,KAAK,EAmGhDI,EAAcJ,GAAW,CACpC,IAAIpE,EAAM,EACN0E,EAAO,EACX,MAAM1J,EAAMoJ,EAAQ,IAAI,OACxB,KAAOA,EAAQ,IAAMpJ,GAAK,CACxB,MAAM,EAAIoJ,EAAQ,IAAIA,EAAQ,KAAK,EAInC,GAFApE,EAAMA,GAAO,EAAIc,IAAgB4D,EACjCA,GAAQ,IACJ,EAAI3D,GACN,OAAOf,EAGT,GAAIA,EAAM2E,GACR,MAAMX,EAGT,CACD,MAAMF,EACR,EAaac,GAAaR,GAAW,CACnC,IAAI3H,EAAI2H,EAAQ,IAAIA,EAAQ,KAAK,EAC7BpE,EAAMvD,EAAI0E,GACVuD,EAAO,GACX,MAAMG,GAAQpI,EAAI2E,IAAe,EAAI,GAAK,EAC1C,GAAK,EAAA3E,EAAIsE,IAEP,OAAO8D,EAAO7E,EAEhB,MAAMhF,EAAMoJ,EAAQ,IAAI,OACxB,KAAOA,EAAQ,IAAMpJ,GAAK,CAKxB,GAJAyB,EAAI2H,EAAQ,IAAIA,EAAQ,KAAK,EAE7BpE,EAAMA,GAAOvD,EAAIqE,IAAgB4D,EACjCA,GAAQ,IACJjI,EAAIsE,GACN,OAAO8D,EAAO7E,EAGhB,GAAIA,EAAM2E,GACR,MAAMX,EAGT,CACD,MAAMF,EACR,EA4CagB,GAAyBV,GAAW,CAC/C,IAAIW,EAAeP,EAAYJ,CAAO,EACtC,GAAIW,IAAiB,EACnB,MAAO,GACF,CACL,IAAIlJ,EAAgB,OAAO,cAAc4I,GAAUL,CAAO,CAAC,EAC3D,GAAI,EAAEW,EAAe,IACnB,KAAOA,KACLlJ,GAAiB,OAAO,cAAc4I,GAAUL,CAAO,CAAC,MAG1D,MAAOW,EAAe,GAAG,CACvB,MAAMC,EAAUD,EAAe,IAAQA,EAAe,IAEhDE,EAAQb,EAAQ,IAAI,SAASA,EAAQ,IAAKA,EAAQ,IAAMY,CAAO,EACrEZ,EAAQ,KAAOY,EAEfnJ,GAAiB,OAAO,cAAc,MAAM,KAA0BoJ,CAAO,EAC7EF,GAAgBC,CACjB,CAEH,OAAO,mBAAmB,OAAOnJ,CAAa,CAAC,CAChD,CACH,EAQaqJ,GAAuBd,GAChBe,GAAwB,OAAOZ,GAAkBH,CAAO,CAAC,EAYhEgB,GAAgBD,GAAyBD,GAAuBJ,GA8ChEO,GAAmB,CAACjB,EAASpJ,IAAQ,CAChD,MAAMsK,EAAK,IAAI,SAASlB,EAAQ,IAAI,OAAQA,EAAQ,IAAI,WAAaA,EAAQ,IAAKpJ,CAAG,EACrF,OAAAoJ,EAAQ,KAAOpJ,EACRsK,CACT,EAKaC,GAAcnB,GAAWiB,GAAiBjB,EAAS,CAAC,EAAE,WAAW,EAAG,EAAK,EAKzEoB,GAAcpB,GAAWiB,GAAiBjB,EAAS,CAAC,EAAE,WAAW,EAAG,EAAK,EAKzEqB,GAAerB,GAA+BiB,GAAiBjB,EAAS,CAAC,EAAG,YAAY,EAAG,EAAK,EAUvGsB,GAAqB,CACzBtB,MACAA,GAAW,KACXQ,GACAW,GACAC,GACAC,GACArB,GAAW,GACXA,GAAW,GACXgB,GACAhB,GAAW,CACT,MAAMpJ,EAAMwJ,EAAYJ,CAAO,EAIzBxG,EAAM,CAAE,EACd,QAASrF,EAAI,EAAGA,EAAIyC,EAAKzC,IAAK,CAC5B,MAAMsE,EAAMuI,GAAchB,CAAO,EACjCxG,EAAIf,CAAG,EAAI8I,GAAQvB,CAAO,CAC3B,CACD,OAAOxG,CACR,EACDwG,GAAW,CACT,MAAMpJ,EAAMwJ,EAAYJ,CAAO,EACzB3J,EAAM,CAAE,EACd,QAASlC,EAAI,EAAGA,EAAIyC,EAAKzC,IACvBkC,EAAI,KAAKkL,GAAQvB,CAAO,CAAC,EAE3B,OAAO3J,CACR,EACD8J,EACF,EAKaoB,GAAUvB,GAAWsB,GAAmB,IAAMjB,GAAUL,CAAO,CAAC,EAAEA,CAAO,EAO/E,MAAMwB,WAAmB3B,EAAQ,CAKtC,YAAahC,EAAY4D,EAAQ,CAC/B,MAAM5D,CAAU,EAIhB,KAAK,OAAS4D,EAKd,KAAK,EAAI,KACT,KAAK,MAAQ,CACd,CAED,MAAQ,CACN,OAAI,KAAK,QAAU,IACjB,KAAK,EAAI,KAAK,OAAO,IAAI,EACrB1B,GAAW,IAAI,EACjB,KAAK,MAAQK,EAAY,IAAI,EAAI,EAEjC,KAAK,MAAQ,IAGjB,KAAK,QACoB,KAAK,CAC/B,CACH,CAyDO,MAAMsB,WAA0B7B,EAAQ,CAI7C,YAAahC,EAAY,CACvB,MAAMA,CAAU,EAIhB,KAAK,EAAI,EACT,KAAK,MAAQ,CACd,CAED,MAAQ,CACN,GAAI,KAAK,QAAU,EAAG,CACpB,KAAK,EAAI2C,GAAW,IAAI,EAExB,MAAM3D,EAAaC,GAAoB,KAAK,CAAC,EAC7C,KAAK,MAAQ,EACTD,IACF,KAAK,EAAI,CAAC,KAAK,EACf,KAAK,MAAQuD,EAAY,IAAI,EAAI,EAEpC,CACD,YAAK,QACyB,KAAK,CACpC,CACH,CA+BO,MAAMuB,WAA6B9B,EAAQ,CAIhD,YAAahC,EAAY,CACvB,MAAMA,CAAU,EAIhB,KAAK,EAAI,EACT,KAAK,MAAQ,EACb,KAAK,KAAO,CACb,CAKD,MAAQ,CACN,GAAI,KAAK,QAAU,EAAG,CACpB,MAAM+D,EAAOpB,GAAW,IAAI,EAEtBqB,EAAWD,EAAO,EACxB,KAAK,KAAO/F,GAAW+F,EAAO,CAAC,EAC/B,KAAK,MAAQ,EACTC,IACF,KAAK,MAAQzB,EAAY,IAAI,EAAI,EAEpC,CACD,YAAK,GAAK,KAAK,KACf,KAAK,QACE,KAAK,CACb,CACH,CAEO,MAAM0B,EAAc,CAIzB,YAAajE,EAAY,CACvB,KAAK,QAAU,IAAI6D,GAAkB7D,CAAU,EAC/C,KAAK,IAAMmD,GAAc,KAAK,OAAO,EAIrC,KAAK,KAAO,CACb,CAKD,MAAQ,CACN,MAAMe,EAAM,KAAK,KAAO,KAAK,QAAQ,KAAM,EACrCnJ,EAAM,KAAK,IAAI,MAAM,KAAK,KAAMmJ,CAAG,EACzC,YAAK,KAAOA,EACLnJ,CACR,CACH,CCjrBO,MAAMoJ,GAA0BpL,GAAO,IAAI,WAAWA,CAAG,EAuB1DqL,GAAkBpB,GAAS,CAC/B,IAAIqB,EAAI,GACR,QAAS/N,EAAI,EAAGA,EAAI0M,EAAM,WAAY1M,IACpC+N,GAAKC,GAAoBtB,EAAM1M,CAAC,CAAC,EAGnC,OAAO,KAAK+N,CAAC,CACf,EAOME,GAAevB,GAAS,OAAO,KAAKA,EAAM,OAAQA,EAAM,WAAYA,EAAM,UAAU,EAAE,SAAS,QAAQ,EA2BhGwB,GAAWC,GAAgBL,GAAkBG,GA2C7CG,GAAiB1E,GAAc,CAC1C,MAAM2E,EAASR,GAAwBnE,EAAW,UAAU,EAC5D,OAAA2E,EAAO,IAAI3E,CAAU,EACd2E,CACT,EC7HA,eAAsBC,GAAIC,EAAqC,CAC7D,MAAMC,EAAO,MAAM,OAAO,OAAO,OAAO,UAAWD,CAAK,EAGxD,OAAOL,GAAS,IAAI,WAAWM,CAAI,CAAC,EAAE,QAAQ,MAAO,GAAG,EAAE,QAAQ,MAAO,GAAG,CAC9E,CCHO,MAAMC,EAAkB,CAAxB,cACY,cAAW,IACX,mBAAgB,GAAoB,CAErD,MAAM,IAAInK,EAAa,CACrB,OAAO,KAAK,KAAK,IAAIA,CAAG,GAAK,IAC/B,CAEA,MAAM,IAAII,EAAaJ,EAAc,CACnC,MAAMoK,EAAOpK,GAAQ,MAAMgK,GAAI,MAAM5J,EAAM,aAAa,EACnD,iBAAK,IAAIgK,EAAMhK,CAAK,EAClBgK,CACT,CAEA,MAAM,OAAOpK,EAAa,CACnB,UAAK,OAAOA,CAAG,CACtB,CAEA,MAAM,MAAO,CACX,OAAO,MAAM,KAAK,KAAK,KAAK,KAAM,EACpC,CAEA,MAAM,IAAK,EACK,MAAM,KAAK,QACnB,QAAkBqK,GAAA,CACtB,MAAMC,EAAM,KAAK,UAAU,IAAID,CAAM,GACjC,CAACC,GAAOA,GAAO,KACjB,KAAK,OAAOD,CAAM,EAAE,MAAM,QAAQ,KAAK,EAClC,eAAU,OAAOA,CAAM,EAC9B,CACD,CACH,CAEA,YAAYA,EAAgB,CAC1B,MAAMC,EAAM,KAAK,UAAU,IAAID,CAAM,GAAK,EAC1C,KAAK,UAAU,IAAIA,EAAQC,EAAM,CAAC,CACpC,CAEA,YAAYD,EAAgB,CAC1B,MAAMC,EAAM,KAAK,UAAU,IAAID,CAAM,GAAK,EACrC,eAAU,IAAIA,EAAQ,KAAK,IAAIC,EAAM,EAAG,CAAC,CAAC,CACjD,CACF,CAEgB,SAAAC,GAAaC,EAA2BH,EAAgB,CAChE,MAAAI,EAAOD,EAAO,IAAIH,CAAM,EAC9BrP,EAAayP,CAAI,EACX,MAAAC,EAAQD,EAAc,MAAQ,OAC9BE,EACJD,IAAS,QAAaA,EAAK,SAAS,GAAG,EACnCA,EAAK,MAAM,GAAG,EAAE,GAAG,EAAE,EACrBD,EAAK,OAAS,GACZA,EAAK,KAAK,MAAM,GAAG,EAAE,GAAG,EAAE,EAC1B,OACD,SAAGC,GAAM,MAAM,GAAG,EAAE,GAAG,CAAC,GAAKL,CAAM,IAAIM,CAAG,EACnD,CCzDO,MAAMC,EAAuC,CAA7C,cACL,KAAQ,OAIF,GAEE,oBAAiD,cAAO,IAAI,EAEpE,KAAQ,aAA6B,WAE7B,cACW,wBAEnB,oBAAkBC,GAA6B,CAC7C,KAAK,aAAeA,CAAA,CACtB,CAEA,IAAI,OAAQ,CACV,OAAO,KAAK,MACd,CAEQ,SAAU,CAChB,OAAO,KAAK,OAAO,KAAK,OAAO,OAAS,CAAC,CAC3C,CAEA,aAAc,CACL,YAAK,QAAW,OACzB,CAEA,SAASC,EAAaD,EAA2B,CAC/C,YAAK,OAAO,KAAK,CACf,KAAAC,EACA,KAAMD,GAAc,KAAK,aACzB,QAAgB,cAAO,IAAI,EAC5B,EACM,IACT,CAEA,eAAe7K,EAAaI,EAAgB,CACrC,mBAAO,KAAK,OAAO,OAAS,CAAC,EAAE,QAAQJ,CAAG,EAAII,EAC5C,IACT,CAEA,eAAeJ,EAAa,CAC1B,OAAO,KAAK,UAAU,QAAQA,CAAG,CACnC,CAEA,iBAAiBA,EAAa,CACrB,YAAK,eAAeA,CAAG,CAChC,CAEA,uBAAqCA,EAAaI,EAAqB,CAC/D,MAAA2K,EAAQ,KAAK,eAAe/K,CAAG,EACjC+K,aAAiB,MACnBA,EAAM,KAAK3K,CAAK,EAEhB,KAAK,eAAeJ,CAAG,EAAI,CAACI,CAAK,CAErC,CAEA,sBAAoCJ,EAAa,CACzC,MAAA+K,EAAQ,KAAK,eAAe/K,CAAG,EACrC,OAAI+K,aAAiB,MACZA,EAEA,EAEX,CAEA,sBAAoC/K,EAAaI,EAAuB,CACjE,oBAAeJ,CAAG,EAAII,CAC7B,CAEA,iBAAiBJ,EAAaI,EAAgB,CACvC,2BAAeJ,CAAG,EAAII,EACpB,IACT,CAEA,WAAY,CACJ,MAAA4K,EAAM,KAAK,OAAO,IAAI,EAC5B,GAAI,CAACA,EAAY,YACX,MAAAC,EAAS,KAAK,OAAO,IAAI,EAC/B,OAAKA,GAIDA,EAAO,KAAKD,EAAI,IAAI,YAAa,OAClCC,EAAO,KAAKD,EAAI,IAAI,EAAoB,KAAKA,EAAI,IAAI,EAEnD,YAAO,KAAKC,CAAM,EAChB,OAPA,YAAO,KAAKD,CAAG,EACb,KAOX,CAEA,iBAAkB,CAChB,KAAK,MAAQ,EACf,CAEA,aAAa7H,EAAM,EAAG,CACpB,KAAK,iBAAmBA,CAC1B,CACF,CCxDO,MAAe+H,EAAqC,CAApD,cACK,iBAAoC,GAAI,CAqBlD,aAAaC,EAA+B,CAC1C,KAAK,QAAU,IAAI,IAAI,CAAC,GAAGA,CAAO,CAAC,CACrC,CACF,CAiBO,MAAMC,EAA8D,CAOzE,aAAc,CAId,cAAYC,GAA+B,CACzC,KAAK,OAASA,CAAA,EAGhB,cAAYA,GAA+B,CACzC,KAAK,OAASA,CAAA,EAGhB,uBAAqBA,GAAyC,CAC5D,KAAK,SAAWA,CAAA,EAGX,gBAAOC,EAAcC,KACrB,aAAQ,SAASA,CAAK,EACrB,WAAK,OAAO,CAAE,KAAMD,EAAO,OAAQ,KAAM,KAAM,KAAM,MAAO,IAAM,GACxE3P,GAAa,KAAK,QAAQ,MAAM,OAAQ,EAAG,0BAA0B,EAC9D,KAAK,QAAQ,eAGtB,eAAY,MAAO2P,GAAiB,CAC5B,WAAK,OAAO,CAAE,KAAMA,EAAO,OAAQ,KAAM,KAAM,KAAM,MAAO,IAAM,IAGlE,YAAS,MAAOE,GAAwB,CAC9C,GAAKA,EAAE,OACP,KAAK,QAAQ,iBAAmB,EAChC,KAAK,QAAQ,MAAQ,GAEjB,KAAK,QACP,MAAM,KAAK,OAAOA,EAAG,KAAK,OAAO,EAG/B,MAAK,QAAQ,OAIN,WAAAxL,KAAOwL,EAAE,KAAM,CAClB,MAAApL,EAAQoL,EAAE,KAAKxL,CAAG,EAEpB,GAAAI,GAAS,OAAOA,GAAU,SACxB,SAAM,QAAQA,CAAK,EAEf,QAAA1E,EAAI,KAAK,QAAQ,iBACrBA,EAAI0E,EAAM,OACV1E,GAAK,EACL,CACM,MAAA+P,EAAOrL,EAAM1E,CAAC,EAElB+P,IAAS,MACT,OAAOA,GAAS,UAChB,KAAK,SAASA,CAAI,GAElB,MAAM,KAAK,OAAO,CAChB,KAAMA,EACN,OAAQD,EAAE,KACV,KAAMxL,EACN,MAAOtE,CAAA,CACR,CAEL,MAEA,KAAK,QAAQ,mBAAqB,GAClC,KAAK,SAAS0E,CAAK,GAEnB,MAAM,KAAK,OAAO,CAChB,KAAMA,EACN,OAAQoL,EAAE,KACV,KAAMxL,EACN,MAAO,KACR,CAGP,CAEI,KAAK,QACP,MAAM,KAAK,OAAOwL,EAAG,KAAK,OAAO,EACnC,EA/EK,aAAU,IAAIZ,EACrB,CAgFF,CClFO,MAAMc,EAAW,CACtB,aAAe,CAKb,KAAK,WAAaC,GAAY,CAC/B,CAMD,GAAIjB,EAAMlN,EAAG,CACXoO,GAAmB,KAAK,WAAYlB,EAAMmB,EAAU,EAAE,IAAIrO,CAAC,CAC5D,CAMD,KAAMkN,EAAMlN,EAAG,CAIb,MAAMsO,EAAK,IAAItK,IAAS,CACtB,KAAK,IAAIkJ,EAAMoB,CAAE,EACjBtO,EAAE,GAAGgE,CAAI,CACV,EACD,KAAK,GAAGkJ,EAAMoB,CAAE,CACjB,CAMD,IAAKpB,EAAMlN,EAAG,CACZ,MAAMuO,EAAY,KAAK,WAAW,IAAIrB,CAAI,EACtCqB,IAAc,SAChBA,EAAU,OAAOvO,CAAC,EACduO,EAAU,OAAS,GACrB,KAAK,WAAW,OAAOrB,CAAI,EAGhC,CAWD,KAAMA,EAAMlJ,EAAM,CAEhB,OAAOwK,IAAY,KAAK,WAAW,IAAItB,CAAI,GAAKiB,GAAY,GAAE,OAAM,CAAE,EAAE,QAAQnO,GAAKA,EAAE,GAAGgE,CAAI,CAAC,CAChG,CAED,SAAW,CACT,KAAK,WAAamK,GAAY,CAC/B,CACH,CC5JO,MAAMM,GAAkB,OAAO,gBAAgB,KAAK,MAAM,ECWpDC,GAAS,IAAMD,GAAgB,IAAI,YAAY,CAAC,CAAC,EAAE,CAAC,EAe3DE,GAAiB,0BAA6B,MAKvCC,GAAS,IAAMD,GAAe,QAAQ,SAAmCE,IACnFA,EAAIH,KAAW,IAAMG,EAAI,GAAG,SAAS,EAAE,CAC1C,ECfaC,GAAc,KAAK,ICFnB5O,GAASF,GAAgC,IAAI,QAAQA,CAAC,EAehD,QAAQ,IAAI,KAAK,OAAO,ECzBpC,MAAM+O,EAAK,CAKhB,YAAaC,EAAMC,EAAO,CACxB,KAAK,KAAOD,EACZ,KAAK,MAAQC,CACd,CACH,CAQO,MAAM/O,GAAS,CAAC8O,EAAMC,IAAU,IAAIF,GAAKC,EAAMC,CAAK,ECQR,OAAO,UAAc,KAAc,IAAI,UA4InF,MAAMC,GAAmB/M,GAAKgN,GAAQhN,EAAG,CAACS,EAAOJ,IAAQ,GAAGA,CAAG,IAAII,CAAK,GAAG,EAAE,KAAK,EAAE,ECnK9E1C,GAAS,OCNTkP,GAAOC,GAAe,EACtBC,GAASD,GAAe,EACxBE,GAAOF,GAAe,EACtBG,GAAOH,GAAe,EACtBI,GAAQJ,GAAe,EACvBK,GAAML,GAAe,EACrBM,GAASN,GAAe,EACxBO,GAASP,GAAe,EACxBQ,GAAUR,GAAe,EAOzBS,GAA4B9L,GAAQ,CAE/C,MAAM+L,EAAU,CAAE,EAElB,IAAI7R,EAAI,EACR,KAAOA,EAAI8F,EAAK,OAAQ9F,IAAK,CAC3B,MAAM8R,EAAMhM,EAAK9F,CAAC,EACd8R,EAAI,cAAgB,QAAUA,EAAI,cAAgB,QAE3CA,EAAI,cAAgB,QAC7BD,EAAQ,KAAK,KAAK,UAAUC,CAAG,CAAC,CAEnC,CACD,OAAOD,CACT,ECbME,GAAmB,CACvB,CAACC,EAAW,EAAGC,GAAY,cAAe,MAAM,EAChD,CAACC,EAAa,EAAGD,GAAY,cAAe,QAAQ,EACpD,CAACE,EAAW,EAAGF,GAAY,QAAS,MAAM,EAC1C,CAACG,EAAY,EAAGH,GAAY,QAAS,OAAO,EAC5C,CAACI,EAAW,EAAGJ,GAAY,QAAS,MAAM,EAC1C,CAACK,EAAU,EAAGL,GAAY,QAAS,KAAK,EACxC,CAACM,EAAa,EAAGN,GAAY,QAAS,QAAQ,EAC9C,CAACO,EAAa,EAAGP,GAAY,QAAS,QAAQ,EAC9C,CAACQ,EAAc,EAAGR,GAAY,QAAS,OAAO,CAChD,EAOMS,GAA6B5M,GAAS,CAC1C,MAAM6M,EAAa,CAAE,EACfC,EAAS,CAAE,EACXC,EAAe5C,GAAY,EAIjC,IAAI4B,EAAU,CAAE,EAEZ,EAAI,EACR,KAAO,EAAI/L,EAAK,OAAQ,IAAK,CAC3B,MAAMgM,EAAMhM,EAAK,CAAC,EAEZgN,EAAQf,GAAiBD,CAAG,EAClC,GAAIgB,IAAU,OACZD,EAAa,IAAIC,EAAM,KAAMA,EAAM,KAAK,UAEpChB,EAAI,cAAgB,QAAUA,EAAI,cAAgB,OAAQ,CAC5D,MAAMgB,EAAQC,GAAqBF,CAAY,EAC3C,EAAI,GAAKC,EAAM,OAAS,GAC1BH,EAAW,KAAK,KAAOb,CAAG,EAC1Bc,EAAO,KAAKE,CAAK,GAEjBH,EAAW,KAAKb,CAAG,CAE7B,KACQ,MAGL,CAOD,IANI,EAAI,IAEND,EAAUe,EACVf,EAAQ,QAAQc,EAAW,KAAK,EAAE,CAAC,GAG9B,EAAI7M,EAAK,OAAQ,IAAK,CAC3B,MAAMgM,EAAMhM,EAAK,CAAC,EACZgM,aAAe,QACnBD,EAAQ,KAAKC,CAAG,CAEnB,CACD,OAAOD,CACT,EAIMmB,GAAqBC,GACvBP,GACAQ,GAMSC,GAAQ,IAAIrN,IAAS,CAChC,QAAQ,IAAI,GAAGkN,GAAmBlN,CAAI,CAAC,EAEvCsN,GAAU,QAASC,GAAOA,EAAG,MAAMvN,CAAI,CAAC,CAC1C,EAMawN,GAAO,IAAIxN,IAAS,CAC/B,QAAQ,KAAK,GAAGkN,GAAmBlN,CAAI,CAAC,EACxCA,EAAK,QAAQ0M,EAAa,EAC1BY,GAAU,QAASC,GAAOA,EAAG,MAAMvN,CAAI,CAAC,CAC1C,EA6EasN,GAAYjD,GAAU,EC5JtBoD,GAAiBC,IAAS,CAIrC,CAAC,OAAO,QAAQ,GAAK,CACnB,OAAO,IACR,EAED,KAAAA,CACF,GAOaC,GAAiB,CAACC,EAAUvS,IAAWoS,GAAe,IAAM,CACvE,IAAI9O,EACJ,GACEA,EAAMiP,EAAS,KAAM,QACd,CAACjP,EAAI,MAAQ,CAACtD,EAAOsD,EAAI,KAAK,GACvC,OAAOA,CACT,CAAC,EAOYkP,GAAc,CAACD,EAAUE,IAASL,GAAe,IAAM,CAClE,KAAM,CAAE,KAAAM,EAAM,MAAAnP,GAAUgP,EAAS,KAAM,EACvC,MAAO,CAAE,KAAAG,EAAM,MAAOA,EAAO,OAAYD,EAAKlP,CAAK,CAAG,CACxD,CAAC,EChCD,MAAMoP,WAA0B9D,EAAW,CAKzC,YAAa+D,EAAMC,EAAW,CAC5B,QACA,KAAK,IAAMD,EACX,KAAK,UAAYC,CAClB,CACH,CAEA,MAAMC,EAAW,CAKf,YAAaC,EAAOzR,EAAK,CAIvB,KAAK,MAAQyR,EAIb,KAAK,IAAMzR,CACZ,CACH,CASA,MAAM0R,EAAU,CACd,aAAe,CAIb,KAAK,QAAU,IAAI,GACpB,CACH,CAWA,MAAMC,GAAwB,CAACC,EAAaC,EAAIxS,IAC9CwS,EAAG,QAAQ,QAAQ,CAACC,EAASC,IAAa,CACxC,MAAMC,EAAyCJ,EAAY,IAAI,MAAM,QAAQ,IAAIG,CAAQ,EACzF,QAASxU,EAAI,EAAGA,EAAIuU,EAAQ,OAAQvU,IAAK,CACvC,MAAM0U,EAAMH,EAAQvU,CAAC,EACrB2U,GAAeN,EAAaI,EAASC,EAAI,MAAOA,EAAI,IAAK5S,CAAC,CAC3D,CACL,CAAG,EAUG8S,GAAc,CAACC,EAAKX,IAAU,CAClC,IAAIpD,EAAO,EACPC,EAAQ8D,EAAI,OAAS,EACzB,KAAO/D,GAAQC,GAAO,CACpB,MAAM+D,EAAWpN,IAAYoJ,EAAOC,GAAS,CAAC,EACxCgE,EAAMF,EAAIC,CAAQ,EAClBE,EAAWD,EAAI,MACrB,GAAIC,GAAYd,EAAO,CACrB,GAAIA,EAAQc,EAAWD,EAAI,IACzB,OAAOD,EAEThE,EAAOgE,EAAW,CACxB,MACM/D,EAAQ+D,EAAW,CAEtB,CACD,OAAO,IACT,EAUMG,GAAY,CAACX,EAAIvO,IAAO,CAC5B,MAAM8O,EAAMP,EAAG,QAAQ,IAAIvO,EAAG,MAAM,EACpC,OAAO8O,IAAQ,QAAaD,GAAYC,EAAK9O,EAAG,KAAK,IAAM,IAC7D,EAQMmP,GAAwBZ,GAAM,CAClCA,EAAG,QAAQ,QAAQa,GAAQ,CACzBA,EAAK,KAAK,CAAChW,EAAGS,IAAMT,EAAE,MAAQS,EAAE,KAAK,EAKrC,IAAII,EAAGoV,EACP,IAAKpV,EAAI,EAAGoV,EAAI,EAAGpV,EAAImV,EAAK,OAAQnV,IAAK,CACvC,MAAM8Q,EAAOqE,EAAKC,EAAI,CAAC,EACjBrE,EAAQoE,EAAKnV,CAAC,EAChB8Q,EAAK,MAAQA,EAAK,KAAOC,EAAM,MACjCD,EAAK,IAAM3I,GAAS2I,EAAK,IAAKC,EAAM,MAAQA,EAAM,IAAMD,EAAK,KAAK,GAE9DsE,EAAIpV,IACNmV,EAAKC,CAAC,EAAIrE,GAEZqE,IAEH,CACDD,EAAK,OAASC,CAClB,CAAG,CACH,EAMMC,GAAkBC,GAAO,CAC7B,MAAMC,EAAS,IAAIpB,GACnB,QAASqB,EAAO,EAAGA,EAAOF,EAAI,OAAQE,IACpCF,EAAIE,CAAI,EAAE,QAAQ,QAAQ,CAACC,EAAUC,IAAW,CAC9C,GAAI,CAACH,EAAO,QAAQ,IAAIG,CAAM,EAAG,CAM/B,MAAMP,EAAOM,EAAS,QACtB,QAASzV,EAAIwV,EAAO,EAAGxV,EAAIsV,EAAI,OAAQtV,IACrC2V,GAAeR,EAAMG,EAAItV,CAAC,EAAE,QAAQ,IAAI0V,CAAM,GAAK,EAAE,EAEvDH,EAAO,QAAQ,IAAIG,EAAQP,CAAI,CAChC,CACP,CAAK,EAEH,OAAAD,GAAsBK,CAAM,EACrBA,CACT,EAWMK,GAAiB,CAACtB,EAAIoB,EAAQxB,EAAO5O,IAAW,CACpD4K,GAAmBoE,EAAG,QAASoB,EAAQ,IAAwC,CAAE,CAAC,EAAE,KAAK,IAAIzB,GAAWC,EAAO5O,CAAM,CAAC,CACxH,EAEMuQ,GAAkB,IAAM,IAAI1B,GAS5B2B,GAAiCC,GAAM,CAC3C,MAAMzB,EAAKuB,KACX,OAAAE,EAAG,QAAQ,QAAQ,CAACtB,EAASiB,IAAW,CAItC,MAAMM,EAAU,GAChB,QAAS,EAAI,EAAG,EAAIvB,EAAQ,OAAQ,IAAK,CACvC,MAAMwB,EAASxB,EAAQ,CAAC,EACxB,GAAIwB,EAAO,QAAS,CAClB,MAAM/B,EAAQ+B,EAAO,GAAG,MACxB,IAAIxT,EAAMwT,EAAO,OACjB,GAAI,EAAI,EAAIxB,EAAQ,OAClB,QAASjB,EAAOiB,EAAQ,EAAI,CAAC,EAAG,EAAI,EAAIA,EAAQ,QAAUjB,EAAK,QAASA,EAAOiB,EAAQ,EAAE,EAAI,CAAC,EAC5FhS,GAAO+Q,EAAK,OAGhBwC,EAAQ,KAAK,IAAI/B,GAAWC,EAAOzR,CAAG,CAAC,CACxC,CACF,CACGuT,EAAQ,OAAS,GACnB1B,EAAG,QAAQ,IAAIoB,EAAQM,CAAO,CAEpC,CAAG,EACM1B,CACT,EASM4B,GAAiB,CAACrO,EAASyM,IAAO,CACtC6B,EAAsBtO,EAAQ,YAAayM,EAAG,QAAQ,IAAI,EAG1DhE,GAAWgE,EAAG,QAAQ,SAAS,EAC5B,KAAK,CAACnV,EAAGS,IAAMA,EAAE,CAAC,EAAIT,EAAE,CAAC,CAAC,EAC1B,QAAQ,CAAC,CAACuW,EAAQM,CAAO,IAAM,CAC9BnO,EAAQ,cAAa,EACrBsO,EAAsBtO,EAAQ,YAAa6N,CAAM,EACjD,MAAMjT,EAAMuT,EAAQ,OACpBG,EAAsBtO,EAAQ,YAAapF,CAAG,EAC9C,QAAS,EAAI,EAAG,EAAIA,EAAK,IAAK,CAC5B,MAAMsN,EAAOiG,EAAQ,CAAC,EACtBnO,EAAQ,aAAakI,EAAK,KAAK,EAC/BlI,EAAQ,WAAWkI,EAAK,GAAG,CAC5B,CACP,CAAK,CACL,EASMqG,GAAgBvK,GAAW,CAC/B,MAAMyI,EAAK,IAAIH,GACTkC,EAAaC,EAAqBzK,EAAQ,WAAW,EAC3D,QAAS7L,EAAI,EAAGA,EAAIqW,EAAYrW,IAAK,CACnC6L,EAAQ,cAAa,EACrB,MAAM6J,EAASY,EAAqBzK,EAAQ,WAAW,EACjD0K,EAAkBD,EAAqBzK,EAAQ,WAAW,EAChE,GAAI0K,EAAkB,EAAG,CACvB,MAAMC,EAAUtG,GAAmBoE,EAAG,QAASoB,EAAQ,IAAwC,CAAE,CAAC,EAClG,QAAS1V,EAAI,EAAGA,EAAIuW,EAAiBvW,IACnCwW,EAAQ,KAAK,IAAIvC,GAAWpI,EAAQ,YAAW,EAAIA,EAAQ,UAAW,EAAC,CAE1E,CACF,CACD,OAAOyI,CACT,EAeMmC,GAAwB,CAAC5K,EAASwI,EAAaqC,IAAU,CAC7D,MAAMC,EAAc,IAAIxC,GAClBkC,EAAaC,EAAqBzK,EAAQ,WAAW,EAC3D,QAAS,EAAI,EAAG,EAAIwK,EAAY,IAAK,CACnCxK,EAAQ,cAAa,EACrB,MAAM6J,EAASY,EAAqBzK,EAAQ,WAAW,EACjD0K,EAAkBD,EAAqBzK,EAAQ,WAAW,EAC1D4I,EAAUiC,EAAM,QAAQ,IAAIhB,CAAM,GAAK,GACvCrU,EAAQuV,EAASF,EAAOhB,CAAM,EACpC,QAAS1V,EAAI,EAAGA,EAAIuW,EAAiBvW,IAAK,CACxC,MAAMkU,EAAQrI,EAAQ,cAChBgL,EAAW3C,EAAQrI,EAAQ,UAAS,EAC1C,GAAIqI,EAAQ7S,EAAO,CACbA,EAAQwV,GACVjB,GAAee,EAAajB,EAAQrU,EAAOwV,EAAWxV,CAAK,EAE7D,IAAIM,EAAQmV,GAAYrC,EAASP,CAAK,EAMlC+B,EAASxB,EAAQ9S,CAAK,EAM1B,IAJI,CAACsU,EAAO,SAAWA,EAAO,GAAG,MAAQ/B,IACvCO,EAAQ,OAAO9S,EAAQ,EAAG,EAAGoV,GAAU1C,EAAa4B,EAAQ/B,EAAQ+B,EAAO,GAAG,KAAK,CAAC,EACpFtU,KAEKA,EAAQ8S,EAAQ,SAErBwB,EAASxB,EAAQ9S,GAAO,EACpBsU,EAAO,GAAG,MAAQY,IACfZ,EAAO,UACNY,EAAWZ,EAAO,GAAG,MAAQA,EAAO,QACtCxB,EAAQ,OAAO9S,EAAO,EAAGoV,GAAU1C,EAAa4B,EAAQY,EAAWZ,EAAO,GAAG,KAAK,CAAC,EAErFA,EAAO,OAAO5B,CAAW,EAMvC,MACQuB,GAAee,EAAajB,EAAQxB,EAAO2C,EAAW3C,CAAK,CAE9D,CACF,CACD,GAAIyC,EAAY,QAAQ,KAAO,EAAG,CAChC,MAAMrC,EAAK,IAAI0C,GACfb,SAAsB7B,EAAG,YAAa,CAAC,EACvC4B,GAAe5B,EAAIqC,CAAW,EACvBrC,EAAG,aAAc,CACzB,CACD,OAAO,IACT,EAMM2C,GAAkB,CAACC,EAAKC,IAAQ,CACpC,GAAID,EAAI,QAAQ,OAASC,EAAI,QAAQ,KAAM,MAAO,GAClD,SAAW,CAACzB,EAAQ0B,CAAY,IAAKF,EAAI,QAAQ,UAAW,CAC1D,MAAMG,EAA2EF,EAAI,QAAQ,IAAIzB,CAAM,EACvG,GAAI2B,IAAiB,QAAaD,EAAa,SAAWC,EAAa,OAAQ,MAAO,GACtF,QAAS,EAAI,EAAG,EAAID,EAAa,OAAQ,IAAK,CAC5C,MAAME,EAAMF,EAAa,CAAC,EACpBG,EAAMF,EAAa,CAAC,EAC1B,GAAIC,EAAI,QAAUC,EAAI,OAASD,EAAI,MAAQC,EAAI,IAC7C,MAAO,EAEV,CACF,CACD,MAAO,EACT,EAMMC,GAAsBC,GAiB5B,MAAMC,WAAY1H,EAAW,CAI3B,YAAa,CAAE,KAAA2H,EAAOC,GAAa,EAAI,aAAAC,EAAe,KAAM,GAAAC,EAAK,GAAM,SAAAC,EAAW,IAAM,GAAM,KAAAC,EAAO,KAAM,SAAAC,EAAW,GAAO,WAAAC,EAAa,EAAM,EAAG,GAAI,CACrJ,QACA,KAAK,GAAKJ,EACV,KAAK,SAAWC,EAChB,KAAK,SAAWP,KAChB,KAAK,KAAOG,EACZ,KAAK,aAAeE,EAIpB,KAAK,MAAQ,IAAI,IACjB,KAAK,MAAQ,IAAIM,GAIjB,KAAK,aAAe,KAIpB,KAAK,qBAAuB,GAI5B,KAAK,QAAU,IAAI,IAKnB,KAAK,MAAQ,KACb,KAAK,WAAaD,EAClB,KAAK,SAAWD,EAChB,KAAK,KAAOD,EAOZ,KAAK,SAAW,GAQhB,KAAK,SAAW,GAIhB,KAAK,WAAaI,GAAeC,GAAW,CAC1C,KAAK,GAAG,OAAQ,IAAM,CACpB,KAAK,SAAW,GAChBA,EAAQ,IAAI,CACpB,CAAO,CACP,CAAK,EACD,MAAMC,EAAuB,IAAMF,GAAeC,GAAW,CAI3D,MAAME,EAAgBC,GAAa,EAC7BA,IAAa,QAAaA,IAAa,MACzC,KAAK,IAAI,OAAQD,CAAY,EAC7BF,IAEV,EACM,KAAK,GAAG,OAAQE,CAAY,CAClC,CAAK,EACD,KAAK,GAAG,OAAQC,GAAY,CACtBA,IAAa,IAAS,KAAK,WAC7B,KAAK,WAAaF,KAEpB,KAAK,SAAWE,IAAa,QAAaA,IAAa,GACnD,KAAK,UAAY,CAAC,KAAK,UACzB,KAAK,KAAK,OAAQ,EAAE,CAE5B,CAAK,EAMD,KAAK,WAAaF,GACnB,CASD,MAAQ,CACN,MAAMvI,EAAO,KAAK,MACdA,IAAS,MAAQ,CAAC,KAAK,YACzB0I,EAA6B1I,EAAK,OAAQ,IAAKsE,GAAe,CAC5DA,EAAY,cAAc,IAAI,IAAI,CAC1C,EAAS,KAAM,EAAI,EAEf,KAAK,WAAa,EACnB,CAED,YAAc,CACZ,OAAO,KAAK,OACb,CAED,gBAAkB,CAChB,OAAO,IAAI,IAAI/D,GAAW,KAAK,OAAO,EAAE,IAAIoI,GAAOA,EAAI,IAAI,CAAC,CAC7D,CAeD,SAAU5W,EAAG6W,EAAS,KAAM,CAC1B,OAAOF,EAAS,KAAM3W,EAAG6W,CAAM,CAChC,CA4BD,IAAK3J,EAAM4J,EAAkBC,EAAc,CACzC,MAAMvY,EAAO4P,GAAmB,KAAK,MAAOlB,EAAM,IAAM,CAEtD,MAAM8J,EAAI,IAAIF,EACd,OAAAE,EAAE,WAAW,KAAM,IAAI,EAChBA,CACb,CAAK,EACKC,EAASzY,EAAK,YACpB,GAAIsY,IAAoBC,GAAgBE,IAAWH,EACjD,GAAIG,IAAWF,EAAc,CAE3B,MAAMC,EAAI,IAAIF,EACdE,EAAE,KAAOxY,EAAK,KACdA,EAAK,KAAK,QAAgCwD,GAAK,CAC7C,KAAOA,IAAM,KAAMA,EAAIA,EAAE,KAEvBA,EAAE,OAASgV,CAEvB,CAAS,EACDA,EAAE,OAASxY,EAAK,OAChB,QAASwD,EAAIgV,EAAE,OAAQhV,IAAM,KAAMA,EAAIA,EAAE,MACvCA,EAAE,OAASgV,EAEb,OAAAA,EAAE,QAAUxY,EAAK,QACjB,KAAK,MAAM,IAAI0O,EAAM8J,CAAC,EACtBA,EAAE,WAAW,KAAM,IAAI,EAChBA,CACf,KACQ,OAAM,IAAI,MAAM,sBAAsB9J,CAAI,wDAAwD,EAGtG,OAAO1O,CACR,CASD,SAAU0O,EAAO,GAAI,CAEnB,OAAO,KAAK,IAAIA,EAAMgK,CAAM,CAC7B,CAQD,QAAShK,EAAO,GAAI,CAElB,OAAO,KAAK,IAAIA,EAAMiK,CAAK,CAC5B,CASD,OAAQjK,EAAO,GAAI,CAEjB,OAAO,KAAK,IAAIA,EAAMkK,CAAI,CAC3B,CAQD,eAAgBlK,EAAO,GAAI,CAEzB,OAAO,KAAK,IAAIA,EAAMmK,EAAY,CACnC,CAUD,QAAU,CAIR,MAAMT,EAAM,GAEZ,YAAK,MAAM,QAAQ,CAAChU,EAAOJ,IAAQ,CACjCoU,EAAIpU,CAAG,EAAII,EAAM,OAAM,CAC7B,CAAK,EAEMgU,CACR,CAKD,SAAW,CACTpI,GAAW,KAAK,OAAO,EAAE,QAAQ8I,GAAUA,EAAO,QAAO,CAAE,EAC3D,MAAMrJ,EAAO,KAAK,MAClB,GAAIA,IAAS,KAAM,CACjB,KAAK,MAAQ,KACb,MAAMsJ,EAAqCtJ,EAAK,QAChDsJ,EAAQ,IAAM,IAAI3B,GAAI,CAAE,KAAM,KAAK,KAAM,GAAG2B,EAAQ,KAAM,WAAY,EAAO,GAC7EA,EAAQ,IAAI,MAAQtJ,EACpB0I,EAA6B1I,EAAM,OAAO,IAAKsE,GAAe,CAC5D,MAAMqE,EAAMW,EAAQ,IACftJ,EAAK,SACRsE,EAAY,aAAa,IAAIqE,CAAG,EAElCrE,EAAY,eAAe,IAAI,IAAI,CAC3C,EAAS,KAAM,EAAI,CACd,CACD,KAAK,KAAK,YAAa,CAAC,EAAI,CAAC,EAC7B,KAAK,KAAK,UAAW,CAAC,IAAI,CAAC,EAC3B,MAAM,QAAO,CACd,CAMD,GAAIiF,EAAWxX,EAAG,CAChB,MAAM,GAAGwX,EAAWxX,CAAC,CACtB,CAMD,IAAKwX,EAAWxX,EAAG,CACjB,MAAM,IAAIwX,EAAWxX,CAAC,CACvB,CACH,CAEA,MAAMyX,EAAY,CAIhB,YAAa1N,EAAS,CACpB,KAAK,YAAcA,CACpB,CAED,eAAiB,CAEhB,CAKD,aAAe,CACb,OAAOyK,EAAqB,KAAK,WAAW,CAC7C,CAKD,WAAa,CACX,OAAOA,EAAqB,KAAK,WAAW,CAC7C,CACH,CAEA,MAAMkD,WAAwBD,EAAY,CAIxC,YAAc,CACZ,OAAOE,EAASnD,EAAqB,KAAK,WAAW,EAAGA,EAAqB,KAAK,WAAW,CAAC,CAC/F,CAKD,aAAe,CACb,OAAOmD,EAASnD,EAAqB,KAAK,WAAW,EAAGA,EAAqB,KAAK,WAAW,CAAC,CAC/F,CAMD,YAAc,CACZ,OAAOA,EAAqB,KAAK,WAAW,CAC7C,CAKD,UAAY,CACV,OAAOoD,GAAmB,KAAK,WAAW,CAC3C,CAKD,YAAc,CACZ,OAAOC,GAAuB,KAAK,WAAW,CAC/C,CAKD,gBAAkB,CAChB,OAAOrD,EAAqB,KAAK,WAAW,IAAM,CACnD,CAKD,aAAe,CACb,OAAOA,EAAqB,KAAK,WAAW,CAC7C,CAOD,SAAW,CACT,OAAOA,EAAqB,KAAK,WAAW,CAC7C,CAKD,SAAW,CACT,OAAOsD,GAAiB,KAAK,WAAW,CACzC,CAKD,SAAW,CACT,OAAOC,GAAsBC,GAA2B,KAAK,WAAW,CAAC,CAC1E,CAOD,UAAY,CACV,OAAO,KAAK,MAAMH,GAAuB,KAAK,WAAW,CAAC,CAC3D,CAKD,SAAW,CACT,OAAOA,GAAuB,KAAK,WAAW,CAC/C,CACH,CAEA,MAAMI,EAAY,CAIhB,YAAalO,EAAS,CAIpB,KAAK,UAAY,EACjB,KAAK,YAAcA,CACpB,CAED,eAAiB,CACf,KAAK,UAAY,CAClB,CAKD,aAAe,CACb,YAAK,WAAayK,EAAqB,KAAK,WAAW,EAChD,KAAK,SACb,CAKD,WAAa,CACX,MAAM7I,EAAO6I,EAAqB,KAAK,WAAW,EAAI,EACtD,YAAK,WAAa7I,EACXA,CACR,CACH,CAEA,MAAMuM,WAAwBD,EAAY,CAIxC,YAAalO,EAAS,CACpB,MAAMA,CAAO,EAOb,KAAK,KAAO,GACZyK,EAAqBzK,CAAO,EAC5B,KAAK,gBAAkB,IAAIoO,GAA8BH,GAA2BjO,CAAO,CAAC,EAC5F,KAAK,cAAgB,IAAIqO,GAA2BJ,GAA2BjO,CAAO,CAAC,EACvF,KAAK,iBAAmB,IAAIoO,GAA8BH,GAA2BjO,CAAO,CAAC,EAC7F,KAAK,kBAAoB,IAAIoO,GAA8BH,GAA2BjO,CAAO,CAAC,EAC9F,KAAK,YAAc,IAAIsO,GAAoBL,GAA2BjO,CAAO,EAAG6N,EAAkB,EAClG,KAAK,cAAgB,IAAIU,GAAuBN,GAA2BjO,CAAO,CAAC,EACnF,KAAK,kBAAoB,IAAIsO,GAAoBL,GAA2BjO,CAAO,EAAG6N,EAAkB,EACxG,KAAK,eAAiB,IAAIQ,GAA2BJ,GAA2BjO,CAAO,CAAC,EACxF,KAAK,WAAa,IAAIqO,GAA2BJ,GAA2BjO,CAAO,CAAC,CACrF,CAKD,YAAc,CACZ,OAAO,IAAIwO,GAAG,KAAK,cAAc,KAAI,EAAI,KAAK,iBAAiB,MAAM,CACtE,CAKD,aAAe,CACb,OAAO,IAAIA,GAAG,KAAK,cAAc,KAAI,EAAI,KAAK,kBAAkB,MAAM,CACvE,CAMD,YAAc,CACZ,OAAO,KAAK,cAAc,KAAM,CACjC,CAKD,UAAY,CACV,OAA8B,KAAK,YAAY,MAChD,CAKD,YAAc,CACZ,OAAO,KAAK,cAAc,KAAM,CACjC,CAKD,gBAAkB,CAChB,OAAO,KAAK,kBAAkB,KAAI,IAAO,CAC1C,CAKD,aAAe,CACb,OAAO,KAAK,eAAe,KAAM,CAClC,CAOD,SAAW,CACT,OAAO,KAAK,WAAW,KAAM,CAC9B,CAKD,SAAW,CACT,OAAOT,GAAiB,KAAK,WAAW,CACzC,CAKD,SAAW,CACT,OAAOE,GAA2B,KAAK,WAAW,CACnD,CASD,UAAY,CACV,OAAOF,GAAiB,KAAK,WAAW,CACzC,CAKD,SAAW,CACT,MAAMU,EAAW,KAAK,gBAAgB,KAAI,EAC1C,GAAIA,EAAW,KAAK,KAAK,OACvB,OAAO,KAAK,KAAKA,CAAQ,EACpB,CACL,MAAMhW,EAAM,KAAK,cAAc,KAAI,EACnC,YAAK,KAAK,KAAKA,CAAG,EACXA,CACR,CACF,CACH,CAEA,MAAMiW,EAAY,CAChB,aAAe,CACb,KAAK,YAAcC,IACpB,CAED,cAAgB,CACd,OAAOC,GAAsB,KAAK,WAAW,CAC9C,CAED,eAAiB,CAEhB,CAKD,aAAcvG,EAAO,CACnBiC,EAAsB,KAAK,YAAajC,CAAK,CAC9C,CAKD,WAAYzR,EAAK,CACf0T,EAAsB,KAAK,YAAa1T,CAAG,CAC5C,CACH,CAEA,MAAMiY,WAAwBH,EAAY,CAIxC,YAAaxU,EAAI,CACfoQ,EAAsB,KAAK,YAAapQ,EAAG,MAAM,EACjDoQ,EAAsB,KAAK,YAAapQ,EAAG,KAAK,CACjD,CAKD,aAAcA,EAAI,CAChBoQ,EAAsB,KAAK,YAAapQ,EAAG,MAAM,EACjDoQ,EAAsB,KAAK,YAAapQ,EAAG,KAAK,CACjD,CAMD,YAAa2P,EAAQ,CACnBS,EAAsB,KAAK,YAAaT,CAAM,CAC/C,CAKD,UAAWiF,EAAM,CACfC,GAAoB,KAAK,YAAaD,CAAI,CAC3C,CAKD,YAAa5M,EAAG,CACd8M,GAAwB,KAAK,YAAa9M,CAAC,CAC5C,CAKD,gBAAiB+M,EAAQ,CACvB3E,EAAsB,KAAK,YAAa2E,EAAS,EAAI,CAAC,CACvD,CAKD,aAAcH,EAAM,CAClBxE,EAAsB,KAAK,YAAawE,CAAI,CAC7C,CAOD,SAAUlY,EAAK,CACb0T,EAAsB,KAAK,YAAa1T,CAAG,CAC5C,CAKD,SAAUkC,EAAK,CACboW,GAAkB,KAAK,YAAapW,CAAG,CACxC,CAKD,SAAUpB,EAAK,CACbyX,GAA4B,KAAK,YAAazX,CAAG,CAClD,CAKD,UAAW0X,EAAO,CAChBJ,GAAwB,KAAK,YAAa,KAAK,UAAUI,CAAK,CAAC,CAChE,CAKD,SAAU3W,EAAK,CACbuW,GAAwB,KAAK,YAAavW,CAAG,CAC9C,CACH,CAEA,MAAM4W,EAAY,CAChB,aAAe,CACb,KAAK,YAAcV,KACnB,KAAK,UAAY,CAClB,CAED,cAAgB,CACd,OAAOC,GAAsB,KAAK,WAAW,CAC9C,CAED,eAAiB,CACf,KAAK,UAAY,CAClB,CAKD,aAAcvG,EAAO,CACnB,MAAMzG,EAAOyG,EAAQ,KAAK,UAC1B,KAAK,UAAYA,EACjBiC,EAAsB,KAAK,YAAa1I,CAAI,CAC7C,CAKD,WAAYhL,EAAK,CACXA,IAAQ,GACV0Y,KAEFhF,EAAsB,KAAK,YAAa1T,EAAM,CAAC,EAC/C,KAAK,WAAaA,CACnB,CACH,CAEA,MAAMuU,WAAwBkE,EAAY,CACxC,aAAe,CACb,QAIA,KAAK,OAAS,IAAI,IAOlB,KAAK,SAAW,EAChB,KAAK,gBAAkB,IAAIE,GAC3B,KAAK,cAAgB,IAAIC,GACzB,KAAK,iBAAmB,IAAID,GAC5B,KAAK,kBAAoB,IAAIA,GAC7B,KAAK,YAAc,IAAIE,GAAoBV,EAAmB,EAC9D,KAAK,cAAgB,IAAIW,GACzB,KAAK,kBAAoB,IAAID,GAAoBV,EAAmB,EACpE,KAAK,eAAiB,IAAIS,GAC1B,KAAK,WAAa,IAAIA,EACvB,CAED,cAAgB,CACd,MAAMxT,EAAU2S,KAChBrE,SAAsBtO,EAAS,CAAC,EAChCmT,GAA4BnT,EAAS,KAAK,gBAAgB,aAAc,GACxEmT,GAA4BnT,EAAS,KAAK,cAAc,aAAc,GACtEmT,GAA4BnT,EAAS,KAAK,iBAAiB,aAAc,GACzEmT,GAA4BnT,EAAS,KAAK,kBAAkB,aAAc,GAC1EmT,GAA4BnT,EAAS4S,GAAsB,KAAK,WAAW,CAAC,EAC5EO,GAA4BnT,EAAS,KAAK,cAAc,aAAc,GACtEmT,GAA4BnT,EAAS4S,GAAsB,KAAK,iBAAiB,CAAC,EAClFO,GAA4BnT,EAAS,KAAK,eAAe,aAAc,GACvEmT,GAA4BnT,EAAS,KAAK,WAAW,aAAc,GAEnE2T,GAAyB3T,EAAS4S,GAAsB,KAAK,WAAW,CAAC,EAClEA,GAAsB5S,CAAO,CACrC,CAKD,YAAa9B,EAAI,CACf,KAAK,cAAc,MAAMA,EAAG,MAAM,EAClC,KAAK,iBAAiB,MAAMA,EAAG,KAAK,CACrC,CAKD,aAAcA,EAAI,CAChB,KAAK,cAAc,MAAMA,EAAG,MAAM,EAClC,KAAK,kBAAkB,MAAMA,EAAG,KAAK,CACtC,CAKD,YAAa2P,EAAQ,CACnB,KAAK,cAAc,MAAMA,CAAM,CAChC,CAKD,UAAWiF,EAAM,CACf,KAAK,YAAY,MAAMA,CAAI,CAC5B,CAKD,YAAa5M,EAAG,CACd,KAAK,cAAc,MAAMA,CAAC,CAC3B,CAKD,gBAAiB+M,EAAQ,CACvB,KAAK,kBAAkB,MAAMA,EAAS,EAAI,CAAC,CAC5C,CAKD,aAAcH,EAAM,CAClB,KAAK,eAAe,MAAMA,CAAI,CAC/B,CAOD,SAAUlY,EAAK,CACb,KAAK,WAAW,MAAMA,CAAG,CAC1B,CAKD,SAAUkC,EAAK,CACboW,GAAkB,KAAK,YAAapW,CAAG,CACxC,CAKD,SAAUpB,EAAK,CACbyX,GAA4B,KAAK,YAAazX,CAAG,CAClD,CASD,UAAW0X,EAAO,CAChBF,GAAkB,KAAK,YAAaE,CAAK,CAC1C,CAUD,SAAU3W,EAAK,CACb,MAAM4P,EAAQ,KAAK,OAAO,IAAI5P,CAAG,EAC7B4P,IAAU,QAeZ,KAAK,gBAAgB,MAAM,KAAK,UAAU,EAC1C,KAAK,cAAc,MAAM5P,CAAG,GAE5B,KAAK,gBAAgB,MAAM4P,CAAK,CAEnC,CACH,CAcA,MAAMuH,GAAe,CAAC5T,EAAS4M,EAASiB,EAAQxB,IAAU,CAExDA,EAAQ/L,GAAS+L,EAAOO,EAAQ,CAAC,EAAE,GAAG,KAAK,EAC3C,MAAMiH,EAAkB5E,GAAYrC,EAASP,CAAK,EAElDiC,EAAsBtO,EAAQ,YAAa4M,EAAQ,OAASiH,CAAe,EAC3E7T,EAAQ,YAAY6N,CAAM,EAC1BS,EAAsBtO,EAAQ,YAAaqM,CAAK,EAChD,MAAMyH,EAAclH,EAAQiH,CAAe,EAE3CC,EAAY,MAAM9T,EAASqM,EAAQyH,EAAY,GAAG,KAAK,EACvD,QAAS3b,EAAI0b,EAAkB,EAAG1b,EAAIyU,EAAQ,OAAQzU,IACpDyU,EAAQzU,CAAC,EAAE,MAAM6H,EAAS,CAAC,CAE/B,EAUM+T,GAAsB,CAAC/T,EAAS6O,EAAOmF,IAAQ,CAEnD,MAAMC,EAAK,IAAI,IACfD,EAAI,QAAQ,CAAC3H,EAAOwB,IAAW,CAEzBkB,EAASF,EAAOhB,CAAM,EAAIxB,GAC5B4H,EAAG,IAAIpG,EAAQxB,CAAK,CAE1B,CAAG,EACD6H,GAAerF,CAAK,EAAE,QAAQ,CAACsF,EAAQtG,IAAW,CAC3CmG,EAAI,IAAInG,CAAM,GACjBoG,EAAG,IAAIpG,EAAQ,CAAC,CAEtB,CAAG,EAEDS,EAAsBtO,EAAQ,YAAaiU,EAAG,IAAI,EAGlDxL,GAAWwL,EAAG,QAAS,GAAE,KAAK,CAAC3c,EAAGS,IAAMA,EAAE,CAAC,EAAIT,EAAE,CAAC,CAAC,EAAE,QAAQ,CAAC,CAACuW,EAAQxB,CAAK,IAAM,CAChFuH,GAAa5T,EAAwC6O,EAAM,QAAQ,IAAIhB,CAAM,EAAIA,EAAQxB,CAAK,CAClG,CAAG,CACH,EAUM+H,GAAwB,CAACpQ,EAAS6M,IAAQ,CAI9C,MAAMwD,EAAajM,KACbkM,EAAoB7F,EAAqBzK,EAAQ,WAAW,EAClE,QAAS7L,EAAI,EAAGA,EAAImc,EAAmBnc,IAAK,CAC1C,MAAMoc,EAAkB9F,EAAqBzK,EAAQ,WAAW,EAI1DwQ,EAAO,IAAI,MAAMD,CAAe,EAChC1G,EAAS7J,EAAQ,aACvB,IAAIqI,EAAQoC,EAAqBzK,EAAQ,WAAW,EAEpDqQ,EAAW,IAAIxG,EAAQ,CAAE,EAAG,EAAG,KAAA2G,CAAI,CAAE,EACrC,QAASrc,EAAI,EAAGA,EAAIoc,EAAiBpc,IAAK,CACxC,MAAM2a,EAAO9O,EAAQ,WACrB,OAAQyQ,GAAe3B,EAAI,CACzB,IAAK,GAAG,CACN,MAAMlY,EAAMoJ,EAAQ,UACpBwQ,EAAKrc,CAAC,EAAI,IAAIuc,GAAG9C,EAAS/D,EAAQxB,CAAK,EAAGzR,CAAG,EAC7CyR,GAASzR,EACT,KACD,CACD,IAAK,IAAI,CAEP,MAAMA,EAAM6T,EAAqBzK,EAAQ,WAAW,EACpDwQ,EAAKrc,CAAC,EAAI,IAAIwc,GAAK/C,EAAS/D,EAAQxB,CAAK,EAAGzR,CAAG,EAC/CyR,GAASzR,EACT,KACD,CACD,QAAS,CAMP,MAAMga,GAAsB9B,GAAQ9R,GAAcL,OAAkB,EAK9DyN,EAAS,IAAIyG,EACjBjD,EAAS/D,EAAQxB,CAAK,EACtB,MACCyG,EAAOnS,MAAiBA,GAAcqD,EAAQ,WAAY,EAAG,KAC9D,MACC8O,EAAO9R,MAAiBA,GAAcgD,EAAQ,YAAa,EAAG,KAC/D4Q,EAAsB5Q,EAAQ,eAAgB,EAAG6M,EAAI,IAAI7M,EAAQ,YAAY,EAAIA,EAAQ,WAAY,EAAI,KACzG4Q,IAAuB9B,EAAOgC,MAAiBA,GAAc9Q,EAAQ,WAAU,EAAK,KACpF+Q,GAAgB/Q,EAAS8O,CAAI,CACzC,EA0BU0B,EAAKrc,CAAC,EAAIiW,EACV/B,GAAS+B,EAAO,MACjB,CACF,CACF,CAEF,CACD,OAAOiG,CACT,EA6BMW,GAAmB,CAACxI,EAAaqC,EAAOoG,IAAsB,CAIlE,MAAMzN,EAAQ,GAEd,IAAI0N,EAAuBzM,GAAWwM,EAAkB,KAAI,CAAE,EAAE,KAAK,CAAC3d,EAAGS,IAAMT,EAAIS,CAAC,EACpF,GAAImd,EAAqB,SAAW,EAClC,OAAO,KAET,MAAMC,EAAsB,IAAM,CAChC,GAAID,EAAqB,SAAW,EAClC,OAAO,KAET,IAAIE,EAAmEH,EAAkB,IAAIC,EAAqBA,EAAqB,OAAS,CAAC,CAAC,EAClJ,KAAOE,EAAkB,KAAK,SAAWA,EAAkB,GAEzD,GADAF,EAAqB,IAAG,EACpBA,EAAqB,OAAS,EAChCE,EAAmEH,EAAkB,IAAIC,EAAqBA,EAAqB,OAAS,CAAC,CAAC,MAE9I,QAAO,KAGX,OAAOE,CACX,EACE,IAAIC,EAAmBF,IACvB,GAAIE,IAAqB,KACvB,OAAO,KAMT,MAAMC,EAAc,IAAIhF,GAClBiF,EAAY,IAAI,IAKhBC,EAAkB,CAAC3H,EAAQxB,IAAU,CACzC,MAAMoJ,EAASF,EAAU,IAAI1H,CAAM,GAC/B4H,GAAU,MAAQA,EAASpJ,IAC7BkJ,EAAU,IAAI1H,EAAQxB,CAAK,CAEjC,EAIE,IAAIqJ,EAAgCL,EAAkB,KAAyBA,EAAkB,GAAG,EAEpG,MAAM7b,EAAQ,IAAI,IAEZmc,EAAmB,IAAM,CAC7B,UAAWzN,KAAQV,EAAO,CACxB,MAAMqG,EAAS3F,EAAK,GAAG,OACjB0N,EAAoBX,EAAkB,IAAIpH,CAAM,EAClD+H,GAEFA,EAAkB,IAClBN,EAAY,QAAQ,IAAIzH,EAAQ+H,EAAkB,KAAK,MAAMA,EAAkB,CAAC,CAAC,EACjFX,EAAkB,OAAOpH,CAAM,EAC/B+H,EAAkB,EAAI,EACtBA,EAAkB,KAAO,IAGzBN,EAAY,QAAQ,IAAIzH,EAAQ,CAAC3F,CAAI,CAAC,EAGxCgN,EAAuBA,EAAqB,OAAOpM,GAAKA,IAAM+E,CAAM,CACrE,CACDrG,EAAM,OAAS,CACnB,EAGE,OAAa,CACX,GAAIkO,EAAU,cAAgBf,GAAM,CAElC,MAAMkB,EADaxN,GAAmB7O,EAAOkc,EAAU,GAAG,OAAQ,IAAM3G,EAASF,EAAO6G,EAAU,GAAG,MAAM,CAAC,EAChFA,EAAU,GAAG,MACzC,GAAIG,EAAS,EAEXrO,EAAM,KAAKkO,CAAS,EACpBF,EAAgBE,EAAU,GAAG,OAAQA,EAAU,GAAG,MAAQ,CAAC,EAE3DC,QACK,CACL,MAAMG,EAAUJ,EAAU,WAAWlJ,EAAaqC,CAAK,EACvD,GAAIiH,IAAY,KAAM,CACpBtO,EAAM,KAAKkO,CAAS,EAKpB,MAAMK,EAAad,EAAkB,IAA2Ba,CAAO,GAAM,CAAE,KAAM,CAAE,EAAE,EAAG,GAC5F,GAAIC,EAAW,KAAK,SAAWA,EAAW,EAExCP,EAAuCM,EAAU/G,EAASF,EAAOiH,CAAO,CAAC,EACzEH,QACK,CACLD,EAAYK,EAAW,KAAKA,EAAW,GAAG,EAC1C,QACD,CACF,MAAUF,IAAW,GAAKA,EAASH,EAAU,UAE5CA,EAAU,UAAUlJ,EAAaqJ,CAAM,EACvCrc,EAAM,IAAIkc,EAAU,GAAG,OAAQA,EAAU,GAAG,MAAQA,EAAU,MAAM,EAEvE,CACF,CAED,GAAIlO,EAAM,OAAS,EACjBkO,EAAoClO,EAAM,IAAG,UACpC6N,IAAqB,MAAQA,EAAiB,EAAIA,EAAiB,KAAK,OACjFK,EAAoCL,EAAiB,KAAKA,EAAiB,GAAG,MACzE,CAEL,GADAA,EAAmBF,EAAmB,EAClCE,IAAqB,KAEvB,MAEAK,EAAoCL,EAAiB,KAAKA,EAAiB,GAAG,CAEjF,CACF,CACD,GAAIC,EAAY,QAAQ,KAAO,EAAG,CAChC,MAAMtV,EAAU,IAAImP,GACpB,OAAA4E,GAAoB/T,EAASsV,EAAa,IAAI,GAAK,EAGnDhH,EAAsBtO,EAAQ,YAAa,CAAC,EACrC,CAAE,QAASuV,EAAW,OAAQvV,EAAQ,aAAY,CAAI,CAC9D,CACD,OAAO,IACT,EASMgW,GAA8B,CAAChW,EAASwM,IAAgBuH,GAAoB/T,EAASwM,EAAY,IAAI,MAAOA,EAAY,WAAW,EAcnIyJ,GAAe,CAACjS,EAASkI,EAAMgK,EAAmBC,EAAgB,IAAIhE,GAAgBnO,CAAO,IACjG4M,EAAS1E,EAAMM,GAAe,CAE5BA,EAAY,MAAQ,GACpB,IAAI4J,EAAQ,GACZ,MAAMvF,EAAMrE,EAAY,IAClBqC,EAAQgC,EAAI,MAEZ3C,EAAKkG,GAAsB+B,EAAetF,CAAG,EAK7CyE,EAAcN,GAAiBxI,EAAaqC,EAAOX,CAAE,EACrDmI,EAAUxH,EAAM,eACtB,GAAIwH,EAAS,CAEX,SAAW,CAACxI,EAAQxB,CAAK,IAAKgK,EAAQ,QACpC,GAAIhK,EAAQ0C,EAASF,EAAOhB,CAAM,EAAG,CACnCuI,EAAQ,GACR,KACD,CAEH,GAAId,EAAa,CAEf,SAAW,CAACzH,EAAQxB,CAAK,IAAKiJ,EAAY,QAAS,CACjD,MAAMG,EAASY,EAAQ,QAAQ,IAAIxI,CAAM,GACrC4H,GAAU,MAAQA,EAASpJ,IAC7BgK,EAAQ,QAAQ,IAAIxI,EAAQxB,CAAK,CAEpC,CACDgK,EAAQ,OAASC,GAAe,CAACD,EAAQ,OAAQf,EAAY,MAAM,CAAC,CACrE,CACP,MACMzG,EAAM,eAAiByG,EAIzB,MAAMiB,EAAS3H,GAAsBuH,EAAe3J,EAAaqC,CAAK,EACtE,GAAIA,EAAM,UAAW,CAEnB,MAAM2H,EAAkB,IAAIrE,GAAgBsE,EAAuB5H,EAAM,SAAS,CAAC,EACnFJ,EAAqB+H,EAAgB,WAAW,EAChD,MAAME,EAAU9H,GAAsB4H,EAAiBhK,EAAaqC,CAAK,EACrE0H,GAAUG,EAEZ7H,EAAM,UAAYyH,GAAe,CAACC,EAAQG,CAAO,CAAC,EAKlD7H,EAAM,UAAY0H,GAAUG,CAEpC,MAEM7H,EAAM,UAAY0H,EAOpB,GAAIH,EAAO,CACT,MAAMO,EAA8C9H,EAAM,eAAgB,OAC1EA,EAAM,eAAiB,KACvB+H,GAAcpK,EAAY,IAAKmK,CAAM,CACtC,CACL,EAAKT,EAAmB,EAAK,EAavBW,GAAa,CAAC7S,EAASkI,EAAMgK,IAAsBD,GAAajS,EAASkI,EAAMgK,EAAmB,IAAIvE,GAAgB3N,CAAO,CAAC,EAc9H4S,GAAgB,CAAC1K,EAAMyK,EAAQT,EAAmBY,EAAW3E,KAAoB,CACrF,MAAMnO,EAAUyS,EAAuBE,CAAM,EAC7CV,GAAajS,EAASkI,EAAMgK,EAAmB,IAAIY,EAAS9S,CAAO,CAAC,CACtE,EAaM+S,GAAc,CAAC7K,EAAMyK,EAAQT,IAAsBU,GAAc1K,EAAMyK,EAAQT,EAAmBvE,EAAe,EAYjHqF,GAAqB,CAAChX,EAAS6Q,EAAKoG,EAAoB,IAAI,MAAU,CAC1ElD,GAAoB/T,EAAS6Q,EAAI,MAAOoG,CAAiB,EACzD5I,GAAerO,EAASiO,GAA+B4C,EAAI,KAAK,CAAC,CACnE,EAeMqG,GAAwB,CAACrG,EAAKsG,EAA2B,IAAI,WAAW,CAAC,CAAC,CAAC,EAAGnX,EAAU,IAAImP,KAAsB,CACtH,MAAM8H,EAAoBG,GAAkBD,CAAwB,EACpEH,GAAmBhX,EAAS6Q,EAAKoG,CAAiB,EAClD,MAAMI,EAAU,CAACrX,EAAQ,aAAc,GAQvC,GANI6Q,EAAI,MAAM,WACZwG,EAAQ,KAAKxG,EAAI,MAAM,SAAS,EAE9BA,EAAI,MAAM,gBACZwG,EAAQ,KAAKC,GAAazG,EAAI,MAAM,eAAe,OAAQsG,CAAwB,CAAC,EAElFE,EAAQ,OAAS,EAAG,CACtB,GAAIrX,EAAQ,cAAgB6S,GAC1B,OAAO0E,GAAaF,EAAQ,IAAI,CAACV,EAAQxe,IAAMA,IAAM,EAAIwe,EAASa,GAA0Bb,CAAM,CAAC,CAAC,EAC/F,GAAI3W,EAAQ,cAAgBmP,GACjC,OAAOmH,GAAee,CAAO,CAEhC,CACD,OAAOA,EAAQ,CAAC,CAClB,EAcMI,GAAsB,CAAC5G,EAAKsG,IAA6BD,GAAsBrG,EAAKsG,EAA0B,IAAItE,EAAiB,EAUnI6E,GAAkB1T,GAAW,CACjC,MAAMkK,EAAK,IAAI,IACTyJ,EAAWlJ,EAAqBzK,EAAQ,WAAW,EACzD,QAAS7L,EAAI,EAAGA,EAAIwf,EAAUxf,IAAK,CACjC,MAAM0V,EAASY,EAAqBzK,EAAQ,WAAW,EACjDqI,EAAQoC,EAAqBzK,EAAQ,WAAW,EACtDkK,EAAG,IAAIL,EAAQxB,CAAK,CACrB,CACD,OAAO6B,CACT,EAoBMkJ,GAAoBQ,GAAgBF,GAAgB,IAAIhG,GAAY+E,EAAuBmB,CAAY,CAAC,CAAC,EAOzGC,GAAmB,CAAC7X,EAAS8X,KACjCxJ,EAAsBtO,EAAQ,YAAa8X,EAAG,IAAI,EAClDrP,GAAWqP,EAAG,QAAS,GAAE,KAAK,CAACxgB,EAAGS,IAAMA,EAAE,CAAC,EAAIT,EAAE,CAAC,CAAC,EAAE,QAAQ,CAAC,CAACuW,EAAQxB,CAAK,IAAM,CAChFiC,EAAsBtO,EAAQ,YAAa6N,CAAM,EACjDS,EAAsBtO,EAAQ,YAAaqM,CAAK,CACpD,CAAG,EACMrM,GASH+X,GAA2B,CAAC/X,EAAS6Q,IAAQgH,GAAiB7X,EAASkU,GAAerD,EAAI,KAAK,CAAC,EAWhGmH,GAAsB,CAACnH,EAAK7Q,EAAU,IAAIqT,MAC1CxC,aAAe,IACjBgH,GAAiB7X,EAAS6Q,CAAG,EAE7BkH,GAAyB/X,EAAS6Q,CAAG,EAEhC7Q,EAAQ,aAAc,GAWzBiY,GAAoBpH,GAAOmH,GAAoBnH,EAAK,IAAI6B,EAAa,EAS3E,MAAMwF,EAAa,CACjB,aAAe,CAIb,KAAK,EAAI,EACV,CACH,CASA,MAAMC,GAAqB,IAAM,IAAID,GAa/BE,GAA0B,CAAC1H,EAAczW,IAC7CyW,EAAa,EAAE,KAAKzW,CAAC,EAajBoe,GAA6B,CAAC3H,EAAczW,IAAM,CACtD,MAAMqe,EAAI5H,EAAa,EACjB9V,EAAM0d,EAAE,OACd5H,EAAa,EAAI4H,EAAE,OAAOC,GAAKte,IAAMse,CAAC,EAClC3d,IAAQ8V,EAAa,EAAE,QACzB,QAAQ,MAAM,yDAA0D,CAE5E,EAcM8H,GAA4B,CAAC9H,EAAc+H,EAAMC,IACrDC,GAAUjI,EAAa,EAAG,CAAC+H,EAAMC,CAAI,CAAC,EAExC,MAAMlG,EAAG,CAKP,YAAa3E,EAAQxB,EAAO,CAK1B,KAAK,OAASwB,EAKd,KAAK,MAAQxB,CACd,CACH,CASA,MAAMuM,GAAa,CAACthB,EAAGS,IAAMT,IAAMS,GAAMT,IAAM,MAAQS,IAAM,MAAQT,EAAE,SAAWS,EAAE,QAAUT,EAAE,QAAUS,EAAE,MAStG6Z,EAAW,CAAC/D,EAAQxB,IAAU,IAAImG,GAAG3E,EAAQxB,CAAK,EASlDwM,GAAU,CAAC7Y,EAAS9B,IAAO,CAC/BoQ,EAAsBtO,EAAS9B,EAAG,MAAM,EACxCoQ,EAAsBtO,EAAS9B,EAAG,KAAK,CACzC,EAaM4a,GAAS9U,GACb4N,EAASnD,EAAqBzK,CAAO,EAAGyK,EAAqBzK,CAAO,CAAC,EAajE+U,GAAkBtgB,GAAQ,CAE9B,SAAW,CAACgE,EAAKI,CAAK,IAAKpE,EAAK,IAAI,MAAM,UACxC,GAAIoE,IAAUpE,EACZ,OAAOgE,EAGX,MAAM6W,GAAsB,CAC9B,EAYM0F,GAAa,CAACtR,EAAQuR,IAAU,CACpC,KAAOA,IAAU,MAAM,CACrB,GAAIA,EAAM,SAAWvR,EACnB,MAAO,GAETuR,EAA0CA,EAAM,OAAQ,KACzD,CACD,MAAO,EACT,EASMC,GAAUzgB,GAAQ,CACtB,MAAMmE,EAAM,GACZ,IAAIX,EAAIxD,EAAK,OACb,KAAOwD,GACLW,EAAI,KAAKX,CAAC,EACVA,EAAIA,EAAE,MAER,QAAQ,IAAI,aAAcW,CAAG,EAC7B,QAAQ,IAAI,qBAAsBA,EAAI,OAAOR,GAAK,CAACA,EAAE,OAAO,EAAE,IAAIA,GAAKA,EAAE,OAAO,CAAC,CACnF,EAEA,MAAM+c,EAAkB,CAKtB,YAAatI,EAAKuI,EAAYvI,EAAI,OAAO,OAAO,EAAG,CAIjD,MAAMpD,EAAM,IAAI,IAChB,KAAK,OAAS2L,EACd,KAAK,IAAMvI,EAMX,KAAK,QAAU,IAAI,IACnB,KAAK,IAAMpD,EAKX,MAAM4L,EAAW,CAACC,EAAMC,IAAoB,CAI1C,MAAM9M,EAAK6M,EAAK,IAAI,IAAI,EAClBE,EAAMF,EAAK,IAAI,KAAK,EACpBG,EAA8C9M,GAAY,KAAK,QAAQ,IAAIA,EAAU4M,CAAe,EAC1G9M,EAAG,QAA+CiN,GAAS,CACzDA,EAAM,QAAQ,MAAM,QAAQxR,GAAQ,CAClCA,EAAK,QAAQ,aAAa,QAAQyR,GAAa,CACzCA,aAAqB,YACvB,KAAK,IAAI,IAAIJ,EAAiB/L,GAAgB,CAAC,KAAK,IAAI,IAAI+L,CAAe,GAAKvL,GAAiB,EAAEO,GAAc,IAAImD,GAAY+E,EAAuBkD,CAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAEpL,CAAW,CACX,CAAS,CACT,CAAO,EACD,KAAK,IAAI,IAAIJ,EAAiB/L,GAAgBf,EAAG,IAAIkN,GAAapL,GAAc,IAAImD,GAAY+E,EAAuBkD,CAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EACrIH,EAAI,QAA+CE,GACjDA,EAAM,QAAQ,MAAM,QAAQxR,GAAQA,EAAK,QAAQ,WAAU,EAAG,QAAQuR,CAAW,CAAC,CAC1F,EACMD,EAAI,QAAQC,CAAW,CAC7B,EAEIL,EAAU,QAAQM,GAAS,CACzBA,EAAM,YAAY,QAAQH,GACxBF,EAASD,EAAU,IAAIG,CAAe,EAAGA,CAAe,CAChE,CACA,CAAK,EAEDH,EAAU,QAAQC,CAAQ,CAC3B,CASD,eAAgBxI,EAAKlE,EAAU4M,EAAiB,CAAE,OAAAjgB,EAAS,IAAM,EAAM,EAAG,GAAI,CAC5E,MAAMsgB,EAAQ,KAAK,OACnB,IAAIN,EAAOM,EAAM,IAAIL,CAAe,EAC/BD,IACHA,EAAO,IAAIjI,EACXiI,EAAK,IAAI,MAAO,IAAInI,CAAQ,EAC5BmI,EAAK,IAAI,KAAM,IAAInI,CAAQ,EAC3ByI,EAAM,IAAIL,EAAiBD,CAAI,GAEjCA,EAAK,IAAI,KAAK,EAAE,KAAK,CAAC3M,CAAQ,CAAC,EAC/BiN,EAAM,QAAQC,GAAU,CACtB,WAAW,IAAM,CACf,MAAMC,EAAgBF,EAAM,IAAIL,CAAe,EAC/C,GAAIO,IAAkBR,EAAM,CAG1BA,EAAOQ,EAEP,KAAK,QAAQ,QAAQ,CAACC,EAAkBpN,IAAa,CAC/C4M,IAAoBQ,GACtBT,EAAK,IAAI,KAAK,EAAE,KAAK,CAAC3M,CAAQ,CAAC,CAE7C,CAAW,EACD,MAAM3M,EAAU,IAAI0S,GACdjG,EAAK,KAAK,IAAI,IAAI8M,CAAe,EACnC9M,IACF4B,GAAerO,EAASyM,CAAE,EAC1B6M,EAAK,IAAI,IAAI,EAAE,KAAK,CAACtZ,EAAQ,aAAc,EAAC,EAE/C,CACF,EAAE,CAAC,CACV,CAAK,EACD6Q,EAAI,GAAG,mBAA4DrE,GAAe,CAChF,WAAW,IAAM,CACf,MAAMwN,EAAMV,EAAK,IAAI,IAAI,EACnB7M,EAAKD,EAAY,UACvB,GAAIA,EAAY,OAASC,EAAG,QAAQ,KAAO,GAAKnT,EAAOkT,EAAaC,CAAE,EAAG,CACvE,MAAMzM,EAAU,IAAI0S,GACpBrE,GAAerO,EAASyM,CAAE,EAC1BuN,EAAI,KAAK,CAACha,EAAQ,aAAY,CAAE,CAAC,CAClC,CACT,CAAO,CACP,CAAK,CACF,CAMD,kBAAmB2M,EAAU,CAC3B,OAAO,KAAK,QAAQ,IAAIA,CAAQ,GAAK,IACtC,CAMD,mBAAoBzO,EAAI,CACtB,SAAW,CAACqb,EAAiB9M,CAAE,IAAK,KAAK,IAAI,UAC3C,GAAIW,GAAUX,EAAIvO,CAAE,EAClB,OAAOqb,EAGX,OAAO,IACR,CACH,CA0BA,MAAMU,EAAiB,CAOrB,YAAaxhB,EAAMyhB,EAAOhS,EAAMiS,EAAQ,EAAG,CAIzC,KAAK,KAAO1hB,EAIZ,KAAK,MAAQyhB,EAIb,KAAK,KAAOhS,EAYZ,KAAK,MAAQiS,CACd,CACH,CAMA,MAAMC,GAAyBC,GAAQ,CACrC,MAAMC,EAAO,GACb,OAAID,EAAK,OACPC,EAAK,KAAOD,EAAK,MAEfA,EAAK,QACPC,EAAK,MAAQD,EAAK,OAEhBA,EAAK,OACPC,EAAK,KAAOD,EAAK,MAEfA,EAAK,OAAS,OAChBC,EAAK,MAAQD,EAAK,OAEbC,CACT,EAQMC,GAAiCD,GAAQ,IAAIL,GAAiBK,EAAK,MAAQ,KAAO,KAAO1I,EAAS0I,EAAK,KAAK,OAAQA,EAAK,KAAK,KAAK,EAAGA,EAAK,OAAS,KAAMA,EAAK,MAAQ,KAAO,KAAO1I,EAAS0I,EAAK,KAAK,OAAQA,EAAK,KAAK,KAAK,EAAGA,EAAK,OAAS,KAAO,EAAIA,EAAK,KAAK,EAE3Q,MAAME,EAAiB,CAMrB,YAAa/hB,EAAMqB,EAAOqgB,EAAQ,EAAG,CAInC,KAAK,KAAO1hB,EAIZ,KAAK,MAAQqB,EACb,KAAK,MAAQqgB,CACd,CACH,CASA,MAAMM,GAAyB,CAAChiB,EAAMqB,EAAOqgB,EAAQ,IAAM,IAAIK,GAAiB/hB,EAAMqB,EAAOqgB,CAAK,EAS5FO,GAAyB,CAACjiB,EAAMyP,EAAMiS,IAAU,CACpD,IAAIQ,EAAS,KACTT,EAAQ,KACZ,OAAIzhB,EAAK,QAAU,KACjByhB,EAAQnB,GAAgBtgB,CAAI,EAE5BkiB,EAAS/I,EAASnZ,EAAK,MAAM,GAAG,OAAQA,EAAK,MAAM,GAAG,KAAK,EAEtD,IAAIwhB,GAAiBU,EAAQT,EAAOhS,EAAMiS,CAAK,CACxD,EAYMS,GAAsC,CAACniB,EAAMqB,EAAOqgB,EAAQ,IAAM,CACtE,IAAIlJ,EAAIxY,EAAK,OACb,GAAI0hB,EAAQ,EAAG,CAEb,GAAIrgB,IAAU,EACZ,OAAO4gB,GAAuBjiB,EAAM,KAAM0hB,CAAK,EAEjDrgB,GACD,CACD,KAAOmX,IAAM,MAAM,CACjB,GAAI,CAACA,EAAE,SAAWA,EAAE,UAAW,CAC7B,GAAIA,EAAE,OAASnX,EAEb,OAAO4gB,GAAuBjiB,EAAMmZ,EAASX,EAAE,GAAG,OAAQA,EAAE,GAAG,MAAQnX,CAAK,EAAGqgB,CAAK,EAEtFrgB,GAASmX,EAAE,MACZ,CACD,GAAIA,EAAE,QAAU,MAAQkJ,EAAQ,EAE9B,OAAOO,GAAuBjiB,EAAMwY,EAAE,OAAQkJ,CAAK,EAErDlJ,EAAIA,EAAE,KACP,CACD,OAAOyJ,GAAuBjiB,EAAM,KAAM0hB,CAAK,CACjD,EAQMU,GAAwB,CAAC7a,EAASqa,IAAS,CAC/C,KAAM,CAAE,KAAA5hB,EAAM,MAAAyhB,EAAO,KAAAhS,EAAM,MAAAiS,CAAK,EAAKE,EACrC,GAAInS,IAAS,KACXoG,EAAsBtO,EAAS,CAAC,EAChC6Y,GAAQ7Y,EAASkI,CAAI,UACZgS,IAAU,KAEnBnH,GAAoB/S,EAAS,CAAC,EAC9BgT,GAAwBhT,EAASka,CAAK,UAC7BzhB,IAAS,KAElBsa,GAAoB/S,EAAS,CAAC,EAC9B6Y,GAAQ7Y,EAASvH,CAAI,MAErB,OAAM6a,GAAsB,EAE9BwH,UAAqB9a,EAASma,CAAK,EAC5Bna,CACT,EAMM+a,GAAyBV,GAAQ,CACrC,MAAMra,EAAU2S,KAChB,OAAAkI,GAAsB7a,EAASqa,CAAI,EAC5BzH,GAAsB5S,CAAO,CACtC,EAQMgb,GAAuBhX,GAAW,CACtC,IAAIvL,EAAO,KACPyhB,EAAQ,KACRe,EAAS,KACb,OAAQxM,EAAqBzK,CAAO,EAAC,CACnC,IAAK,GAEHiX,EAASnC,GAAO9U,CAAO,EACvB,MACF,IAAK,GAEHkW,EAAQpI,GAAuB9N,CAAO,EACtC,MACF,IAAK,GAEHvL,EAAOqgB,GAAO9U,CAAO,CAExB,CACD,MAAMmW,EAAQe,GAAoBlX,CAAO,EAAImX,GAAoBnX,CAAO,EAAI,EAC5E,OAAO,IAAIiW,GAAiBxhB,EAAMyhB,EAAOe,EAAQd,CAAK,CACxD,EAMMiB,GAAyBvZ,GAAcmZ,GAAqBvE,EAAuB5U,CAAU,CAAC,EAS9FwZ,GAA6C,CAAChB,EAAMxJ,IAAQ,CAChE,MAAMhC,EAAQgC,EAAI,MACZyK,EAAUjB,EAAK,KACfkB,EAASlB,EAAK,KACdH,EAAQG,EAAK,MACbF,EAAQE,EAAK,MACnB,IAAI5hB,EAAO,KACPqB,EAAQ,EACZ,GAAIwhB,IAAY,KAAM,CACpB,GAAIvM,EAASF,EAAOyM,EAAQ,MAAM,GAAKA,EAAQ,MAC7C,OAAO,KAET,MAAM1e,EAAM4e,GAAa3M,EAAOyM,CAAO,EACjCpS,EAAQtM,EAAI,KAClB,GAAI,EAAEsM,aAAiB2L,GACrB,OAAO,KAGT,GADApc,EAAyCyQ,EAAM,OAC3CzQ,EAAK,QAAU,MAAQ,CAACA,EAAK,MAAM,QAAS,CAC9CqB,EAASoP,EAAM,SAAW,CAACA,EAAM,UAAa,EAAKtM,EAAI,MAAQud,GAAS,EAAI,EAAI,GAChF,IAAIle,EAAIiN,EAAM,KACd,KAAOjN,IAAM,MACP,CAACA,EAAE,SAAWA,EAAE,YAClBnC,GAASmC,EAAE,QAEbA,EAAIA,EAAE,IAET,CACL,KAAS,CACL,GAAIie,IAAU,KACZzhB,EAAOoY,EAAI,IAAIqJ,CAAK,UACXqB,IAAW,KAAM,CAC1B,GAAIxM,EAASF,EAAO0M,EAAO,MAAM,GAAKA,EAAO,MAE3C,OAAO,KAET,KAAM,CAAE,KAAArT,CAAM,EAAGsT,GAAa3M,EAAO0M,CAAM,EAC3C,GAAIrT,aAAgB2M,GAAQ3M,EAAK,mBAAmBuT,GAClDhjB,EAAOyP,EAAK,QAAQ,SAGpB,QAAO,IAEf,KACM,OAAMoL,GAAsB,EAE1B6G,GAAS,EACXrgB,EAAQrB,EAAK,QAEbqB,EAAQ,CAEX,CACD,OAAO2gB,GAAuBhiB,EAAMqB,EAAOugB,EAAK,KAAK,CACvD,EASMqB,GAA2B,CAACpkB,EAAGS,IAAMT,IAAMS,GAC/CT,IAAM,MAAQS,IAAM,MAAQT,EAAE,QAAUS,EAAE,OAAS6gB,GAAWthB,EAAE,KAAMS,EAAE,IAAI,GAAK6gB,GAAWthB,EAAE,KAAMS,EAAE,IAAI,GAAKT,EAAE,QAAUS,EAAE,MAG/H,MAAM4jB,EAAS,CAKb,YAAalP,EAAIqL,EAAI,CAInB,KAAK,GAAKrL,EAKV,KAAK,GAAKqL,CACX,CACH,CAOA,MAAM8D,GAAiB,CAACC,EAAOC,IAAU,CACvC,MAAMzM,EAAMwM,EAAM,GAAG,QACfvM,EAAMwM,EAAM,GAAG,QACfC,EAAMF,EAAM,GACZG,EAAMF,EAAM,GAClB,GAAIC,EAAI,OAASC,EAAI,MAAQ3M,EAAI,OAASC,EAAI,KAC5C,MAAO,GAET,SAAW,CAAC7S,EAAKI,CAAK,IAAKkf,EAAI,QAAO,EACpC,GAAIC,EAAI,IAAIvf,CAAG,IAAMI,EACnB,MAAO,GAGX,SAAW,CAACgR,EAAQoO,CAAQ,IAAK5M,EAAI,QAAO,EAAI,CAC9C,MAAM6M,EAAW5M,EAAI,IAAIzB,CAAM,GAAK,GACpC,GAAIoO,EAAS,SAAWC,EAAS,OAC/B,MAAO,GAET,QAAS/jB,EAAI,EAAGA,EAAI8jB,EAAS,OAAQ9jB,IAAK,CACxC,MAAMgkB,EAAUF,EAAS9jB,CAAC,EACpBikB,EAAUF,EAAS/jB,CAAC,EAC1B,GAAIgkB,EAAQ,QAAUC,EAAQ,OAASD,EAAQ,MAAQC,EAAQ,IAC7D,MAAO,EAEV,CACF,CACD,MAAO,EACT,EAOMC,GAAmB,CAACC,EAAUtc,EAAU,IAAIqT,MAChDhF,GAAerO,EAASsc,EAAS,EAAE,EACnCzE,GAAiB7X,EAASsc,EAAS,EAAE,EAC9Btc,EAAQ,aAAc,GAOzBuc,GAAiBD,GAAYD,GAAiBC,EAAU,IAAI5J,EAAa,EAOzE8J,GAAmB,CAAC9gB,EAAKsI,EAAU,IAAIkO,GAAYuE,EAAuB/a,CAAG,CAAC,IAC3E,IAAIigB,GAASpN,GAAcvK,CAAO,EAAG0T,GAAgB1T,CAAO,CAAC,EAOhEyY,GAAiB/gB,GAAO8gB,GAAiB9gB,EAAK,IAAIgW,GAAY+E,EAAuB/a,CAAG,CAAC,CAAC,EAO1FghB,GAAiB,CAACjQ,EAAIwH,IAAO,IAAI0H,GAASlP,EAAIwH,CAAE,EAEhD0I,GAAgBD,GAAe1O,GAAiB,EAAE,IAAI,GAAK,EAM3DsO,GAAWzL,GAAO6L,GAAezO,GAA+B4C,EAAI,KAAK,EAAGqD,GAAerD,EAAI,KAAK,CAAC,EASrG+L,GAAY,CAAC1U,EAAMoU,IAAaA,IAAa,OAC/C,CAACpU,EAAK,QACNoU,EAAS,GAAG,IAAIpU,EAAK,GAAG,MAAM,IAAMoU,EAAS,GAAG,IAAIpU,EAAK,GAAG,MAAM,GAAK,GAAKA,EAAK,GAAG,OAAS,CAACkF,GAAUkP,EAAS,GAAIpU,EAAK,EAAE,EAM1H2U,GAA+B,CAACrQ,EAAa8P,IAAa,CAC9D,MAAMnM,EAAO9H,GAAmBmE,EAAY,KAAMqQ,GAA8BvU,EAAU,EACpFuG,EAAQrC,EAAY,IAAI,MAEzB2D,EAAK,IAAImM,CAAQ,IACpBA,EAAS,GAAG,QAAQ,CAACjQ,EAAOwB,IAAW,CACjCxB,EAAQ0C,EAASF,EAAOhB,CAAM,GAChCiP,GAAkBtQ,EAAaoF,EAAS/D,EAAQxB,CAAK,CAAC,CAE9D,CAAK,EACDE,GAAsBC,EAAa8P,EAAS,GAAIS,GAAS,CAAE,GAC3D5M,EAAK,IAAImM,CAAQ,EAErB,EAgBMU,GAAwB,CAACC,EAAWX,EAAUY,EAAS,IAAIrN,KAAU,CACzE,GAAIoN,EAAU,GAEZ,MAAM,IAAI,MAAM,qDAAqD,EAEvE,KAAM,CAAE,GAAAnF,EAAI,GAAArL,CAAI,EAAG6P,EAEbtc,EAAU,IAAImP,GACpB,OAAA8N,EAAU,SAASzQ,GAAe,CAChC,IAAI2Q,EAAO,EACXrF,EAAG,QAAQzL,GAAS,CACdA,EAAQ,GACV8Q,GAER,CAAK,EACD7O,EAAsBtO,EAAQ,YAAamd,CAAI,EAE/C,SAAW,CAACtP,EAAQxB,CAAK,IAAKyL,EAAI,CAChC,GAAIzL,IAAU,EACZ,SAEEA,EAAQ0C,EAASkO,EAAU,MAAOpP,CAAM,GAC1CiP,GAAkBtQ,EAAaoF,EAAS/D,EAAQxB,CAAK,CAAC,EAExD,MAAMO,EAAUqQ,EAAU,MAAM,QAAQ,IAAIpP,CAAM,GAAK,GACjDuP,EAAkBnO,GAAYrC,EAASP,EAAQ,CAAC,EAEtDiC,EAAsBtO,EAAQ,YAAaod,EAAkB,CAAC,EAC9Dpd,EAAQ,YAAY6N,CAAM,EAE1BS,EAAsBtO,EAAQ,YAAa,CAAC,EAC5C,QAAS7H,EAAI,EAAGA,GAAKilB,EAAiBjlB,IACpCyU,EAAQzU,CAAC,EAAE,MAAM6H,EAAS,CAAC,CAE9B,CACDqO,GAAerO,EAASyM,CAAE,CAC9B,CAAG,EAEDmK,GAAcsG,EAAQld,EAAQ,aAAc,EAAE,UAAU,EACjDkd,CACT,EAOMG,GAA2B,CAACf,EAAU3F,EAAQG,EAAW3E,KAAoB,CACjF,MAAMmL,EAAgB,IAAIxG,EAASL,EAAuBE,CAAM,CAAC,EAC3D4G,EAAc,IAAIC,GAAiBF,EAAe,EAAK,EAC7D,QAASG,EAAOF,EAAY,KAAME,IAAS,KAAMA,EAAOF,EAAY,OAClE,IAAKjB,EAAS,GAAG,IAAImB,EAAK,GAAG,MAAM,GAAK,GAAKA,EAAK,GAAG,MAAQA,EAAK,OAChE,MAAO,GAGX,MAAMC,EAAWlQ,GAAgB,CAAC8O,EAAS,GAAI/N,GAAc+O,CAAa,CAAC,CAAC,EAC5E,OAAOlO,GAAgBkN,EAAS,GAAIoB,CAAQ,CAC9C,EAMMC,GAAyB,CAACrB,EAAU3F,IAAW0G,GAAyBf,EAAU3F,EAAQhF,EAAe,EAE/G,MAAMrB,EAAY,CAChB,aAAe,CAIb,KAAK,QAAU,IAAI,IAInB,KAAK,eAAiB,KAItB,KAAK,UAAY,IAClB,CACH,CAYA,MAAM4D,GAAiBrF,GAAS,CAC9B,MAAMoF,EAAK,IAAI,IACf,OAAApF,EAAM,QAAQ,QAAQ,CAACjC,EAASiB,IAAW,CACzC,MAAMO,EAASxB,EAAQA,EAAQ,OAAS,CAAC,EACzCqH,EAAG,IAAIpG,EAAQO,EAAO,GAAG,MAAQA,EAAO,MAAM,CAClD,CAAG,EACM6F,CACT,EAUMlF,EAAW,CAACF,EAAOhB,IAAW,CAClC,MAAMjB,EAAUiC,EAAM,QAAQ,IAAIhB,CAAM,EACxC,GAAIjB,IAAY,OACd,MAAO,GAET,MAAMgR,EAAahR,EAAQA,EAAQ,OAAS,CAAC,EAC7C,OAAOgR,EAAW,GAAG,MAAQA,EAAW,MAC1C,EASMC,GAAY,CAAChP,EAAOT,IAAW,CACnC,IAAIxB,EAAUiC,EAAM,QAAQ,IAAIT,EAAO,GAAG,MAAM,EAChD,GAAIxB,IAAY,OACdA,EAAU,GACViC,EAAM,QAAQ,IAAIT,EAAO,GAAG,OAAQxB,CAAO,MACtC,CACL,MAAMgR,EAAahR,EAAQA,EAAQ,OAAS,CAAC,EAC7C,GAAIgR,EAAW,GAAG,MAAQA,EAAW,SAAWxP,EAAO,GAAG,MACxD,MAAMkF,GAAsB,CAE/B,CACD1G,EAAQ,KAAKwB,CAAM,CACrB,EAWMa,GAAc,CAACrC,EAASP,IAAU,CACtC,IAAIpD,EAAO,EACPC,EAAQ0D,EAAQ,OAAS,EACzBM,EAAMN,EAAQ1D,CAAK,EACnBiE,EAAWD,EAAI,GAAG,MACtB,GAAIC,IAAad,EACf,OAAOnD,EAKT,IAAI+D,EAAWpN,GAAYwM,GAASc,EAAWD,EAAI,OAAS,GAAMhE,CAAK,EACvE,KAAOD,GAAQC,GAAO,CAGpB,GAFAgE,EAAMN,EAAQK,CAAQ,EACtBE,EAAWD,EAAI,GAAG,MACdC,GAAYd,EAAO,CACrB,GAAIA,EAAQc,EAAWD,EAAI,OACzB,OAAOD,EAEThE,EAAOgE,EAAW,CACxB,MACM/D,EAAQ+D,EAAW,EAErBA,EAAWpN,IAAYoJ,EAAOC,GAAS,CAAC,CACzC,CAGD,MAAMoK,GAAsB,CAC9B,EAYMwK,GAAO,CAACjP,EAAO3Q,IAAO,CAK1B,MAAM0O,EAAUiC,EAAM,QAAQ,IAAI3Q,EAAG,MAAM,EAC3C,OAAO0O,EAAQqC,GAAYrC,EAAS1O,EAAG,KAAK,CAAC,CAC/C,EAOM6f,GAAwDD,GAOxDE,GAAsB,CAACxR,EAAaI,EAASP,IAAU,CAC3D,MAAMvS,EAAQmV,GAAYrC,EAASP,CAAK,EAClC+B,EAASxB,EAAQ9S,CAAK,EAC5B,OAAIsU,EAAO,GAAG,MAAQ/B,GAAS+B,aAAkByG,GAC/CjI,EAAQ,OAAO9S,EAAQ,EAAG,EAAGoV,GAAU1C,EAAa4B,EAAQ/B,EAAQ+B,EAAO,GAAG,KAAK,CAAC,EAC7EtU,EAAQ,GAEVA,CACT,EAYMgjB,GAAoB,CAACtQ,EAAatO,IAAO,CAC7C,MAAM0O,EAAsCJ,EAAY,IAAI,MAAM,QAAQ,IAAItO,EAAG,MAAM,EACvF,OAAO0O,EAAQoR,GAAoBxR,EAAaI,EAAS1O,EAAG,KAAK,CAAC,CACpE,EAaM+f,GAAkB,CAACzR,EAAaqC,EAAO3Q,IAAO,CAKlD,MAAM0O,EAAUiC,EAAM,QAAQ,IAAI3Q,EAAG,MAAM,EACrCpE,EAAQmV,GAAYrC,EAAS1O,EAAG,KAAK,EACrCkQ,EAASxB,EAAQ9S,CAAK,EAC5B,OAAIoE,EAAG,QAAUkQ,EAAO,GAAG,MAAQA,EAAO,OAAS,GAAKA,EAAO,cAAgBsG,IAC7E9H,EAAQ,OAAO9S,EAAQ,EAAG,EAAGoV,GAAU1C,EAAa4B,EAAQlQ,EAAG,MAAQkQ,EAAO,GAAG,MAAQ,CAAC,CAAC,EAEtFA,CACT,EAWM8P,GAAgB,CAACrP,EAAOT,EAAQ+P,IAAc,CAClD,MAAMvR,EAAyCiC,EAAM,QAAQ,IAAIT,EAAO,GAAG,MAAM,EACjFxB,EAAQqC,GAAYrC,EAASwB,EAAO,GAAG,KAAK,CAAC,EAAI+P,CACnD,EAaMrR,GAAiB,CAACN,EAAaI,EAASwR,EAAYxjB,EAAKX,IAAM,CACnE,GAAIW,IAAQ,EACV,OAEF,MAAMoU,EAAWoP,EAAaxjB,EAC9B,IAAId,EAAQkkB,GAAoBxR,EAAaI,EAASwR,CAAU,EAC5DhQ,EACJ,GACEA,EAASxB,EAAQ9S,GAAO,EACpBkV,EAAWZ,EAAO,GAAG,MAAQA,EAAO,QACtC4P,GAAoBxR,EAAaI,EAASoC,CAAQ,EAEpD/U,EAAEmU,CAAM,QACDtU,EAAQ8S,EAAQ,QAAUA,EAAQ9S,CAAK,EAAE,GAAG,MAAQkV,EAC/D,EA0BA,MAAMqP,EAAY,CAMhB,YAAaxN,EAAKC,EAAQwN,EAAO,CAK/B,KAAK,IAAMzN,EAKX,KAAK,UAAY,IAAIvE,GAKrB,KAAK,YAAc4H,GAAerD,EAAI,KAAK,EAK3C,KAAK,WAAa,IAAI,IAOtB,KAAK,QAAU,IAAI,IAMnB,KAAK,mBAAqB,IAAI,IAI9B,KAAK,cAAgB,GAIrB,KAAK,OAASC,EAKd,KAAK,KAAO,IAAI,IAKhB,KAAK,MAAQwN,EAIb,KAAK,aAAe,IAAI,IAIxB,KAAK,eAAiB,IAAI,IAI1B,KAAK,cAAgB,IAAI,IAIzB,KAAK,uBAAyB,EAC/B,CACH,CAOA,MAAMC,GAAoC,CAACve,EAASwM,IAC9CA,EAAY,UAAU,QAAQ,OAAS,GAAK,CAACgS,GAAQhS,EAAY,WAAY,CAACH,EAAOwB,IAAWrB,EAAY,YAAY,IAAIqB,CAAM,IAAMxB,CAAK,EACxI,IAETgB,GAAsBb,EAAY,SAAS,EAC3CwJ,GAA4BhW,EAASwM,CAAW,EAChD6B,GAAerO,EAASwM,EAAY,SAAS,EACtC,IAWHiS,GAA8B,CAACjS,EAAa/T,EAAMimB,IAAc,CACpE,MAAMxW,EAAOzP,EAAK,OACdyP,IAAS,MAASA,EAAK,GAAG,OAASsE,EAAY,YAAY,IAAItE,EAAK,GAAG,MAAM,GAAK,IAAM,CAACA,EAAK,UAChGG,GAAmBmE,EAAY,QAAS/T,EAAM6P,EAAU,EAAE,IAAIoW,CAAS,CAE3E,EAOMC,GAAsB,CAAC/R,EAASgS,IAAQ,CAC5C,IAAI1V,EAAQ0D,EAAQgS,CAAG,EACnB3V,EAAO2D,EAAQgS,EAAM,CAAC,EACtBzmB,EAAIymB,EACR,KAAOzmB,EAAI,EAAG+Q,EAAQD,EAAMA,EAAO2D,EAAQ,EAAEzU,EAAI,CAAC,EAAG,CACnD,GAAI8Q,EAAK,UAAYC,EAAM,SAAWD,EAAK,cAAgBC,EAAM,aAC3DD,EAAK,UAAUC,CAAK,EAAG,CACrBA,aAAiB2L,GAAQ3L,EAAM,YAAc,MAA0CA,EAAM,OAAQ,KAAK,IAAIA,EAAM,SAAS,IAAMA,GACnGA,EAAM,OAAQ,KAAK,IAAIA,EAAM,UAAgCD,GAEjG,QACD,CAEH,KACD,CACD,MAAMyE,EAASkR,EAAMzmB,EACrB,OAAIuV,GAEFd,EAAQ,OAAOgS,EAAM,EAAIlR,EAAQA,CAAM,EAElCA,CACT,EAOMmR,GAAiB,CAACpS,EAAIoC,EAAOqB,IAAa,CAC9C,SAAW,CAACrC,EAAQiR,CAAW,IAAKrS,EAAG,QAAQ,UAAW,CACxD,MAAMG,EAAyCiC,EAAM,QAAQ,IAAIhB,CAAM,EACvE,QAASkR,EAAKD,EAAY,OAAS,EAAGC,GAAM,EAAGA,IAAM,CACnD,MAAMC,EAAaF,EAAYC,CAAE,EAC3BE,EAAqBD,EAAW,MAAQA,EAAW,IACzD,QACME,EAAKjQ,GAAYrC,EAASoS,EAAW,KAAK,EAAG5Q,EAASxB,EAAQsS,CAAE,EACpEA,EAAKtS,EAAQ,QAAUwB,EAAO,GAAG,MAAQ6Q,EACzC7Q,EAASxB,EAAQ,EAAEsS,CAAE,EACrB,CACA,MAAM9Q,EAASxB,EAAQsS,CAAE,EACzB,GAAIF,EAAW,MAAQA,EAAW,KAAO5Q,EAAO,GAAG,MACjD,MAEEA,aAAkByG,GAAQzG,EAAO,SAAW,CAACA,EAAO,MAAQ8B,EAAS9B,CAAM,GAC7EA,EAAO,GAAGS,EAAO,EAAK,CAEzB,CACF,CACF,CACH,EAMMsQ,GAAoB,CAAC1S,EAAIoC,IAAU,CAGvCpC,EAAG,QAAQ,QAAQ,CAACqS,EAAajR,IAAW,CAC1C,MAAMjB,EAAyCiC,EAAM,QAAQ,IAAIhB,CAAM,EACvE,QAASkR,EAAKD,EAAY,OAAS,EAAGC,GAAM,EAAGA,IAAM,CACnD,MAAMC,EAAaF,EAAYC,CAAE,EAE3BK,EAAwBpd,GAAS4K,EAAQ,OAAS,EAAG,EAAIqC,GAAYrC,EAASoS,EAAW,MAAQA,EAAW,IAAM,CAAC,CAAC,EAC1H,QACME,EAAKE,EAAuBhR,EAASxB,EAAQsS,CAAE,EACnDA,EAAK,GAAK9Q,EAAO,GAAG,OAAS4Q,EAAW,MACxC5Q,EAASxB,EAAQsS,CAAE,EAEnBA,GAAM,EAAIP,GAAoB/R,EAASsS,CAAE,CAE5C,CACL,CAAG,CACH,EAOMG,GAAQ,CAAC5S,EAAIoC,EAAOqB,IAAa,CACrC2O,GAAepS,EAAIoC,EAAOqB,CAAQ,EAClCiP,GAAkB1S,EAAIoC,CAAK,CAC7B,EAMMyQ,GAAsB,CAACC,EAAqBpnB,IAAM,CACtD,GAAIA,EAAIonB,EAAoB,OAAQ,CAClC,MAAM/S,EAAc+S,EAAoBpnB,CAAC,EACnC0Y,EAAMrE,EAAY,IAClBqC,EAAQgC,EAAI,MACZpE,EAAKD,EAAY,UACjBgT,EAAehT,EAAY,cACjC,GAAI,CACFa,GAAsBZ,CAAE,EACxBD,EAAY,WAAa0H,GAAe1H,EAAY,IAAI,KAAK,EAC7DqE,EAAI,KAAK,sBAAuB,CAACrE,EAAaqE,CAAG,CAAC,EAQlD,MAAM7S,EAAK,GAEXwO,EAAY,QAAQ,QAAQ,CAACiT,EAAMC,IACjC1hB,EAAG,KAAK,IAAM,EACR0hB,EAAS,QAAU,MAAQ,CAACA,EAAS,MAAM,UAC7CA,EAAS,cAAclT,EAAaiT,CAAI,CAEpD,CAAS,CACT,EACMzhB,EAAG,KAAK,IAAM,CAEZwO,EAAY,mBAAmB,QAAQ,CAACmT,EAAQlnB,IAAS,CAGnDA,EAAK,KAAK,EAAE,OAAS,IAAMA,EAAK,QAAU,MAAQ,CAACA,EAAK,MAAM,WAChEknB,EAASA,EACN,OAAOjG,GACNA,EAAM,OAAO,QAAU,MAAQ,CAACA,EAAM,OAAO,MAAM,OACnE,EACYiG,EACG,QAAQjG,GAAS,CAChBA,EAAM,cAAgBjhB,EAEtBihB,EAAM,MAAQ,IAC9B,CAAe,EAEHiG,EACG,KAAK,CAACC,EAAQC,IAAWD,EAAO,KAAK,OAASC,EAAO,KAAK,MAAM,EAGnErH,GAA0B/f,EAAK,KAAMknB,EAAQnT,CAAW,EAEpE,CAAS,CACT,CAAO,EACDxO,EAAG,KAAK,IAAM6S,EAAI,KAAK,mBAAoB,CAACrE,EAAaqE,CAAG,CAAC,CAAC,EAC9D9S,GAAQC,EAAI,EAAE,EACVwO,EAAY,wBACdsT,GAA6BtT,CAAW,CAEhD,QAAc,CAGJqE,EAAI,IACNgO,GAAepS,EAAIoC,EAAOgC,EAAI,QAAQ,EAExCsO,GAAkB1S,EAAIoC,CAAK,EAG3BrC,EAAY,WAAW,QAAQ,CAACH,EAAOwB,IAAW,CAChD,MAAMkS,EAAcvT,EAAY,YAAY,IAAIqB,CAAM,GAAK,EAC3D,GAAIkS,IAAgB1T,EAAO,CACzB,MAAMO,EAAyCiC,EAAM,QAAQ,IAAIhB,CAAM,EAEjEmS,EAAiB1f,GAAS2O,GAAYrC,EAASmT,CAAW,EAAG,CAAC,EACpE,QAAS5nB,EAAIyU,EAAQ,OAAS,EAAGzU,GAAK6nB,GACpC7nB,GAAK,EAAIwmB,GAAoB/R,EAASzU,CAAC,CAE1C,CACT,CAAO,EAID,QAASA,EAAIqnB,EAAa,OAAS,EAAGrnB,GAAK,EAAGA,IAAK,CACjD,KAAM,CAAE,OAAA0V,EAAQ,MAAAxB,CAAK,EAAKmT,EAAarnB,CAAC,EAAE,GACpCyU,EAAyCiC,EAAM,QAAQ,IAAIhB,CAAM,EACjEoS,EAAoBhR,GAAYrC,EAASP,CAAK,EAChD4T,EAAoB,EAAIrT,EAAQ,QAC9B+R,GAAoB/R,EAASqT,EAAoB,CAAC,EAAI,GAIxDA,EAAoB,GACtBtB,GAAoB/R,EAASqT,CAAiB,CAEjD,CAOD,GANI,CAACzT,EAAY,OAASA,EAAY,WAAW,IAAIqE,EAAI,QAAQ,IAAMrE,EAAY,YAAY,IAAIqE,EAAI,QAAQ,IAC7GqP,GAAcC,GAAgBC,GAAc,SAAUC,GAAgBC,GAAa,oEAAoE,EACvJzP,EAAI,SAAWlB,MAGjBkB,EAAI,KAAK,0BAA2B,CAACrE,EAAaqE,CAAG,CAAC,EAClDA,EAAI,WAAW,IAAI,QAAQ,EAAG,CAChC,MAAM7Q,EAAU,IAAI6S,GACD0L,GAAkCve,EAASwM,CAAW,GAEvEqE,EAAI,KAAK,SAAU,CAAC7Q,EAAQ,eAAgBwM,EAAY,OAAQqE,EAAKrE,CAAW,CAAC,CAEpF,CACD,GAAIqE,EAAI,WAAW,IAAI,UAAU,EAAG,CAClC,MAAM7Q,EAAU,IAAImP,GACDoP,GAAkCve,EAASwM,CAAW,GAEvEqE,EAAI,KAAK,WAAY,CAAC7Q,EAAQ,eAAgBwM,EAAY,OAAQqE,EAAKrE,CAAW,CAAC,CAEtF,CACD,KAAM,CAAE,aAAA+T,EAAc,cAAAC,EAAe,eAAAC,CAAc,EAAKjU,GACpD+T,EAAa,KAAO,GAAKE,EAAe,KAAO,GAAKD,EAAc,KAAO,KAC3ED,EAAa,QAAQhP,GAAU,CAC7BA,EAAO,SAAWV,EAAI,SAClBU,EAAO,cAAgB,OACzBA,EAAO,aAAeV,EAAI,cAE5BA,EAAI,QAAQ,IAAIU,CAAM,CAChC,CAAS,EACDkP,EAAe,QAAQlP,GAAUV,EAAI,QAAQ,OAAOU,CAAM,CAAC,EAC3DV,EAAI,KAAK,UAAW,CAAC,CAAE,OAAQ2P,EAAe,MAAOD,EAAc,QAASE,CAAc,EAAI5P,EAAKrE,CAAW,CAAC,EAC/GiU,EAAe,QAAQlP,GAAUA,EAAO,QAAS,IAG/CgO,EAAoB,QAAUpnB,EAAI,GACpC0Y,EAAI,qBAAuB,GAC3BA,EAAI,KAAK,uBAAwB,CAACA,EAAK0O,CAAmB,CAAC,GAE3DD,GAAoBC,EAAqBpnB,EAAI,CAAC,CAEjD,CACF,CACH,EAaMyY,EAAW,CAACC,EAAK5W,EAAG6W,EAAS,KAAMwN,EAAQ,KAAS,CACxD,MAAMiB,EAAsB1O,EAAI,qBAChC,IAAI6P,EAAc,GAId/mB,EAAS,KACTkX,EAAI,eAAiB,OACvB6P,EAAc,GACd7P,EAAI,aAAe,IAAIwN,GAAYxN,EAAKC,EAAQwN,CAAK,EACrDiB,EAAoB,KAAK1O,EAAI,YAAY,EACrC0O,EAAoB,SAAW,GACjC1O,EAAI,KAAK,wBAAyB,CAACA,CAAG,CAAC,EAEzCA,EAAI,KAAK,oBAAqB,CAACA,EAAI,aAAcA,CAAG,CAAC,GAEvD,GAAI,CACFlX,EAASM,EAAE4W,EAAI,YAAY,CAC/B,QAAY,CACR,GAAI6P,EAAa,CACf,MAAMC,EAAgB9P,EAAI,eAAiB0O,EAAoB,CAAC,EAChE1O,EAAI,aAAe,KACf8P,GASFrB,GAAoBC,EAAqB,CAAC,CAE7C,CACF,CACD,OAAO5lB,CACT,EAEA,MAAMinB,EAAU,CAKd,YAAaC,EAAWC,EAAY,CAClC,KAAK,WAAaA,EAClB,KAAK,UAAYD,EAIjB,KAAK,KAAO,IAAI,GACjB,CACH,CAMA,MAAME,GAA4B,CAACC,EAAIC,EAAIC,IAAc,CACvD3U,GAAsByU,EAAIE,EAAU,UAAWhZ,GAAQ,CACjDA,aAAgB2M,GAAQoM,EAAG,MAAM,KAAKxoB,GAAQugB,GAAWvgB,EAAMyP,CAAI,CAAC,GACtEiZ,GAASjZ,EAAM,EAAK,CAE1B,CAAG,CACH,EAQMkZ,GAAe,CAACC,EAAa7Z,EAAO8Z,IAAc,CAKtD,IAAI3nB,EAAS,KAKT4nB,EAAM,KACV,MAAM1Q,EAAMwQ,EAAY,IAClBG,EAAQH,EAAY,MA4D1B,GA3DAzQ,EAASC,EAAKrE,GAAe,CAC3B,KAAOhF,EAAM,OAAS,GAAK7N,IAAW,MAAM,CAC1C,MAAMkV,EAAQgC,EAAI,MACZqQ,EAAsC1Z,EAAM,IAAG,EAI/Cia,EAAc,IAAI,IAIlBC,EAAgB,GACtB,IAAIC,EAAkB,GACtBpV,GAAsBC,EAAa0U,EAAU,WAAY9S,GAAU,CACjE,GAAIA,aAAkByG,EAAM,CAC1B,GAAIzG,EAAO,SAAW,KAAM,CAC1B,GAAI,CAAE,KAAAlG,EAAM,KAAAtC,CAAM,EAAG4V,GAAa3M,EAAOT,EAAO,EAAE,EAC9CxI,EAAO,IACTsC,EAAO4U,GAAkBtQ,EAAaoF,EAAS1J,EAAK,GAAG,OAAQA,EAAK,GAAG,MAAQtC,CAAI,CAAC,GAEtFwI,EAASlG,CACV,CACG,CAACkG,EAAO,SAAWoT,EAAM,KAAK/oB,GAAQugB,GAAWvgB,EAA2B2V,CAAM,CAAE,GACtFsT,EAAc,KAAKtT,CAAM,CAE5B,CACT,CAAO,EACD7B,GAAsBC,EAAa0U,EAAU,UAAW9S,GAAU,CAE9DA,aAAkByG,GAClB2M,EAAM,KAAK/oB,GAAQugB,GAAWvgB,EAAM2V,CAAM,CAAC,GAE3C,CAAChB,GAAU8T,EAAU,WAAY9S,EAAO,EAAE,GAE1CqT,EAAY,IAAIrT,CAAM,CAEhC,CAAO,EACDqT,EAAY,QAAQrT,GAAU,CAC5BuT,EAAkBC,GAASpV,EAAa4B,EAAQqT,EAAaP,EAAU,WAAYG,EAAY,uBAAwBA,CAAW,IAAM,MAAQM,CACxJ,CAAO,EAGD,QAASxpB,EAAIupB,EAAc,OAAS,EAAGvpB,GAAK,EAAGA,IAAK,CAClD,MAAM+P,EAAOwZ,EAAcvpB,CAAC,EACxBkpB,EAAY,aAAanZ,CAAI,IAC/BA,EAAK,OAAOsE,CAAW,EACvBmV,EAAkB,GAErB,CACDhoB,EAASgoB,EAAkBT,EAAY,IACxC,CACD1U,EAAY,QAAQ,QAAQ,CAACqV,EAAUppB,IAAS,CAE1CopB,EAAS,IAAI,IAAI,GAAKppB,EAAK,gBAC7BA,EAAK,cAAc,OAAS,EAEpC,CAAK,EACD8oB,EAAM/U,CACP,EAAE6U,CAAW,EACV1nB,GAAU,KAAM,CAClB,MAAMmoB,EAAqBP,EAAI,mBAC/BF,EAAY,KAAK,oBAAqB,CAAC,CAAE,UAAW1nB,EAAQ,KAAM2nB,EAAW,mBAAAQ,GAAsBT,CAAW,CAAC,CAChH,CACD,OAAO1nB,CACT,EAwBA,MAAMooB,WAAoB5Z,EAAW,CAKnC,YAAa6Z,EAAW,CACtB,eAAAC,EAAiB,IACjB,mBAAAC,EAAqBX,GAAO,GAC5B,aAAAY,EAAe,IAAM,GACrB,eAAAC,EAAiB,IAAI,IAAI,CAAC,IAAI,CAAC,EAC/B,uBAAAC,EAAyB,GACzB,IAAAxR,EAA0B/N,GAAckf,CAAS,EAAIA,EAAU,CAAC,EAAE,IAAMA,EAAU,GACnF,EAAG,GAAI,CACN,QAIA,KAAK,MAAQ,GACb,KAAK,IAAMnR,EACX,KAAK,WAAWmR,CAAS,EACzB,KAAK,aAAeG,EACpBC,EAAe,IAAI,IAAI,EACvB,KAAK,eAAiBA,EACtB,KAAK,mBAAqBF,EAI1B,KAAK,UAAY,GAIjB,KAAK,UAAY,GAMjB,KAAK,QAAU,GACf,KAAK,QAAU,GACf,KAAK,WAAa,EAClB,KAAK,uBAAyBG,EAC9B,KAAK,eAAiBJ,EAItB,KAAK,wBAA0BzV,GAAe,CAE5C,GACE,CAAC,KAAK,mBAAmBA,CAAW,GACpC,CAAC,KAAK,MAAM,KAAK/T,GAAQ+T,EAAY,mBAAmB,IAAI/T,CAAI,CAAC,GAChE,CAAC,KAAK,eAAe,IAAI+T,EAAY,MAAM,IAAM,CAACA,EAAY,QAAU,CAAC,KAAK,eAAe,IAAIA,EAAY,OAAO,WAAW,GAEhI,OAEF,MAAM8V,EAAU,KAAK,QACfC,EAAU,KAAK,QACf/a,EAAQ8a,EAAU,KAAK,UAAY,KAAK,UAC1CA,EACF,KAAK,cAAa,EACRC,GAEV,KAAK,MAAM,GAAO,EAAI,EAExB,MAAMzB,EAAa,IAAIxU,GACvBE,EAAY,WAAW,QAAQ,CAACgW,EAAU3U,IAAW,CACnD,MAAM4U,EAAajW,EAAY,YAAY,IAAIqB,CAAM,GAAK,EACpDjT,EAAM4nB,EAAWC,EACnB7nB,EAAM,GACRmT,GAAe+S,EAAYjT,EAAQ4U,EAAY7nB,CAAG,CAE5D,CAAO,EACD,MAAM8nB,EAAMC,KACZ,IAAIC,EAAS,GACb,GAAI,KAAK,WAAa,GAAKF,EAAM,KAAK,WAAa,KAAK,gBAAkBlb,EAAM,OAAS,GAAK,CAAC8a,GAAW,CAACC,EAAS,CAElH,MAAMM,EAASrb,EAAMA,EAAM,OAAS,CAAC,EACrCqb,EAAO,UAAYrV,GAAgB,CAACqV,EAAO,UAAWrW,EAAY,SAAS,CAAC,EAC5EqW,EAAO,WAAarV,GAAgB,CAACqV,EAAO,WAAY/B,CAAU,CAAC,CAC3E,MAEQtZ,EAAM,KAAK,IAAIoZ,GAAUpU,EAAY,UAAWsU,CAAU,CAAC,EAC3D8B,EAAS,GAEP,CAACN,GAAW,CAACC,IACf,KAAK,WAAaG,GAGpBnW,GAAsBC,EAAaA,EAAY,UAAwCtE,GAAQ,CACzFA,aAAgB2M,GAAQ,KAAK,MAAM,KAAKpc,GAAQugB,GAAWvgB,EAAMyP,CAAI,CAAC,GACxEiZ,GAASjZ,EAAM,EAAI,CAE7B,CAAO,EACD,MAAM4a,EAAc,CAAC,CAAE,UAAWtb,EAAMA,EAAM,OAAS,CAAC,EAAG,OAAQgF,EAAY,OAAQ,KAAM8V,EAAU,OAAS,OAAQ,mBAAoB9V,EAAY,oBAAsB,IAAI,EAC9KoW,EACF,KAAK,KAAK,mBAAoBE,CAAW,EAEzC,KAAK,KAAK,qBAAsBA,CAAW,CAEnD,EACI,KAAK,IAAI,GAAG,mBAAoB,KAAK,uBAAuB,EAC5D,KAAK,IAAI,GAAG,UAAW,IAAM,CAC3B,KAAK,QAAO,CAClB,CAAK,CACF,CAKD,WAAYC,EAAQ,CAClBA,EAASjgB,GAAcigB,CAAM,EAAIA,EAAS,CAACA,CAAM,EACjDA,EAAO,QAAQC,GAAS,CAClB,KAAK,MAAM,MAAMC,GAAMA,IAAOD,CAAK,IACjCA,EAAM,MAAQ,KAAK,KAAKE,GAAa,0BAA0B,EACnE,KAAK,MAAM,KAAKF,CAAK,EAE7B,CAAK,CACF,CAKD,iBAAkBlS,EAAQ,CACxB,KAAK,eAAe,IAAIA,CAAM,CAC/B,CAKD,oBAAqBA,EAAQ,CAC3B,KAAK,eAAe,OAAOA,CAAM,CAClC,CAED,MAAOqS,EAAiB,GAAMC,EAAiB,GAAM,EAC9CD,GAAkB,KAAK,QAAO,GAAQC,GAAkB,KAAK,QAAO,IACvE,KAAK,IAAI,SAASpC,GAAM,CAClBmC,IACF,KAAK,UAAU,QAAQjb,GAAQ6Y,GAA0BC,EAAI,KAAM9Y,CAAI,CAAC,EACxE,KAAK,UAAY,IAEfkb,IACF,KAAK,UAAU,QAAQlb,GAAQ6Y,GAA0BC,EAAI,KAAM9Y,CAAI,CAAC,EACxE,KAAK,UAAY,IAEnB,KAAK,KAAK,gBAAiB,CAAC,CAAE,iBAAkBib,EAAgB,iBAAkBC,CAAgB,EAAC,CAC3G,CAAO,CAEJ,CAsBD,eAAiB,CACf,KAAK,WAAa,CACnB,CAOD,MAAQ,CACN,KAAK,QAAU,GACf,IAAIxmB,EACJ,GAAI,CACFA,EAAMwkB,GAAa,KAAM,KAAK,UAAW,MAAM,CACrD,QAAc,CACR,KAAK,QAAU,EAChB,CACD,OAAOxkB,CACR,CAOD,MAAQ,CACN,KAAK,QAAU,GACf,IAAIA,EACJ,GAAI,CACFA,EAAMwkB,GAAa,KAAM,KAAK,UAAW,MAAM,CACrD,QAAc,CACR,KAAK,QAAU,EAChB,CACD,OAAOxkB,CACR,CAOD,SAAW,CACT,OAAO,KAAK,UAAU,OAAS,CAChC,CAOD,SAAW,CACT,OAAO,KAAK,UAAU,OAAS,CAChC,CAED,SAAW,CACT,KAAK,eAAe,OAAO,IAAI,EAC/B,KAAK,IAAI,IAAI,mBAAoB,KAAK,uBAAuB,EAC7D,MAAM,QAAO,CACd,CACH,CAKA,SAAWymB,GAA2Brf,EAAS,CAC7C,MAAMsQ,EAAoB7F,EAAqBzK,EAAQ,WAAW,EAClE,QAAS7L,EAAI,EAAGA,EAAImc,EAAmBnc,IAAK,CAC1C,MAAMoc,EAAkB9F,EAAqBzK,EAAQ,WAAW,EAC1D6J,EAAS7J,EAAQ,aACvB,IAAIqI,EAAQoC,EAAqBzK,EAAQ,WAAW,EACpD,QAAS7L,EAAI,EAAGA,EAAIoc,EAAiBpc,IAAK,CACxC,MAAM2a,EAAO9O,EAAQ,WAErB,GAAI8O,IAAS,GAAI,CACf,MAAMlY,EAAM6T,EAAqBzK,EAAQ,WAAW,EACpD,MAAM,IAAI2Q,GAAK/C,EAAS/D,EAAQxB,CAAK,EAAGzR,CAAG,EAC3CyR,GAASzR,CACV,SAAW6Z,GAAe3B,EAAa,CACtC,MAAM8B,GAAsB9B,GAAQ9R,GAAcL,OAAkB,EAK9DyN,EAAS,IAAIyG,EACjBjD,EAAS/D,EAAQxB,CAAK,EACtB,MACCyG,EAAOnS,MAAiBA,GAAcqD,EAAQ,WAAY,EAAG,KAC9D,MACC8O,EAAO9R,MAAiBA,GAAcgD,EAAQ,YAAa,EAAG,KAE/D4Q,EAAsB5Q,EAAQ,iBAAmBA,EAAQ,aAAeA,EAAQ,WAAU,EAAM,KAChG4Q,IAAuB9B,EAAOgC,MAAiBA,GAAc9Q,EAAQ,WAAU,EAAK,KACpF+Q,GAAgB/Q,EAAS8O,CAAI,CACvC,EACQ,MAAM1E,EACN/B,GAAS+B,EAAO,MACxB,KAAa,CACL,MAAMxT,EAAMoJ,EAAQ,UACpB,MAAM,IAAI0Q,GAAG9C,EAAS/D,EAAQxB,CAAK,EAAGzR,CAAG,EACzCyR,GAASzR,CACV,CACF,CACF,CACH,CAEA,MAAM4iB,EAAiB,CAKrB,YAAaxZ,EAASsf,EAAa,CACjC,KAAK,IAAMD,GAA0Brf,CAAO,EAI5C,KAAK,KAAO,KACZ,KAAK,KAAO,GACZ,KAAK,YAAcsf,EACnB,KAAK,KAAI,CACV,CAKD,MAAQ,CAEN,GACE,KAAK,KAAO,KAAK,IAAI,KAAM,EAAC,OAAS,WAC9B,KAAK,aAAe,KAAK,OAAS,MAAQ,KAAK,KAAK,cAAgB3O,IAC7E,OAAO,KAAK,IACb,CACH,CAMA,MAAM4O,GAAY5M,GAAU6M,GAAY7M,EAAQhF,EAAe,EAOzD6R,GAAc,CAAC7M,EAAQG,EAAW3E,KAAoB,CAC1D,MAAMvF,EAAU,GACV0Q,EAAgB,IAAIxG,EAASL,EAAuBE,CAAM,CAAC,EAC3D4G,EAAc,IAAIC,GAAiBF,EAAe,EAAK,EAC7D,QAASG,EAAOF,EAAY,KAAME,IAAS,KAAMA,EAAOF,EAAY,OAClE3Q,EAAQ,KAAK6Q,CAAI,EAEnByC,GAAc,YAAatT,CAAO,EAClC,MAAMH,EAAK8B,GAAc+O,CAAa,EACtC4C,GAAc,cAAezT,CAAE,CACjC,EAMMgX,GAAgB9M,GAAW+M,GAAe/M,EAAQhF,EAAe,EAOjE+R,GAAiB,CAAC/M,EAAQG,EAAW3E,KAAoB,CAC7D,MAAMvF,EAAU,GACV0Q,EAAgB,IAAIxG,EAASL,EAAuBE,CAAM,CAAC,EAC3D4G,EAAc,IAAIC,GAAiBF,EAAe,EAAK,EAC7D,QAASG,EAAOF,EAAY,KAAME,IAAS,KAAMA,EAAOF,EAAY,OAClE3Q,EAAQ,KAAK6Q,CAAI,EAEnB,MAAO,CACL,QAAA7Q,EACA,GAAI2B,GAAc+O,CAAa,CAChC,CACH,EAEA,MAAMqG,EAAiB,CAIrB,YAAa3jB,EAAS,CACpB,KAAK,WAAa,EAClB,KAAK,WAAa,EAClB,KAAK,QAAU,EACf,KAAK,QAAUA,EAWf,KAAK,cAAgB,EACtB,CACH,CAMA,MAAMuX,GAAeF,GAAWf,GAAee,EAAS1F,GAAiBkB,EAAe,EAQlF+Q,GAAgC,CAACjN,EAAQkN,EAAWxQ,GAAayD,EAAW3E,KAAoB,CACpG,MAAMnS,EAAU,IAAI6jB,EACdvG,EAAgB,IAAIE,GAAiB,IAAI1G,EAASL,EAAuBE,CAAM,CAAC,EAAG,EAAK,EAC9F,IAAI8G,EAAOH,EAAc,KACzB,GAAIG,IAAS,KAAM,CACjB,IAAIN,EAAO,EACP2G,EAAarG,EAAK,GAAG,OACrBsG,EAAetG,EAAK,GAAG,QAAU,EACjCuG,EAAYD,EAAe,EAAItG,EAAK,GAAG,MAAQA,EAAK,OACxD,KAAOA,IAAS,KAAMA,EAAOH,EAAc,KAAI,EACzCwG,IAAerG,EAAK,GAAG,SACrBuG,IAAc,IAChB7G,IAGA7O,EAAsBtO,EAAQ,YAAa8jB,CAAU,EACrDxV,EAAsBtO,EAAQ,YAAagkB,CAAS,GAEtDF,EAAarG,EAAK,GAAG,OACrBuG,EAAY,EACZD,EAAetG,EAAK,GAAG,QAAU,GAG/BA,EAAK,cAAgB9I,KACvBoP,EAAe,IAEZA,IACHC,EAAYvG,EAAK,GAAG,MAAQA,EAAK,QAIjCuG,IAAc,IAChB7G,IACA7O,EAAsBtO,EAAQ,YAAa8jB,CAAU,EACrDxV,EAAsBtO,EAAQ,YAAagkB,CAAS,GAGtD,MAAMC,EAAMtR,KACZrE,SAAsB2V,EAAK9G,CAAI,EAC/B+G,GAA4BD,EAAKjkB,EAAQ,WAAW,EACpDA,EAAQ,YAAcikB,EACfjkB,EAAQ,aAAc,CACjC,KACIsO,UAAsBtO,EAAQ,YAAa,CAAC,EACrCA,EAAQ,aAAc,CAEjC,EAMMmkB,GAA8BxN,GAAUiN,GAA8BjN,EAAQjE,GAAaf,EAAe,EAO1GyS,GAAoB,CAACzN,EAAQG,EAAW3E,KAAoB,CAIhE,MAAM1X,EAAO,IAAI,IAIX4pB,EAAK,IAAI,IACT/G,EAAgB,IAAIE,GAAiB,IAAI1G,EAASL,EAAuBE,CAAM,CAAC,EAAG,EAAK,EAC9F,IAAI8G,EAAOH,EAAc,KACzB,GAAIG,IAAS,KAAM,CACjB,IAAIqG,EAAarG,EAAK,GAAG,OACrBuG,EAAYvG,EAAK,GAAG,MAGxB,IADAhjB,EAAK,IAAIqpB,EAAYE,CAAS,EACvBvG,IAAS,KAAMA,EAAOH,EAAc,KAAI,EACzCwG,IAAerG,EAAK,GAAG,SAGzB4G,EAAG,IAAIP,EAAYE,CAAS,EAE5BvpB,EAAK,IAAIgjB,EAAK,GAAG,OAAQA,EAAK,GAAG,KAAK,EAEtCqG,EAAarG,EAAK,GAAG,QAEvBuG,EAAYvG,EAAK,GAAG,MAAQA,EAAK,OAGnC4G,EAAG,IAAIP,EAAYE,CAAS,CAC7B,CACD,MAAO,CAAE,KAAAvpB,EAAM,GAAA4pB,CAAI,CACrB,EAMMC,GAAkB3N,GAAUyN,GAAkBzN,EAAQhF,EAAe,EAUrE4S,GAAc,CAACtb,EAAMrD,IAAS,CAClC,GAAIqD,EAAK,cAAgByL,GAAI,CAC3B,KAAM,CAAE,OAAA7G,EAAQ,MAAAxB,GAAUpD,EAAK,GAC/B,OAAO,IAAIyL,GAAG9C,EAAS/D,EAAQxB,EAAQzG,CAAI,EAAGqD,EAAK,OAASrD,CAAI,CACpE,SAAaqD,EAAK,cAAgB0L,GAAM,CACpC,KAAM,CAAE,OAAA9G,EAAQ,MAAAxB,GAAUpD,EAAK,GAC/B,OAAO,IAAI0L,GAAK/C,EAAS/D,EAAQxB,EAAQzG,CAAI,EAAGqD,EAAK,OAASrD,CAAI,CACtE,KAAS,CACL,MAAM4e,EAAgCvb,EAChC,CAAE,OAAA4E,EAAQ,MAAAxB,GAAUmY,EAAS,GACnC,OAAO,IAAI3P,EACTjD,EAAS/D,EAAQxB,EAAQzG,CAAI,EAC7B,KACAgM,EAAS/D,EAAQxB,EAAQzG,EAAO,CAAC,EACjC,KACA4e,EAAS,YACTA,EAAS,OACTA,EAAS,UACTA,EAAS,QAAQ,OAAO5e,CAAI,CAC7B,CACF,CACH,EAWM0Q,GAAiB,CAACe,EAASP,EAAW3E,GAAiB0R,EAAW1U,KAAoB,CAC1F,GAAIkI,EAAQ,SAAW,EACrB,OAAOA,EAAQ,CAAC,EAElB,MAAMoN,EAAiBpN,EAAQ,IAAIV,GAAU,IAAIG,EAASL,EAAuBE,CAAM,CAAC,CAAC,EACzF,IAAI+N,EAAqBD,EAAe,IAAIzgB,GAAW,IAAIwZ,GAAiBxZ,EAAS,EAAI,CAAC,EAMtF2gB,EAAY,KAEhB,MAAMC,EAAgB,IAAIf,EAEpBgB,EAAoB,IAAIlB,GAAiBiB,CAAa,EAM5D,KAEEF,EAAqBA,EAAmB,OAAOI,GAAOA,EAAI,OAAS,IAAI,EACvEJ,EAAmB,KACuB,CAACK,EAAMC,IAAS,CACtD,GAAID,EAAK,KAAK,GAAG,SAAWC,EAAK,KAAK,GAAG,OAAQ,CAC/C,MAAMC,EAAYF,EAAK,KAAK,GAAG,MAAQC,EAAK,KAAK,GAAG,MACpD,OAAIC,IAAc,EAETF,EAAK,KAAK,cAAgBC,EAAK,KAAK,YACvC,EACAD,EAAK,KAAK,cAAgBpQ,GAAO,EAAI,GAElCsQ,CAEnB,KACU,QAAOD,EAAK,KAAK,GAAG,OAASD,EAAK,KAAK,GAAG,MAE7C,CACP,EACQL,EAAmB,SAAW,GApBvB,CAuBX,MAAMQ,EAAcR,EAAmB,CAAC,EAGlCS,EAAwCD,EAAY,KAAM,GAAG,OAEnE,GAAIP,IAAc,KAAM,CACtB,IAAIlH,EAAwCyH,EAAY,KACpDE,EAAW,GAIf,KAAO3H,IAAS,MAAQA,EAAK,GAAG,MAAQA,EAAK,QAAUkH,EAAU,OAAO,GAAG,MAAQA,EAAU,OAAO,QAAUlH,EAAK,GAAG,QAAUkH,EAAU,OAAO,GAAG,QAClJlH,EAAOyH,EAAY,OACnBE,EAAW,GAEb,GACE3H,IAAS,MACTA,EAAK,GAAG,SAAW0H,GAClBC,GAAY3H,EAAK,GAAG,MAAQkH,EAAU,OAAO,GAAG,MAAQA,EAAU,OAAO,OAE1E,SAGF,GAAIQ,IAAgBR,EAAU,OAAO,GAAG,OACtCU,GAA8BR,EAAmBF,EAAU,OAAQA,EAAU,MAAM,EACnFA,EAAY,CAAE,OAAQlH,EAAM,OAAQ,CAAC,EACrCyH,EAAY,KAAI,UAEZP,EAAU,OAAO,GAAG,MAAQA,EAAU,OAAO,OAASlH,EAAK,GAAG,MAEhE,GAAIkH,EAAU,OAAO,cAAgBhQ,GAEnCgQ,EAAU,OAAO,OAASlH,EAAK,GAAG,MAAQA,EAAK,OAASkH,EAAU,OAAO,GAAG,UACvE,CACLU,GAA8BR,EAAmBF,EAAU,OAAQA,EAAU,MAAM,EACnF,MAAM/e,EAAO6X,EAAK,GAAG,MAAQkH,EAAU,OAAO,GAAG,MAAQA,EAAU,OAAO,OAK1EA,EAAY,CAAE,OADC,IAAIhQ,GAAK/C,EAASuT,EAAaR,EAAU,OAAO,GAAG,MAAQA,EAAU,OAAO,MAAM,EAAG/e,CAAI,EAClF,OAAQ,CAAC,CAChC,KACI,CACL,MAAMA,EAAO+e,EAAU,OAAO,GAAG,MAAQA,EAAU,OAAO,OAASlH,EAAK,GAAG,MACvE7X,EAAO,IACL+e,EAAU,OAAO,cAAgBhQ,GAEnCgQ,EAAU,OAAO,QAAU/e,EAE3B6X,EAAO8G,GAAY9G,EAAM7X,CAAI,GAG5B+e,EAAU,OAAO,UAA8BlH,CAAI,IACtD4H,GAA8BR,EAAmBF,EAAU,OAAQA,EAAU,MAAM,EACnFA,EAAY,CAAE,OAAQlH,EAAM,OAAQ,CAAC,EACrCyH,EAAY,KAAI,EAEnB,CAET,MACMP,EAAY,CAAE,OAAkCO,EAAY,KAAO,OAAQ,GAC3EA,EAAY,KAAI,EAElB,QACMvZ,EAAOuZ,EAAY,KACvBvZ,IAAS,MAAQA,EAAK,GAAG,SAAWwZ,GAAexZ,EAAK,GAAG,QAAUgZ,EAAU,OAAO,GAAG,MAAQA,EAAU,OAAO,QAAUhZ,EAAK,cAAgBgJ,GACjJhJ,EAAOuZ,EAAY,KAAM,EAEzBG,GAA8BR,EAAmBF,EAAU,OAAQA,EAAU,MAAM,EACnFA,EAAY,CAAE,OAAQhZ,EAAM,OAAQ,CAAC,CAExC,CACGgZ,IAAc,OAChBU,GAA8BR,EAAmBF,EAAU,OAAQA,EAAU,MAAM,EACnFA,EAAY,MAEdW,GAAwBT,CAAiB,EAEzC,MAAMpX,EAAMgX,EAAe,IAAIzgB,GAAWuK,GAAcvK,CAAO,CAAC,EAC1DyI,EAAKe,GAAgBC,CAAG,EAC9B,OAAAY,GAAeuW,EAAenY,CAAE,EACzBmY,EAAc,aAAc,CACrC,EAQMtN,GAAe,CAACX,EAAQmB,EAAIhB,EAAW3E,GAAiB0R,EAAW1U,KAAoB,CAC3F,MAAM3V,EAAQ4d,GAAkBU,CAAE,EAC5B9X,EAAU,IAAI6jB,EACd0B,EAAmB,IAAI5B,GAAiB3jB,CAAO,EAC/CgE,EAAU,IAAI8S,EAASL,EAAuBE,CAAM,CAAC,EACrDlR,EAAS,IAAI+X,GAAiBxZ,EAAS,EAAK,EAClD,KAAOyB,EAAO,MAAM,CAClB,MAAMgY,EAAOhY,EAAO,KACdqe,EAAarG,EAAK,GAAG,OACrB+H,EAAUhsB,EAAM,IAAIsqB,CAAU,GAAK,EACzC,GAAIre,EAAO,KAAK,cAAgBkP,GAAM,CAEpClP,EAAO,KAAI,EACX,QACD,CACD,GAAIgY,EAAK,GAAG,MAAQA,EAAK,OAAS+H,EAGhC,IAFAH,GAA8BE,EAAkB9H,EAAMnd,GAASklB,EAAU/H,EAAK,GAAG,MAAO,CAAC,CAAC,EAC1FhY,EAAO,KAAI,EACJA,EAAO,MAAQA,EAAO,KAAK,GAAG,SAAWqe,GAC9CuB,GAA8BE,EAAkB9f,EAAO,KAAM,CAAC,EAC9DA,EAAO,KAAI,MAIb,MAAOA,EAAO,MAAQA,EAAO,KAAK,GAAG,SAAWqe,GAAcre,EAAO,KAAK,GAAG,MAAQA,EAAO,KAAK,QAAU+f,GACzG/f,EAAO,KAAI,CAGhB,CACD6f,GAAwBC,CAAgB,EAExC,MAAM9Y,EAAK8B,GAAcvK,CAAO,EAChC,OAAAqK,GAAerO,EAASyM,CAAE,EACnBzM,EAAQ,aAAc,CAC/B,EAMMylB,GAAa,CAAC9O,EAAQmB,IAAOR,GAAaX,EAAQmB,EAAInG,GAAiBkB,EAAe,EAKtF6S,GAAwBC,GAAc,CACtCA,EAAW,QAAU,IACvBA,EAAW,cAAc,KAAK,CAAE,QAASA,EAAW,QAAS,YAAa/S,GAAsB+S,EAAW,QAAQ,WAAW,CAAG,GACjIA,EAAW,QAAQ,YAAchT,KACjCgT,EAAW,QAAU,EAEzB,EAOMN,GAAgC,CAACM,EAAYvX,EAAQyH,IAAW,CAEhE8P,EAAW,QAAU,GAAKA,EAAW,aAAevX,EAAO,GAAG,QAChEsX,GAAsBC,CAAU,EAE9BA,EAAW,UAAY,IACzBA,EAAW,WAAavX,EAAO,GAAG,OAElCuX,EAAW,QAAQ,YAAYvX,EAAO,GAAG,MAAM,EAE/CE,EAAsBqX,EAAW,QAAQ,YAAavX,EAAO,GAAG,MAAQyH,CAAM,GAEhFzH,EAAO,MAAMuX,EAAW,QAAS9P,CAAM,EACvC8P,EAAW,SACb,EAQML,GAA2BK,GAAe,CAC9CD,GAAsBC,CAAU,EAGhC,MAAMC,EAAcD,EAAW,QAAQ,YAQvCrX,EAAsBsX,EAAaD,EAAW,cAAc,MAAM,EAElE,QAASxtB,EAAI,EAAGA,EAAIwtB,EAAW,cAAc,OAAQxtB,IAAK,CACxD,MAAM0tB,EAAcF,EAAW,cAAcxtB,CAAC,EAK9CmW,EAAsBsX,EAAaC,EAAY,OAAO,EAEtDlS,GAAyBiS,EAAaC,EAAY,WAAW,CAC9D,CACH,EAQMC,GAAsB,CAACnP,EAAQoP,EAAkBjP,EAAU+M,IAAa,CAC5E,MAAMvG,EAAgB,IAAIxG,EAASL,EAAuBE,CAAM,CAAC,EAC3D4G,EAAc,IAAIC,GAAiBF,EAAe,EAAK,EACvDsH,EAAgB,IAAIf,EACpB8B,EAAa,IAAIhC,GAAiBiB,CAAa,EACrD,QAASnH,EAAOF,EAAY,KAAME,IAAS,KAAMA,EAAOF,EAAY,OAClE8H,GAA8BM,EAAYI,EAAiBtI,CAAI,EAAG,CAAC,EAErE6H,GAAwBK,CAAU,EAClC,MAAMlZ,EAAK8B,GAAc+O,CAAa,EACtC,OAAAjP,GAAeuW,EAAenY,CAAE,EACzBmY,EAAc,aAAc,CACrC,EAYMoB,GAAmB,CAAC,CAAE,WAAAC,EAAa,GAAM,QAAAC,EAAU,GAAM,KAAAC,EAAO,EAAM,EAAG,KAAO,CACpF,IAAIhuB,EAAI,EACR,MAAMiuB,EAAche,KACdie,EAAgBje,KAChBke,EAAqBle,KACrBme,EAAuBne,KAC7B,OAAAme,EAAqB,IAAI,KAAM,IAAI,EAK5BC,GAAS,CACd,OAAQA,EAAM,YAAW,CACvB,KAAK9R,GACL,KAAKC,GACH,OAAO6R,EACT,KAAK3R,EAAM,CACT,MAAM3M,EAA4Bse,EAC5BhV,EAAUtJ,EAAK,QACrB,OAAQsJ,EAAQ,YAAW,CACzB,KAAKiV,GACH,MACF,KAAKhL,GAAa,CAChB,GAAI0K,EAAM,CACR,MAAM1tB,EAAmC+Y,EAAS,KAC9C/Y,aAAgBiuB,KAClBjuB,EAAK,SAAW4P,GAAmBge,EAAe5tB,EAAK,SAAU,IAAM,QAAUN,CAAC,GAEhFM,aAAgBkuB,KAClBluB,EAAK,SAAW4P,GAAmBge,EAAe5tB,EAAK,SAAU,IAAM,QAAUN,CAAC,EAErF,CACD,KACD,CACD,KAAKyuB,GAAY,CACf,MAAM9d,EAA+B0I,EACrC1I,EAAE,IAAMA,EAAE,IAAI,IAAI,IAAM3Q,CAAC,EACzB,KACD,CACD,KAAK0uB,GAAe,CAClB,MAAM/d,EAAkC0I,EACxC1I,EAAE,QAAU,IAAI,WAAW,CAAC3Q,CAAC,CAAC,EAC9B,KACD,CACD,KAAK2uB,GAAY,CACf,MAAMhe,EAA+B0I,EACjC0U,IACFpd,EAAE,KAAO,GACTA,EAAE,IAAI,KAAO3Q,EAAI,IAEnB,KACD,CACD,KAAK4uB,GAAc,CACjB,MAAMje,EAAiC0I,EACvC1I,EAAE,MAAQ,GACV,KACD,CACD,KAAKke,EAAe,CAClB,MAAMle,EAAkC0I,EACpCyU,IACFnd,EAAE,IAAMT,GAAmBie,EAAoBxd,EAAE,IAAK,IAAM3Q,EAAI,EAAE,EAClE2Q,EAAE,MAAQT,GAAmBke,EAAsBzd,EAAE,MAAO,KAAO,CAAE,EAAA3Q,CAAG,EAAC,GAE3E,KACD,CACD,KAAK8uB,GAAa,CAChB,MAAMne,EAAgC0I,EACtC1I,EAAE,IAAMA,EAAE,IAAI,IAAI,IAAM3Q,CAAC,EACzB,KACD,CACD,KAAK+uB,GAAe,CAClB,MAAMpe,EAAkC0I,EACxC1I,EAAE,IAAMqe,GAAehvB,EAAI,GAAM,GAAI2Q,EAAE,IAAI,MAAM,EACjD,KACD,CACD,QAEEwK,IACH,CACD,OAAIpL,EAAK,YACPA,EAAK,UAAYG,GAAmB+d,EAAale,EAAK,UAAW,IAAM/P,EAAI,EAAE,GAE/EA,IACOquB,CACR,CACD,QAEElT,IACH,CACF,CACH,EAaM8T,GAAkB,CAACzQ,EAAQ0Q,IAASvB,GAAoBnP,EAAQqP,GAAiBqB,CAAI,EAAG1V,GAAiBkB,EAAe,EAMxHyU,GAAoB,CAAC3Q,EAAQ0Q,IAASvB,GAAoBnP,EAAQqP,GAAiBqB,CAAI,EAAGlV,GAAiBhD,EAAe,EAK1HoY,GAA4B5Q,GAAUmP,GAAoBnP,EAAQ6Q,GAAM7V,GAAiBxC,EAAe,EAKxGqI,GAA4Bb,GAAUmP,GAAoBnP,EAAQ6Q,GAAMrV,GAAiBU,EAAe,EAExG4U,GAAsB,8DAM5B,MAAMC,EAAO,CAKX,YAAalvB,EAAQgU,EAAa,CAKhC,KAAK,OAAShU,EAKd,KAAK,cAAgBA,EAKrB,KAAK,YAAcgU,EAInB,KAAK,SAAW,KAIhB,KAAK,MAAQ,KAIb,KAAK,OAAS,KAId,KAAK,MAAQ,IACd,CAeD,IAAI,MAAQ,CACV,OAAO,KAAK,QAAU,KAAK,MAAQmb,GAAU,KAAK,cAAe,KAAK,MAAM,EAC7E,CAUD,QAASvZ,EAAQ,CACf,OAAOhB,GAAU,KAAK,YAAY,UAAWgB,EAAO,EAAE,CACvD,CAKD,IAAI,MAAQ,CACV,GAAI,KAAK,QAAU,KAAM,CACvB,GAAI,KAAK,YAAY,IAAI,qBAAqB,SAAW,EACvD,MAAMzK,GAAa8jB,EAAmB,EAExC,MAAMnqB,EAAO,IAAI,IACX9E,EAAS,KAAK,OAC2B,KAAK,YAAY,QAAQ,IAAIA,CAAM,EAC1E,QAAQiE,GAAO,CACrB,GAAIA,IAAQ,KAAM,CAChB,MAAMyL,EAA4B1P,EAAO,KAAK,IAAIiE,CAAG,EAIrD,IAAImrB,EACAC,EACJ,GAAI,KAAK,KAAK3f,CAAI,EAAG,CACnB,IAAI4f,EAAO5f,EAAK,KAChB,KAAO4f,IAAS,MAAQ,KAAK,KAAKA,CAAI,GACpCA,EAAOA,EAAK,KAEd,GAAI,KAAK,QAAQ5f,CAAI,EACnB,GAAI4f,IAAS,MAAQ,KAAK,QAAQA,CAAI,EACpCF,EAAS,SACTC,EAAWE,GAAWD,EAAK,QAAQ,WAAY,OAE/C,aAGEA,IAAS,MAAQ,KAAK,QAAQA,CAAI,GACpCF,EAAS,SACTC,EAAWE,GAAWD,EAAK,QAAQ,WAAY,KAE/CF,EAAS,MACTC,EAAW,OAG3B,SACgB,KAAK,QAAQ3f,CAAI,EACnB0f,EAAS,SACTC,EAAWE,GAA+B7f,EAAK,QAAQ,WAAY,OAEnE,QAGJ5K,EAAK,IAAIb,EAAK,CAAE,OAAAmrB,EAAQ,SAAAC,CAAU,EACnC,CACT,CAAO,EACD,KAAK,MAAQvqB,CACd,CACD,OAAO,KAAK,KACb,CAUD,IAAI,OAAS,CACX,OAAO,KAAK,QAAQ,KACrB,CAUD,KAAM8Q,EAAQ,CACZ,OAAOA,EAAO,GAAG,QAAU,KAAK,YAAY,YAAY,IAAIA,EAAO,GAAG,MAAM,GAAK,EAClF,CAUD,IAAI,SAAW,CACb,IAAI4Z,EAAU,KAAK,SACnB,GAAIA,IAAY,KAAM,CACpB,GAAI,KAAK,YAAY,IAAI,qBAAqB,SAAW,EACvD,MAAMrkB,GAAa8jB,EAAmB,EAExC,MAAMjvB,EAAS,KAAK,OACdyvB,EAAQ3f,KACR4f,EAAU5f,KAIV6f,EAAQ,GAQd,GAPAH,EAAU,CACR,MAAAC,EACA,QAAAC,EACA,MAAAC,EACA,KAAM,KAAK,IACnB,EACqD,KAAK,YAAY,QAAQ,IAAI3vB,CAAM,EACtE,IAAI,IAAI,EAAG,CAIrB,IAAIqqB,EAAS,KACb,MAAMuF,EAAS,IAAM,CACfvF,GACFsF,EAAM,KAAKtF,CAAM,CAE7B,EACQ,QAAS3a,EAAO1P,EAAO,OAAQ0P,IAAS,KAAMA,EAAOA,EAAK,MACpDA,EAAK,QACH,KAAK,QAAQA,CAAI,GAAK,CAAC,KAAK,KAAKA,CAAI,KACnC2a,IAAW,MAAQA,EAAO,SAAW,UACvCuF,IACAvF,EAAS,CAAE,OAAQ,IAErBA,EAAO,QAAU3a,EAAK,OACtBggB,EAAQ,IAAIhgB,CAAI,GAGd,KAAK,KAAKA,CAAI,IACZ2a,IAAW,MAAQA,EAAO,SAAW,UACvCuF,IACAvF,EAAS,CAAE,OAAQ,KAErBA,EAAO,OAASA,EAAO,OAAO,OAAO3a,EAAK,QAAQ,WAAU,CAAE,EAC9D+f,EAAM,IAAI/f,CAAI,KAEV2a,IAAW,MAAQA,EAAO,SAAW,UACvCuF,IACAvF,EAAS,CAAE,OAAQ,IAErBA,EAAO,QAAU3a,EAAK,QAIxB2a,IAAW,MAAQA,EAAO,SAAW,QACvCuF,GAEH,CACD,KAAK,SAAWJ,CACjB,CACD,OAA2BA,CAC5B,CACH,CAmBA,MAAML,GAAY,CAACjgB,EAAQuR,IAAU,CACnC,MAAMoP,EAAO,GACb,KAAOpP,EAAM,QAAU,MAAQA,IAAUvR,GAAQ,CAC/C,GAAIuR,EAAM,MAAM,YAAc,KAE5BoP,EAAK,QAAQpP,EAAM,MAAM,SAAS,MAC7B,CAEL,IAAI9gB,EAAI,EACJ2Q,EAAsCmQ,EAAM,MAAM,OAAQ,OAC9D,KAAOnQ,IAAMmQ,EAAM,OAASnQ,IAAM,MAC3BA,EAAE,SACL3Q,IAEF2Q,EAAIA,EAAE,MAERuf,EAAK,QAAQlwB,CAAC,CACf,CACD8gB,EAA0CA,EAAM,MAAM,MACvD,CACD,OAAOoP,CACT,EAEMC,GAAkB,GASxB,IAAIC,GAA8B,EAElC,MAAMC,EAAkB,CAKtB,YAAaC,EAAG3uB,EAAO,CACrB2uB,EAAE,OAAS,GACX,KAAK,EAAIA,EACT,KAAK,MAAQ3uB,EACb,KAAK,UAAYyuB,IAClB,CACH,CAKA,MAAMG,GAAyBC,GAAU,CAAEA,EAAO,UAAYJ,MASxDK,GAAkB,CAACD,EAAQF,EAAG3uB,IAAU,CAC5C6uB,EAAO,EAAE,OAAS,GAClBA,EAAO,EAAIF,EACXA,EAAE,OAAS,GACXE,EAAO,MAAQ7uB,EACf6uB,EAAO,UAAYJ,IACrB,EAOMM,GAAe,CAACC,EAAcL,EAAG3uB,IAAU,CAC/C,GAAIgvB,EAAa,QAAUR,GAAiB,CAE1C,MAAMK,EAASG,EAAa,OAAO,CAACxxB,EAAGS,IAAMT,EAAE,UAAYS,EAAE,UAAYT,EAAIS,CAAC,EAC9E,OAAA6wB,GAAgBD,EAAQF,EAAG3uB,CAAK,EACzB6uB,CACX,KAAS,CAEL,MAAMI,EAAK,IAAIP,GAAkBC,EAAG3uB,CAAK,EACzC,OAAAgvB,EAAa,KAAKC,CAAE,EACbA,CACR,CACH,EAcMC,GAAa,CAACC,EAAQnvB,IAAU,CACpC,GAAImvB,EAAO,SAAW,MAAQnvB,IAAU,GAAKmvB,EAAO,gBAAkB,KACpE,OAAO,KAET,MAAMN,EAASM,EAAO,cAAc,SAAW,EAAI,KAAOA,EAAO,cAAc,OAAO,CAAC3xB,EAAGS,IAAM6K,GAAS9I,EAAQxC,EAAE,KAAK,EAAIsL,GAAS9I,EAAQ/B,EAAE,KAAK,EAAIT,EAAIS,CAAC,EAC7J,IAAI0wB,EAAIQ,EAAO,OACXC,EAAS,EAOb,IANIP,IAAW,OACbF,EAAIE,EAAO,EACXO,EAASP,EAAO,MAChBD,GAAuBC,CAAM,GAGxBF,EAAE,QAAU,MAAQS,EAASpvB,GAAO,CACzC,GAAI,CAAC2uB,EAAE,SAAWA,EAAE,UAAW,CAC7B,GAAI3uB,EAAQovB,EAAST,EAAE,OACrB,MAEFS,GAAUT,EAAE,MACb,CACDA,EAAIA,EAAE,KACP,CAED,KAAOA,EAAE,OAAS,MAAQS,EAASpvB,GACjC2uB,EAAIA,EAAE,KACF,CAACA,EAAE,SAAWA,EAAE,YAClBS,GAAUT,EAAE,QAMhB,KAAOA,EAAE,OAAS,MAAQA,EAAE,KAAK,GAAG,SAAWA,EAAE,GAAG,QAAUA,EAAE,KAAK,GAAG,MAAQA,EAAE,KAAK,SAAWA,EAAE,GAAG,OACrGA,EAAIA,EAAE,KACF,CAACA,EAAE,SAAWA,EAAE,YAClBS,GAAUT,EAAE,QA4BhB,OAAIE,IAAW,MAAQ/lB,GAAS+lB,EAAO,MAAQO,CAAM,EAAsCT,EAAE,OAAQ,OAASH,IAE5GM,GAAgBD,EAAQF,EAAGS,CAAM,EAC1BP,GAGAE,GAAaI,EAAO,cAAeR,EAAGS,CAAM,CAEvD,EAWMC,GAAsB,CAACL,EAAchvB,EAAOc,IAAQ,CACxD,QAASzC,EAAI2wB,EAAa,OAAS,EAAG3wB,GAAK,EAAGA,IAAK,CACjD,MAAMiE,EAAI0sB,EAAa3wB,CAAC,EACxB,GAAIyC,EAAM,EAAG,CAIX,IAAI6tB,EAAIrsB,EAAE,EAKV,IAJAqsB,EAAE,OAAS,GAIJA,IAAMA,EAAE,SAAW,CAACA,EAAE,YAC3BA,EAAIA,EAAE,KACFA,GAAK,CAACA,EAAE,SAAWA,EAAE,YAEvBrsB,EAAE,OAASqsB,EAAE,QAGjB,GAAIA,IAAM,MAAQA,EAAE,SAAW,GAAM,CAEnCK,EAAa,OAAO3wB,EAAG,CAAC,EACxB,QACD,CACDiE,EAAE,EAAIqsB,EACNA,EAAE,OAAS,EACZ,EACG3uB,EAAQsC,EAAE,OAAUxB,EAAM,GAAKd,IAAUsC,EAAE,SAC7CA,EAAE,MAAQkE,GAASxG,EAAOsC,EAAE,MAAQxB,CAAG,EAE1C,CACH,EAQMwuB,GAAkBnY,GAAK,CAC3B,IAAI/K,EAAI+K,EAAE,OACV,MAAM5W,EAAM,GACZ,KAAO6L,GACL7L,EAAI,KAAK6L,CAAC,EACVA,EAAIA,EAAE,MAER,OAAO7L,CACT,EAWMgvB,GAAoB,CAAC5wB,EAAM+T,EAAakN,IAAU,CACtD,MAAM4P,EAAc7wB,EACdqpB,EAAqBtV,EAAY,mBACvC,KAEEnE,GAAmByZ,EAAoBrpB,EAAM,IAAM,CAAE,GAAE,KAAKihB,CAAK,EAC7DjhB,EAAK,QAAU,MAGnBA,EAAyCA,EAAK,MAAM,OAEtD+f,GAA0B8Q,EAAY,IAAK5P,EAAOlN,CAAW,CAC/D,EAMA,MAAMwE,CAAa,CACjB,aAAe,CAIb,KAAK,MAAQ,KAIb,KAAK,KAAO,IAAI,IAIhB,KAAK,OAAS,KAId,KAAK,IAAM,KACX,KAAK,QAAU,EAKf,KAAK,IAAMmH,KAKX,KAAK,KAAOA,KAIZ,KAAK,cAAgB,IACtB,CAKD,IAAI,QAAU,CACZ,OAAO,KAAK,MAA0C,KAAK,MAAM,OAAU,IAC5E,CAYD,WAAYoR,EAAGrhB,EAAM,CACnB,KAAK,IAAMqhB,EACX,KAAK,MAAQrhB,CACd,CAKD,OAAS,CACP,MAAMshB,GAA2B,CAClC,CAKD,OAAS,CACP,MAAMA,GAA2B,CAClC,CAKD,OAAQC,EAAU,CAAG,CAKrB,IAAI,QAAU,CACZ,IAAIxtB,EAAI,KAAK,OACb,KAAOA,IAAM,MAAQA,EAAE,SACrBA,EAAIA,EAAE,MAER,OAAOA,CACR,CASD,cAAeuQ,EAAakd,EAAa,CACnC,CAACld,EAAY,OAAS,KAAK,gBAC7B,KAAK,cAAc,OAAS,EAE/B,CAOD,QAASvS,EAAG,CACVme,GAAwB,KAAK,IAAKne,CAAC,CACpC,CAOD,YAAaA,EAAG,CACdme,GAAwB,KAAK,KAAMne,CAAC,CACrC,CAOD,UAAWA,EAAG,CACZoe,GAA2B,KAAK,IAAKpe,CAAC,CACvC,CAOD,cAAeA,EAAG,CAChBoe,GAA2B,KAAK,KAAMpe,CAAC,CACxC,CAMD,QAAU,CAAE,CACd,CAWA,MAAM0vB,GAAgB,CAAClxB,EAAMmxB,EAAO7jB,IAAQ,CACtC6jB,EAAQ,IACVA,EAAQnxB,EAAK,QAAUmxB,GAErB7jB,EAAM,IACRA,EAAMtN,EAAK,QAAUsN,GAEvB,IAAInL,EAAMmL,EAAM6jB,EAChB,MAAMC,EAAK,GACX,IAAI5tB,EAAIxD,EAAK,OACb,KAAOwD,IAAM,MAAQrB,EAAM,GAAG,CAC5B,GAAIqB,EAAE,WAAa,CAACA,EAAE,QAAS,CAC7B,MAAM6M,EAAI7M,EAAE,QAAQ,WAAU,EAC9B,GAAI6M,EAAE,QAAU8gB,EACdA,GAAS9gB,EAAE,WACN,CACL,QAAS3Q,EAAIyxB,EAAOzxB,EAAI2Q,EAAE,QAAUlO,EAAM,EAAGzC,IAC3C0xB,EAAG,KAAK/gB,EAAE3Q,CAAC,CAAC,EACZyC,IAEFgvB,EAAQ,CACT,CACF,CACD3tB,EAAIA,EAAE,KACP,CACD,OAAO4tB,CACT,EASMC,GAAkBrxB,GAAQ,CAC9B,MAAMoxB,EAAK,GACX,IAAI5tB,EAAIxD,EAAK,OACb,KAAOwD,IAAM,MAAM,CACjB,GAAIA,EAAE,WAAa,CAACA,EAAE,QAAS,CAC7B,MAAM6M,EAAI7M,EAAE,QAAQ,WAAU,EAC9B,QAAS9D,EAAI,EAAGA,EAAI2Q,EAAE,OAAQ3Q,IAC5B0xB,EAAG,KAAK/gB,EAAE3Q,CAAC,CAAC,CAEf,CACD8D,EAAIA,EAAE,KACP,CACD,OAAO4tB,CACT,EAUME,GAA0B,CAACtxB,EAAM6jB,IAAa,CAClD,MAAMuN,EAAK,GACX,IAAI,EAAIpxB,EAAK,OACb,KAAO,IAAM,MAAM,CACjB,GAAI,EAAE,WAAamkB,GAAU,EAAGN,CAAQ,EAAG,CACzC,MAAMxT,EAAI,EAAE,QAAQ,WAAU,EAC9B,QAAS,EAAI,EAAG,EAAIA,EAAE,OAAQ,IAC5B+gB,EAAG,KAAK/gB,EAAE,CAAC,CAAC,CAEf,CACD,EAAI,EAAE,KACP,CACD,OAAO+gB,CACT,EAWMG,GAAkB,CAACvxB,EAAMwB,IAAM,CACnC,IAAIH,EAAQ,EACR,EAAIrB,EAAK,OACb,KAAO,IAAM,MAAM,CACjB,GAAI,EAAE,WAAa,CAAC,EAAE,QAAS,CAC7B,MAAMqQ,EAAI,EAAE,QAAQ,WAAU,EAC9B,QAAS,EAAI,EAAG,EAAIA,EAAE,OAAQ,IAC5B7O,EAAE6O,EAAE,CAAC,EAAGhP,IAASrB,CAAI,CAExB,CACD,EAAI,EAAE,KACP,CACH,EAWMwxB,GAAc,CAACxxB,EAAMwB,IAAM,CAI/B,MAAMN,EAAS,GACf,OAAAqwB,GAAgBvxB,EAAM,CAACqQ,EAAG3Q,IAAM,CAC9BwB,EAAO,KAAKM,EAAE6O,EAAG3Q,EAAGM,CAAI,CAAC,CAC7B,CAAG,EACMkB,CACT,EASMuwB,GAAyBzxB,GAAQ,CACrC,IAAIwD,EAAIxD,EAAK,OAIT0xB,EAAiB,KACjBC,EAAsB,EAC1B,MAAO,CACL,CAAC,OAAO,QAAQ,GAAK,CACnB,OAAO,IACR,EACD,KAAM,IAAM,CAEV,GAAID,IAAmB,KAAM,CAC3B,KAAOluB,IAAM,MAAQA,EAAE,SACrBA,EAAIA,EAAE,MAGR,GAAIA,IAAM,KACR,MAAO,CACL,KAAM,GACN,MAAO,MACR,EAGHkuB,EAAiBluB,EAAE,QAAQ,aAC3BmuB,EAAsB,EACtBnuB,EAAIA,EAAE,KACP,CACD,MAAMY,EAAQstB,EAAeC,GAAqB,EAElD,OAAID,EAAe,QAAUC,IAC3BD,EAAiB,MAEZ,CACL,KAAM,GACN,MAAAttB,CACD,CACF,CACF,CACH,EAUMwtB,GAAc,CAAC5xB,EAAMqB,IAAU,CACnC,MAAM6uB,EAASK,GAAWvwB,EAAMqB,CAAK,EACrC,IAAI,EAAIrB,EAAK,OAKb,IAJIkwB,IAAW,OACb,EAAIA,EAAO,EACX7uB,GAAS6uB,EAAO,OAEX,IAAM,KAAM,EAAI,EAAE,MACvB,GAAI,CAAC,EAAE,SAAW,EAAE,UAAW,CAC7B,GAAI7uB,EAAQ,EAAE,OACZ,OAAO,EAAE,QAAQ,WAAU,EAAGA,CAAK,EAErCA,GAAS,EAAE,MACZ,CAEL,EAWMwwB,GAA8B,CAAC9d,EAAa9E,EAAQ6iB,EAAe/Y,IAAY,CACnF,IAAIvI,EAAOshB,EACX,MAAM1Z,EAAMrE,EAAY,IAClBge,EAAc3Z,EAAI,SAClBhC,EAAQgC,EAAI,MACZ3H,EAAQqhB,IAAkB,KAAO7iB,EAAO,OAAS6iB,EAAc,MAIrE,IAAIE,EAAc,GAClB,MAAMC,EAAkB,IAAM,CACxBD,EAAY,OAAS,IACvBxhB,EAAO,IAAI4L,EAAKjD,EAAS4Y,EAAazb,EAASF,EAAO2b,CAAW,CAAC,EAAGvhB,EAAMA,GAAQA,EAAK,OAAQC,EAAOA,GAASA,EAAM,GAAIxB,EAAQ,KAAM,IAAIkf,GAAW6D,CAAW,CAAC,EACnKxhB,EAAK,UAAUuD,EAAa,CAAC,EAC7Bie,EAAc,GAEpB,EACEjZ,EAAQ,QAAQ1I,GAAK,CACnB,GAAIA,IAAM,KACR2hB,EAAY,KAAK3hB,CAAC,MAElB,QAAQA,EAAE,YAAW,CACnB,KAAK,OACL,KAAK,OACL,KAAK,QACL,KAAK,MACL,KAAK,OACH2hB,EAAY,KAAK3hB,CAAC,EAClB,MACF,QAEE,OADA4hB,IACQ5hB,EAAE,YAAW,CACnB,KAAK,WACL,KAAK,YACHG,EAAO,IAAI4L,EAAKjD,EAAS4Y,EAAazb,EAASF,EAAO2b,CAAW,CAAC,EAAGvhB,EAAMA,GAAQA,EAAK,OAAQC,EAAOA,GAASA,EAAM,GAAIxB,EAAQ,KAAM,IAAImf,GAAc,IAAI,WAAsC/d,CAAC,CAAE,CAAC,EACxMG,EAAK,UAAUuD,EAAa,CAAC,EAC7B,MACF,KAAKqD,GACH5G,EAAO,IAAI4L,EAAKjD,EAAS4Y,EAAazb,EAASF,EAAO2b,CAAW,CAAC,EAAGvhB,EAAMA,GAAQA,EAAK,OAAQC,EAAOA,GAASA,EAAM,GAAIxB,EAAQ,KAAM,IAAIof,GAA+Bhe,CAAC,CAAE,EAC9KG,EAAK,UAAUuD,EAAa,CAAC,EAC7B,MACF,QACE,GAAI1D,aAAakI,EACf/H,EAAO,IAAI4L,EAAKjD,EAAS4Y,EAAazb,EAASF,EAAO2b,CAAW,CAAC,EAAGvhB,EAAMA,GAAQA,EAAK,OAAQC,EAAOA,GAASA,EAAM,GAAIxB,EAAQ,KAAM,IAAI+T,GAAY3S,CAAC,CAAC,EAC1JG,EAAK,UAAUuD,EAAa,CAAC,MAE7B,OAAM,IAAI,MAAM,6CAA6C,CAElE,CACJ,CAEP,CAAG,EACDke,GACF,EAEMC,GAAiB,IAAMhnB,GAAa,kBAAkB,EAWtDinB,GAAyB,CAACpe,EAAa9E,EAAQ5N,EAAO0X,IAAY,CACtE,GAAI1X,EAAQ4N,EAAO,QACjB,MAAMijB,GAAgB,EAExB,GAAI7wB,IAAU,EACZ,OAAI4N,EAAO,eACTyhB,GAAoBzhB,EAAO,cAAe5N,EAAO0X,EAAQ,MAAM,EAE1D8Y,GAA4B9d,EAAa9E,EAAQ,KAAM8J,CAAO,EAEvE,MAAMqZ,EAAa/wB,EACb6uB,EAASK,GAAWthB,EAAQ5N,CAAK,EACvC,IAAImC,EAAIyL,EAAO,OAWf,IAVIihB,IAAW,OACb1sB,EAAI0sB,EAAO,EACX7uB,GAAS6uB,EAAO,MAEZ7uB,IAAU,IAEZmC,EAAIA,EAAE,KACNnC,GAAUmC,GAAKA,EAAE,WAAa,CAACA,EAAE,QAAWA,EAAE,OAAS,IAGpDA,IAAM,KAAMA,EAAIA,EAAE,MACvB,GAAI,CAACA,EAAE,SAAWA,EAAE,UAAW,CAC7B,GAAInC,GAASmC,EAAE,OAAQ,CACjBnC,EAAQmC,EAAE,QAEZ6gB,GAAkBtQ,EAAaoF,EAAS3V,EAAE,GAAG,OAAQA,EAAE,GAAG,MAAQnC,CAAK,CAAC,EAE1E,KACD,CACDA,GAASmC,EAAE,MACZ,CAEH,OAAIyL,EAAO,eACTyhB,GAAoBzhB,EAAO,cAAemjB,EAAYrZ,EAAQ,MAAM,EAE/D8Y,GAA4B9d,EAAa9E,EAAQzL,EAAGuV,CAAO,CACpE,EAaMsZ,GAAuB,CAACte,EAAa9E,EAAQ8J,IAAY,CAG7D,IAAIvV,GADYyL,EAAO,eAAiB,IAAI,OAAO,CAACqjB,EAAWC,IAAeA,EAAW,MAAQD,EAAU,MAAQC,EAAaD,EAAW,CAAE,MAAO,EAAG,EAAGrjB,EAAO,MAAM,CAAE,EAC1J,EACf,GAAIzL,EACF,KAAOA,EAAE,OACPA,EAAIA,EAAE,MAGV,OAAOquB,GAA4B9d,EAAa9E,EAAQzL,EAAGuV,CAAO,CACpE,EAWMyZ,GAAiB,CAACze,EAAa9E,EAAQ5N,EAAO2D,IAAW,CAC7D,GAAIA,IAAW,EAAK,OACpB,MAAMotB,EAAa/wB,EACboxB,EAAcztB,EACdkrB,EAASK,GAAWthB,EAAQ5N,CAAK,EACvC,IAAImC,EAAIyL,EAAO,OAMf,IALIihB,IAAW,OACb1sB,EAAI0sB,EAAO,EACX7uB,GAAS6uB,EAAO,OAGX1sB,IAAM,MAAQnC,EAAQ,EAAGmC,EAAIA,EAAE,MAChC,CAACA,EAAE,SAAWA,EAAE,YACdnC,EAAQmC,EAAE,QACZ6gB,GAAkBtQ,EAAaoF,EAAS3V,EAAE,GAAG,OAAQA,EAAE,GAAG,MAAQnC,CAAK,CAAC,EAE1EA,GAASmC,EAAE,QAIf,KAAOwB,EAAS,GAAKxB,IAAM,MACpBA,EAAE,UACDwB,EAASxB,EAAE,QACb6gB,GAAkBtQ,EAAaoF,EAAS3V,EAAE,GAAG,OAAQA,EAAE,GAAG,MAAQwB,CAAM,CAAC,EAE3ExB,EAAE,OAAOuQ,CAAW,EACpB/O,GAAUxB,EAAE,QAEdA,EAAIA,EAAE,MAER,GAAIwB,EAAS,EACX,MAAMktB,GAAgB,EAEpBjjB,EAAO,eACTyhB,GAAoBzhB,EAAO,cAAemjB,EAAY,CAACK,EAAcztB,EAEzE,EAUM0tB,GAAgB,CAAC3e,EAAa9E,EAAQjL,IAAQ,CAClD,MAAMqM,EAAIpB,EAAO,KAAK,IAAIjL,CAAG,EACzBqM,IAAM,QACRA,EAAE,OAAO0D,CAAW,CAExB,EAWM4e,GAAa,CAAC5e,EAAa9E,EAAQjL,EAAKI,IAAU,CACtD,MAAMoM,EAAOvB,EAAO,KAAK,IAAIjL,CAAG,GAAK,KAC/BoU,EAAMrE,EAAY,IAClBge,EAAc3Z,EAAI,SACxB,IAAIW,EACJ,GAAI3U,GAAS,KACX2U,EAAU,IAAIoV,GAAW,CAAC/pB,CAAK,CAAC,MAEhC,QAAQA,EAAM,YAAW,CACvB,KAAK,OACL,KAAK,OACL,KAAK,QACL,KAAK,MACL,KAAK,OACH2U,EAAU,IAAIoV,GAAW,CAAC/pB,CAAK,CAAC,EAChC,MACF,KAAK,WACH2U,EAAU,IAAIqV,GAAyChqB,GACvD,MACF,KAAKgT,GACH2B,EAAU,IAAIsV,GAA+BjqB,GAC7C,MACF,QACE,GAAIA,aAAiBmU,EACnBQ,EAAU,IAAIiK,GAAY5e,CAAK,MAE/B,OAAM,IAAI,MAAM,yBAAyB,CAE9C,CAEH,IAAIgY,EAAKjD,EAAS4Y,EAAazb,EAAS8B,EAAI,MAAO2Z,CAAW,CAAC,EAAGvhB,EAAMA,GAAQA,EAAK,OAAQ,KAAM,KAAMvB,EAAQjL,EAAK+U,CAAO,EAAE,UAAUhF,EAAa,CAAC,CACzJ,EAUM6e,GAAa,CAAC3jB,EAAQjL,IAAQ,CAClC,MAAM/E,EAAMgQ,EAAO,KAAK,IAAIjL,CAAG,EAC/B,OAAO/E,IAAQ,QAAa,CAACA,EAAI,QAAUA,EAAI,QAAQ,WAAY,EAACA,EAAI,OAAS,CAAC,EAAI,MACxF,EASM4zB,GAAiB5jB,GAAW,CAIhC,MAAM9K,EAAM,GACZ,OAAA8K,EAAO,KAAK,QAAQ,CAAC7K,EAAOJ,IAAQ,CAC7BI,EAAM,UACTD,EAAIH,CAAG,EAAII,EAAM,QAAQ,WAAU,EAAGA,EAAM,OAAS,CAAC,EAE5D,CAAG,EACMD,CACT,EAUM2uB,GAAa,CAAC7jB,EAAQjL,IAAQ,CAClC,MAAM/E,EAAMgQ,EAAO,KAAK,IAAIjL,CAAG,EAC/B,OAAO/E,IAAQ,QAAa,CAACA,EAAI,OACnC,EAWM8zB,GAAqB,CAAC9jB,EAAQjL,EAAK6f,IAAa,CACpD,IAAI1iB,EAAI8N,EAAO,KAAK,IAAIjL,CAAG,GAAK,KAChC,KAAO7C,IAAM,OAAS,CAAC0iB,EAAS,GAAG,IAAI1iB,EAAE,GAAG,MAAM,GAAKA,EAAE,GAAG,QAAU0iB,EAAS,GAAG,IAAI1iB,EAAE,GAAG,MAAM,GAAK,KACpGA,EAAIA,EAAE,KAER,OAAOA,IAAM,MAAQgjB,GAAUhjB,EAAG0iB,CAAQ,EAAI1iB,EAAE,QAAQ,WAAU,EAAGA,EAAE,OAAS,CAAC,EAAI,MACvF,EAUM6xB,GAAwB,CAAC/jB,EAAQ4U,IAAa,CAIlD,MAAM1f,EAAM,GACZ,OAAA8K,EAAO,KAAK,QAAQ,CAAC7K,EAAOJ,IAAQ,CAIlC,IAAI7C,EAAIiD,EACR,KAAOjD,IAAM,OAAS,CAAC0iB,EAAS,GAAG,IAAI1iB,EAAE,GAAG,MAAM,GAAKA,EAAE,GAAG,QAAU0iB,EAAS,GAAG,IAAI1iB,EAAE,GAAG,MAAM,GAAK,KACpGA,EAAIA,EAAE,KAEJA,IAAM,MAAQgjB,GAAUhjB,EAAG0iB,CAAQ,IACrC1f,EAAIH,CAAG,EAAI7C,EAAE,QAAQ,WAAU,EAAGA,EAAE,OAAS,CAAC,EAEpD,CAAG,EACMgD,CACT,EASM8uB,GAAoBlvB,GAAOmvB,GAAwBnvB,EAAI,QAAO,EAA8BovB,GAAS,CAACA,EAAM,CAAC,EAAE,OAAO,EAW5H,MAAMC,WAAoBnE,EAAO,CAK/B,YAAauB,EAAQzc,EAAa,CAChC,MAAMyc,EAAQzc,CAAW,EACzB,KAAK,aAAeA,CACrB,CACH,CAQA,MAAM2E,UAAeH,CAAa,CAChC,aAAe,CACb,QAKA,KAAK,eAAiB,GAItB,KAAK,cAAgB,EACtB,CAQD,OAAO,KAAM8a,EAAO,CAIlB,MAAMx0B,EAAI,IAAI6Z,EACd,OAAA7Z,EAAE,KAAKw0B,CAAK,EACLx0B,CACR,CAYD,WAAYiyB,EAAGrhB,EAAM,CACnB,MAAM,WAAWqhB,EAAGrhB,CAAI,EACxB,KAAK,OAAO,EAA8B,KAAK,cAAc,EAC7D,KAAK,eAAiB,IACvB,CAKD,OAAS,CACP,OAAO,IAAIiJ,CACZ,CAKD,OAAS,CAIP,MAAM9W,EAAM,IAAI8W,EAChB,OAAA9W,EAAI,OAAO,EAAG,KAAK,QAAO,EAAG,IAAI0xB,GAC/BA,aAAc/a,EAAyC+a,EAAG,MAAO,EAAIA,CAC3E,CAAK,EACM1xB,CACR,CAED,IAAI,QAAU,CACZ,OAAO,KAAK,iBAAmB,KAAO,KAAK,QAAU,KAAK,eAAe,MAC1E,CAQD,cAAemS,EAAawf,EAAY,CACtC,MAAM,cAAcxf,EAAawf,CAAU,EAC3C3C,GAAkB,KAAM7c,EAAa,IAAIqf,GAAY,KAAMrf,CAAW,CAAC,CACxE,CAkBD,OAAQ1S,EAAO0X,EAAS,CAClB,KAAK,MAAQ,KACfZ,EAAS,KAAK,IAAKpE,GAAe,CAChCoe,GAAuBpe,EAAa,KAAM1S,EAA2B0X,CAAO,CACpF,CAAO,EAE0B,KAAK,eAAgB,OAAO1X,EAAO,EAAG,GAAG0X,CAAO,CAE9E,CASD,KAAMA,EAAS,CACT,KAAK,MAAQ,KACfZ,EAAS,KAAK,IAAKpE,GAAe,CAChCse,GAAqBte,EAAa,KAA0BgF,EACpE,CAAO,EAE0B,KAAK,eAAgB,KAAK,GAAGA,CAAO,CAElE,CAOD,QAASA,EAAS,CAChB,KAAK,OAAO,EAAGA,CAAO,CACvB,CAQD,OAAQ1X,EAAO2D,EAAS,EAAG,CACrB,KAAK,MAAQ,KACfmT,EAAS,KAAK,IAAKpE,GAAe,CAChCye,GAAeze,EAAa,KAAM1S,EAAO2D,CAAM,CACvD,CAAO,EAE0B,KAAK,eAAgB,OAAO3D,EAAO2D,CAAM,CAEvE,CAQD,IAAK3D,EAAO,CACV,OAAOuwB,GAAY,KAAMvwB,CAAK,CAC/B,CAOD,SAAW,CACT,OAAOgwB,GAAgB,IAAI,CAC5B,CASD,MAAOF,EAAQ,EAAG7jB,EAAM,KAAK,OAAQ,CACnC,OAAO4jB,GAAc,KAAMC,EAAO7jB,CAAG,CACtC,CAOD,QAAU,CACR,OAAO,KAAK,IAAI+C,GAAKA,aAAakI,EAAelI,EAAE,OAAQ,EAAGA,CAAC,CAChE,CAWD,IAAK7O,EAAG,CACN,OAAOgwB,GAAY,KAA0BhwB,CAAG,CACjD,CAOD,QAASA,EAAG,CACV+vB,GAAgB,KAAM/vB,CAAC,CACxB,CAKD,CAAC,OAAO,QAAQ,GAAK,CACnB,OAAOiwB,GAAuB,IAAI,CACnC,CAKD,OAAQlqB,EAAS,CACfA,EAAQ,aAAaisB,EAAW,CACjC,CACH,CAQA,MAAMC,GAAaC,GAAY,IAAIhb,EAWnC,MAAMib,WAAkB1E,EAAO,CAM7B,YAAa2E,EAAM7f,EAAaiT,EAAM,CACpC,MAAM4M,EAAM7f,CAAW,EACvB,KAAK,YAAciT,CACpB,CACH,CASA,MAAMpO,UAAaL,CAAa,CAK9B,YAAasb,EAAS,CACpB,QAKA,KAAK,eAAiB,KAElBA,IAAY,OACd,KAAK,eAAiB,IAAI,IAE1B,KAAK,eAAiB,IAAI,IAAIA,CAAO,CAExC,CAYD,WAAY/C,EAAGrhB,EAAM,CACnB,MAAM,WAAWqhB,EAAGrhB,CAAI,EACU,KAAK,eAAgB,QAAQ,CAACrL,EAAOJ,IAAQ,CAC7E,KAAK,IAAIA,EAAKI,CAAK,CACzB,CAAK,EACD,KAAK,eAAiB,IACvB,CAKD,OAAS,CACP,OAAO,IAAIwU,CACZ,CAKD,OAAS,CAIP,MAAM7U,EAAM,IAAI6U,EAChB,YAAK,QAAQ,CAACxU,EAAOJ,IAAQ,CAC3BD,EAAI,IAAIC,EAAKI,aAAiBmU,EAA4CnU,EAAM,QAAWA,CAAK,CACtG,CAAK,EACML,CACR,CAQD,cAAegQ,EAAawf,EAAY,CACtC3C,GAAkB,KAAM7c,EAAa,IAAI4f,GAAU,KAAM5f,EAAawf,CAAU,CAAC,CAClF,CAOD,QAAU,CAIR,MAAMxvB,EAAM,GACZ,YAAK,KAAK,QAAQ,CAAC0L,EAAMzL,IAAQ,CAC/B,GAAI,CAACyL,EAAK,QAAS,CACjB,MAAMtO,EAAIsO,EAAK,QAAQ,WAAY,EAACA,EAAK,OAAS,CAAC,EACnD1L,EAAIC,CAAG,EAAI7C,aAAaoX,EAAepX,EAAE,OAAQ,EAAGA,CACrD,CACP,CAAK,EACM4C,CACR,CAOD,IAAI,MAAQ,CACV,MAAO,CAAC,GAAGkvB,GAAkB,KAAK,IAAI,CAAC,EAAE,MAC1C,CAOD,MAAQ,CACN,OAAOa,GAAqBb,GAAkB,KAAK,IAAI,EAAyB9xB,GAAKA,EAAE,CAAC,CAAC,CAC1F,CAOD,QAAU,CACR,OAAO2yB,GAAqBb,GAAkB,KAAK,IAAI,EAAyB9xB,GAAKA,EAAE,CAAC,EAAE,QAAQ,WAAU,EAAGA,EAAE,CAAC,EAAE,OAAS,CAAC,CAAC,CAChI,CAOD,SAAW,CACT,OAAO2yB,GAAqBb,GAAkB,KAAK,IAAI,EAAyB9xB,GAAyB,CAACA,EAAE,CAAC,EAAGA,EAAE,CAAC,EAAE,QAAQ,WAAU,EAAGA,EAAE,CAAC,EAAE,OAAS,CAAC,CAAC,CAAE,CAC7J,CAOD,QAASK,EAAG,CACV,KAAK,KAAK,QAAQ,CAACiO,EAAMzL,IAAQ,CAC1ByL,EAAK,SACRjO,EAAEiO,EAAK,QAAQ,aAAaA,EAAK,OAAS,CAAC,EAAGzL,EAAK,IAAI,CAE/D,CAAK,CACF,CAOD,CAAC,OAAO,QAAQ,GAAK,CACnB,OAAO,KAAK,QAAS,CACtB,CAOD,OAAQA,EAAK,CACP,KAAK,MAAQ,KACfmU,EAAS,KAAK,IAAKpE,GAAe,CAChC2e,GAAc3e,EAAa,KAAM/P,CAAG,CAC5C,CAAO,EAEgC,KAAK,eAAgB,OAAOA,CAAG,CAEnE,CAUD,IAAKA,EAAKI,EAAO,CACf,OAAI,KAAK,MAAQ,KACf+T,EAAS,KAAK,IAAKpE,GAAe,CAChC4e,GAAW5e,EAAa,KAAM/P,EAAyBI,CAAK,CACpE,CAAO,EAEgC,KAAK,eAAgB,IAAIJ,EAAKI,CAAK,EAE/DA,CACR,CAQD,IAAKJ,EAAK,CACR,OAA2B4uB,GAAW,KAAM5uB,CAAG,CAChD,CAQD,IAAKA,EAAK,CACR,OAAO8uB,GAAW,KAAM9uB,CAAG,CAC5B,CAKD,OAAS,CACH,KAAK,MAAQ,KACfmU,EAAS,KAAK,IAAKpE,GAAe,CAChC,KAAK,QAAQ,SAAUggB,EAAQ/vB,EAAKD,EAAK,CACvC2uB,GAAc3e,EAAahQ,EAAKC,CAAG,CAC7C,CAAS,CACT,CAAO,EAEgC,KAAK,eAAgB,OAEzD,CAKD,OAAQuD,EAAS,CACfA,EAAQ,aAAaysB,EAAS,CAC/B,CACH,CAQA,MAAMC,GAAWP,GAAY,IAAI9a,EAW3Bsb,GAAa,CAACr1B,EAAGS,IAAMT,IAAMS,GAAM,OAAOT,GAAM,UAAY,OAAOS,GAAM,UAAYT,GAAKS,GAAK60B,GAAiBt1B,EAAGS,CAAC,EAE1H,MAAM80B,EAAqB,CAOzB,YAAa5jB,EAAMC,EAAOpP,EAAOgzB,EAAmB,CAClD,KAAK,KAAO7jB,EACZ,KAAK,MAAQC,EACb,KAAK,MAAQpP,EACb,KAAK,kBAAoBgzB,CAC1B,CAKD,SAAW,CAIT,OAHI,KAAK,QAAU,MACjBxZ,KAEM,KAAK,MAAM,QAAQ,YAAW,CACpC,KAAK0T,EACE,KAAK,MAAM,SACd+F,GAAwB,KAAK,kBAAiD,KAAK,MAAM,OAAO,EAElG,MACF,QACO,KAAK,MAAM,UACd,KAAK,OAAS,KAAK,MAAM,QAE3B,KACH,CACD,KAAK,KAAO,KAAK,MACjB,KAAK,MAAQ,KAAK,MAAM,KACzB,CACH,CAWA,MAAMC,GAAmB,CAACxgB,EAAaoS,EAAKqO,IAAU,CACpD,KAAOrO,EAAI,QAAU,MAAQqO,EAAQ,GAAG,CACtC,OAAQrO,EAAI,MAAM,QAAQ,YAAW,CACnC,KAAKoI,EACEpI,EAAI,MAAM,SACbmO,GAAwBnO,EAAI,kBAAiDA,EAAI,MAAM,OAAO,EAEhG,MACF,QACOA,EAAI,MAAM,UACTqO,EAAQrO,EAAI,MAAM,QAEpB9B,GAAkBtQ,EAAaoF,EAASgN,EAAI,MAAM,GAAG,OAAQA,EAAI,MAAM,GAAG,MAAQqO,CAAK,CAAC,EAE1FrO,EAAI,OAASA,EAAI,MAAM,OACvBqO,GAASrO,EAAI,MAAM,QAErB,KACH,CACDA,EAAI,KAAOA,EAAI,MACfA,EAAI,MAAQA,EAAI,MAAM,KAEvB,CACD,OAAOA,CACT,EAYMsO,GAAe,CAAC1gB,EAAa9E,EAAQ5N,EAAOqzB,IAAoB,CACpE,MAAML,EAAoB,IAAI,IACxBnE,EAASwE,EAAkBnE,GAAWthB,EAAQ5N,CAAK,EAAI,KAC7D,GAAI6uB,EAAQ,CACV,MAAM/J,EAAM,IAAIiO,GAAqBlE,EAAO,EAAE,KAAMA,EAAO,EAAGA,EAAO,MAAOmE,CAAiB,EAC7F,OAAOE,GAAiBxgB,EAAaoS,EAAK9kB,EAAQ6uB,EAAO,KAAK,CAClE,KAAS,CACL,MAAM/J,EAAM,IAAIiO,GAAqB,KAAMnlB,EAAO,OAAQ,EAAGolB,CAAiB,EAC9E,OAAOE,GAAiBxgB,EAAaoS,EAAK9kB,CAAK,CAChD,CACH,EAaMszB,GAA0B,CAAC5gB,EAAa9E,EAAQ2lB,EAASC,IAAsB,CAEnF,KACED,EAAQ,QAAU,OAChBA,EAAQ,MAAM,UAAY,IACxBA,EAAQ,MAAM,QAAQ,cAAgBrG,GACtC2F,GAAWW,EAAkB,IAAkCD,EAAQ,MAAM,QAAS,GAAG,EAAiCA,EAAQ,MAAM,QAAS,KAAK,IAIrJA,EAAQ,MAAM,SACjBC,EAAkB,OAAqCD,EAAQ,MAAM,QAAS,GAAG,EAEnFA,EAAQ,QAAO,EAEjB,MAAMxc,EAAMrE,EAAY,IAClBge,EAAc3Z,EAAI,SACxByc,EAAkB,QAAQ,CAAC51B,EAAK+E,IAAQ,CACtC,MAAMwM,EAAOokB,EAAQ,KACfnkB,EAAQmkB,EAAQ,MAChBE,EAAa,IAAI1Y,EAAKjD,EAAS4Y,EAAazb,EAAS8B,EAAI,MAAO2Z,CAAW,CAAC,EAAGvhB,EAAMA,GAAQA,EAAK,OAAQC,EAAOA,GAASA,EAAM,GAAIxB,EAAQ,KAAM,IAAIsf,EAAcvqB,EAAK/E,CAAG,CAAC,EACnL61B,EAAW,UAAU/gB,EAAa,CAAC,EACnC6gB,EAAQ,MAAQE,EAChBF,EAAQ,QAAO,CACnB,CAAG,CACH,EASMN,GAA0B,CAACD,EAAmBU,IAAW,CAC7D,KAAM,CAAE,IAAA/wB,EAAK,MAAAI,CAAO,EAAG2wB,EACnB3wB,IAAU,KACZiwB,EAAkB,OAAOrwB,CAAG,EAE5BqwB,EAAkB,IAAIrwB,EAAKI,CAAK,CAEpC,EASM4wB,GAA2B,CAACJ,EAASK,IAAe,CAExD,KACML,EAAQ,QAAU,MADX,CAGJ,GAAI,EAAAA,EAAQ,MAAM,SAAYA,EAAQ,MAAM,QAAQ,cAAgBrG,GAAiB2F,GAAWe,EAA0CL,EAAQ,MAAM,QAAU,GAAG,GAAK,KAAoCA,EAAQ,MAAM,QAAS,KAAK,GAC/O,MAEFA,EAAQ,QAAO,CAChB,CACH,EAYMM,GAAmB,CAACnhB,EAAa9E,EAAQ2lB,EAASK,IAAe,CACrE,MAAM7c,EAAMrE,EAAY,IAClBge,EAAc3Z,EAAI,SAClByc,EAAoB,IAAI,IAE9B,UAAW7wB,KAAOixB,EAAY,CAC5B,MAAMh2B,EAAMg2B,EAAWjxB,CAAG,EACpBmxB,EAAaP,EAAQ,kBAAkB,IAAI5wB,CAAG,GAAK,KACzD,GAAI,CAACkwB,GAAWiB,EAAYl2B,CAAG,EAAG,CAEhC41B,EAAkB,IAAI7wB,EAAKmxB,CAAU,EACrC,KAAM,CAAE,KAAA3kB,EAAM,MAAAC,CAAO,EAAGmkB,EACxBA,EAAQ,MAAQ,IAAIxY,EAAKjD,EAAS4Y,EAAazb,EAAS8B,EAAI,MAAO2Z,CAAW,CAAC,EAAGvhB,EAAMA,GAAQA,EAAK,OAAQC,EAAOA,GAASA,EAAM,GAAIxB,EAAQ,KAAM,IAAIsf,EAAcvqB,EAAK/E,CAAG,CAAC,EAChL21B,EAAQ,MAAM,UAAU7gB,EAAa,CAAC,EACtC6gB,EAAQ,QAAO,CAChB,CACF,CACD,OAAOC,CACT,EAYMO,GAAa,CAACrhB,EAAa9E,EAAQ2lB,EAASS,EAAMJ,IAAe,CACrEL,EAAQ,kBAAkB,QAAQ,CAACU,EAAMtxB,IAAQ,CAC3CixB,EAAWjxB,CAAG,IAAM,SACtBixB,EAAWjxB,CAAG,EAAI,KAExB,CAAG,EACD,MAAMoU,EAAMrE,EAAY,IAClBge,EAAc3Z,EAAI,SACxB4c,GAAyBJ,EAASK,CAAU,EAC5C,MAAMJ,EAAoBK,GAAiBnhB,EAAa9E,EAAQ2lB,EAASK,CAAU,EAE7Elc,EAAUsc,EAAK,cAAgB,OAAS,IAAI5G,GAAqC4G,CAAM,EAAIA,aAAgB9c,EAAe,IAAIyK,GAAYqS,CAAI,EAAI,IAAI/G,GAAa+G,CAAI,EAC7K,GAAI,CAAE,KAAA7kB,EAAM,MAAAC,EAAO,MAAApP,CAAK,EAAKuzB,EACzB3lB,EAAO,eACTyhB,GAAoBzhB,EAAO,cAAe2lB,EAAQ,MAAO7b,EAAQ,UAAS,CAAE,EAE9EtI,EAAQ,IAAI2L,EAAKjD,EAAS4Y,EAAazb,EAAS8B,EAAI,MAAO2Z,CAAW,CAAC,EAAGvhB,EAAMA,GAAQA,EAAK,OAAQC,EAAOA,GAASA,EAAM,GAAIxB,EAAQ,KAAM8J,CAAO,EACpJtI,EAAM,UAAUsD,EAAa,CAAC,EAC9B6gB,EAAQ,MAAQnkB,EAChBmkB,EAAQ,MAAQvzB,EAChBuzB,EAAQ,QAAO,EACfD,GAAwB5gB,EAAa9E,EAAQ2lB,EAASC,CAAiB,CACzE,EAYMU,GAAa,CAACxhB,EAAa9E,EAAQ2lB,EAAS5vB,EAAQiwB,IAAe,CACvE,MAAM7c,EAAMrE,EAAY,IAClBge,EAAc3Z,EAAI,SACxB4c,GAAyBJ,EAASK,CAAU,EAC5C,MAAMJ,EAAoBK,GAAiBnhB,EAAa9E,EAAQ2lB,EAASK,CAAU,EAKnFO,EAAe,KACbZ,EAAQ,QAAU,OACjB5vB,EAAS,GAEN6vB,EAAkB,KAAO,IACxBD,EAAQ,MAAM,SAAWA,EAAQ,MAAM,QAAQ,cAAgBrG,KAGpE,CACA,GAAI,CAACqG,EAAQ,MAAM,QACjB,OAAQA,EAAQ,MAAM,QAAQ,YAAW,CACvC,KAAKrG,EAAe,CAClB,KAAM,CAAE,IAAAvqB,EAAK,MAAAI,CAAK,EAAmCwwB,EAAQ,MAAM,QAC7Da,EAAOR,EAAWjxB,CAAG,EAC3B,GAAIyxB,IAAS,OAAW,CACtB,GAAIvB,GAAWuB,EAAMrxB,CAAK,EACxBywB,EAAkB,OAAO7wB,CAAG,MACvB,CACL,GAAIgB,IAAW,EAGb,MAAMwwB,EAERX,EAAkB,IAAI7wB,EAAKI,CAAK,CACjC,CACDwwB,EAAQ,MAAM,OAAO7gB,CAAW,CAC5C,MACY6gB,EAAQ,kBAAkB,IAAI5wB,EAAKI,CAAK,EAE1C,KACD,CACD,QACMY,EAAS4vB,EAAQ,MAAM,QACzBvQ,GAAkBtQ,EAAaoF,EAASyb,EAAQ,MAAM,GAAG,OAAQA,EAAQ,MAAM,GAAG,MAAQ5vB,CAAM,CAAC,EAEnGA,GAAU4vB,EAAQ,MAAM,OACxB,KACH,CAEHA,EAAQ,QAAO,CAChB,CAID,GAAI5vB,EAAS,EAAG,CACd,IAAI0wB,EAAW,GACf,KAAO1wB,EAAS,EAAGA,IACjB0wB,GAAY;AAAA,EAEdd,EAAQ,MAAQ,IAAIxY,EAAKjD,EAAS4Y,EAAazb,EAAS8B,EAAI,MAAO2Z,CAAW,CAAC,EAAG6C,EAAQ,KAAMA,EAAQ,MAAQA,EAAQ,KAAK,OAAQA,EAAQ,MAAOA,EAAQ,OAASA,EAAQ,MAAM,GAAI3lB,EAAQ,KAAM,IAAIwf,GAAciH,CAAQ,CAAC,EAChOd,EAAQ,MAAM,UAAU7gB,EAAa,CAAC,EACtC6gB,EAAQ,QAAO,CAChB,CACDD,GAAwB5gB,EAAa9E,EAAQ2lB,EAASC,CAAiB,CACzE,EAeMc,GAAuB,CAAC5hB,EAAaod,EAAOnM,EAAM4Q,EAAiBC,IAAmB,CAI1F,IAAIvoB,EAAM6jB,EAIV,MAAM2E,EAAanmB,KACnB,KAAOrC,IAAQ,CAACA,EAAI,WAAaA,EAAI,UAAU,CAC7C,GAAI,CAACA,EAAI,SAAWA,EAAI,QAAQ,cAAgBihB,EAAe,CAC7D,MAAMwH,EAAmCzoB,EAAI,QAC7CwoB,EAAW,IAAIC,EAAG,IAAKA,CAAE,CAC1B,CACDzoB,EAAMA,EAAI,KACX,CACD,IAAI0oB,EAAW,EACXC,EAAc,GAClB,KAAO9E,IAAU7jB,GAAK,CAIpB,GAHI0X,IAASmM,IACX8E,EAAc,IAEZ,CAAC9E,EAAM,QAAS,CAClB,MAAMpY,EAAUoY,EAAM,QACtB,OAAQpY,EAAQ,YAAW,CACzB,KAAKwV,EAAe,CAClB,KAAM,CAAE,IAAAvqB,EAAK,MAAAI,CAAO,EAAiC2U,EAC/Cmd,EAAiBN,EAAgB,IAAI5xB,CAAG,GAAK,MAC/C8xB,EAAW,IAAI9xB,CAAG,IAAM+U,GAAWmd,IAAmB9xB,KAExD+sB,EAAM,OAAOpd,CAAW,EACxBiiB,IACI,CAACC,IAAgBJ,EAAe,IAAI7xB,CAAG,GAAK,QAAUI,GAAS8xB,IAAmB9xB,IAChF8xB,IAAmB,KACrBL,EAAe,OAAO7xB,CAAG,EAEzB6xB,EAAe,IAAI7xB,EAAKkyB,CAAc,IAIxC,CAACD,GAAe,CAAC9E,EAAM,SACzBmD,GAAwBuB,EAA8C9c,GAExE,KACD,CACF,CACF,CACDoY,EAA6BA,EAAM,KACpC,CACD,OAAO6E,CACT,EAMMG,GAAkC,CAACpiB,EAAatE,IAAS,CAE7D,KAAOA,GAAQA,EAAK,QAAUA,EAAK,MAAM,SAAW,CAACA,EAAK,MAAM,YAC9DA,EAAOA,EAAK,MAEd,MAAM2mB,EAAQ,IAAI,IAElB,KAAO3mB,IAASA,EAAK,SAAW,CAACA,EAAK,YAAY,CAChD,GAAI,CAACA,EAAK,SAAWA,EAAK,QAAQ,cAAgB8e,EAAe,CAC/D,MAAMvqB,EAAoCyL,EAAK,QAAS,IACpD2mB,EAAM,IAAIpyB,CAAG,EACfyL,EAAK,OAAOsE,CAAW,EAEvBqiB,EAAM,IAAIpyB,CAAG,CAEhB,CACDyL,EAAOA,EAAK,IACb,CACH,EAcM4mB,GAAyBr2B,GAAQ,CACrC,IAAImE,EAAM,EACV,OAAAgU,EAA6BnY,EAAK,IAAM+T,GAAe,CACrD,IAAIod,EAA6BnxB,EAAK,OAClCsN,EAAMtN,EAAK,OACX41B,EAAkBjmB,KACtB,MAAM0kB,EAAoBiC,GAASV,CAAe,EAClD,KAAOtoB,GAAK,CACV,GAAIA,EAAI,UAAY,GAClB,OAAQA,EAAI,QAAQ,YAAW,CAC7B,KAAKihB,EACH+F,GAAwBD,EAAiD/mB,EAAI,SAC7E,MACF,QACEnJ,GAAOwxB,GAAqB5hB,EAAaod,EAAO7jB,EAAKsoB,EAAiBvB,CAAiB,EACvFuB,EAAkBU,GAASjC,CAAiB,EAC5ClD,EAAQ7jB,EACR,KACH,CAEHA,EAAMA,EAAI,KACX,CACL,CAAG,EACMnJ,CACT,EAQMkjB,GAA+BtT,GAAe,CAIlD,MAAMwiB,EAAkB,IAAI,IAEtBne,EAAMrE,EAAY,IACxB,SAAW,CAACqB,EAAQohB,CAAU,IAAKziB,EAAY,WAAW,UAAW,CACnE,MAAMH,EAAQG,EAAY,YAAY,IAAIqB,CAAM,GAAK,EACjDohB,IAAe5iB,GAGnBS,GAAeN,EAA4CqE,EAAI,MAAM,QAAQ,IAAIhD,CAAM,EAAIxB,EAAO4iB,EAAY/mB,GAAQ,CAElH,CAACA,EAAK,SAAgCA,EAAM,QAAQ,cAAgB8e,GAAiB9e,EAAK,cAAgBwM,IAE1Gsa,EAAgB,IAAwB9mB,EAAM,MAAM,CAE5D,CAAK,CACF,CAED0I,EAASC,EAAMI,GAAM,CACnB1E,GAAsBC,EAAaA,EAAY,UAAWtE,GAAQ,CAChE,GAAIA,aAAgBwM,IAAM,CAAwBxM,EAAK,OAAQ,gBAAmB8mB,EAAgB,IAA0B9mB,EAAK,MAAM,EACrI,OAEF,MAAMR,EAA+BQ,EAAK,OACtCA,EAAK,QAAQ,cAAgB8e,EAC/BgI,EAAgB,IAAItnB,CAAM,EAK1BknB,GAAgC3d,EAAG/I,CAAI,CAE/C,CAAK,EAGD,UAAWgnB,KAASF,EAClBF,GAAuBI,CAAK,CAElC,CAAG,CACH,EAWMC,GAAa,CAAC3iB,EAAa6gB,EAAS5vB,IAAW,CACnD,MAAMytB,EAAcztB,EACd2xB,EAAaL,GAAS1B,EAAQ,iBAAiB,EAC/CzD,EAAQyD,EAAQ,MACtB,KAAO5vB,EAAS,GAAK4vB,EAAQ,QAAU,MAAM,CAC3C,GAAIA,EAAQ,MAAM,UAAY,GAC5B,OAAQA,EAAQ,MAAM,QAAQ,YAAW,CACvC,KAAK5R,GACL,KAAKsL,GACL,KAAKG,GACCzpB,EAAS4vB,EAAQ,MAAM,QACzBvQ,GAAkBtQ,EAAaoF,EAASyb,EAAQ,MAAM,GAAG,OAAQA,EAAQ,MAAM,GAAG,MAAQ5vB,CAAM,CAAC,EAEnGA,GAAU4vB,EAAQ,MAAM,OACxBA,EAAQ,MAAM,OAAO7gB,CAAW,EAChC,KACH,CAEH6gB,EAAQ,QAAO,CAChB,CACGzD,GACFwE,GAAqB5hB,EAAaod,EAAOyD,EAAQ,MAAO+B,EAAY/B,EAAQ,iBAAiB,EAE/F,MAAM3lB,GAAgE2lB,EAAQ,MAAQA,EAAQ,OAAO,OACrG,OAAI3lB,EAAO,eACTyhB,GAAoBzhB,EAAO,cAAe2lB,EAAQ,MAAO,CAACnC,EAAcztB,CAAM,EAEzE4vB,CACT,EAiCA,MAAMgC,WAAmB3H,EAAO,CAM9B,YAAa4H,EAAO9iB,EAAaiT,EAAM,CACrC,MAAM6P,EAAO9iB,CAAW,EAMxB,KAAK,iBAAmB,GAKxB,KAAK,YAAc,IAAI,IACvBiT,EAAK,QAAS8P,GAAQ,CAChBA,IAAQ,KACV,KAAK,iBAAmB,GAExB,KAAK,YAAY,IAAIA,CAAG,CAEhC,CAAK,CACF,CAKD,IAAI,SAAW,CACb,GAAI,KAAK,WAAa,KAAM,CAI1B,MAAMvH,EAAU,CACd,KAAM,KAAK,KACX,MAAO,KAAK,MACZ,MAAO,IAAI,IACX,QAAS,IAAI,GACrB,EACM,KAAK,SAAWA,CACjB,CACD,OAA2B,KAAK,QACjC,CAUD,IAAI,OAAS,CACX,GAAI,KAAK,SAAW,KAAM,CACxB,MAAMuB,EAAwB,KAAK,OAAO,IAIpCpB,EAAQ,GACdvX,EAAS2Y,EAAG/c,GAAe,CACzB,MAAMsgB,EAAoB,IAAI,IACxB0C,EAAgB,IAAI,IAC1B,IAAItnB,EAAO,KAAK,OAAO,OAInB0f,EAAS,KAIb,MAAM8F,EAAa,GAInB,IAAI+B,EAAS,GACTC,EAAS,EACTC,EAAY,EAChB,MAAMC,EAAQ,IAAM,CAClB,GAAIhI,IAAW,KAAM,CAInB,IAAIiI,EAAK,KACT,OAAQjI,EAAM,CACZ,IAAK,SACC+H,EAAY,IACdE,EAAK,CAAE,OAAQF,IAEjBA,EAAY,EACZ,MACF,IAAK,UACC,OAAOF,GAAW,UAAYA,EAAO,OAAS,KAChDI,EAAK,CAAE,OAAAJ,GACH3C,EAAkB,KAAO,IAC3B+C,EAAG,WAAa,GAChB/C,EAAkB,QAAQ,CAACjwB,EAAOJ,IAAQ,CACpCI,IAAU,OACZgzB,EAAG,WAAWpzB,CAAG,EAAII,EAE7C,CAAqB,IAGL4yB,EAAS,GACT,MACF,IAAK,SACCC,EAAS,IACXG,EAAK,CAAE,OAAAH,GACFI,GAAepC,CAAU,IAC5BmC,EAAG,WAAaE,GAAc,CAAE,EAAErC,CAAU,IAGhDgC,EAAS,EACT,KACH,CACGG,GAAI1H,EAAM,KAAK0H,CAAE,EACrBjI,EAAS,IACV,CACX,EACQ,KAAO1f,IAAS,MAAM,CACpB,OAAQA,EAAK,QAAQ,YAAW,CAC9B,KAAKuT,GACL,KAAKsL,GACC,KAAK,KAAK7e,CAAI,EACX,KAAK,QAAQA,CAAI,IACpB0nB,IACAhI,EAAS,SACT6H,EAASvnB,EAAK,QAAQ,WAAY,EAAC,CAAC,EACpC0nB,KAEO,KAAK,QAAQ1nB,CAAI,GACtB0f,IAAW,WACbgI,IACAhI,EAAS,UAEX+H,GAAa,GACHznB,EAAK,UACX0f,IAAW,WACbgI,IACAhI,EAAS,UAEX8H,GAAU,GAEZ,MACF,KAAKxI,GACC,KAAK,KAAKhf,CAAI,EACX,KAAK,QAAQA,CAAI,IAChB0f,IAAW,WACbgI,IACAhI,EAAS,UAEX6H,GAAwCvnB,EAAK,QAAS,KAE/C,KAAK,QAAQA,CAAI,GACtB0f,IAAW,WACbgI,IACAhI,EAAS,UAEX+H,GAAaznB,EAAK,QACRA,EAAK,UACX0f,IAAW,WACbgI,IACAhI,EAAS,UAEX8H,GAAUxnB,EAAK,QAEjB,MACF,KAAK8e,EAAe,CAClB,KAAM,CAAE,IAAAvqB,EAAK,MAAAI,CAAO,EAAiCqL,EAAK,QAC1D,GAAI,KAAK,KAAKA,CAAI,GAChB,GAAI,CAAC,KAAK,QAAQA,CAAI,EAAG,CACvB,MAAM8nB,EAASlD,EAAkB,IAAIrwB,CAAG,GAAK,KACxCkwB,GAAWqD,EAAQnzB,CAAK,EASlBA,IAAU,MACnBqL,EAAK,OAAOsE,CAAW,GATnBob,IAAW,UACbgI,IAEEjD,GAAW9vB,EAAQ2yB,EAAc,IAAI/yB,CAAG,GAAK,MAC/C,OAAOixB,EAAWjxB,CAAG,EAErBixB,EAAWjxB,CAAG,EAAII,EAKvB,UACQ,KAAK,QAAQqL,CAAI,EAAG,CAC7BsnB,EAAc,IAAI/yB,EAAKI,CAAK,EAC5B,MAAMmzB,EAASlD,EAAkB,IAAIrwB,CAAG,GAAK,KACxCkwB,GAAWqD,EAAQnzB,CAAK,IACvB+qB,IAAW,UACbgI,IAEFlC,EAAWjxB,CAAG,EAAIuzB,EAEpC,SAAyB,CAAC9nB,EAAK,QAAS,CACxBsnB,EAAc,IAAI/yB,EAAKI,CAAK,EAC5B,MAAMqxB,EAAOR,EAAWjxB,CAAG,EACvByxB,IAAS,SACNvB,GAAWuB,EAAMrxB,CAAK,EAShBqxB,IAAS,MAClBhmB,EAAK,OAAOsE,CAAW,GATnBob,IAAW,UACbgI,IAEE/yB,IAAU,KACZ,OAAO6wB,EAAWjxB,CAAG,EAErBixB,EAAWjxB,CAAG,EAAII,GAMzB,CACIqL,EAAK,UACJ0f,IAAW,UACbgI,IAEF7C,GAAwBD,EAAiD5kB,EAAK,UAEhF,KACD,CACF,CACDA,EAAOA,EAAK,KACb,CAED,IADA0nB,IACOzH,EAAM,OAAS,GAAG,CACvB,MAAMtF,EAASsF,EAAMA,EAAM,OAAS,CAAC,EACrC,GAAItF,EAAO,SAAW,QAAaA,EAAO,aAAe,OAEvDsF,EAAM,IAAG,MAET,MAEH,CACT,CAAO,EACD,KAAK,OAASA,CACf,CACD,OAA2B,KAAK,MACjC,CACH,CAWA,MAAM/W,UAAcJ,CAAa,CAI/B,YAAazN,EAAQ,CACnB,QAKA,KAAK,SAAWA,IAAW,OAAY,CAAC,IAAM,KAAK,OAAO,EAAGA,CAAM,CAAC,EAAI,GAIxE,KAAK,cAAgB,GAKrB,KAAK,eAAiB,EACvB,CAOD,IAAI,QAAU,CACZ,OAAO,KAAK,OACb,CAMD,WAAYgmB,EAAGrhB,EAAM,CACnB,MAAM,WAAWqhB,EAAGrhB,CAAI,EACxB,GAAI,CAC8B,KAAK,SAAU,QAAQjO,GAAKA,EAAG,EAChE,OAAQg2B,EAAG,CACV,QAAQ,MAAMA,CAAC,CAChB,CACD,KAAK,SAAW,IACjB,CAED,OAAS,CACP,OAAO,IAAI7e,CACZ,CAKD,OAAS,CACP,MAAM0c,EAAO,IAAI1c,EACjB,OAAA0c,EAAK,WAAW,KAAK,QAAS,GACvBA,CACR,CAQD,cAAethB,EAAawf,EAAY,CACtC,MAAM,cAAcxf,EAAawf,CAAU,EAC3C,MAAMtS,EAAQ,IAAI2V,GAAW,KAAM7iB,EAAawf,CAAU,EAC1D3C,GAAkB,KAAM7c,EAAakN,CAAK,EAEtC,CAAClN,EAAY,OAAS,KAAK,iBAC7BA,EAAY,uBAAyB,GAExC,CAOD,UAAY,CACV,IAAIhR,EAAM,GAINS,EAAI,KAAK,OACb,KAAOA,IAAM,MACP,CAACA,EAAE,SAAWA,EAAE,WAAaA,EAAE,QAAQ,cAAgBirB,KACzD1rB,GAAqCS,EAAE,QAAS,KAElDA,EAAIA,EAAE,MAER,OAAOT,CACR,CAQD,QAAU,CACR,OAAO,KAAK,SAAU,CACvB,CAYD,WAAY2sB,EAAO,CAAE,SAAA+H,EAAW,EAAI,EAAK,GAAI,CACvC,KAAK,MAAQ,KACftf,EAAS,KAAK,IAAKpE,GAAe,CAChC,MAAM6gB,EAAU,IAAIR,GAAqB,KAAM,KAAK,OAAQ,EAAG,IAAI,GAAK,EACxE,QAAS,EAAI,EAAG,EAAI1E,EAAM,OAAQ,IAAK,CACrC,MAAM0H,EAAK1H,EAAM,CAAC,EAClB,GAAI0H,EAAG,SAAW,OAAW,CAM3B,MAAMM,EAAO,CAACD,GAAY,OAAOL,EAAG,QAAW,UAAY,IAAM1H,EAAM,OAAS,GAAKkF,EAAQ,QAAU,MAAQwC,EAAG,OAAO,MAAM,EAAE,IAAM;AAAA,EAAQA,EAAG,OAAO,MAAM,EAAG,EAAE,EAAIA,EAAG,QACvK,OAAOM,GAAQ,UAAYA,EAAI,OAAS,IAC1CtC,GAAWrhB,EAAa,KAAM6gB,EAAS8C,EAAKN,EAAG,YAAc,EAAE,CAE7E,MAAqBA,EAAG,SAAW,OACvB7B,GAAWxhB,EAAa,KAAM6gB,EAASwC,EAAG,OAAQA,EAAG,YAAc,EAAE,EAC5DA,EAAG,SAAW,QACvBV,GAAW3iB,EAAa6gB,EAASwC,EAAG,MAAM,CAE7C,CACT,CAAO,EAE+B,KAAK,SAAU,KAAK,IAAM,KAAK,WAAW1H,CAAK,CAAC,CAEnF,CAYD,QAAS7L,EAAU8T,EAAcC,EAAgB,CAI/C,MAAMC,EAAM,GACNxD,EAAoB,IAAI,IACxBjc,EAA0B,KAAK,IACrC,IAAIrV,EAAM,GACNS,EAAI,KAAK,OACb,SAASs0B,GAAW,CAClB,GAAI/0B,EAAI,OAAS,EAAG,CAKlB,MAAMkyB,EAAa,GACnB,IAAI8C,EAAgB,GACpB1D,EAAkB,QAAQ,CAACjwB,EAAOJ,IAAQ,CACxC+zB,EAAgB,GAChB9C,EAAWjxB,CAAG,EAAII,CAC5B,CAAS,EAID,MAAMgzB,EAAK,CAAE,OAAQr0B,GACjBg1B,IACFX,EAAG,WAAanC,GAElB4C,EAAI,KAAKT,CAAE,EACXr0B,EAAM,EACP,CACF,CACD,MAAMi1B,EAAe,IAAM,CACzB,KAAOx0B,IAAM,MAAM,CACjB,GAAI2gB,GAAU3gB,EAAGqgB,CAAQ,GAAM8T,IAAiB,QAAaxT,GAAU3gB,EAAGm0B,CAAY,EACpF,OAAQn0B,EAAE,QAAQ,YAAW,CAC3B,KAAKirB,GAAe,CAClB,MAAMwJ,EAAM5D,EAAkB,IAAI,SAAS,EACvCxQ,IAAa,QAAa,CAACM,GAAU3gB,EAAGqgB,CAAQ,GAC9CoU,IAAQ,QAAaA,EAAI,OAASz0B,EAAE,GAAG,QAAUy0B,EAAI,OAAS,aAChEH,IACAzD,EAAkB,IAAI,UAAWuD,EAAiBA,EAAe,UAAWp0B,EAAE,EAAE,EAAI,CAAE,KAAM,SAAW,IAEhGm0B,IAAiB,QAAa,CAACxT,GAAU3gB,EAAGm0B,CAAY,GAC7DM,IAAQ,QAAaA,EAAI,OAASz0B,EAAE,GAAG,QAAUy0B,EAAI,OAAS,WAChEH,IACAzD,EAAkB,IAAI,UAAWuD,EAAiBA,EAAe,QAASp0B,EAAE,EAAE,EAAI,CAAE,KAAM,OAAS,IAE5Fy0B,IAAQ,SACjBH,IACAzD,EAAkB,OAAO,SAAS,GAEpCtxB,GAAqCS,EAAE,QAAS,IAChD,KACD,CACD,KAAKwf,GACL,KAAKsL,GAAc,CACjBwJ,IAIA,MAAMV,EAAK,CACT,OAAQ5zB,EAAE,QAAQ,WAAU,EAAG,CAAC,CAChD,EACc,GAAI6wB,EAAkB,KAAO,EAAG,CAC9B,MAAM+B,EAA2C,GACjDgB,EAAG,WAAahB,EAChB/B,EAAkB,QAAQ,CAACjwB,EAAOJ,IAAQ,CACxCoyB,EAAMpyB,CAAG,EAAII,CAC/B,CAAiB,CACF,CACDyzB,EAAI,KAAKT,CAAE,EACX,KACD,CACD,KAAK7I,EACCpK,GAAU3gB,EAAGqgB,CAAQ,IACvBiU,IACAxD,GAAwBD,EAAiD7wB,EAAE,UAE7E,KACH,CAEHA,EAAIA,EAAE,KACP,CACDs0B,GACN,EACI,OAAIjU,GAAY8T,EAGdxf,EAASC,EAAKrE,GAAe,CACvB8P,GACFO,GAA6BrQ,EAAa8P,CAAQ,EAEhD8T,GACFvT,GAA6BrQ,EAAa4jB,CAAY,EAExDK,GACD,EAAE,SAAS,EAEZA,IAEKH,CACR,CAYD,OAAQx2B,EAAOg0B,EAAMJ,EAAY,CAC/B,GAAII,EAAK,QAAU,EACjB,OAEF,MAAMvE,EAAI,KAAK,IACXA,IAAM,KACR3Y,EAAS2Y,EAAG/c,GAAe,CACzB,MAAMoS,EAAMsO,GAAa1gB,EAAa,KAAM1S,EAAO,CAAC4zB,CAAU,EACzDA,IACHA,EAAa,GAEb9O,EAAI,kBAAkB,QAAQ,CAAChlB,EAAG0C,IAAM,CAAEoxB,EAAWpxB,CAAC,EAAI1C,CAAI,IAEhEi0B,GAAWrhB,EAAa,KAAMoS,EAAKkP,EAAMJ,CAAU,CAC3D,CAAO,EAE+B,KAAK,SAAU,KAAK,IAAM,KAAK,OAAO5zB,EAAOg0B,EAAMJ,CAAU,CAAC,CAEjG,CAYD,YAAa5zB,EAAOsZ,EAAOsa,EAAY,CACrC,MAAMnE,EAAI,KAAK,IACXA,IAAM,KACR3Y,EAAS2Y,EAAG/c,GAAe,CACzB,MAAMoS,EAAMsO,GAAa1gB,EAAa,KAAM1S,EAAO,CAAC4zB,CAAU,EAC9DG,GAAWrhB,EAAa,KAAMoS,EAAKxL,EAAOsa,GAAc,EAAE,CAClE,CAAO,EAE+B,KAAK,SAAU,KAAK,IAAM,KAAK,YAAY5zB,EAAOsZ,EAAOsa,GAAc,EAAE,CAAC,CAE7G,CAUD,OAAQ5zB,EAAO2D,EAAQ,CACrB,GAAIA,IAAW,EACb,OAEF,MAAM8rB,EAAI,KAAK,IACXA,IAAM,KACR3Y,EAAS2Y,EAAG/c,GAAe,CACzB2iB,GAAW3iB,EAAa0gB,GAAa1gB,EAAa,KAAM1S,EAAO,EAAI,EAAG2D,CAAM,CACpF,CAAO,EAE+B,KAAK,SAAU,KAAK,IAAM,KAAK,OAAO3D,EAAO2D,CAAM,CAAC,CAEvF,CAYD,OAAQ3D,EAAO2D,EAAQiwB,EAAY,CACjC,GAAIjwB,IAAW,EACb,OAEF,MAAM8rB,EAAI,KAAK,IACXA,IAAM,KACR3Y,EAAS2Y,EAAG/c,GAAe,CACzB,MAAMoS,EAAMsO,GAAa1gB,EAAa,KAAM1S,EAAO,EAAK,EACpD8kB,EAAI,QAAU,MAGlBoP,GAAWxhB,EAAa,KAAMoS,EAAKnhB,EAAQiwB,CAAU,CAC7D,CAAO,EAE+B,KAAK,SAAU,KAAK,IAAM,KAAK,OAAO5zB,EAAO2D,EAAQiwB,CAAU,CAAC,CAEnG,CAWD,gBAAiBiD,EAAe,CAC1B,KAAK,MAAQ,KACf/f,EAAS,KAAK,IAAKpE,GAAe,CAChC2e,GAAc3e,EAAa,KAAMmkB,CAAa,CACtD,CAAO,EAE+B,KAAK,SAAU,KAAK,IAAM,KAAK,gBAAgBA,CAAa,CAAC,CAEhG,CAYD,aAAcA,EAAeC,EAAgB,CACvC,KAAK,MAAQ,KACfhgB,EAAS,KAAK,IAAKpE,GAAe,CAChC4e,GAAW5e,EAAa,KAAMmkB,EAAeC,CAAc,CACnE,CAAO,EAE+B,KAAK,SAAU,KAAK,IAAM,KAAK,aAAaD,EAAeC,CAAc,CAAC,CAE7G,CAaD,aAAcD,EAAe,CAC3B,OAA2BtF,GAAW,KAAMsF,CAAa,CAC1D,CAWD,eAAiB,CACf,OAAOrF,GAAc,IAAI,CAC1B,CAKD,OAAQtrB,EAAS,CACfA,EAAQ,aAAa6wB,EAAU,CAChC,CACH,CASA,MAAMC,GAAY3E,GAAY,IAAI/a,EAoClC,MAAM2f,EAAe,CAKnB,YAAaC,EAAM/2B,EAAI,IAAM,GAAM,CACjC,KAAK,QAAUA,EACf,KAAK,MAAQ+2B,EAIb,KAAK,aAAoCA,EAAK,OAC9C,KAAK,WAAa,EACnB,CAED,CAAC,OAAO,QAAQ,GAAK,CACnB,OAAO,IACR,CASD,MAAQ,CAIN,IAAI/0B,EAAI,KAAK,aACTxD,EAAOwD,GAAKA,EAAE,SAA+BA,EAAE,QAAS,KAC5D,GAAIA,IAAM,OAAS,CAAC,KAAK,YAAcA,EAAE,SAAW,CAAC,KAAK,QAAQxD,CAAI,GACpE,EAEE,IADAA,EAA2BwD,EAAE,QAAS,KAClC,CAACA,EAAE,UAAYxD,EAAK,cAAgBiuB,IAAejuB,EAAK,cAAgB6Y,KAAiB7Y,EAAK,SAAW,KAE3GwD,EAAIxD,EAAK,WAGT,MAAOwD,IAAM,MACX,GAAIA,EAAE,QAAU,KAAM,CACpBA,EAAIA,EAAE,MACN,KACD,MAAUA,EAAE,SAAW,KAAK,MAC3BA,EAAI,KAEJA,EAAsCA,EAAE,OAAQ,YAI/CA,IAAM,OAASA,EAAE,SAAW,CAAC,KAAK,QAAoCA,EAAE,QAAS,IAAI,IAGhG,OADA,KAAK,WAAa,GACdA,IAAM,KAED,CAAE,MAAO,OAAW,KAAM,EAAM,GAEzC,KAAK,aAAeA,EACb,CAAE,MAA2BA,EAAE,QAAS,KAAM,KAAM,EAAO,EACnE,CACH,CAWA,MAAMqV,WAAqBN,CAAa,CACtC,aAAe,CACb,QAIA,KAAK,eAAiB,EACvB,CAKD,IAAI,YAAc,CAChB,MAAMigB,EAAQ,KAAK,OACnB,OAAOA,EAAQA,EAAM,QAAQ,WAAY,EAAC,CAAC,EAAI,IAChD,CAYD,WAAY1H,EAAGrhB,EAAM,CACnB,MAAM,WAAWqhB,EAAGrhB,CAAI,EACxB,KAAK,OAAO,EAA8B,KAAK,cAAc,EAC7D,KAAK,eAAiB,IACvB,CAED,OAAS,CACP,OAAO,IAAIoJ,EACZ,CAKD,OAAS,CACP,MAAMya,EAAK,IAAIza,GAEf,OAAAya,EAAG,OAAO,EAAG,KAAK,QAAS,EAAC,IAAI7jB,GAAQA,aAAgB8I,EAAe9I,EAAK,MAAK,EAAKA,CAAI,CAAC,EACpF6jB,CACR,CAED,IAAI,QAAU,CACZ,OAAO,KAAK,iBAAmB,KAAO,KAAK,QAAU,KAAK,eAAe,MAC1E,CAmBD,iBAAkBzyB,EAAQ,CACxB,OAAO,IAAIy3B,GAAe,KAAMz3B,CAAM,CACvC,CAiBD,cAAe43B,EAAO,CACpBA,EAAQA,EAAM,cAGd,MAAMvlB,EADW,IAAIolB,GAAe,KAAMI,GAAWA,EAAQ,UAAYA,EAAQ,SAAS,YAAa,IAAKD,CAAK,EAC3F,OACtB,OAAIvlB,EAAK,KACA,KAEAA,EAAK,KAEf,CAaD,iBAAkBulB,EAAO,CACvB,OAAAA,EAAQA,EAAM,cAEPzoB,GAAW,IAAIsoB,GAAe,KAAMI,GAAWA,EAAQ,UAAYA,EAAQ,SAAS,YAAa,IAAKD,CAAK,CAAC,CACpH,CAQD,cAAe1kB,EAAawf,EAAY,CACtC3C,GAAkB,KAAM7c,EAAa,IAAI4kB,GAAU,KAAMpF,EAAYxf,CAAW,CAAC,CAClF,CAOD,UAAY,CACV,OAAOyd,GAAY,KAAMoH,GAAOA,EAAI,UAAU,EAAE,KAAK,EAAE,CACxD,CAKD,QAAU,CACR,OAAO,KAAK,SAAU,CACvB,CAiBD,MAAOC,EAAY,SAAUC,EAAQ,GAAIC,EAAS,CAChD,MAAMC,EAAWH,EAAU,yBAC3B,OAAIE,IAAY,QACdA,EAAQ,mBAAmBC,EAAU,IAAI,EAE3CzH,GAAgB,KAAM0H,GAAW,CAC/BD,EAAS,aAAaC,EAAQ,MAAMJ,EAAWC,EAAOC,CAAO,EAAG,IAAI,CAC1E,CAAK,EACMC,CACR,CAYD,OAAQ33B,EAAO0X,EAAS,CAClB,KAAK,MAAQ,KACfZ,EAAS,KAAK,IAAKpE,GAAe,CAChCoe,GAAuBpe,EAAa,KAAM1S,EAAO0X,CAAO,CAChE,CAAO,EAGD,KAAK,eAAe,OAAO1X,EAAO,EAAG,GAAG0X,CAAO,CAElD,CAYD,YAAazK,EAAKyK,EAAS,CACzB,GAAI,KAAK,MAAQ,KACfZ,EAAS,KAAK,IAAKpE,GAAe,CAChC,MAAMmlB,EAAW5qB,GAAOA,aAAeiK,EAAgBjK,EAAI,MAAQA,EACnEujB,GAA4B9d,EAAa,KAAMmlB,EAASngB,CAAO,CACvE,CAAO,MACI,CACL,MAAMogB,EAAgC,KAAK,eACrC93B,EAAQiN,IAAQ,KAAO,EAAI6qB,EAAG,UAAU7F,GAAMA,IAAOhlB,CAAG,EAAI,EAClE,GAAIjN,IAAU,GAAKiN,IAAQ,KACzB,MAAMpD,GAAa,0BAA0B,EAE/CiuB,EAAG,OAAO93B,EAAO,EAAG,GAAG0X,CAAO,CAC/B,CACF,CAQD,OAAQ1X,EAAO2D,EAAS,EAAG,CACrB,KAAK,MAAQ,KACfmT,EAAS,KAAK,IAAKpE,GAAe,CAChCye,GAAeze,EAAa,KAAM1S,EAAO2D,CAAM,CACvD,CAAO,EAGD,KAAK,eAAe,OAAO3D,EAAO2D,CAAM,CAE3C,CAOD,SAAW,CACT,OAAOqsB,GAAgB,IAAI,CAC5B,CAOD,KAAMtY,EAAS,CACb,KAAK,OAAO,KAAK,OAAQA,CAAO,CACjC,CAOD,QAASA,EAAS,CAChB,KAAK,OAAO,EAAGA,CAAO,CACvB,CAQD,IAAK1X,EAAO,CACV,OAAOuwB,GAAY,KAAMvwB,CAAK,CAC/B,CASD,MAAO8vB,EAAQ,EAAG7jB,EAAM,KAAK,OAAQ,CACnC,OAAO4jB,GAAc,KAAMC,EAAO7jB,CAAG,CACtC,CAOD,QAAS9L,EAAG,CACV+vB,GAAgB,KAAM/vB,CAAC,CACxB,CAUD,OAAQ+F,EAAS,CACfA,EAAQ,aAAa6xB,EAAiB,CACvC,CACH,CASA,MAAMC,GAAmB3F,GAAY,IAAI7a,GAezC,MAAMoV,WAAoBpV,EAAa,CACrC,YAAaygB,EAAW,YAAa,CACnC,QACA,KAAK,SAAWA,EAIhB,KAAK,aAAe,IAAI,GACzB,CAKD,IAAI,aAAe,CACjB,MAAM91B,EAAI,KAAK,MAAQ,KAAK,MAAM,KAAO,KACzC,OAAOA,EAAqEA,EAAE,QAAS,KAAQ,IAChG,CAKD,IAAI,aAAe,CACjB,MAAMA,EAAI,KAAK,MAAQ,KAAK,MAAM,KAAO,KACzC,OAAOA,EAAqEA,EAAE,QAAS,KAAQ,IAChG,CAYD,WAAYstB,EAAGrhB,EAAM,CACnB,MAAM,WAAWqhB,EAAGrhB,CAAI,EACW,KAAK,aAAe,QAAQ,CAACrL,EAAOJ,IAAQ,CAC7E,KAAK,aAAaA,EAAKI,CAAK,CAClC,CAAK,EACD,KAAK,aAAe,IACrB,CAOD,OAAS,CACP,OAAO,IAAI6pB,GAAY,KAAK,QAAQ,CACrC,CAKD,OAAS,CAIP,MAAMqF,EAAK,IAAIrF,GAAY,KAAK,QAAQ,EAClCmI,EAAQ,KAAK,gBACnBmD,UAAenD,EAAO,CAAChyB,EAAOJ,IAAQ,CAChC,OAAOI,GAAU,UACnBkvB,EAAG,aAAatvB,EAAKI,CAAK,CAElC,CAAK,EAEDkvB,EAAG,OAAO,EAAG,KAAK,QAAS,EAAC,IAAI7jB,GAAQA,aAAgB8I,EAAe9I,EAAK,MAAK,EAAKA,CAAI,CAAC,EACpF6jB,CACR,CAWD,UAAY,CACV,MAAM8C,EAAQ,KAAK,gBACboD,EAAgB,GAChB30B,EAAO,GACb,UAAWb,KAAOoyB,EAChBvxB,EAAK,KAAKb,CAAG,EAEfa,EAAK,KAAI,EACT,MAAM40B,EAAU50B,EAAK,OACrB,QAASnF,EAAI,EAAGA,EAAI+5B,EAAS/5B,IAAK,CAChC,MAAMsE,EAAMa,EAAKnF,CAAC,EAClB85B,EAAc,KAAKx1B,EAAM,KAAOoyB,EAAMpyB,CAAG,EAAI,GAAG,CACjD,CACD,MAAMs1B,EAAW,KAAK,SAAS,kBAAiB,EAC1CI,EAAcF,EAAc,OAAS,EAAI,IAAMA,EAAc,KAAK,GAAG,EAAI,GAC/E,MAAO,IAAIF,CAAQ,GAAGI,CAAW,IAAI,MAAM,SAAU,MAAKJ,CAAQ,GACnE,CASD,gBAAiBpB,EAAe,CAC1B,KAAK,MAAQ,KACf/f,EAAS,KAAK,IAAKpE,GAAe,CAChC2e,GAAc3e,EAAa,KAAMmkB,CAAa,CACtD,CAAO,EAE+B,KAAK,aAAc,OAAOA,CAAa,CAE1E,CAYD,aAAcA,EAAeC,EAAgB,CACvC,KAAK,MAAQ,KACfhgB,EAAS,KAAK,IAAKpE,GAAe,CAChC4e,GAAW5e,EAAa,KAAMmkB,EAAeC,CAAc,CACnE,CAAO,EAEgC,KAAK,aAAc,IAAID,EAAeC,CAAc,CAExF,CAaD,aAAcD,EAAe,CAC3B,OAA2BtF,GAAW,KAAMsF,CAAa,CAC1D,CAUD,aAAcA,EAAe,CAC3B,OAA2BpF,GAAW,KAAMoF,CAAa,CAC1D,CAUD,cAAerU,EAAU,CACvB,OAA2BA,EAAWmP,GAAsB,KAAMnP,CAAQ,EAAIgP,GAAc,IAAI,CACjG,CAiBD,MAAOgG,EAAY,SAAUC,EAAQ,GAAIC,EAAS,CAChD,MAAMY,EAAMd,EAAU,cAAc,KAAK,QAAQ,EAC3CzC,EAAQ,KAAK,gBACnB,UAAWpyB,KAAOoyB,EAAO,CACvB,MAAMhyB,EAAQgyB,EAAMpyB,CAAG,EACnB,OAAOI,GAAU,UACnBu1B,EAAI,aAAa31B,EAAKI,CAAK,CAE9B,CACD,OAAAmtB,GAAgB,KAAM7D,GAAQ,CAC5BiM,EAAI,YAAYjM,EAAK,MAAMmL,EAAWC,EAAOC,CAAO,CAAC,CAC3D,CAAK,EACGA,IAAY,QACdA,EAAQ,mBAAmBY,EAAK,IAAI,EAE/BA,CACR,CAUD,OAAQpyB,EAAS,CACfA,EAAQ,aAAaqyB,EAAgB,EACrCryB,EAAQ,SAAS,KAAK,QAAQ,CAC/B,CACH,CAQA,MAAMsyB,GAAkBtuB,GAAW,IAAI0iB,GAAY1iB,EAAQ,QAAS,GAMpE,MAAMotB,WAAkB1J,EAAO,CAQ7B,YAAalvB,EAAQinB,EAAMjT,EAAa,CACtC,MAAMhU,EAAQgU,CAAW,EAMzB,KAAK,iBAAmB,GAKxB,KAAK,kBAAoB,IAAI,IAC7BiT,EAAK,QAAS8P,GAAQ,CAChBA,IAAQ,KACV,KAAK,iBAAmB,GAExB,KAAK,kBAAkB,IAAIA,CAAG,CAEtC,CAAK,CACF,CACH,CAOA,MAAM5I,WAAiBtV,CAAK,CAI1B,YAAakhB,EAAU,CACrB,QAIA,KAAK,SAAWA,CACjB,CAKD,OAAS,CACP,OAAO,IAAI5L,GAAS,KAAK,QAAQ,CAClC,CAKD,OAAS,CACP,MAAMoF,EAAK,IAAIpF,GAAS,KAAK,QAAQ,EACrC,YAAK,QAAQ,CAAC9pB,EAAOJ,IAAQ,CAC3BsvB,EAAG,IAAItvB,EAAKI,CAAK,CACvB,CAAK,EACMkvB,CACR,CAiBD,MAAOuF,EAAY,SAAUC,EAAQ,GAAIC,EAAS,CAChD,MAAMgB,EAAOjB,EAAM,KAAK,QAAQ,EAChC,IAAIa,EACJ,OAAII,IAAS,OACXJ,EAAMI,EAAK,UAAU,IAAI,EAEzBJ,EAAM,SAAS,cAAc,KAAK,QAAQ,EAE5CA,EAAI,aAAa,gBAAiB,KAAK,QAAQ,EAC3CZ,IAAY,QACdA,EAAQ,mBAAmBY,EAAK,IAAI,EAE/BA,CACR,CAUD,OAAQpyB,EAAS,CACfA,EAAQ,aAAayyB,EAAa,EAClCzyB,EAAQ,SAAS,KAAK,QAAQ,CAC/B,CACH,CASA,MAAM0yB,GAAe1uB,GACnB,IAAI2iB,GAAS3iB,EAAQ,QAAO,CAAE,EAMhC,MAAM2uB,WAAiBvhB,CAAM,CAI3B,IAAI,aAAe,CACjB,MAAMnV,EAAI,KAAK,MAAQ,KAAK,MAAM,KAAO,KACzC,OAAOA,EAAqEA,EAAE,QAAS,KAAQ,IAChG,CAKD,IAAI,aAAe,CACjB,MAAMA,EAAI,KAAK,MAAQ,KAAK,MAAM,KAAO,KACzC,OAAOA,EAAqEA,EAAE,QAAS,KAAQ,IAChG,CAED,OAAS,CACP,OAAO,IAAI02B,EACZ,CAKD,OAAS,CACP,MAAM7E,EAAO,IAAI6E,GACjB,OAAA7E,EAAK,WAAW,KAAK,QAAS,GACvBA,CACR,CAiBD,MAAOwD,EAAY,SAAUC,EAAOC,EAAS,CAC3C,MAAMY,EAAMd,EAAU,eAAe,KAAK,SAAU,GACpD,OAAIE,IAAY,QACdA,EAAQ,mBAAmBY,EAAK,IAAI,EAE/BA,CACR,CAED,UAAY,CAEV,OAAO,KAAK,UAAU,IAAIjK,GAAS,CACjC,MAAMyK,EAAc,GACpB,UAAWb,KAAY5J,EAAM,WAAY,CACvC,MAAM0G,EAAQ,GACd,UAAWpyB,KAAO0rB,EAAM,WAAW4J,CAAQ,EACzClD,EAAM,KAAK,CAAE,IAAApyB,EAAK,MAAO0rB,EAAM,WAAW4J,CAAQ,EAAEt1B,CAAG,CAAC,CAAE,EAG5DoyB,EAAM,KAAK,CAACv3B,EAAGS,IAAMT,EAAE,IAAMS,EAAE,IAAM,GAAK,CAAC,EAC3C66B,EAAY,KAAK,CAAE,SAAAb,EAAU,MAAAlD,CAAO,EACrC,CAED+D,EAAY,KAAK,CAACt7B,EAAGS,IAAMT,EAAE,SAAWS,EAAE,SAAW,GAAK,CAAC,EAE3D,IAAIyD,EAAM,GACV,QAASrD,EAAI,EAAGA,EAAIy6B,EAAY,OAAQz6B,IAAK,CAC3C,MAAMoP,EAAOqrB,EAAYz6B,CAAC,EAC1BqD,GAAO,IAAI+L,EAAK,QAAQ,GACxB,QAASgG,EAAI,EAAGA,EAAIhG,EAAK,MAAM,OAAQgG,IAAK,CAC1C,MAAM2gB,EAAO3mB,EAAK,MAAMgG,CAAC,EACzB/R,GAAO,IAAI0yB,EAAK,GAAG,KAAKA,EAAK,KAAK,GACnC,CACD1yB,GAAO,GACR,CACDA,GAAO2sB,EAAM,OACb,QAAShwB,EAAIy6B,EAAY,OAAS,EAAGz6B,GAAK,EAAGA,IAC3CqD,GAAO,KAAKo3B,EAAYz6B,CAAC,EAAE,QAAQ,IAErC,OAAOqD,CACb,CAAK,EAAE,KAAK,EAAE,CACX,CAKD,QAAU,CACR,OAAO,KAAK,SAAU,CACvB,CAKD,OAAQwE,EAAS,CACfA,EAAQ,aAAa6yB,EAAa,CACnC,CACH,CASA,MAAMC,GAAe9uB,GAAW,IAAI2uB,GAEpC,MAAMI,EAAe,CAKnB,YAAa70B,EAAIT,EAAQ,CACvB,KAAK,GAAKS,EACV,KAAK,OAAST,CACf,CAKD,IAAI,SAAW,CACb,MAAM+rB,GAA2B,CAClC,CASD,UAAWtgB,EAAO,CAChB,MAAO,EACR,CAOD,MAAOlJ,EAAS6V,EAAQmd,EAAa,CACnC,MAAMxJ,GAA2B,CAClC,CAMD,UAAWhd,EAAaqJ,EAAQ,CAC9B,MAAM2T,GAA2B,CAClC,CACH,CAEA,MAAMyJ,GAAoB,EAK1B,MAAMve,WAAWqe,EAAe,CAC9B,IAAI,SAAW,CACb,MAAO,EACR,CAED,QAAU,CAAE,CAMZ,UAAW7pB,EAAO,CAChB,OAAI,KAAK,cAAgBA,EAAM,YACtB,IAET,KAAK,QAAUA,EAAM,OACd,GACR,CAMD,UAAWsD,EAAaqJ,EAAQ,CAC1BA,EAAS,IACX,KAAK,GAAG,OAASA,EACjB,KAAK,QAAUA,GAEjBgI,GAAUrR,EAAY,IAAI,MAAO,IAAI,CACtC,CAMD,MAAOxM,EAAS6V,EAAQ,CACtB7V,EAAQ,UAAUizB,EAAiB,EACnCjzB,EAAQ,SAAS,KAAK,OAAS6V,CAAM,CACtC,CAOD,WAAYrJ,EAAaqC,EAAO,CAC9B,OAAO,IACR,CACH,CAEA,MAAMgY,EAAc,CAIlB,YAAarV,EAAS,CACpB,KAAK,QAAUA,CAChB,CAKD,WAAa,CACX,MAAO,EACR,CAKD,YAAc,CACZ,MAAO,CAAC,KAAK,OAAO,CACrB,CAKD,aAAe,CACb,MAAO,EACR,CAKD,MAAQ,CACN,OAAO,IAAIqV,GAAc,KAAK,OAAO,CACtC,CAMD,OAAQhR,EAAQ,CACd,MAAM2T,GAA2B,CAClC,CAMD,UAAWtgB,EAAO,CAChB,MAAO,EACR,CAMD,UAAWsD,EAAatE,EAAM,CAAE,CAIhC,OAAQsE,EAAa,CAAE,CAIvB,GAAIqC,EAAO,CAAE,CAKb,MAAO7O,EAAS6V,EAAQ,CACtB7V,EAAQ,SAAS,KAAK,OAAO,CAC9B,CAKD,QAAU,CACR,MAAO,EACR,CACH,CAMA,MAAMkzB,GAAoBlvB,GAAW,IAAI6iB,GAAc7iB,EAAQ,QAAS,GAExE,MAAMyiB,EAAe,CAInB,YAAa7rB,EAAK,CAChB,KAAK,IAAMA,CACZ,CAKD,WAAa,CACX,OAAO,KAAK,GACb,CAKD,YAAc,CACZ,MAAO,CAAE,CACV,CAKD,aAAe,CACb,MAAO,EACR,CAKD,MAAQ,CACN,OAAO,IAAI6rB,GAAe,KAAK,GAAG,CACnC,CAMD,OAAQ5Q,EAAQ,CACd,MAAM3M,EAAQ,IAAIud,GAAe,KAAK,IAAM5Q,CAAM,EAClD,YAAK,IAAMA,EACJ3M,CACR,CAMD,UAAWA,EAAO,CAChB,YAAK,KAAOA,EAAM,IACX,EACR,CAMD,UAAWsD,EAAatE,EAAM,CAC5B6F,GAAevB,EAAY,UAAWtE,EAAK,GAAG,OAAQA,EAAK,GAAG,MAAO,KAAK,GAAG,EAC7EA,EAAK,YAAW,CACjB,CAKD,OAAQsE,EAAa,CAAE,CAIvB,GAAIqC,EAAO,CAAE,CAKb,MAAO7O,EAAS6V,EAAQ,CACtB7V,EAAQ,SAAS,KAAK,IAAM6V,CAAM,CACnC,CAKD,QAAU,CACR,MAAO,EACR,CACH,CAQA,MAAMsd,GAAqBnvB,GAAW,IAAIyiB,GAAeziB,EAAQ,QAAS,GAMpEovB,GAAoB,CAACtjB,EAAMuX,IAAS,IAAIxX,GAAI,CAAE,KAAAC,EAAM,GAAGuX,EAAM,WAAYA,EAAK,YAAcA,EAAK,UAAY,EAAK,CAAE,EAK1H,MAAMP,EAAW,CAIf,YAAajW,EAAK,CACZA,EAAI,OACN,QAAQ,MAAM,yHAAyH,EAKzI,KAAK,IAAMA,EAIX,MAAMwW,EAAO,GACb,KAAK,KAAOA,EACPxW,EAAI,KACPwW,EAAK,GAAK,IAERxW,EAAI,WACNwW,EAAK,SAAW,IAEdxW,EAAI,OAAS,OACfwW,EAAK,KAAOxW,EAAI,KAEnB,CAKD,WAAa,CACX,MAAO,EACR,CAKD,YAAc,CACZ,MAAO,CAAC,KAAK,GAAG,CACjB,CAKD,aAAe,CACb,MAAO,EACR,CAKD,MAAQ,CACN,OAAO,IAAIiW,GAAWsM,GAAkB,KAAK,IAAI,KAAM,KAAK,IAAI,CAAC,CAClE,CAMD,OAAQvd,EAAQ,CACd,MAAM2T,GAA2B,CAClC,CAMD,UAAWtgB,EAAO,CAChB,MAAO,EACR,CAMD,UAAWsD,EAAatE,EAAM,CAE5B,KAAK,IAAI,MAAQA,EACjBsE,EAAY,aAAa,IAAI,KAAK,GAAG,EACjC,KAAK,IAAI,YACXA,EAAY,cAAc,IAAI,KAAK,GAAG,CAEzC,CAKD,OAAQA,EAAa,CACfA,EAAY,aAAa,IAAI,KAAK,GAAG,EACvCA,EAAY,aAAa,OAAO,KAAK,GAAG,EAExCA,EAAY,eAAe,IAAI,KAAK,GAAG,CAE1C,CAKD,GAAIqC,EAAO,CAAG,CAMd,MAAO7O,EAAS6V,EAAQ,CACtB7V,EAAQ,YAAY,KAAK,IAAI,IAAI,EACjCA,EAAQ,SAAS,KAAK,IAAI,CAC3B,CAKD,QAAU,CACR,MAAO,EACR,CACH,CAQA,MAAMqzB,GAAiBrvB,GAAW,IAAI8iB,GAAWsM,GAAkBpvB,EAAQ,WAAU,EAAIA,EAAQ,QAAS,EAAC,EAK3G,MAAM+iB,EAAa,CAIjB,YAAa3T,EAAO,CAClB,KAAK,MAAQA,CACd,CAKD,WAAa,CACX,MAAO,EACR,CAKD,YAAc,CACZ,MAAO,CAAC,KAAK,KAAK,CACnB,CAKD,aAAe,CACb,MAAO,EACR,CAKD,MAAQ,CACN,OAAO,IAAI2T,GAAa,KAAK,KAAK,CACnC,CAMD,OAAQlR,EAAQ,CACd,MAAM2T,GAA2B,CAClC,CAMD,UAAWtgB,EAAO,CAChB,MAAO,EACR,CAMD,UAAWsD,EAAatE,EAAM,CAAE,CAIhC,OAAQsE,EAAa,CAAE,CAIvB,GAAIqC,EAAO,CAAE,CAKb,MAAO7O,EAAS6V,EAAQ,CACtB7V,EAAQ,UAAU,KAAK,KAAK,CAC7B,CAKD,QAAU,CACR,MAAO,EACR,CACH,CAQA,MAAMszB,GAAmBtvB,GAAW,IAAI+iB,GAAa/iB,EAAQ,SAAU,GAKvE,MAAMgjB,CAAc,CAKlB,YAAavqB,EAAKI,EAAO,CACvB,KAAK,IAAMJ,EACX,KAAK,MAAQI,CACd,CAKD,WAAa,CACX,MAAO,EACR,CAKD,YAAc,CACZ,MAAO,CAAE,CACV,CAKD,aAAe,CACb,MAAO,EACR,CAKD,MAAQ,CACN,OAAO,IAAImqB,EAAc,KAAK,IAAK,KAAK,KAAK,CAC9C,CAMD,OAAQuM,EAAS,CACf,MAAM/J,GAA2B,CAClC,CAMD,UAAWgK,EAAQ,CACjB,MAAO,EACR,CAMD,UAAWC,EAAcvrB,EAAM,CAE7B,MAAMugB,EAA0BvgB,EAAK,OACrCugB,EAAE,cAAgB,KAClBA,EAAE,eAAiB,EACpB,CAKD,OAAQjc,EAAa,CAAE,CAIvB,GAAIqC,EAAO,CAAE,CAKb,MAAO7O,EAAS6V,EAAQ,CACtB7V,EAAQ,SAAS,KAAK,GAAG,EACzBA,EAAQ,UAAU,KAAK,KAAK,CAC7B,CAKD,QAAU,CACR,MAAO,EACR,CACH,CAMA,MAAM0zB,GAAoB1vB,GAAW,IAAIgjB,EAAchjB,EAAQ,UAAWA,EAAQ,SAAQ,CAAE,EAK5F,MAAMijB,EAAY,CAIhB,YAAa5sB,EAAK,CAIhB,KAAK,IAAMA,CACZ,CAKD,WAAa,CACX,OAAO,KAAK,IAAI,MACjB,CAKD,YAAc,CACZ,OAAO,KAAK,GACb,CAKD,aAAe,CACb,MAAO,EACR,CAKD,MAAQ,CACN,OAAO,IAAI4sB,GAAY,KAAK,GAAG,CAChC,CAMD,OAAQpR,EAAQ,CACd,MAAM3M,EAAQ,IAAI+d,GAAY,KAAK,IAAI,MAAMpR,CAAM,CAAC,EACpD,YAAK,IAAM,KAAK,IAAI,MAAM,EAAGA,CAAM,EAC5B3M,CACR,CAMD,UAAWA,EAAO,CAChB,YAAK,IAAM,KAAK,IAAI,OAAOA,EAAM,GAAG,EAC7B,EACR,CAMD,UAAWsD,EAAatE,EAAM,CAAE,CAIhC,OAAQsE,EAAa,CAAE,CAIvB,GAAIqC,EAAO,CAAE,CAKb,MAAO7O,EAAS6V,EAAQ,CACtB,MAAMjb,EAAM,KAAK,IAAI,OACrBoF,EAAQ,SAASpF,EAAMib,CAAM,EAC7B,QAAS1d,EAAI0d,EAAQ1d,EAAIyC,EAAKzC,IAAK,CACjC,MAAM2Q,EAAI,KAAK,IAAI3Q,CAAC,EACpB6H,EAAQ,YAAY8I,IAAM,OAAY,YAAc,KAAK,UAAUA,CAAC,CAAC,CACtE,CACF,CAKD,QAAU,CACR,MAAO,EACR,CACH,CAQA,MAAM6qB,GAAkB3vB,GAAW,CACjC,MAAMpJ,EAAMoJ,EAAQ,UACd6lB,EAAK,GACX,QAAS1xB,EAAI,EAAGA,EAAIyC,EAAKzC,IAAK,CAC5B,MAAM2Q,EAAI9E,EAAQ,aACd8E,IAAM,YACR+gB,EAAG,KAAK,MAAS,EAEjBA,EAAG,KAAK,KAAK,MAAM/gB,CAAC,CAAC,CAExB,CACD,OAAO,IAAIme,GAAY4C,CAAE,CAC3B,EAEA,MAAMjD,EAAW,CAIf,YAAavsB,EAAK,CAIhB,KAAK,IAAMA,CACZ,CAKD,WAAa,CACX,OAAO,KAAK,IAAI,MACjB,CAKD,YAAc,CACZ,OAAO,KAAK,GACb,CAKD,aAAe,CACb,MAAO,EACR,CAKD,MAAQ,CACN,OAAO,IAAIusB,GAAW,KAAK,GAAG,CAC/B,CAMD,OAAQ/Q,EAAQ,CACd,MAAM3M,EAAQ,IAAI0d,GAAW,KAAK,IAAI,MAAM/Q,CAAM,CAAC,EACnD,YAAK,IAAM,KAAK,IAAI,MAAM,EAAGA,CAAM,EAC5B3M,CACR,CAMD,UAAWA,EAAO,CAChB,YAAK,IAAM,KAAK,IAAI,OAAOA,EAAM,GAAG,EAC7B,EACR,CAMD,UAAWsD,EAAatE,EAAM,CAAE,CAIhC,OAAQsE,EAAa,CAAE,CAIvB,GAAIqC,EAAO,CAAE,CAKb,MAAO7O,EAAS6V,EAAQ,CACtB,MAAMjb,EAAM,KAAK,IAAI,OACrBoF,EAAQ,SAASpF,EAAMib,CAAM,EAC7B,QAAS1d,EAAI0d,EAAQ1d,EAAIyC,EAAKzC,IAAK,CACjC,MAAM2Q,EAAI,KAAK,IAAI3Q,CAAC,EACpB6H,EAAQ,SAAS8I,CAAC,CACnB,CACF,CAKD,QAAU,CACR,MAAO,EACR,CACH,CAMA,MAAM8qB,GAAiB5vB,GAAW,CAChC,MAAMpJ,EAAMoJ,EAAQ,UACd6lB,EAAK,GACX,QAAS1xB,EAAI,EAAGA,EAAIyC,EAAKzC,IACvB0xB,EAAG,KAAK7lB,EAAQ,QAAS,GAE3B,OAAO,IAAI4iB,GAAWiD,CAAE,CAC1B,EAKA,MAAM3C,EAAc,CAIlB,YAAa1rB,EAAK,CAIhB,KAAK,IAAMA,CACZ,CAKD,WAAa,CACX,OAAO,KAAK,IAAI,MACjB,CAKD,YAAc,CACZ,OAAO,KAAK,IAAI,MAAM,EAAE,CACzB,CAKD,aAAe,CACb,MAAO,EACR,CAKD,MAAQ,CACN,OAAO,IAAI0rB,GAAc,KAAK,GAAG,CAClC,CAMD,OAAQrR,EAAQ,CACd,MAAM3M,EAAQ,IAAIge,GAAc,KAAK,IAAI,MAAMrR,CAAM,CAAC,EACtD,KAAK,IAAM,KAAK,IAAI,MAAM,EAAGA,CAAM,EAGnC,MAAMge,EAAgB,KAAK,IAAI,WAAWhe,EAAS,CAAC,EACpD,OAAIge,GAAiB,OAAUA,GAAiB,QAI9C,KAAK,IAAM,KAAK,IAAI,MAAM,EAAGhe,EAAS,CAAC,EAAI,IAE3C3M,EAAM,IAAM,IAAMA,EAAM,IAAI,MAAM,CAAC,GAE9BA,CACR,CAMD,UAAWA,EAAO,CAChB,YAAK,KAAOA,EAAM,IACX,EACR,CAMD,UAAWsD,EAAatE,EAAM,CAAE,CAIhC,OAAQsE,EAAa,CAAE,CAIvB,GAAIqC,EAAO,CAAE,CAKb,MAAO7O,EAAS6V,EAAQ,CACtB7V,EAAQ,YAAY6V,IAAW,EAAI,KAAK,IAAM,KAAK,IAAI,MAAMA,CAAM,CAAC,CACrE,CAKD,QAAU,CACR,MAAO,EACR,CACH,CAQA,MAAMie,GAAoB9vB,GAAW,IAAIkjB,GAAcljB,EAAQ,WAAY,GAMrE+vB,GAAW,CACf7H,GACAQ,GACAoE,GACAwB,GACAR,GACAY,GACAI,EACF,EAEM7G,GAAc,EACdQ,GAAY,EACZoE,GAAa,EACbwB,GAAmB,EACnBR,GAAoB,EACpBY,GAAgB,EAChBI,GAAgB,EAKtB,MAAMpX,EAAY,CAIhB,YAAahjB,EAAM,CAIjB,KAAK,KAAOA,CACb,CAKD,WAAa,CACX,MAAO,EACR,CAKD,YAAc,CACZ,MAAO,CAAC,KAAK,IAAI,CAClB,CAKD,aAAe,CACb,MAAO,EACR,CAKD,MAAQ,CACN,OAAO,IAAIgjB,GAAY,KAAK,KAAK,MAAK,CAAE,CACzC,CAMD,OAAQ5F,EAAQ,CACd,MAAM2T,GAA2B,CAClC,CAMD,UAAWtgB,EAAO,CAChB,MAAO,EACR,CAMD,UAAWsD,EAAatE,EAAM,CAC5B,KAAK,KAAK,WAAWsE,EAAY,IAAKtE,CAAI,CAC3C,CAKD,OAAQsE,EAAa,CACnB,IAAItE,EAAO,KAAK,KAAK,OACrB,KAAOA,IAAS,MACTA,EAAK,QAECA,EAAK,GAAG,OAASsE,EAAY,YAAY,IAAItE,EAAK,GAAG,MAAM,GAAK,IAKzEsE,EAAY,cAAc,KAAKtE,CAAI,EANnCA,EAAK,OAAOsE,CAAW,EAQzBtE,EAAOA,EAAK,MAEd,KAAK,KAAK,KAAK,QAAQA,GAAQ,CACxBA,EAAK,QAECA,EAAK,GAAG,OAASsE,EAAY,YAAY,IAAItE,EAAK,GAAG,MAAM,GAAK,IAEzEsE,EAAY,cAAc,KAAKtE,CAAI,EAHnCA,EAAK,OAAOsE,CAAW,CAK/B,CAAK,EACDA,EAAY,QAAQ,OAAO,KAAK,IAAI,CACrC,CAKD,GAAIqC,EAAO,CACT,IAAI3G,EAAO,KAAK,KAAK,OACrB,KAAOA,IAAS,MACdA,EAAK,GAAG2G,EAAO,EAAI,EACnB3G,EAAOA,EAAK,MAEd,KAAK,KAAK,OAAS,KACnB,KAAK,KAAK,KAAK,QAA0CA,GAAS,CAChE,KAAOA,IAAS,MACdA,EAAK,GAAG2G,EAAO,EAAI,EACnB3G,EAAOA,EAAK,IAEpB,CAAK,EACD,KAAK,KAAK,KAAO,IAAI,GACtB,CAMD,MAAOlI,EAAS6V,EAAQ,CACtB,KAAK,KAAK,OAAO7V,CAAO,CACzB,CAKD,QAAU,CACR,MAAO,EACR,CACH,CAQA,MAAMg0B,GAAkBhwB,GAAW,IAAIyX,GAAYsY,GAAS/vB,EAAQ,YAAa,GAAEA,CAAO,CAAC,EASrFwX,GAAe,CAAC3M,EAAO3Q,IAAO,CAIlC,IAAI+1B,EAAS/1B,EACT0H,EAAO,EACPsC,EACJ,GACMtC,EAAO,IACTquB,EAASriB,EAASqiB,EAAO,OAAQA,EAAO,MAAQruB,CAAI,GAEtDsC,EAAO6V,GAAQlP,EAAOolB,CAAM,EAC5BruB,EAAOquB,EAAO,MAAQ/rB,EAAK,GAAG,MAC9B+rB,EAAS/rB,EAAK,aACP+rB,IAAW,MAAQ/rB,aAAgB2M,GAC5C,MAAO,CACL,KAAA3M,EAAM,KAAAtC,CACP,CACH,EAWMub,GAAW,CAACjZ,EAAMgsB,IAAS,CAC/B,KAAOhsB,IAAS,MAAQA,EAAK,OAASgsB,GACpChsB,EAAK,KAAOgsB,EACZhsB,EAAyCA,EAAK,OAAQ,KAE1D,EAYMgH,GAAY,CAAC1C,EAAagY,EAAU5e,IAAS,CAEjD,KAAM,CAAE,OAAAiI,EAAQ,MAAAxB,GAAUmY,EAAS,GAC7B2P,EAAY,IAAItf,EACpBjD,EAAS/D,EAAQxB,EAAQzG,CAAI,EAC7B4e,EACA5S,EAAS/D,EAAQxB,EAAQzG,EAAO,CAAC,EACjC4e,EAAS,MACTA,EAAS,YACTA,EAAS,OACTA,EAAS,UACTA,EAAS,QAAQ,OAAO5e,CAAI,CAChC,EACE,OAAI4e,EAAS,SACX2P,EAAU,YAAW,EAEnB3P,EAAS,OACX2P,EAAU,KAAO,IAEf3P,EAAS,SAAW,OACtB2P,EAAU,OAASviB,EAAS4S,EAAS,OAAO,OAAQA,EAAS,OAAO,MAAQ5e,CAAI,GAGlF4e,EAAS,MAAQ2P,EAEbA,EAAU,QAAU,OACtBA,EAAU,MAAM,KAAOA,GAGzB3nB,EAAY,cAAc,KAAK2nB,CAAS,EAEpCA,EAAU,YAAc,MAAQA,EAAU,QAAU,MACpBA,EAAU,OAAQ,KAAK,IAAIA,EAAU,UAAWA,CAAS,EAE7F3P,EAAS,OAAS5e,EACXuuB,CACT,EAMMC,GAAuB,CAAC5sB,EAAOtJ,IAAOm2B,GAAW7sB,EAAmCtB,GAAKkH,GAAUlH,EAAE,UAAWhI,CAAE,CAAC,EAgBnH0jB,GAAW,CAACpV,EAAatE,EAAMosB,EAAW5S,EAAeW,EAAwBpB,IAAO,CAC5F,MAAMpQ,EAAMrE,EAAY,IAClBqC,EAAQgC,EAAI,MACZ0jB,EAAc1jB,EAAI,SAClB2jB,EAAStsB,EAAK,OACpB,GAAIssB,IAAW,KACb,OAAO1X,GAAkBtQ,EAAagoB,CAAM,EAE9C,IAAIC,EAA+CvsB,EAAK,OAAQ,MAI5De,EAAO,KAIPC,EAEJ,GAAIurB,IAAe,MAAQA,EAAW,UAAY,GAAM,CAEtD,GAAIA,EAAW,SAAW,OAAS,CAACH,EAAU,IAAIG,CAAU,GAAK7S,GAASpV,EAAaioB,EAAYH,EAAW5S,EAAeW,EAAwBpB,CAAE,IAAM,MAC3J,OAAO,KAET,KAAOwT,EAAW,SAAW,MAC3BA,EAAa3X,GAAkBtQ,EAAaioB,EAAW,MAAM,CAEhE,CACD,MAAMC,EAAaD,IAAe,KAAyCvsB,EAAK,OAAsCusB,EAAW,QAAS,KAE1I,GAAIvsB,EAAK,YAAc,KAAM,CAK3B,IAHAe,EAAOf,EAAK,KACZgB,EAAQhB,EAEDe,IAAS,MAAM,CAIpB,IAAI0rB,EAAY1rB,EAEhB,KAAO0rB,IAAc,MAA0CA,EAAU,OAAQ,QAAUF,GACzFE,EAAYA,EAAU,SAAW,KAAO,KAAO7X,GAAkBtQ,EAAamoB,EAAU,MAAM,EAEhG,GAAIA,IAAc,MAA0CA,EAAU,OAAQ,QAAUF,EAAY,CAClGxrB,EAAO0rB,EACP,KACD,CACD1rB,EAAOA,EAAK,IACb,CACD,KAAOC,IAAU,MAAM,CAIrB,IAAI0rB,EAAa1rB,EAEjB,KAAO0rB,IAAe,MAA0CA,EAAW,OAAQ,QAAUH,GAC3FG,EAAaA,EAAW,SAAW,KAAO,KAAO9X,GAAkBtQ,EAAaooB,EAAW,MAAM,EAEnG,GAAIA,IAAe,MAA0CA,EAAW,OAAQ,QAAUH,EAAY,CACpGvrB,EAAQ0rB,EACR,KACD,CACD1rB,EAAQA,EAAM,KACf,CACL,SACIA,EAAQ,KACJhB,EAAK,OAAS,CAACma,EAAwB,CAIzC,IAHApZ,EAAOf,EAGAe,IAAS,MAAQA,EAAK,QAAU,OAASA,EAAK,MAAM,QAAUmE,GAAUsU,EAAezY,EAAK,MAAM,EAAE,GAAKmrB,GAAqBnT,EAAG,UAAWhY,EAAK,MAAM,EAAE,GAAKmrB,GAAqBnT,EAAG,UAAWhY,EAAK,MAAM,EAAE,IAGnN,IAFAA,EAAOA,EAAK,MAELA,EAAK,QAAQA,EAAO6T,GAAkBtQ,EAAavD,EAAK,MAAM,EAEvE,GAAIA,GAAQA,EAAK,QAAU,KAGzB,OAAO,IAEf,MACMA,EAAOyrB,EAAW,KAAK,IAAIxsB,EAAK,SAAS,GAAK,KAGlD,MAAM2sB,EAAY9lB,EAASF,EAAO0lB,CAAW,EACvCO,EAASljB,EAAS2iB,EAAaM,CAAS,EACxCE,EAAa,IAAIlgB,EACrBigB,EACA7rB,EAAMA,GAAQA,EAAK,OACnBC,EAAOA,GAASA,EAAM,GACtBwrB,EACAxsB,EAAK,UACLA,EAAK,QAAQ,KAAM,CACvB,EACE,OAAAA,EAAK,OAAS4sB,EACd3T,GAAS4T,EAAY,EAAI,EACzBA,EAAW,UAAUvoB,EAAa,CAAC,EAC5BuoB,CACT,EAKA,MAAMlgB,UAAake,EAAe,CAWhC,YAAa70B,EAAI+K,EAAM6H,EAAQ5H,EAAO8rB,EAAattB,EAAQgX,EAAWlN,EAAS,CAC7E,MAAMtT,EAAIsT,EAAQ,UAAW,GAK7B,KAAK,OAASV,EAKd,KAAK,KAAO7H,EAKZ,KAAK,MAAQC,EAKb,KAAK,YAAc8rB,EAInB,KAAK,OAASttB,EAQd,KAAK,UAAYgX,EAMjB,KAAK,OAAS,KAId,KAAK,QAAUlN,EAQf,KAAK,KAAO,KAAK,QAAQ,YAAa,EAAGyjB,GAAc,CACxD,CAOD,IAAI,OAAQC,EAAU,EACd,KAAK,KAAOC,IAAe,IAAOD,IACtC,KAAK,MAAQC,GAEhB,CAED,IAAI,QAAU,CACZ,OAAQ,KAAK,KAAOA,IAAe,CACpC,CAKD,IAAI,MAAQ,CACV,OAAQ,KAAK,KAAOC,IAAe,CACpC,CAED,IAAI,KAAMC,EAAQ,CACZ,KAAK,OAASA,IAChB,KAAK,MAAQD,GAEhB,CAED,IAAI,WAAa,CACf,OAAQ,KAAK,KAAOH,IAAe,CACpC,CAMD,IAAI,SAAW,CACb,OAAQ,KAAK,KAAOK,IAAe,CACpC,CAED,IAAI,QAASC,EAAU,CACjB,KAAK,UAAYA,IACnB,KAAK,MAAQD,GAEhB,CAED,aAAe,CACb,KAAK,MAAQA,EACd,CASD,WAAY9oB,EAAaqC,EAAO,CAC9B,GAAI,KAAK,QAAU,KAAK,OAAO,SAAW,KAAK,GAAG,QAAU,KAAK,OAAO,OAASE,EAASF,EAAO,KAAK,OAAO,MAAM,EACjH,OAAO,KAAK,OAAO,OAErB,GAAI,KAAK,aAAe,KAAK,YAAY,SAAW,KAAK,GAAG,QAAU,KAAK,YAAY,OAASE,EAASF,EAAO,KAAK,YAAY,MAAM,EACrI,OAAO,KAAK,YAAY,OAE1B,GAAI,KAAK,QAAU,KAAK,OAAO,cAAgB2D,IAAM,KAAK,GAAG,SAAW,KAAK,OAAO,QAAU,KAAK,OAAO,OAASzD,EAASF,EAAO,KAAK,OAAO,MAAM,EACnJ,OAAO,KAAK,OAAO,OAarB,GARI,KAAK,SACP,KAAK,KAAOoP,GAAgBzR,EAAaqC,EAAO,KAAK,MAAM,EAC3D,KAAK,OAAS,KAAK,KAAK,QAEtB,KAAK,cACP,KAAK,MAAQiO,GAAkBtQ,EAAa,KAAK,WAAW,EAC5D,KAAK,YAAc,KAAK,MAAM,IAE3B,KAAK,MAAQ,KAAK,KAAK,cAAgBkI,IAAQ,KAAK,OAAS,KAAK,MAAM,cAAgBA,GAC3F,KAAK,OAAS,aACL,CAAC,KAAK,OAEX,KAAK,MAAQ,KAAK,KAAK,cAAgBG,IACzC,KAAK,OAAS,KAAK,KAAK,OACxB,KAAK,UAAY,KAAK,KAAK,WAEzB,KAAK,OAAS,KAAK,MAAM,cAAgBA,IAC3C,KAAK,OAAS,KAAK,MAAM,OACzB,KAAK,UAAY,KAAK,MAAM,mBAErB,KAAK,OAAO,cAAgBrC,GAAI,CACzC,MAAMiiB,EAAa1W,GAAQlP,EAAO,KAAK,MAAM,EACzC4lB,EAAW,cAAgB/f,GAC7B,KAAK,OAAS,KAEd,KAAK,OAAqC+f,EAAW,QAAS,IAEjE,CACD,OAAO,IACR,CAMD,UAAWjoB,EAAaqJ,EAAQ,CAS9B,GARIA,EAAS,IACX,KAAK,GAAG,OAASA,EACjB,KAAK,KAAOoI,GAAgBzR,EAAaA,EAAY,IAAI,MAAOoF,EAAS,KAAK,GAAG,OAAQ,KAAK,GAAG,MAAQ,CAAC,CAAC,EAC3G,KAAK,OAAS,KAAK,KAAK,OACxB,KAAK,QAAU,KAAK,QAAQ,OAAOiE,CAAM,EACzC,KAAK,QAAUA,GAGb,KAAK,OAAQ,CACf,GAAK,CAAC,KAAK,OAAS,CAAC,KAAK,OAAS,KAAK,MAAM,OAAS,OAAW,KAAK,MAAQ,KAAK,KAAK,QAAU,KAAK,MAAQ,CAI9G,IAAI5M,EAAO,KAAK,KAKZhB,EAEJ,GAAIgB,IAAS,KACXhB,EAAIgB,EAAK,cACA,KAAK,YAAc,KAE5B,IADAhB,EAAsC,KAAK,OAAQ,KAAK,IAAI,KAAK,SAAS,GAAK,KACxEA,IAAM,MAAQA,EAAE,OAAS,MAC9BA,EAAIA,EAAE,UAGRA,EAAsC,KAAK,OAAQ,OAOrD,MAAMutB,EAAmB,IAAI,IAIvBC,EAAoB,IAAI,IAI9B,KAAOxtB,IAAM,MAAQA,IAAM,KAAK,OAAO,CAGrC,GAFAwtB,EAAkB,IAAIxtB,CAAC,EACvButB,EAAiB,IAAIvtB,CAAC,EAClB2Q,GAAW,KAAK,OAAQ3Q,EAAE,MAAM,GAElC,GAAIA,EAAE,GAAG,OAAS,KAAK,GAAG,OACxBgB,EAAOhB,EACPutB,EAAiB,MAAK,UACb5c,GAAW,KAAK,YAAa3Q,EAAE,WAAW,EAGnD,cAEOA,EAAE,SAAW,MAAQwtB,EAAkB,IAAI1X,GAAQvR,EAAY,IAAI,MAAOvE,EAAE,MAAM,CAAC,EAEvFutB,EAAiB,IAAIzX,GAAQvR,EAAY,IAAI,MAAOvE,EAAE,MAAM,CAAC,IAChEgB,EAAOhB,EACPutB,EAAiB,MAAK,OAGxB,OAEFvtB,EAAIA,EAAE,KACP,CACD,KAAK,KAAOgB,CACb,CAED,GAAI,KAAK,OAAS,KAAM,CACtB,MAAMC,EAAQ,KAAK,KAAK,MACxB,KAAK,MAAQA,EACb,KAAK,KAAK,MAAQ,IAC1B,KAAa,CACL,IAAI7M,EACJ,GAAI,KAAK,YAAc,KAErB,IADAA,EAAsC,KAAK,OAAQ,KAAK,IAAI,KAAK,SAAS,GAAK,KACxEA,IAAM,MAAQA,EAAE,OAAS,MAC9BA,EAAIA,EAAE,UAGRA,EAAsC,KAAK,OAAQ,OAChB,KAAK,OAAQ,OAAS,KAE3D,KAAK,MAAQA,CACd,CACG,KAAK,QAAU,KACjB,KAAK,MAAM,KAAO,KACT,KAAK,YAAc,OAEM,KAAK,OAAQ,KAAK,IAAI,KAAK,UAAW,IAAI,EACxE,KAAK,OAAS,MAEhB,KAAK,KAAK,OAAOmQ,CAAW,GAI5B,KAAK,YAAc,MAAQ,KAAK,WAAa,CAAC,KAAK,UACnB,KAAK,OAAQ,SAAW,KAAK,QAEjEqR,GAAUrR,EAAY,IAAI,MAAO,IAAI,EACrC,KAAK,QAAQ,UAAUA,EAAa,IAAI,EAExCiS,GAA4BjS,EAA+C,KAAK,OAAS,KAAK,SAAS,GAChE,KAAK,OAAQ,QAAU,MAA0C,KAAK,OAAQ,MAAM,SAAa,KAAK,YAAc,MAAQ,KAAK,QAAU,OAEhL,KAAK,OAAOA,CAAW,CAE/B,MAEM,IAAIkI,GAAG,KAAK,GAAI,KAAK,MAAM,EAAE,UAAUlI,EAAa,CAAC,CAExD,CAKD,IAAI,MAAQ,CACV,IAAIvQ,EAAI,KAAK,MACb,KAAOA,IAAM,MAAQA,EAAE,SACrBA,EAAIA,EAAE,MAER,OAAOA,CACR,CAKD,IAAI,MAAQ,CACV,IAAIA,EAAI,KAAK,KACb,KAAOA,IAAM,MAAQA,EAAE,SACrBA,EAAIA,EAAE,KAER,OAAOA,CACR,CAKD,IAAI,QAAU,CAEZ,OAAO,KAAK,SAAW,EAAI,KAAK,GAAK2V,EAAS,KAAK,GAAG,OAAQ,KAAK,GAAG,MAAQ,KAAK,OAAS,CAAC,CAC9F,CAQD,UAAW1I,EAAO,CAChB,GACE,KAAK,cAAgBA,EAAM,aAC3B0P,GAAW1P,EAAM,OAAQ,KAAK,MAAM,GACpC,KAAK,QAAUA,GACf0P,GAAW,KAAK,YAAa1P,EAAM,WAAW,GAC9C,KAAK,GAAG,SAAWA,EAAM,GAAG,QAC5B,KAAK,GAAG,MAAQ,KAAK,SAAWA,EAAM,GAAG,OACzC,KAAK,UAAYA,EAAM,SACvB,KAAK,SAAW,MAChBA,EAAM,SAAW,MACjB,KAAK,QAAQ,cAAgBA,EAAM,QAAQ,aAC3C,KAAK,QAAQ,UAAUA,EAAM,OAAO,EACpC,CACA,MAAM4f,EAAiD,KAAK,OAAQ,cACpE,OAAIA,GACFA,EAAa,QAAQH,GAAU,CACzBA,EAAO,IAAMzf,IAEfyf,EAAO,EAAI,KAEP,CAAC,KAAK,SAAW,KAAK,YACxBA,EAAO,OAAS,KAAK,QAGnC,CAAS,EAECzf,EAAM,OACR,KAAK,KAAO,IAEd,KAAK,MAAQA,EAAM,MACf,KAAK,QAAU,OACjB,KAAK,MAAM,KAAO,MAEpB,KAAK,QAAUA,EAAM,OACd,EACR,CACD,MAAO,EACR,CAOD,OAAQsD,EAAa,CACnB,GAAI,CAAC,KAAK,QAAS,CACjB,MAAM9E,EAA2C,KAAK,OAElD,KAAK,WAAa,KAAK,YAAc,OACvCA,EAAO,SAAW,KAAK,QAEzB,KAAK,YAAW,EAChBqG,GAAevB,EAAY,UAAW,KAAK,GAAG,OAAQ,KAAK,GAAG,MAAO,KAAK,MAAM,EAChFiS,GAA4BjS,EAAa9E,EAAQ,KAAK,SAAS,EAC/D,KAAK,QAAQ,OAAO8E,CAAW,CAChC,CACF,CAMD,GAAIqC,EAAO6mB,EAAW,CACpB,GAAI,CAAC,KAAK,QACR,MAAMpiB,GAAsB,EAE9B,KAAK,QAAQ,GAAGzE,CAAK,EACjB6mB,EACFxX,GAAcrP,EAAO,KAAM,IAAI6F,GAAG,KAAK,GAAI,KAAK,MAAM,CAAC,EAEvD,KAAK,QAAU,IAAI+R,GAAe,KAAK,MAAM,CAEhD,CAWD,MAAOzmB,EAAS6V,EAAQ,CACtB,MAAM/E,EAAS+E,EAAS,EAAIjE,EAAS,KAAK,GAAG,OAAQ,KAAK,GAAG,MAAQiE,EAAS,CAAC,EAAI,KAAK,OAClFmf,EAAc,KAAK,YACnBtW,EAAY,KAAK,UACjB5L,EAAQ,KAAK,QAAQ,OAAQ,EAAG2B,IACnC3D,IAAW,KAAO,EAAInQ,KACtBq0B,IAAgB,KAAO,EAAIh0B,KAC3B0d,IAAc,KAAO,EAAI5J,IAQ5B,GAPA9U,EAAQ,UAAU8S,CAAI,EAClBhC,IAAW,MACb9Q,EAAQ,YAAY8Q,CAAM,EAExBkkB,IAAgB,MAClBh1B,EAAQ,aAAag1B,CAAW,EAE9BlkB,IAAW,MAAQkkB,IAAgB,KAAM,CAC3C,MAAMttB,EAA2C,KAAK,OACtD,GAAIA,EAAO,QAAU,OAAW,CAC9B,MAAM+sB,EAAa/sB,EAAO,MAC1B,GAAI+sB,IAAe,KAAM,CAGvB,MAAMkB,EAAO5c,GAAgBrR,CAAM,EACnC1H,EAAQ,gBAAgB,EAAI,EAC5BA,EAAQ,YAAY21B,CAAI,CAClC,MACU31B,EAAQ,gBAAgB,EAAK,EAC7BA,EAAQ,YAAYy0B,EAAW,EAAE,CAE3C,MAAiB/sB,EAAO,cAAgB,QAChC1H,EAAQ,gBAAgB,EAAI,EAC5BA,EAAQ,YAAY0H,CAAM,GACjBA,EAAO,cAAgB8K,IAChCxS,EAAQ,gBAAgB,EAAK,EAC7BA,EAAQ,YAAY0H,CAAM,GAE1B4L,KAEEoL,IAAc,MAChB1e,EAAQ,YAAY0e,CAAS,CAEhC,CACD,KAAK,QAAQ,MAAM1e,EAAS6V,CAAM,CACnC,CACH,CAMA,MAAMd,GAAkB,CAAC/Q,EAAS8O,IAAS8iB,GAAY9iB,EAAO2B,EAAY,EAAEzQ,CAAO,EAO7E4xB,GAAc,CAClB,IAAM,CAAEtiB,GAAoB,CAAK,EACjC6f,GACAQ,GACAT,GACAY,GACAR,GACAI,GACAM,GACAJ,GACAP,GACA,IAAM,CAAE/f,GAAoB,CAAK,CACnC,EAEMuiB,GAAsB,GAK5B,MAAMlhB,WAAaoe,EAAe,CAChC,IAAI,SAAW,CACb,MAAO,EACR,CAED,QAAU,CAAE,CAMZ,UAAW7pB,EAAO,CAChB,OAAI,KAAK,cAAgBA,EAAM,YACtB,IAET,KAAK,QAAUA,EAAM,OACd,GACR,CAMD,UAAWsD,EAAaqJ,EAAQ,CAE9BvC,IACD,CAMD,MAAOtT,EAAS6V,EAAQ,CACtB7V,EAAQ,UAAU61B,EAAmB,EAErCvnB,EAAsBtO,EAAQ,YAAa,KAAK,OAAS6V,CAAM,CAChE,CAOD,WAAYrJ,EAAaqC,EAAO,CAC9B,OAAO,IACR,CACH,CAIA,MAAMinB,GAA0B,OAAO,WAAe,IAClD,WACA,OAAO,OAAW,IAChB,OAEA,OAAO,OAAW,IAAc,OAAS,CAAE,EAE3CC,GAAmB,cAErBD,GAAIC,EAAgB,IAAM,IAe5B,QAAQ,MAAM,2HAA2H,EAE3ID,GAAIC,EAAgB,EAAI,62DCp6TXC,GAAmC,CAC9C,CACE,KAAM,iDACN,UAA6BC,GACpBA,EAAiB,EAE1B,QAAS,CAACz+B,EAAG0+B,IAAY,CACjB,MAAAC,EAASD,EAAQ,OAAO,QAAQ,EACtC,IAAIE,EAAuBC,EAC3BF,EAAO,QAAiB3P,GAAA,CAChB,MAAA8P,EAAU9P,EAAM,IAAI,aAAa,EACnC8P,IAAY,gBACPF,EAAA5P,GAEL8P,IAAY,mBACJD,EAAA7P,EACZ,CACD,EACD/uB,EAAa2+B,CAAI,EACjB3+B,EAAa4+B,CAAO,EAEpB,MAAME,EAAWF,EAAQ,IAAI,eAAe,EAAE,IAAI,OAAO,EAGzDE,EAAS,QAAmBpF,GAAA,CAC1B,GAAIA,EAAQ,IAAI,MAAM,IAAM,QAAS,CAC7B,MAAAqF,EAAa,IAAIC,EACjBv4B,EAAKizB,EAAQ,IAAI,IAAI,EAChBqF,EAAA,IAAI,cAAe,cAAc,EACjCA,EAAA,IAAI,SAAUt4B,CAAE,EAC3Bs4B,EAAW,IAAI,eAAgB,IAAIE,CAAS,EAC5CF,EAAW,IAAI,aAAuBrF,EAAQ,IAAI,OAAO,EAAG,OAAO,EACnEqF,EAAW,IAAI,YAAarF,EAAQ,IAAI,MAAM,CAAC,EAC/CqF,EAAW,IAAI,aAAcrF,EAAQ,IAAI,OAAO,CAAC,EAC1CgF,EAAA,IAAIj4B,EAAIs4B,CAAU,EACPJ,EAAK,IAAI,cAAc,EAAG,KAAK,CAACl4B,CAAE,CAAC,EACrDq4B,EAAS,OAAOr4B,CAAE,CACpB,EACD,CACH,CACF,CACF,EC1Cay4B,GAA6C,CACxD,CACE,KAAM,0BACN,UAAYC,GACGA,EAAQ,OAAO,MAAM,EACJ,IAAI,kBAAkB,EAC1B,EAE5B,QAAUA,GAAmB,CACrB,MAAAzmB,EAAOymB,EAAQ,OAAO,MAAM,EAC7BzmB,EAAA,IAAI,cAAe,CAAC,EACpBA,EAAA,IAAI,mBAAoB,CAAC,CAChC,CACF,CACF,EClBa0mB,GAA0BC,GAAkC,CACnE,IAAAC,EACAC,EAEE,MAAAC,EAAAC,GAAA,IAAa,OAAO,qBAAY,uBAAE,KAAK,CAAC,CAAE,YAAAC,EAAa,GAAGC,CAAA,KAE9DL,EAAKI,EAAY,GAAGL,CAAQ,QAAS,MAAM,EAC3CE,EAAaG,EAAY,GAAGL,CAAQ,aAAc,WAAW,EACtDM,EACR,EACM,OACL,KAAM,CACJ,IAAK,MAAO36B,GAAgB,CACpB,MAAA46B,GAAO,MAAMJ,GAAY,IACzBr6B,EAAM,MAAMy6B,EAAiB56B,EAAKs6B,CAAE,EAC1C,OAAIn6B,EACK,IAAI,KAAK,CAACA,CAAG,EAAG,CAAE,KAAM,MAAMy6B,EAAI56B,EAAKu6B,CAAU,EAAG,EAEtD,IACT,EACA,IAAK,MAAOv6B,EAAaI,IAAgB,CACjC,MAAAF,GAAO,MAAMs6B,GAAY,IAC/B,aAAMt6B,EAAIF,EAAK,MAAMI,EAAM,cAAek6B,CAAE,EAC5C,MAAMp6B,EAAIF,EAAKI,EAAM,KAAMm6B,CAAU,EAC9Bv6B,CACT,EACA,OAAQ,MAAOA,GAAgB,CACvB,MAAAoQ,GAAO,MAAMoqB,GAAY,IACzB,MAAApqB,EAAIpQ,EAAKs6B,CAAE,EACX,MAAAlqB,EAAIpQ,EAAKu6B,CAAU,CAC3B,EACA,KAAM,SAAY,CACV,MAAA15B,GAAQ,MAAM25B,GAAY,KAChC,OAAO35B,EAAay5B,CAAE,CACxB,CACF,EAEJ,ECvCaO,GAAsB,IAAmB,CAC9C,MAAAC,MAAoB,IACnB,OACL,KAAM,CACJ,IAAK,MAAO96B,GACH86B,EAAc,IAAI96B,CAAG,GAAK,KAEnC,IAAK,MAAOA,EAAaI,KACT06B,EAAA,IAAI96B,EAAKI,CAAK,EACrBJ,GAET,OAAQ,MAAOA,GAAgB,CAC7B86B,EAAc,OAAO96B,CAAG,CAC1B,EACA,KAAM,SACG,MAAM,KAAK86B,EAAc,KAAM,EAE1C,EAEJ,ECbO,SAASC,GAA0Bt5B,EAAyB,CAC3D,MAAAu5B,MAAiB,IAChB,OACL,KAAM,CACJ,IAAK,MAAOh7B,GAAgB,CACtB,GAAAg7B,EAAW,IAAIh7B,CAAG,EACb,OAAAg7B,EAAW,IAAIh7B,CAAG,EACpB,CACL,MAAMyK,EAAO,MAAM,MAAM,kBAAkBhJ,CAAE,SAASzB,CAAG,GAAI,CAC3D,OAAQ,MACT,EAAE,KAAiBi7B,GAAA,CACd,IAACA,EAAS,GACZ,MAAM,IAAI,MAAM,wBAAwBj7B,CAAG,EAAE,EAE/C,OAAOi7B,EAAS,MAAK,CACtB,EACU,OAAAD,EAAA,IAAIh7B,EAAKyK,CAAI,EACjBA,CACT,CACF,EACA,IAAK,MAAOzK,EAAaI,KACZ46B,EAAA,IAAIh7B,EAAKI,CAAK,EACzB,MAAM,MAAM,kBAAkBqB,CAAE,SAASzB,CAAG,GAAI,CAC9C,OAAQ,MACR,KAAM,MAAMI,EAAM,YAAY,EAC/B,EACMJ,GAET,OAAQ,MAAOA,GAAgB,CAC7Bg7B,EAAW,OAAOh7B,CAAG,EACrB,MAAM,MAAM,kBAAkByB,CAAE,SAASzB,CAAG,GAAI,CAC9C,OAAQ,SACT,CACH,EACA,KAAM,SACG,MAAM,KAAKg7B,EAAW,KAAM,EAEvC,EAEJ,CC/CO,MAAME,GAAoB,EAEpBC,GAAe,EAEfC,GACX,6DAEWC,GAAuB,6BACvBC,GAAyB,+BAEzBC,GAAe,QAAI,CAAC,KAAM,UAAW,UAAU,CAAC,ECNtD,MAAMC,EAAmB,CAE9B,OAAO,QAAMp7B,GAETA,aAAiB45B,GAAS55B,EAAM,IAAI,MAAM,IAAMk7B,EAEpD,CAEA,OAAO,UAAWv7B,GACT,IAAIy7B,GAASz7B,EAAI,IAAI,OAAO,CAAM,CAC3C,CAEA,YAAYK,EAAU,CAElBA,aAAiB45B,GACjB55B,EAAM,IAAI,MAAM,IAAMk7B,GAEtB,KAAK,KAAOl7B,GAEP,UAAO,IAAI45B,EACX,UAAK,IAAI,OAAQsB,EAA2B,EAC5C,UAAK,IAAI,QAASl7B,CAAK,EAEhC,CAEA,IAAI,MAAO,CACT,OAAO,KAAK,IACd,CAEA,SAASA,EAAU,CACjB,OAAO,KAAK,KAAK,IAAI,QAASA,CAAK,CACrC,CAEA,UAAW,CACF,YAAK,KAAK,IAAI,OAAO,CAC9B,CACF,CCzBO,MAAMq7B,EAAK,CAGhB,YAAYxxB,EAAyC,CAC/C,UAAOA,GAAU,SAAU,CAC7B,MAAMonB,EAAOpnB,EAAM,WAAW;AAAA,EAAQ;AAAA,CAAI,EAC1C,KAAK,OAAS,IAAIyxB,EAAOrK,CAAI,UACpBpnB,aAAiByxB,EAC1B,KAAK,OAASzxB,UACLA,aAAiB,MAAO,CACjC,UAAWyhB,KAASzhB,EACdyhB,EAAM,SACRA,EAAM,OAASA,EAAM,OAAO,WAAW;AAAA,EAAQ;AAAA,CAAI,GAGjD,MAAA+G,EAAQ,IAAIiJ,EAClBjJ,EAAM,WAAWxoB,CAAK,EACtB,KAAK,OAASwoB,CAAA,MAET,YAAS,IAAIiJ,CAEtB,CAEA,OAAO,UAAUhQ,EAAyB,CAClC,MAAAxuB,EAAS,IAAIw+B,EACnB,OAAAx+B,EAAO,WAAWwuB,CAAK,EAChB,IAAI+P,GAAKv+B,CAAM,CACxB,CAEA,IAAI,QAAS,CACX,OAAO,KAAK,OAAO,MACrB,CAEA,IAAI,OAAQ,CACV,OAAO,KAAK,MACd,CAEQ,UAAUR,EAAsB,CAChC,MAAA0X,EAAM,KAAK,OAAO,IACxB,GAAI,CAACA,EACH,MAAM,IAAI,MACR,2DAGJA,EAAI,SAAS,IAAM,CACR1X,GAAA,EACR0X,EAAI,QAAQ,CACjB,CAEA,OAAQ,CACN,OAAO,IAAIqnB,GAAK,KAAK,OAAO,MAAO,EACrC,CAiBA,MAAMp+B,EAAe2D,EAAS,EAAS,CACjC,GAAA3D,EAAQ,GAAK2D,EAAS,GAAK3D,EAAQ2D,EAAS,KAAK,OAAO,OAC1D,MAAM,IAAI,MACR,8DACE3D,EACA,aACA2D,EACA,kBACA,KAAK,OAAO,QAGZ,MAAA26B,EAAS,KAAK,OAAO,QAAQ,EAC/B,KAAEA,aAAkB,OACtB,MAAM,IAAI,MACR,wEAGJ,IAAIC,EAAW,EACf,MAAMC,EAA6B,GACnC,QAASngC,EAAI,EAAGA,EAAIigC,EAAO,OAAQjgC,IAAK,CAChC,MAAAs3B,EAAS2I,EAAOjgC,CAAC,EAAE,OACrB,UAAOs3B,GAAW,SAAU,CAC9B,GAAI4I,EAAW5I,EAAO,QAAU31B,EAAQ2D,EAAQ,CAC9C,MAAM86B,EAAc9I,EAAO,MAAM31B,EAAQ2D,EAAS46B,CAAQ,EAC1DC,EAAY,KAAK,CACf,OAAQC,EACR,WAAYH,EAAOjgC,CAAC,EAAE,WACvB,EACDmgC,EAAY,KAAK,GAAGF,EAAO,MAAMjgC,EAAI,CAAC,CAAC,EACvC,KACF,CACAkgC,GAAY5I,EAAO,WAEnB,OAAM,IAAI,MACR,mEAGN,CAEA,KAAK,OAAO31B,EAAO,KAAK,OAASA,CAAK,EAChC,MAAA0+B,EAAa,IAAIL,EACvB,OAAAK,EAAW,WAAWF,CAAW,EACf,IAAIJ,GAAKM,CAAU,CAGvC,CAEA,OAAOhnB,EAAiB1X,EAAe4zB,EAAsC,CACvE,GAAClc,EAAQ,OAGb,IAAI1X,EAAQ,GAAKA,EAAQ,KAAK,OAAO,OACnC,MAAM,IAAI,MACR,+DACEA,EACA,aACA,OACA,kBACA,KAAK,OAAO,QAGlB,KAAK,UAAU,IAAM,CACnB,KAAK,OAAO,OAAOA,EAAO0X,EAASkc,CAAU,EAC9C,EACH,CAEA,KAAK+K,EAAa,CACXA,EAAM,QAAQ,EAAE,QAGrB,KAAK,UAAU,IAAM,CAEb,MAAAtQ,EADSsQ,EAAM,OACkB,UACvCtQ,EAAM,QAAQ,CAAE,OAAQ,KAAK,OAAO,OAAQ,EACvC,YAAO,WAAWA,CAAK,EAC7B,CACH,CAGA,OAAOruB,EAAe2D,EAAgB+vB,EAAa,CACjD,GAAI/vB,IAAW,EAGX,IAAA3D,EAAQ,GAAK2D,EAAS,GAAK3D,EAAQ2D,EAAS,KAAK,OAAO,OAC1D,MAAM,IAAI,MACR,+DACE3D,EACA,aACA2D,EACA,kBACA,KAAK,OAAO,QAGlB,KAAK,UAAU,IAAM,CACnB,KAAK,OAAO,OAAO3D,EAAO2D,EAAQ+vB,CAAM,EACzC,EACH,CAEA,OAAO1zB,EAAe2D,EAAgB,CACpC,GAAIA,IAAW,EAGX,IAAA3D,EAAQ,GAAK2D,EAAS,GAAK3D,EAAQ2D,EAAS,KAAK,OAAO,OAC1D,MAAM,IAAI,MACR,+DACE3D,EACA,aACA2D,EACA,kBACA,KAAK,OAAO,QAGlB,KAAK,UAAU,IAAM,CACd,YAAO,OAAO3D,EAAO2D,CAAM,EACjC,EACH,CAEA,QACE3D,EACA2D,EACA+T,EACAkc,EACA,CACI,GAAA5zB,EAAQ,GAAK2D,EAAS,GAAK3D,EAAQ2D,EAAS,KAAK,OAAO,OAC1D,MAAM,IAAI,MACR,oDACE,KAAK,OAAO,OACZ,uCACA3D,EACA,KACAA,EACA2D,CAAA,EAGN,KAAK,UAAU,IAAM,CACd,YAAO,OAAO3D,EAAO2D,CAAM,EAChC,KAAK,OAAO,OAAO3D,EAAO0X,EAASkc,CAAU,EAC9C,CACH,CAEA,OAAQ,CACD,KAAK,OAAO,QAGjB,KAAK,UAAU,IAAM,CACnB,KAAK,OAAO,OAAO,EAAG,KAAK,OAAO,MAAM,EACzC,CACH,CAEA,WAAWvF,EAAyB,CAClC,KAAK,UAAU,IAAM,CACd,aAAQ,WAAWA,CAAK,EAC9B,CACH,CAEA,SAA4B,CAC1B,OAAO,KAAK,QAAQ,QAAQ,GAAK,EACnC,CAEA,aAAauQ,EAAe3yB,EAAgC,CAC1D,MAAMpM,EAA2B,GAC7B,GAAAoM,GAAO2yB,GAAS3yB,EACX,OAAApM,EAGL,GAAA++B,IAAU,GAAK3yB,IAAQ,EACzB,MAAO,GAGH,MAAAoiB,EAAQ,KAAK,UACf,GAAAuQ,EAAQ,GAAK,CAAC3yB,EACT,OAAAoiB,EAGL,GAAAA,GAASA,aAAiB,MAAO,CACnC,IAAIwQ,EAAU,EACd,QAASxgC,EAAI,EAAGA,EAAIgwB,EAAM,OAAQhwB,IAAK,CAC/B,MAAAqZ,EAAU2W,EAAMhwB,CAAC,EACnB,IAAAygC,EAAsBpnB,EAAQ,QAAU,GAC5C,MAAMqnB,EAAaD,EAAY,OAEzBE,EAAW/yB,GAAO4yB,EAAUE,EAAa9yB,EACzCgzB,EAAYJ,EAAUE,EAAaH,GAAS/+B,EAAO,SAAW,EACpE,GAAIo/B,GAAaD,EAAU,CACzBF,EAAcA,EAAY,MAAMF,EAAQC,EAAS5yB,EAAM4yB,CAAO,EAC9Dh/B,EAAO,KAAK,CACV,GAAG6X,EACH,OAAQonB,CAAA,CACT,EACD,WACSG,GAAaD,GACRF,EAAAE,EACVF,EAAY,MAAM,EAAG7yB,EAAM4yB,CAAO,EAClCC,EAAY,MAAMF,EAAQC,CAAO,EAErCh/B,EAAO,KAAK,CACV,GAAG6X,EACH,OAAQonB,CAAA,CACT,GAEDj/B,EAAO,OAAS,GAAKA,EAAO,KAAK6X,CAAO,EAGtC,GAAAzL,GAAO4yB,EAAUE,EAAa9yB,EAChC,MAGF4yB,EAAUA,EAAUE,CACtB,CACF,CACO,OAAAl/B,CACT,CAEA,UAAW,CACF,YAAK,QAAQ,YAAc,EACpC,CACF,CC7RO,SAASq/B,GAAan8B,EAAiC,CAE1D,OAAAA,IAAU,MACV,OAAOA,GAAU,UACjB,OAAO,UAAU,SAAS,KAAKA,CAAK,IAAM,mBAC1C,CAAC,OAAQ,OAAW,IAAI,EAAE,KAAK7E,GAAKA,IAAM6E,EAAM,WAAW,CAE/D,CAOgB,SAAAo8B,GACdp8B,EACA,CAAE,KAAAq8B,EAAO,GAAM,UAAAC,EAAiBnhC,IAAwB,KAC3C,CACb,GAAI6E,aAAiBo7B,GACnB,OAAOp7B,EAAM,KAEf,GAAIA,aAAiBq7B,GACf,OAAAr7B,EAAM,MAAM,IACPA,EAAM,MAAM,QAEdA,EAAM,MAEX,SAAM,QAAQA,CAAK,EAAG,CAClB,MAAAu8B,EAA0B,IAAIjoB,EAC9BxX,EAASkD,EAAM,IAAYqL,GACxBgxB,EAAOD,GAAS/wB,EAAM,CAAE,KAAAgxB,EAAM,UAAAC,CAAA,CAAW,EAAIjxB,CACrD,EACM,OAAAkxB,EAAA,OAAO,EAAGz/B,CAAM,EAEhBy/B,CACT,CACI,GAAAJ,GAAan8B,CAAK,EAAG,CACjB,MAAAw8B,EAAO,IAAIhoB,EACV,sBAAQxU,CAAK,EAAE,QAAQ,CAAC,CAACJ,EAAKI,CAAK,IAAM,CACzCw8B,EAAA,IAAI58B,EAAKy8B,EAAOD,GAASp8B,EAAO,CAAE,KAAAq8B,EAAM,UAAAC,EAAW,EAAIt8B,CAAK,EAClE,EAEMw8B,CACT,CAEO,OAAAx8B,CACT,CAEgB,SAAAy8B,GACdC,EACA,CAAE,KAAAL,EAAO,GAAM,UAAAC,EAAiBnhC,IAAwB,KACxD,CACI,GAAAigC,GAAM,GAAGsB,CAAS,EAAG,CACjB,MAAA72B,EAAO,IAAIu1B,GAAMsB,CAAS,EACzB,OAAAJ,EAAUz2B,EAAM62B,CAAS,CAClC,CACA,GAAIA,aAAqBnoB,EAAO,CACxB,MAAA1O,EAAO,IAAIw1B,GAAKqB,CAAS,EACxB,OAAAJ,EAAUz2B,EAAM62B,CAAS,CAClC,CACA,GAAIA,aAAqBpoB,EAAQ,CAC/B,MAAMzO,EAAkB62B,EACrB,QAAQ,EACR,IAAarxB,GAAAgxB,EAAOI,GAASpxB,EAAM,CAAE,KAAAgxB,EAAM,UAAAC,CAAU,CAAC,EAAIjxB,CAAK,EAE3D,OAAAixB,EAAUz2B,EAAM62B,CAAS,CAClC,CACA,GAAIA,aAAqBloB,EAAM,CAC7B,MAAM3O,EAAgC,OAAO,YAC3C,MAAM,KAAK62B,EAAU,QAAS,GAAE,IAAI,CAAC,CAAC98B,EAAKI,CAAK,IACvC,CAACJ,EAAKy8B,EAAOI,GAASz8B,EAAO,CAAE,KAAAq8B,EAAM,UAAAC,CAAA,CAAW,EAAIt8B,CAAK,CAIjE,GAEI,OAAAs8B,EAAUz2B,EAAM62B,CAAS,CAClC,CAEO,OAAAJ,EAAUI,EAAWA,CAAS,CACvC,CAIO,MAAeC,EAAwB,CAAvC,cAKL,KAAU,UAAY,GAEH,kBAAqC,IAS9C,gBACR3oB,IAOO,CACL,IAAAA,EACA,MAAO,GACP,OAAQ,OAIF,qBAAmB/I,GAAmB,CAC9C,KAAK,UAAY,GACdA,IACH,KAAK,UAAY,IAGT,eAAY,CAAC+I,EAAW/I,IAAmB,CACnD+I,EAAI,SAAS/I,EAAI,KAAK,WAAW+I,CAAG,CAAC,GAI7B,gBAAa,CAAC6I,EAAoBhhB,IAAwB,CAEhEghB,EAAM,YAAY,QAAQ,QAAU,KACnC,CAACA,EAAM,YAAY,OAClBA,EAAM,YAAY,kBAAkBqI,KAE9BrpB,IAGL,cAAS,WAAW,KAAK,MAAM,EACtC,CAxCA,IAAI,OAAQ,CACV,OAAO,KAAK,MACd,CAuCF,CC1IA,MAAM+gC,OAAc,QAEb,MAAMC,WAAuBF,EAGlC,CAEA,YACqBG,EACAC,EACAC,EACnB,CACM,QAJa,aAAAF,EACA,cAAAC,EACA,cAAAC,EAkBrB,KAAU,UAAY,IACb,IAAI,MAAM,KAAK,QAAS,CAC7B,IAAK,CAACrhC,EAAQiwB,IACL,QAAQ,IAAIjwB,EAAQiwB,CAAC,EAE9B,IAAK,CAACjwB,EAAQiwB,EAAG5rB,EAAOi9B,IAAa,CAC/B,UAAOrR,GAAM,SACT,UAAI,MAAM,wBAAwB,EAGpC,MAAA3uB,EAAQ,OAAO2uB,CAAC,EACtB,GAAI,KAAK,WAAa,OAAO,MAAM3uB,CAAK,EACtC,OAAO,QAAQ,IAAItB,EAAQiwB,EAAG5rB,EAAOi9B,CAAQ,EAG/C,GAAI,KAAK,SAAS,IAAIhgC,CAAK,EAAG,CAC5B,MAAMH,EAAS,QAAQ,IAAInB,EAAQiwB,EAAG5rB,EAAOi9B,CAAQ,EAChD,qBAAS,WAAW,KAAK,MAAM,EAC7BngC,CACT,CAEA,MAAMogC,EAAWN,GAAQ,IAAI,KAAK,QAAQ,EAC1ChiC,EAAasiC,EAAU,wCAAwC,EACzD,MAAAlpB,EAAM,KAAK,SAAS,IAC1BpZ,EAAaoZ,EAAK,+BAA+B,EAE3C,MAAAmpB,EAAQf,GAASp8B,CAAK,EACvB,eAAUgU,EAAK,IAAM,CACpB/W,EAAQ,KAAK,SAAS,QACnB,cAAS,OAAOA,EAAO,CAAC,EAE/B,KAAK,SAAS,OAAOA,EAAO,CAACkgC,CAAK,CAAC,EACpC,EACD,MAAMt3B,EAAOu3B,GAAaD,EAAO,KAAK,QAAQ,EAC9C,OAAO,QAAQ,IAAIxhC,EAAQiwB,EAAG/lB,EAAMo3B,CAAQ,CAC9C,EACA,IAAK,CAACthC,EAAQiwB,EAAGqR,IACR,QAAQ,IAAIthC,EAAQiwB,EAAGqR,CAAQ,EAExC,eAAgB,CAACthC,EAAQiwB,IAAe,CAClC,UAAOA,GAAM,SACT,UAAI,MAAM,wBAAwB,EAG1C,MAAMyR,EAAUT,GAAQ,IAAI,KAAK,QAAQ,EACzChiC,EAAayiC,EAAS,wCAAwC,EACxD,MAAArpB,EAAM,KAAK,SAAS,IAC1BpZ,EAAaoZ,EAAK,+BAA+B,EAE3C,MAAA/W,EAAQ,OAAO2uB,CAAC,EACtB,OAAI,KAAK,WAAa,OAAO,MAAM3uB,CAAK,GAInC,eAAU+W,EAAK,IAAM,CACnB,cAAS,OAAO/W,EAAO,CAAC,EAC9B,EACM,QAAQ,eAAetB,EAAQiwB,CAAC,CACzC,EACD,EAGK,eAAa/O,GAAgC,CAC9C,gBAAWA,EAAO,IAAM,CAC3B,IAAIgW,EAAS,EACPhW,EAAA,QAAQ,MAAM,QAAkBygB,GAAA,CACpC,GAAIA,EAAO,OAAQ,CACjBzK,GAAUyK,EAAO,OACjB,MACF,CACA,GAAIA,EAAO,OAAQ,CACjB,KAAK,gBAAgB,IAAM,CACzB,KAAK,QAAQ,OAAOzK,EAAQyK,EAAO,MAAM,EAC1C,EACD,MACF,CACA,GAAIA,EAAO,OAAQ,CAGjB,MAAMC,EAFO,CAACD,EAAO,MAAM,EAAE,KAAK,EAEX,IAAat9B,GAAAo9B,GAAap9B,CAAK,CAAC,EAEvD,KAAK,gBAAgB,IAAM,CACzB,KAAK,QAAQ,OAAO6yB,EAAQ,EAAG,GAAG0K,CAAS,EAC5C,EAED1K,GAAUyK,EAAO,OAAO,MAC1B,EACD,EACF,GAvGI,YAAS,KAAK,YACXV,GAAA,IAAIG,EAAU,IAAI,EACjBA,EAAA,QAAQ,KAAK,SAAS,CACjC,CAEA,MAAMS,EAAc,CACb,cAAS,IAAIA,CAAI,CACxB,CAEA,IAAIA,EAAc,CACV,MAAAx9B,EAAQ,KAAK,QAAQw9B,CAAI,EAC1B,cAAS,OAAOA,CAAI,EACpB,YAAOA,CAAI,EAAIx9B,CACtB,CA4FF,CAEO,MAAMy9B,WAAqBd,EAA2C,CAE3E,YACqBG,EACAC,EACAC,EACnB,CACM,QAJa,aAAAF,EACA,cAAAC,EACA,cAAAC,EAkBrB,KAAU,UAAY,IACb,IAAI,MAAM,KAAK,QAAS,CAC7B,IAAK,CAACrhC,EAAQiwB,IACL,QAAQ,IAAIjwB,EAAQiwB,CAAC,EAE9B,IAAK,CAACjwB,EAAQiwB,EAAG5rB,EAAOi9B,IAAa,CAC/B,UAAOrR,GAAM,SACT,UAAI,MAAM,wBAAwB,EAE1C,GAAI,KAAK,UACP,OAAO,QAAQ,IAAIjwB,EAAQiwB,EAAG5rB,EAAOi9B,CAAQ,EAG/C,GAAI,KAAK,SAAS,IAAIrR,CAAC,EAAG,CACxB,MAAM9uB,EAAS,QAAQ,IAAInB,EAAQiwB,EAAG5rB,EAAOi9B,CAAQ,EAChD,qBAAS,WAAW,KAAK,MAAM,EAC7BngC,CACT,CAEA,MAAMogC,EAAWN,GAAQ,IAAI,KAAK,QAAQ,EAC1ChiC,EAAasiC,EAAU,wCAAwC,EACzD,MAAAlpB,EAAM,KAAK,SAAS,IAC1BpZ,EAAaoZ,EAAK,+BAA+B,EAE3C,MAAAmpB,EAAQf,GAASp8B,CAAK,EACvB,eAAUgU,EAAK,IAAM,CACnB,cAAS,IAAI4X,EAAGuR,CAAK,EAC3B,EACD,MAAMt3B,EAAOu3B,GAAaD,EAAO,KAAK,QAAQ,EAC9C,OAAO,QAAQ,IAAIxhC,EAAQiwB,EAAG/lB,EAAMo3B,CAAQ,CAC9C,EACA,IAAK,CAACthC,EAAQiwB,EAAGqR,IACR,QAAQ,IAAIthC,EAAQiwB,EAAGqR,CAAQ,EAExC,eAAgB,CAACthC,EAAQiwB,IAAM,CACzB,UAAOA,GAAM,SACT,UAAI,MAAM,wBAAwB,EAE1C,GAAI,KAAK,UACA,eAAQ,eAAejwB,EAAQiwB,CAAC,EAGzC,MAAMyR,EAAUT,GAAQ,IAAI,KAAK,QAAQ,EACzChiC,EAAayiC,EAAS,wCAAwC,EACxD,MAAArpB,EAAM,KAAK,SAAS,IAC1B,OAAApZ,EAAaoZ,EAAK,+BAA+B,EAE5C,eAAUA,EAAK,IAAM,CACnB,cAAS,OAAO4X,CAAC,EACvB,EAEM,QAAQ,eAAejwB,EAAQiwB,CAAC,CACzC,EACD,EAGK,eAAa/O,GAA8B,CAC5C,gBAAWA,EAAO,IAAM,CACrBA,EAAA,YAAY,QAAejd,GAAA,CAC/B,MAAMhE,EAAOihB,EAAM,QAAQ,KAAK,IAAIjd,CAAG,EACvC,GAAKhE,GAGD,GAAAA,EAAK,SAAW,SAClB,KAAK,gBAAgB,IAAM,CAClB,YAAK,QAAQgE,CAAG,EACxB,UACQhE,EAAK,SAAW,OAASA,EAAK,SAAW,SAAU,CAC5D,MAAM8hC,EAAU,KAAK,SAAS,IAAI99B,CAAG,EACrC,KAAK,gBAAgB,IAAM,CACzB,KAAK,QAAQA,CAAG,EAAIg9B,GAAQ,IAAIc,CAAO,EACnCd,GAAQ,IAAIc,CAAO,EACnBN,GAAaM,EAAS,KAAK,QAAQ,EACxC,CACH,GACD,EACF,GA3FI,YAAS,KAAK,YACXd,GAAA,IAAIG,EAAU,IAAI,EACjBA,EAAA,QAAQ,KAAK,SAAS,CACjC,CAEA,MAAMS,EAAc,CACb,cAAS,IAAIA,CAAI,CACxB,CAEA,IAAIA,EAAc,CACV,MAAAx9B,EAAQ,KAAK,QAAQw9B,CAAI,EAC1B,cAAS,OAAOA,CAAI,EACpB,YAAOA,CAAI,EAAIx9B,CACtB,CAgFF,CAEO,SAASo9B,GACdV,EACA/6B,EAA8B,GACxB,CACF,OAAAi7B,GAAQ,IAAIF,CAAS,EAChBE,GAAQ,IAAIF,CAAS,EAAG,MAG1BD,GAASC,EAAW,CACzB,UAAW,CAAC18B,EAAOiU,IACbmnB,GAAM,GAAGnnB,CAAM,EACVjU,EAELiU,aAAkBK,EACP,IAAIuoB,GACf78B,EACAiU,EACAtS,CAAA,EAEU,MAEVsS,aAAkBO,EACP,IAAIipB,GACfz9B,EACAiU,EACAtS,CAAA,EAEU,MAGP3B,CACT,CACD,CACH,CAIgB,SAAA29B,GAAUjB,EAAoBc,EAAuB,CAC7D,MAAAI,EAAQhB,GAAQ,IAAIF,CAAS,EACnC9hC,EAAagjC,EAAO,wCAAwC,EAC5DA,EAAM,MAAMJ,CAAI,CAClB,CAIgB,SAAAK,GAAQnB,EAAoBc,EAAuB,CAC3D,MAAAI,EAAQhB,GAAQ,IAAIF,CAAS,EACnC9hC,EAAagjC,EAAO,wCAAwC,EAC5DA,EAAM,IAAIJ,CAAI,CAChB,CC7RA,IAAIM,GACH,SAAUA,EAAM,CACbA,EAAK,YAAejjC,GAAQA,EAC5B,SAASkjC,EAASC,EAAM,CAAG,CAC3BF,EAAK,SAAWC,EAChB,SAASE,EAAYC,EAAI,CACrB,MAAM,IAAI,KACb,CACDJ,EAAK,YAAcG,EACnBH,EAAK,YAAe7O,GAAU,CAC1B,MAAMtuB,EAAM,GACZ,UAAW0K,KAAQ4jB,EACftuB,EAAI0K,CAAI,EAAIA,EAEhB,OAAO1K,CACf,EACIm9B,EAAK,mBAAsBn9B,GAAQ,CAC/B,MAAMw9B,EAAYL,EAAK,WAAWn9B,CAAG,EAAE,OAAQlB,GAAM,OAAOkB,EAAIA,EAAIlB,CAAC,CAAC,GAAM,QAAQ,EAC9E2+B,EAAW,GACjB,UAAW3+B,KAAK0+B,EACZC,EAAS3+B,CAAC,EAAIkB,EAAIlB,CAAC,EAEvB,OAAOq+B,EAAK,aAAaM,CAAQ,CACzC,EACIN,EAAK,aAAgBn9B,GACVm9B,EAAK,WAAWn9B,CAAG,EAAE,IAAI,SAAUyyB,EAAG,CACzC,OAAOzyB,EAAIyyB,CAAC,CACxB,CAAS,EAEL0K,EAAK,WAAa,OAAO,OAAO,MAAS,WAClCn9B,GAAQ,OAAO,KAAKA,CAAG,EACvB09B,GAAW,CACV,MAAM59B,EAAO,GACb,UAAWb,KAAOy+B,EACV,OAAO,UAAU,eAAe,KAAKA,EAAQz+B,CAAG,GAChDa,EAAK,KAAKb,CAAG,EAGrB,OAAOa,CACnB,EACIq9B,EAAK,KAAO,CAACtgC,EAAK8gC,IAAY,CAC1B,UAAWjzB,KAAQ7N,EACf,GAAI8gC,EAAQjzB,CAAI,EACZ,OAAOA,CAGvB,EACIyyB,EAAK,UAAY,OAAO,OAAO,WAAc,WACtCjjC,GAAQ,OAAO,UAAUA,CAAG,EAC5BA,GAAQ,OAAOA,GAAQ,UAAY,SAASA,CAAG,GAAK,KAAK,MAAMA,CAAG,IAAMA,EAC/E,SAAS0jC,EAAWvgC,EAAOQ,EAAY,MAAO,CAC1C,OAAOR,EACF,IAAKnD,GAAS,OAAOA,GAAQ,SAAW,IAAIA,CAAG,IAAMA,CAAI,EACzD,KAAK2D,CAAS,CACtB,CACDs/B,EAAK,WAAaS,EAClBT,EAAK,sBAAwB,CAACnjC,EAAGqF,IACzB,OAAOA,GAAU,SACVA,EAAM,WAEVA,CAEf,GAAG89B,IAASA,EAAO,CAAE,EAAC,EACtB,IAAIU,IACH,SAAUA,EAAY,CACnBA,EAAW,YAAc,CAACpK,EAAOqK,KACtB,CACH,GAAGrK,EACH,GAAGqK,CACf,EAEA,GAAGD,KAAeA,GAAa,CAAE,EAAC,EAClC,MAAME,EAAgBZ,EAAK,YAAY,CACnC,SACA,MACA,SACA,UACA,QACA,UACA,OACA,SACA,SACA,WACA,YACA,OACA,QACA,SACA,UACA,UACA,OACA,QACA,MACA,KACJ,CAAC,EACKa,GAAiB94B,GAAS,CAE5B,OADU,OAAOA,EACR,CACL,IAAK,YACD,OAAO64B,EAAc,UACzB,IAAK,SACD,OAAOA,EAAc,OACzB,IAAK,SACD,OAAO,MAAM74B,CAAI,EAAI64B,EAAc,IAAMA,EAAc,OAC3D,IAAK,UACD,OAAOA,EAAc,QACzB,IAAK,WACD,OAAOA,EAAc,SACzB,IAAK,SACD,OAAOA,EAAc,OACzB,IAAK,SACD,OAAOA,EAAc,OACzB,IAAK,SACD,OAAI,MAAM,QAAQ74B,CAAI,EACX64B,EAAc,MAErB74B,IAAS,KACF64B,EAAc,KAErB74B,EAAK,MACL,OAAOA,EAAK,MAAS,YACrBA,EAAK,OACL,OAAOA,EAAK,OAAU,WACf64B,EAAc,QAErB,OAAO,IAAQ,KAAe74B,aAAgB,IACvC64B,EAAc,IAErB,OAAO,IAAQ,KAAe74B,aAAgB,IACvC64B,EAAc,IAErB,OAAO,KAAS,KAAe74B,aAAgB,KACxC64B,EAAc,KAElBA,EAAc,OACzB,QACI,OAAOA,EAAc,OAC5B,CACL,EAEME,EAAed,EAAK,YAAY,CAClC,eACA,kBACA,SACA,gBACA,8BACA,qBACA,oBACA,oBACA,sBACA,eACA,iBACA,YACA,UACA,6BACA,kBACA,YACJ,CAAC,EACKe,GAAiBl+B,GACN,KAAK,UAAUA,EAAK,KAAM,CAAC,EAC5B,QAAQ,cAAe,KAAK,EAE5C,MAAMm+B,WAAiB,KAAM,CACzB,YAAYC,EAAQ,CAChB,QACA,KAAK,OAAS,GACd,KAAK,SAAYrM,GAAQ,CACrB,KAAK,OAAS,CAAC,GAAG,KAAK,OAAQA,CAAG,CAC9C,EACQ,KAAK,UAAY,CAAC9P,EAAO,KAAO,CAC5B,KAAK,OAAS,CAAC,GAAG,KAAK,OAAQ,GAAGA,CAAI,CAClD,EACQ,MAAMoc,EAAc,WAAW,UAC3B,OAAO,eAEP,OAAO,eAAe,KAAMA,CAAW,EAGvC,KAAK,UAAYA,EAErB,KAAK,KAAO,WACZ,KAAK,OAASD,CACjB,CACD,IAAI,QAAS,CACT,OAAO,KAAK,MACf,CACD,OAAOE,EAAS,CACZ,MAAMC,EAASD,GACX,SAAUE,EAAO,CACb,OAAOA,EAAM,OAC7B,EACcC,EAAc,CAAE,QAAS,IACzBC,EAAgBC,GAAU,CAC5B,UAAWH,KAASG,EAAM,OACtB,GAAIH,EAAM,OAAS,gBACfA,EAAM,YAAY,IAAIE,CAAY,UAE7BF,EAAM,OAAS,sBACpBE,EAAaF,EAAM,eAAe,UAE7BA,EAAM,OAAS,oBACpBE,EAAaF,EAAM,cAAc,UAE5BA,EAAM,KAAK,SAAW,EAC3BC,EAAY,QAAQ,KAAKF,EAAOC,CAAK,CAAC,MAErC,CACD,IAAIve,EAAOwe,EACP9jC,EAAI,EACR,KAAOA,EAAI6jC,EAAM,KAAK,QAAQ,CAC1B,MAAMjQ,EAAKiQ,EAAM,KAAK7jC,CAAC,EACNA,IAAM6jC,EAAM,KAAK,OAAS,GAYvCve,EAAKsO,CAAE,EAAItO,EAAKsO,CAAE,GAAK,CAAE,QAAS,IAClCtO,EAAKsO,CAAE,EAAE,QAAQ,KAAKgQ,EAAOC,CAAK,CAAC,GAXnCve,EAAKsO,CAAE,EAAItO,EAAKsO,CAAE,GAAK,CAAE,QAAS,IAatCtO,EAAOA,EAAKsO,CAAE,EACd5zB,GACH,CACJ,CAEjB,EACQ,OAAA+jC,EAAa,IAAI,EACVD,CACV,CACD,UAAW,CACP,OAAO,KAAK,OACf,CACD,IAAI,SAAU,CACV,OAAO,KAAK,UAAU,KAAK,OAAQtB,EAAK,sBAAuB,CAAC,CACnE,CACD,IAAI,SAAU,CACV,OAAO,KAAK,OAAO,SAAW,CACjC,CACD,QAAQoB,EAAUC,GAAUA,EAAM,QAAS,CACvC,MAAMC,EAAc,GACdG,EAAa,GACnB,UAAW7M,KAAO,KAAK,OACfA,EAAI,KAAK,OAAS,GAClB0M,EAAY1M,EAAI,KAAK,CAAC,CAAC,EAAI0M,EAAY1M,EAAI,KAAK,CAAC,CAAC,GAAK,GACvD0M,EAAY1M,EAAI,KAAK,CAAC,CAAC,EAAE,KAAKwM,EAAOxM,CAAG,CAAC,GAGzC6M,EAAW,KAAKL,EAAOxM,CAAG,CAAC,EAGnC,MAAO,CAAE,WAAA6M,EAAY,YAAAH,EACxB,CACD,IAAI,YAAa,CACb,OAAO,KAAK,SACf,CACL,CACAN,GAAS,OAAUC,GACD,IAAID,GAASC,CAAM,EAIrC,MAAMS,GAAW,CAACL,EAAOM,IAAS,CAC9B,IAAI3kC,EACJ,OAAQqkC,EAAM,KAAI,CACd,KAAKP,EAAa,aACVO,EAAM,WAAaT,EAAc,UACjC5jC,EAAU,WAGVA,EAAU,YAAYqkC,EAAM,QAAQ,cAAcA,EAAM,QAAQ,GAEpE,MACJ,KAAKP,EAAa,gBACd9jC,EAAU,mCAAmC,KAAK,UAAUqkC,EAAM,SAAUrB,EAAK,qBAAqB,CAAC,GACvG,MACJ,KAAKc,EAAa,kBACd9jC,EAAU,kCAAkCgjC,EAAK,WAAWqB,EAAM,KAAM,IAAI,CAAC,GAC7E,MACJ,KAAKP,EAAa,cACd9jC,EAAU,gBACV,MACJ,KAAK8jC,EAAa,4BACd9jC,EAAU,yCAAyCgjC,EAAK,WAAWqB,EAAM,OAAO,CAAC,GACjF,MACJ,KAAKP,EAAa,mBACd9jC,EAAU,gCAAgCgjC,EAAK,WAAWqB,EAAM,OAAO,CAAC,eAAeA,EAAM,QAAQ,IACrG,MACJ,KAAKP,EAAa,kBACd9jC,EAAU,6BACV,MACJ,KAAK8jC,EAAa,oBACd9jC,EAAU,+BACV,MACJ,KAAK8jC,EAAa,aACd9jC,EAAU,eACV,MACJ,KAAK8jC,EAAa,eACV,OAAOO,EAAM,YAAe,SACxB,aAAcA,EAAM,YACpBrkC,EAAU,gCAAgCqkC,EAAM,WAAW,QAAQ,IAC/D,OAAOA,EAAM,WAAW,UAAa,WACrCrkC,EAAU,GAAGA,CAAO,sDAAsDqkC,EAAM,WAAW,QAAQ,KAGlG,eAAgBA,EAAM,WAC3BrkC,EAAU,mCAAmCqkC,EAAM,WAAW,UAAU,IAEnE,aAAcA,EAAM,WACzBrkC,EAAU,iCAAiCqkC,EAAM,WAAW,QAAQ,IAGpErB,EAAK,YAAYqB,EAAM,UAAU,EAGhCA,EAAM,aAAe,QAC1BrkC,EAAU,WAAWqkC,EAAM,UAAU,GAGrCrkC,EAAU,UAEd,MACJ,KAAK8jC,EAAa,UACVO,EAAM,OAAS,QACfrkC,EAAU,sBAAsBqkC,EAAM,MAAQ,UAAYA,EAAM,UAAY,WAAa,WAAW,IAAIA,EAAM,OAAO,cAChHA,EAAM,OAAS,SACpBrkC,EAAU,uBAAuBqkC,EAAM,MAAQ,UAAYA,EAAM,UAAY,WAAa,MAAM,IAAIA,EAAM,OAAO,gBAC5GA,EAAM,OAAS,SACpBrkC,EAAU,kBAAkBqkC,EAAM,MAC5B,oBACAA,EAAM,UACF,4BACA,eAAe,GAAGA,EAAM,OAAO,GACpCA,EAAM,OAAS,OACpBrkC,EAAU,gBAAgBqkC,EAAM,MAC1B,oBACAA,EAAM,UACF,4BACA,eAAe,GAAG,IAAI,KAAK,OAAOA,EAAM,OAAO,CAAC,CAAC,GAE3DrkC,EAAU,gBACd,MACJ,KAAK8jC,EAAa,QACVO,EAAM,OAAS,QACfrkC,EAAU,sBAAsBqkC,EAAM,MAAQ,UAAYA,EAAM,UAAY,UAAY,WAAW,IAAIA,EAAM,OAAO,cAC/GA,EAAM,OAAS,SACpBrkC,EAAU,uBAAuBqkC,EAAM,MAAQ,UAAYA,EAAM,UAAY,UAAY,OAAO,IAAIA,EAAM,OAAO,gBAC5GA,EAAM,OAAS,SACpBrkC,EAAU,kBAAkBqkC,EAAM,MAC5B,UACAA,EAAM,UACF,wBACA,WAAW,IAAIA,EAAM,OAAO,GACjCA,EAAM,OAAS,SACpBrkC,EAAU,kBAAkBqkC,EAAM,MAC5B,UACAA,EAAM,UACF,wBACA,WAAW,IAAIA,EAAM,OAAO,GACjCA,EAAM,OAAS,OACpBrkC,EAAU,gBAAgBqkC,EAAM,MAC1B,UACAA,EAAM,UACF,2BACA,cAAc,IAAI,IAAI,KAAK,OAAOA,EAAM,OAAO,CAAC,CAAC,GAE3DrkC,EAAU,gBACd,MACJ,KAAK8jC,EAAa,OACd9jC,EAAU,gBACV,MACJ,KAAK8jC,EAAa,2BACd9jC,EAAU,2CACV,MACJ,KAAK8jC,EAAa,gBACd9jC,EAAU,gCAAgCqkC,EAAM,UAAU,GAC1D,MACJ,KAAKP,EAAa,WACd9jC,EAAU,wBACV,MACJ,QACIA,EAAU2kC,EAAK,aACf3B,EAAK,YAAYqB,CAAK,CAC7B,CACD,MAAO,CAAE,QAAArkC,CAAO,CACpB,EAEA,IAAI4kC,GAAmBF,GACvB,SAASG,GAAYhgC,EAAK,CACtB+/B,GAAmB//B,CACvB,CACA,SAASigC,IAAc,CACnB,OAAOF,EACX,CAEA,MAAMG,GAAaC,GAAW,CAC1B,KAAM,CAAE,KAAAj6B,EAAM,KAAA2lB,EAAM,UAAAuU,EAAW,UAAAC,CAAS,EAAKF,EACvCG,EAAW,CAAC,GAAGzU,EAAM,GAAIwU,EAAU,MAAQ,IAC3CE,EAAY,CACd,GAAGF,EACH,KAAMC,CACd,EACI,IAAIE,EAAe,GACnB,MAAMC,EAAOL,EACR,OAAQxgC,GAAM,CAAC,CAACA,CAAC,EACjB,MAAO,EACP,UACL,UAAWI,KAAOygC,EACdD,EAAexgC,EAAIugC,EAAW,CAAE,KAAAr6B,EAAM,aAAcs6B,CAAY,CAAE,EAAE,QAExE,MAAO,CACH,GAAGH,EACH,KAAMC,EACN,QAASD,EAAU,SAAWG,CACtC,CACA,EACME,GAAa,GACnB,SAASC,EAAkBC,EAAKP,EAAW,CACvC,MAAMb,EAAQU,GAAU,CACpB,UAAWG,EACX,KAAMO,EAAI,KACV,KAAMA,EAAI,KACV,UAAW,CACPA,EAAI,OAAO,mBACXA,EAAI,eACJX,GAAa,EACbJ,EACH,EAAC,OAAQrkC,GAAM,CAAC,CAACA,CAAC,CAC3B,CAAK,EACDolC,EAAI,OAAO,OAAO,KAAKpB,CAAK,CAChC,CACA,MAAMqB,CAAY,CACd,aAAc,CACV,KAAK,MAAQ,OAChB,CACD,OAAQ,CACA,KAAK,QAAU,UACf,KAAK,MAAQ,QACpB,CACD,OAAQ,CACA,KAAK,QAAU,YACf,KAAK,MAAQ,UACpB,CACD,OAAO,WAAWC,EAAQC,EAAS,CAC/B,MAAMC,EAAa,GACnB,UAAWt3B,KAAKq3B,EAAS,CACrB,GAAIr3B,EAAE,SAAW,UACb,OAAOu3B,EACPv3B,EAAE,SAAW,SACbo3B,EAAO,MAAK,EAChBE,EAAW,KAAKt3B,EAAE,KAAK,CAC1B,CACD,MAAO,CAAE,OAAQo3B,EAAO,MAAO,MAAOE,CAAU,CACnD,CACD,aAAa,iBAAiBF,EAAQI,EAAO,CACzC,MAAMC,EAAY,GAClB,UAAWC,KAAQF,EACfC,EAAU,KAAK,CACX,IAAK,MAAMC,EAAK,IAChB,MAAO,MAAMA,EAAK,KAClC,CAAa,EAEL,OAAOP,EAAY,gBAAgBC,EAAQK,CAAS,CACvD,CACD,OAAO,gBAAgBL,EAAQI,EAAO,CAClC,MAAMG,EAAc,GACpB,UAAWD,KAAQF,EAAO,CACtB,KAAM,CAAE,IAAAjhC,EAAK,MAAAI,CAAO,EAAG+gC,EAGvB,GAFInhC,EAAI,SAAW,WAEfI,EAAM,SAAW,UACjB,OAAO4gC,EACPhhC,EAAI,SAAW,SACf6gC,EAAO,MAAK,EACZzgC,EAAM,SAAW,SACjBygC,EAAO,MAAK,EACZ7gC,EAAI,QAAU,cACb,OAAOI,EAAM,MAAU,KAAe+gC,EAAK,aAC5CC,EAAYphC,EAAI,KAAK,EAAII,EAAM,MAEtC,CACD,MAAO,CAAE,OAAQygC,EAAO,MAAO,MAAOO,CAAW,CACpD,CACL,CACA,MAAMJ,EAAU,OAAO,OAAO,CAC1B,OAAQ,SACZ,CAAC,EACKK,GAASjhC,IAAW,CAAE,OAAQ,QAAS,MAAAA,CAAK,GAC5CkhC,GAAMlhC,IAAW,CAAE,OAAQ,QAAS,MAAAA,CAAK,GACzCmhC,GAAahmC,GAAMA,EAAE,SAAW,UAChCimC,GAAWjmC,GAAMA,EAAE,SAAW,QAC9BkmC,GAAWlmC,GAAMA,EAAE,SAAW,QAC9BmmC,GAAWnmC,GAAM,OAAO,QAAY,KAAeA,aAAa,QAEtE,IAAIomC,GACH,SAAUA,EAAW,CAClBA,EAAU,SAAYzmC,GAAY,OAAOA,GAAY,SAAW,CAAE,QAAAA,CAAO,EAAKA,GAAW,GACzFymC,EAAU,SAAYzmC,GAAY,OAAOA,GAAY,SAAWA,EAA4DA,GAAQ,OACxI,GAAGymC,IAAcA,EAAY,CAAE,EAAC,EAEhC,MAAMC,EAAmB,CACrB,YAAY32B,EAAQ7K,EAAOwrB,EAAM5rB,EAAK,CAClC,KAAK,YAAc,GACnB,KAAK,OAASiL,EACd,KAAK,KAAO7K,EACZ,KAAK,MAAQwrB,EACb,KAAK,KAAO5rB,CACf,CACD,IAAI,MAAO,CACP,OAAK,KAAK,YAAY,SACd,KAAK,gBAAgB,MACrB,KAAK,YAAY,KAAK,GAAG,KAAK,MAAO,GAAG,KAAK,IAAI,EAGjD,KAAK,YAAY,KAAK,GAAG,KAAK,MAAO,KAAK,IAAI,GAG/C,KAAK,WACf,CACL,CACA,MAAM6hC,GAAe,CAAClB,EAAKzjC,IAAW,CAClC,GAAIukC,GAAQvkC,CAAM,EACd,MAAO,CAAE,QAAS,GAAM,KAAMA,EAAO,KAAK,EAG1C,GAAI,CAACyjC,EAAI,OAAO,OAAO,OACnB,MAAM,IAAI,MAAM,2CAA2C,EAE/D,MAAO,CACH,QAAS,GACT,IAAI,OAAQ,CACR,GAAI,KAAK,OACL,OAAO,KAAK,OAChB,MAAMjB,EAAQ,IAAIR,GAASyB,EAAI,OAAO,MAAM,EAC5C,YAAK,OAASjB,EACP,KAAK,MACf,CACb,CAEA,EACA,SAASoC,EAAoB5B,EAAQ,CACjC,GAAI,CAACA,EACD,MAAO,GACX,KAAM,CAAE,SAAAN,EAAU,mBAAAmC,EAAoB,eAAAC,EAAgB,YAAAC,CAAW,EAAK/B,EACtE,GAAIN,IAAamC,GAAsBC,GACnC,MAAM,IAAI,MAAM,0FAA0F,EAE9G,OAAIpC,EACO,CAAE,SAAUA,EAAU,YAAAqC,GAS1B,CAAE,SARS,CAACC,EAAKvB,IAChBuB,EAAI,OAAS,eACN,CAAE,QAASvB,EAAI,cACtB,OAAOA,EAAI,KAAS,IACb,CAAE,QAASqB,GAAwErB,EAAI,cAE3F,CAAE,QAASoB,GAAoFpB,EAAI,cAEhF,YAAAsB,EAClC,CACA,MAAME,CAAQ,CACV,YAAYC,EAAK,CAEb,KAAK,IAAM,KAAK,eAChB,KAAK,KAAOA,EACZ,KAAK,MAAQ,KAAK,MAAM,KAAK,IAAI,EACjC,KAAK,UAAY,KAAK,UAAU,KAAK,IAAI,EACzC,KAAK,WAAa,KAAK,WAAW,KAAK,IAAI,EAC3C,KAAK,eAAiB,KAAK,eAAe,KAAK,IAAI,EACnD,KAAK,IAAM,KAAK,IAAI,KAAK,IAAI,EAC7B,KAAK,OAAS,KAAK,OAAO,KAAK,IAAI,EACnC,KAAK,WAAa,KAAK,WAAW,KAAK,IAAI,EAC3C,KAAK,YAAc,KAAK,YAAY,KAAK,IAAI,EAC7C,KAAK,SAAW,KAAK,SAAS,KAAK,IAAI,EACvC,KAAK,SAAW,KAAK,SAAS,KAAK,IAAI,EACvC,KAAK,QAAU,KAAK,QAAQ,KAAK,IAAI,EACrC,KAAK,MAAQ,KAAK,MAAM,KAAK,IAAI,EACjC,KAAK,QAAU,KAAK,QAAQ,KAAK,IAAI,EACrC,KAAK,GAAK,KAAK,GAAG,KAAK,IAAI,EAC3B,KAAK,IAAM,KAAK,IAAI,KAAK,IAAI,EAC7B,KAAK,UAAY,KAAK,UAAU,KAAK,IAAI,EACzC,KAAK,MAAQ,KAAK,MAAM,KAAK,IAAI,EACjC,KAAK,QAAU,KAAK,QAAQ,KAAK,IAAI,EACrC,KAAK,MAAQ,KAAK,MAAM,KAAK,IAAI,EACjC,KAAK,SAAW,KAAK,SAAS,KAAK,IAAI,EACvC,KAAK,KAAO,KAAK,KAAK,KAAK,IAAI,EAC/B,KAAK,SAAW,KAAK,SAAS,KAAK,IAAI,EACvC,KAAK,WAAa,KAAK,WAAW,KAAK,IAAI,EAC3C,KAAK,WAAa,KAAK,WAAW,KAAK,IAAI,CAC9C,CACD,IAAI,aAAc,CACd,OAAO,KAAK,KAAK,WACpB,CACD,SAASn4B,EAAO,CACZ,OAAO80B,GAAc90B,EAAM,IAAI,CAClC,CACD,gBAAgBA,EAAO02B,EAAK,CACxB,OAAQA,GAAO,CACX,OAAQ12B,EAAM,OAAO,OACrB,KAAMA,EAAM,KACZ,WAAY80B,GAAc90B,EAAM,IAAI,EACpC,eAAgB,KAAK,KAAK,SAC1B,KAAMA,EAAM,KACZ,OAAQA,EAAM,MAC1B,CACK,CACD,oBAAoBA,EAAO,CACvB,MAAO,CACH,OAAQ,IAAI22B,EACZ,IAAK,CACD,OAAQ32B,EAAM,OAAO,OACrB,KAAMA,EAAM,KACZ,WAAY80B,GAAc90B,EAAM,IAAI,EACpC,eAAgB,KAAK,KAAK,SAC1B,KAAMA,EAAM,KACZ,OAAQA,EAAM,MACjB,CACb,CACK,CACD,WAAWA,EAAO,CACd,MAAM/M,EAAS,KAAK,OAAO+M,CAAK,EAChC,GAAIy3B,GAAQxkC,CAAM,EACd,MAAM,IAAI,MAAM,wCAAwC,EAE5D,OAAOA,CACV,CACD,YAAY+M,EAAO,CACf,MAAM/M,EAAS,KAAK,OAAO+M,CAAK,EAChC,OAAO,QAAQ,QAAQ/M,CAAM,CAChC,CACD,MAAM+I,EAAMi6B,EAAQ,CAChB,MAAMhjC,EAAS,KAAK,UAAU+I,EAAMi6B,CAAM,EAC1C,GAAIhjC,EAAO,QACP,OAAOA,EAAO,KAClB,MAAMA,EAAO,KAChB,CACD,UAAU+I,EAAMi6B,EAAQ,CACpB,IAAImC,EACJ,MAAM1B,EAAM,CACR,OAAQ,CACJ,OAAQ,CAAE,EACV,OAAQ0B,EAAqDnC,GAAO,SAAW,MAAQmC,IAAO,OAASA,EAAK,GAC5G,mBAAoEnC,GAAO,QAC9E,EACD,KAAuDA,GAAO,MAAS,CAAE,EACzE,eAAgB,KAAK,KAAK,SAC1B,OAAQ,KACR,KAAAj6B,EACA,WAAY84B,GAAc94B,CAAI,CAC1C,EACc/I,EAAS,KAAK,WAAW,CAAE,KAAA+I,EAAM,KAAM06B,EAAI,KAAM,OAAQA,CAAK,GACpE,OAAOkB,GAAalB,EAAKzjC,CAAM,CAClC,CACD,MAAM,WAAW+I,EAAMi6B,EAAQ,CAC3B,MAAMhjC,EAAS,MAAM,KAAK,eAAe+I,EAAMi6B,CAAM,EACrD,GAAIhjC,EAAO,QACP,OAAOA,EAAO,KAClB,MAAMA,EAAO,KAChB,CACD,MAAM,eAAe+I,EAAMi6B,EAAQ,CAC/B,MAAMS,EAAM,CACR,OAAQ,CACJ,OAAQ,CAAE,EACV,mBAAoET,GAAO,SAC3E,MAAO,EACV,EACD,KAAuDA,GAAO,MAAS,CAAE,EACzE,eAAgB,KAAK,KAAK,SAC1B,OAAQ,KACR,KAAAj6B,EACA,WAAY84B,GAAc94B,CAAI,CAC1C,EACcq8B,EAAmB,KAAK,OAAO,CAAE,KAAAr8B,EAAM,KAAM06B,EAAI,KAAM,OAAQA,CAAK,GACpEzjC,EAAS,MAAOwkC,GAAQY,CAAgB,EACxCA,EACA,QAAQ,QAAQA,CAAgB,GACtC,OAAOT,GAAalB,EAAKzjC,CAAM,CAClC,CACD,OAAOqlC,EAAOrnC,EAAS,CACnB,MAAMsnC,EAAsBvnC,GACpB,OAAOC,GAAY,UAAY,OAAOA,EAAY,IAC3C,CAAE,QAAAA,CAAO,EAEX,OAAOA,GAAY,WACjBA,EAAQD,CAAG,EAGXC,EAGf,OAAO,KAAK,YAAY,CAACD,EAAK0lC,IAAQ,CAClC,MAAMzjC,EAASqlC,EAAMtnC,CAAG,EAClBwnC,EAAW,IAAM9B,EAAI,SAAS,CAChC,KAAM3B,EAAa,OACnB,GAAGwD,EAAmBvnC,CAAG,CACzC,CAAa,EACD,OAAI,OAAO,QAAY,KAAeiC,aAAkB,QAC7CA,EAAO,KAAM+I,GACXA,EAKM,IAJPw8B,IACO,GAKd,EAEAvlC,EAKM,IAJPulC,IACO,GAKvB,CAAS,CACJ,CACD,WAAWF,EAAOG,EAAgB,CAC9B,OAAO,KAAK,YAAY,CAACznC,EAAK0lC,IACrB4B,EAAMtnC,CAAG,EAOH,IANP0lC,EAAI,SAAS,OAAO+B,GAAmB,WACjCA,EAAeznC,EAAK0lC,CAAG,EACvB+B,CAAc,EACb,GAKd,CACJ,CACD,YAAYC,EAAY,CACpB,OAAO,IAAIC,GAAW,CAClB,OAAQ,KACR,SAAUC,EAAsB,WAChC,OAAQ,CAAE,KAAM,aAAc,WAAAF,CAAY,CACtD,CAAS,CACJ,CACD,YAAYA,EAAY,CACpB,OAAO,KAAK,YAAYA,CAAU,CACrC,CACD,UAAW,CACP,OAAOG,GAAY,OAAO,KAAM,KAAK,IAAI,CAC5C,CACD,UAAW,CACP,OAAOC,GAAY,OAAO,KAAM,KAAK,IAAI,CAC5C,CACD,SAAU,CACN,OAAO,KAAK,WAAW,UAC1B,CACD,OAAQ,CACJ,OAAOC,GAAS,OAAO,KAAM,KAAK,IAAI,CACzC,CACD,SAAU,CACN,OAAOC,GAAW,OAAO,KAAM,KAAK,IAAI,CAC3C,CACD,GAAGC,EAAQ,CACP,OAAOC,GAAS,OAAO,CAAC,KAAMD,CAAM,EAAG,KAAK,IAAI,CACnD,CACD,IAAIE,EAAU,CACV,OAAOC,GAAgB,OAAO,KAAMD,EAAU,KAAK,IAAI,CAC1D,CACD,UAAU1G,EAAW,CACjB,OAAO,IAAIkG,GAAW,CAClB,GAAGd,EAAoB,KAAK,IAAI,EAChC,OAAQ,KACR,SAAUe,EAAsB,WAChC,OAAQ,CAAE,KAAM,YAAa,UAAAnG,CAAW,CACpD,CAAS,CACJ,CACD,QAAQ0F,EAAK,CACT,MAAMkB,EAAmB,OAAOlB,GAAQ,WAAaA,EAAM,IAAMA,EACjE,OAAO,IAAImB,GAAW,CAClB,GAAGzB,EAAoB,KAAK,IAAI,EAChC,UAAW,KACX,aAAcwB,EACd,SAAUT,EAAsB,UAC5C,CAAS,CACJ,CACD,OAAQ,CACJ,OAAO,IAAIW,GAAW,CAClB,SAAUX,EAAsB,WAChC,KAAM,KACN,GAAGf,EAAoB,KAAK,IAAI,CAC5C,CAAS,CACJ,CACD,MAAMM,EAAK,CACP,MAAMqB,EAAiB,OAAOrB,GAAQ,WAAaA,EAAM,IAAMA,EAC/D,OAAO,IAAIsB,GAAS,CAChB,GAAG5B,EAAoB,KAAK,IAAI,EAChC,UAAW,KACX,WAAY2B,EACZ,SAAUZ,EAAsB,QAC5C,CAAS,CACJ,CACD,SAASZ,EAAa,CAClB,MAAM0B,EAAO,KAAK,YAClB,OAAO,IAAIA,EAAK,CACZ,GAAG,KAAK,KACR,YAAA1B,CACZ,CAAS,CACJ,CACD,KAAKlmC,EAAQ,CACT,OAAO6nC,GAAY,OAAO,KAAM7nC,CAAM,CACzC,CACD,UAAW,CACP,OAAO8nC,GAAY,OAAO,IAAI,CACjC,CACD,YAAa,CACT,OAAO,KAAK,UAAU,MAAS,EAAE,OACpC,CACD,YAAa,CACT,OAAO,KAAK,UAAU,IAAI,EAAE,OAC/B,CACL,CACA,MAAMC,GAAY,iBACZC,GAAa,mBACbC,GAAY,2BAGZC,GAAY,yFAaZC,GAAa,mFAIbC,GAAc,uDACpB,IAAIC,GACJ,MAAMC,GAAY,gHACZC,GAAY,+XAEZC,GAAiB/iC,GACfA,EAAK,UACDA,EAAK,OACE,IAAI,OAAO,oDAAoDA,EAAK,SAAS,+BAA+B,EAG5G,IAAI,OAAO,oDAAoDA,EAAK,SAAS,KAAK,EAGxFA,EAAK,YAAc,EACpBA,EAAK,OACE,IAAI,OAAO,wEAAwE,EAGnF,IAAI,OAAO,8CAA8C,EAIhEA,EAAK,OACE,IAAI,OAAO,kFAAkF,EAG7F,IAAI,OAAO,wDAAwD,EAItF,SAASgjC,GAAUC,EAAIC,EAAS,CAI5B,MAHK,IAAAA,IAAY,MAAQ,CAACA,IAAYL,GAAU,KAAKI,CAAE,IAGlDC,IAAY,MAAQ,CAACA,IAAYJ,GAAU,KAAKG,CAAE,EAI3D,CACA,MAAME,WAAkBxC,CAAQ,CAC5B,OAAOl4B,EAAO,CAKV,GAJI,KAAK,KAAK,SACVA,EAAM,KAAO,OAAOA,EAAM,IAAI,GAEf,KAAK,SAASA,CAAK,IACnB60B,EAAc,OAAQ,CACrC,MAAM6B,EAAM,KAAK,gBAAgB12B,CAAK,EACtC,OAAAy2B,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,aACnB,SAAUF,EAAc,OACxB,SAAU6B,EAAI,UACjB,CAEb,EACmBK,CACV,CACD,MAAMH,EAAS,IAAID,EACnB,IAAID,EACJ,UAAW4B,KAAS,KAAK,KAAK,OAC1B,GAAIA,EAAM,OAAS,MACXt4B,EAAM,KAAK,OAASs4B,EAAM,QAC1B5B,EAAM,KAAK,gBAAgB12B,EAAO02B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,UACnB,QAASuD,EAAM,MACf,KAAM,SACN,UAAW,GACX,MAAO,GACP,QAASA,EAAM,OACvC,CAAqB,EACD1B,EAAO,MAAK,WAGX0B,EAAM,OAAS,MAChBt4B,EAAM,KAAK,OAASs4B,EAAM,QAC1B5B,EAAM,KAAK,gBAAgB12B,EAAO02B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,QACnB,QAASuD,EAAM,MACf,KAAM,SACN,UAAW,GACX,MAAO,GACP,QAASA,EAAM,OACvC,CAAqB,EACD1B,EAAO,MAAK,WAGX0B,EAAM,OAAS,SAAU,CAC9B,MAAMqC,EAAS36B,EAAM,KAAK,OAASs4B,EAAM,MACnCsC,EAAW56B,EAAM,KAAK,OAASs4B,EAAM,OACvCqC,GAAUC,KACVlE,EAAM,KAAK,gBAAgB12B,EAAO02B,CAAG,EACjCiE,EACAlE,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,QACnB,QAASuD,EAAM,MACf,KAAM,SACN,UAAW,GACX,MAAO,GACP,QAASA,EAAM,OAC3C,CAAyB,EAEIsC,GACLnE,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,UACnB,QAASuD,EAAM,MACf,KAAM,SACN,UAAW,GACX,MAAO,GACP,QAASA,EAAM,OAC3C,CAAyB,EAEL1B,EAAO,MAAK,EAEnB,SACQ0B,EAAM,OAAS,QACf2B,GAAW,KAAKj6B,EAAM,IAAI,IAC3B02B,EAAM,KAAK,gBAAgB12B,EAAO02B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,WAAY,QACZ,KAAM3B,EAAa,eACnB,QAASuD,EAAM,OACvC,CAAqB,EACD1B,EAAO,MAAK,WAGX0B,EAAM,OAAS,QACf6B,KACDA,GAAa,IAAI,OAAOD,GAAa,GAAG,GAEvCC,GAAW,KAAKn6B,EAAM,IAAI,IAC3B02B,EAAM,KAAK,gBAAgB12B,EAAO02B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,WAAY,QACZ,KAAM3B,EAAa,eACnB,QAASuD,EAAM,OACvC,CAAqB,EACD1B,EAAO,MAAK,WAGX0B,EAAM,OAAS,OACf0B,GAAU,KAAKh6B,EAAM,IAAI,IAC1B02B,EAAM,KAAK,gBAAgB12B,EAAO02B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,WAAY,OACZ,KAAM3B,EAAa,eACnB,QAASuD,EAAM,OACvC,CAAqB,EACD1B,EAAO,MAAK,WAGX0B,EAAM,OAAS,OACfuB,GAAU,KAAK75B,EAAM,IAAI,IAC1B02B,EAAM,KAAK,gBAAgB12B,EAAO02B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,WAAY,OACZ,KAAM3B,EAAa,eACnB,QAASuD,EAAM,OACvC,CAAqB,EACD1B,EAAO,MAAK,WAGX0B,EAAM,OAAS,QACfwB,GAAW,KAAK95B,EAAM,IAAI,IAC3B02B,EAAM,KAAK,gBAAgB12B,EAAO02B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,WAAY,QACZ,KAAM3B,EAAa,eACnB,QAASuD,EAAM,OACvC,CAAqB,EACD1B,EAAO,MAAK,WAGX0B,EAAM,OAAS,OACfyB,GAAU,KAAK/5B,EAAM,IAAI,IAC1B02B,EAAM,KAAK,gBAAgB12B,EAAO02B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,WAAY,OACZ,KAAM3B,EAAa,eACnB,QAASuD,EAAM,OACvC,CAAqB,EACD1B,EAAO,MAAK,WAGX0B,EAAM,OAAS,MACpB,GAAI,CACA,IAAI,IAAIt4B,EAAM,IAAI,CACrB,MACU,CACP02B,EAAM,KAAK,gBAAgB12B,EAAO02B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,WAAY,MACZ,KAAM3B,EAAa,eACnB,QAASuD,EAAM,OACvC,CAAqB,EACD1B,EAAO,MAAK,CACf,MAEI0B,EAAM,OAAS,SACpBA,EAAM,MAAM,UAAY,EACLA,EAAM,MAAM,KAAKt4B,EAAM,IAAI,IAE1C02B,EAAM,KAAK,gBAAgB12B,EAAO02B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,WAAY,QACZ,KAAM3B,EAAa,eACnB,QAASuD,EAAM,OACvC,CAAqB,EACD1B,EAAO,MAAK,IAGX0B,EAAM,OAAS,OACpBt4B,EAAM,KAAOA,EAAM,KAAK,KAAI,EAEvBs4B,EAAM,OAAS,WACft4B,EAAM,KAAK,SAASs4B,EAAM,MAAOA,EAAM,QAAQ,IAChD5B,EAAM,KAAK,gBAAgB12B,EAAO02B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,eACnB,WAAY,CAAE,SAAUuD,EAAM,MAAO,SAAUA,EAAM,QAAU,EAC/D,QAASA,EAAM,OACvC,CAAqB,EACD1B,EAAO,MAAK,GAGX0B,EAAM,OAAS,cACpBt4B,EAAM,KAAOA,EAAM,KAAK,YAAW,EAE9Bs4B,EAAM,OAAS,cACpBt4B,EAAM,KAAOA,EAAM,KAAK,YAAW,EAE9Bs4B,EAAM,OAAS,aACft4B,EAAM,KAAK,WAAWs4B,EAAM,KAAK,IAClC5B,EAAM,KAAK,gBAAgB12B,EAAO02B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,eACnB,WAAY,CAAE,WAAYuD,EAAM,KAAO,EACvC,QAASA,EAAM,OACvC,CAAqB,EACD1B,EAAO,MAAK,GAGX0B,EAAM,OAAS,WACft4B,EAAM,KAAK,SAASs4B,EAAM,KAAK,IAChC5B,EAAM,KAAK,gBAAgB12B,EAAO02B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,eACnB,WAAY,CAAE,SAAUuD,EAAM,KAAO,EACrC,QAASA,EAAM,OACvC,CAAqB,EACD1B,EAAO,MAAK,GAGX0B,EAAM,OAAS,WACNgC,GAAchC,CAAK,EACtB,KAAKt4B,EAAM,IAAI,IACtB02B,EAAM,KAAK,gBAAgB12B,EAAO02B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,eACnB,WAAY,WACZ,QAASuD,EAAM,OACvC,CAAqB,EACD1B,EAAO,MAAK,GAGX0B,EAAM,OAAS,KACfiC,GAAUv6B,EAAM,KAAMs4B,EAAM,OAAO,IACpC5B,EAAM,KAAK,gBAAgB12B,EAAO02B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,WAAY,KACZ,KAAM3B,EAAa,eACnB,QAASuD,EAAM,OACvC,CAAqB,EACD1B,EAAO,MAAK,GAIhB3C,EAAK,YAAYqE,CAAK,EAG9B,MAAO,CAAE,OAAQ1B,EAAO,MAAO,MAAO52B,EAAM,KAC/C,CACD,OAAO66B,EAAOC,EAAY7pC,EAAS,CAC/B,OAAO,KAAK,WAAY+K,GAAS6+B,EAAM,KAAK7+B,CAAI,EAAG,CAC/C,WAAA8+B,EACA,KAAM/F,EAAa,eACnB,GAAG2C,EAAU,SAASzmC,CAAO,CACzC,CAAS,CACJ,CACD,UAAUqnC,EAAO,CACb,OAAO,IAAIoC,GAAU,CACjB,GAAG,KAAK,KACR,OAAQ,CAAC,GAAG,KAAK,KAAK,OAAQpC,CAAK,CAC/C,CAAS,CACJ,CACD,MAAMrnC,EAAS,CACX,OAAO,KAAK,UAAU,CAAE,KAAM,QAAS,GAAGymC,EAAU,SAASzmC,CAAO,CAAC,CAAE,CAC1E,CACD,IAAIA,EAAS,CACT,OAAO,KAAK,UAAU,CAAE,KAAM,MAAO,GAAGymC,EAAU,SAASzmC,CAAO,CAAC,CAAE,CACxE,CACD,MAAMA,EAAS,CACX,OAAO,KAAK,UAAU,CAAE,KAAM,QAAS,GAAGymC,EAAU,SAASzmC,CAAO,CAAC,CAAE,CAC1E,CACD,KAAKA,EAAS,CACV,OAAO,KAAK,UAAU,CAAE,KAAM,OAAQ,GAAGymC,EAAU,SAASzmC,CAAO,CAAC,CAAE,CACzE,CACD,KAAKA,EAAS,CACV,OAAO,KAAK,UAAU,CAAE,KAAM,OAAQ,GAAGymC,EAAU,SAASzmC,CAAO,CAAC,CAAE,CACzE,CACD,MAAMA,EAAS,CACX,OAAO,KAAK,UAAU,CAAE,KAAM,QAAS,GAAGymC,EAAU,SAASzmC,CAAO,CAAC,CAAE,CAC1E,CACD,KAAKA,EAAS,CACV,OAAO,KAAK,UAAU,CAAE,KAAM,OAAQ,GAAGymC,EAAU,SAASzmC,CAAO,CAAC,CAAE,CACzE,CACD,GAAG6G,EAAS,CACR,OAAO,KAAK,UAAU,CAAE,KAAM,KAAM,GAAG4/B,EAAU,SAAS5/B,CAAO,CAAC,CAAE,CACvE,CACD,SAASA,EAAS,CACd,IAAIsgC,EACJ,OAAI,OAAOtgC,GAAY,SACZ,KAAK,UAAU,CAClB,KAAM,WACN,UAAW,KACX,OAAQ,GACR,QAASA,CACzB,CAAa,EAEE,KAAK,UAAU,CAClB,KAAM,WACN,UAAW,OAA0DA,GAAQ,UAAe,IAAc,KAAyDA,GAAQ,UAC3K,QAASsgC,EAAuDtgC,GAAQ,UAAY,MAAQsgC,IAAO,OAASA,EAAK,GACjH,GAAGV,EAAU,SAA2D5/B,GAAQ,OAAO,CACnG,CAAS,CACJ,CACD,MAAM+iC,EAAO5pC,EAAS,CAClB,OAAO,KAAK,UAAU,CAClB,KAAM,QACN,MAAO4pC,EACP,GAAGnD,EAAU,SAASzmC,CAAO,CACzC,CAAS,CACJ,CACD,SAASkF,EAAO2B,EAAS,CACrB,OAAO,KAAK,UAAU,CAClB,KAAM,WACN,MAAO3B,EACP,SAA4D2B,GAAQ,SACpE,GAAG4/B,EAAU,SAA2D5/B,GAAQ,OAAO,CACnG,CAAS,CACJ,CACD,WAAW3B,EAAOlF,EAAS,CACvB,OAAO,KAAK,UAAU,CAClB,KAAM,aACN,MAAOkF,EACP,GAAGuhC,EAAU,SAASzmC,CAAO,CACzC,CAAS,CACJ,CACD,SAASkF,EAAOlF,EAAS,CACrB,OAAO,KAAK,UAAU,CAClB,KAAM,WACN,MAAOkF,EACP,GAAGuhC,EAAU,SAASzmC,CAAO,CACzC,CAAS,CACJ,CACD,IAAI8pC,EAAW9pC,EAAS,CACpB,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAO8pC,EACP,GAAGrD,EAAU,SAASzmC,CAAO,CACzC,CAAS,CACJ,CACD,IAAI+pC,EAAW/pC,EAAS,CACpB,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAO+pC,EACP,GAAGtD,EAAU,SAASzmC,CAAO,CACzC,CAAS,CACJ,CACD,OAAOiD,EAAKjD,EAAS,CACjB,OAAO,KAAK,UAAU,CAClB,KAAM,SACN,MAAOiD,EACP,GAAGwjC,EAAU,SAASzmC,CAAO,CACzC,CAAS,CACJ,CAKD,SAASA,EAAS,CACd,OAAO,KAAK,IAAI,EAAGymC,EAAU,SAASzmC,CAAO,CAAC,CACjD,CACD,MAAO,CACH,OAAO,IAAIypC,GAAU,CACjB,GAAG,KAAK,KACR,OAAQ,CAAC,GAAG,KAAK,KAAK,OAAQ,CAAE,KAAM,OAAQ,CAC1D,CAAS,CACJ,CACD,aAAc,CACV,OAAO,IAAIA,GAAU,CACjB,GAAG,KAAK,KACR,OAAQ,CAAC,GAAG,KAAK,KAAK,OAAQ,CAAE,KAAM,cAAe,CACjE,CAAS,CACJ,CACD,aAAc,CACV,OAAO,IAAIA,GAAU,CACjB,GAAG,KAAK,KACR,OAAQ,CAAC,GAAG,KAAK,KAAK,OAAQ,CAAE,KAAM,cAAe,CACjE,CAAS,CACJ,CACD,IAAI,YAAa,CACb,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMO,GAAOA,EAAG,OAAS,UAAU,CAChE,CACD,IAAI,SAAU,CACV,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMA,GAAOA,EAAG,OAAS,OAAO,CAC7D,CACD,IAAI,OAAQ,CACR,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMA,GAAOA,EAAG,OAAS,KAAK,CAC3D,CACD,IAAI,SAAU,CACV,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMA,GAAOA,EAAG,OAAS,OAAO,CAC7D,CACD,IAAI,QAAS,CACT,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMA,GAAOA,EAAG,OAAS,MAAM,CAC5D,CACD,IAAI,QAAS,CACT,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMA,GAAOA,EAAG,OAAS,MAAM,CAC5D,CACD,IAAI,SAAU,CACV,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMA,GAAOA,EAAG,OAAS,OAAO,CAC7D,CACD,IAAI,QAAS,CACT,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMA,GAAOA,EAAG,OAAS,MAAM,CAC5D,CACD,IAAI,MAAO,CACP,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMA,GAAOA,EAAG,OAAS,IAAI,CAC1D,CACD,IAAI,WAAY,CACZ,IAAI/iC,EAAM,KACV,UAAW+iC,KAAM,KAAK,KAAK,OACnBA,EAAG,OAAS,QACR/iC,IAAQ,MAAQ+iC,EAAG,MAAQ/iC,KAC3BA,EAAM+iC,EAAG,OAGrB,OAAO/iC,CACV,CACD,IAAI,WAAY,CACZ,IAAIC,EAAM,KACV,UAAW8iC,KAAM,KAAK,KAAK,OACnBA,EAAG,OAAS,QACR9iC,IAAQ,MAAQ8iC,EAAG,MAAQ9iC,KAC3BA,EAAM8iC,EAAG,OAGrB,OAAO9iC,CACV,CACL,CACAuiC,GAAU,OAAUzE,GAAW,CAC3B,IAAImC,EACJ,OAAO,IAAIsC,GAAU,CACjB,OAAQ,CAAE,EACV,SAAU9B,EAAsB,UAChC,QAASR,EAAqDnC,GAAO,UAAY,MAAQmC,IAAO,OAASA,EAAK,GAC9G,GAAGP,EAAoB5B,CAAM,CACrC,CAAK,CACL,EAEA,SAASiF,GAAmBlqC,EAAKmqC,EAAM,CACnC,MAAMC,GAAepqC,EAAI,WAAW,MAAM,GAAG,EAAE,CAAC,GAAK,IAAI,OACnDqqC,GAAgBF,EAAK,WAAW,MAAM,GAAG,EAAE,CAAC,GAAK,IAAI,OACrDG,EAAWF,EAAcC,EAAeD,EAAcC,EACtDE,EAAS,SAASvqC,EAAI,QAAQsqC,CAAQ,EAAE,QAAQ,IAAK,EAAE,CAAC,EACxDE,EAAU,SAASL,EAAK,QAAQG,CAAQ,EAAE,QAAQ,IAAK,EAAE,CAAC,EAChE,OAAQC,EAASC,EAAW,KAAK,IAAI,GAAIF,CAAQ,CACrD,CACA,MAAMG,WAAkBvD,CAAQ,CAC5B,aAAc,CACV,MAAM,GAAG,SAAS,EAClB,KAAK,IAAM,KAAK,IAChB,KAAK,IAAM,KAAK,IAChB,KAAK,KAAO,KAAK,UACpB,CACD,OAAOl4B,EAAO,CAKV,GAJI,KAAK,KAAK,SACVA,EAAM,KAAO,OAAOA,EAAM,IAAI,GAEf,KAAK,SAASA,CAAK,IACnB60B,EAAc,OAAQ,CACrC,MAAM6B,EAAM,KAAK,gBAAgB12B,CAAK,EACtC,OAAAy2B,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,aACnB,SAAUF,EAAc,OACxB,SAAU6B,EAAI,UAC9B,CAAa,EACMK,CACV,CACD,IAAIL,EACJ,MAAME,EAAS,IAAID,EACnB,UAAW2B,KAAS,KAAK,KAAK,OACtBA,EAAM,OAAS,MACVrE,EAAK,UAAUj0B,EAAM,IAAI,IAC1B02B,EAAM,KAAK,gBAAgB12B,EAAO02B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,aACnB,SAAU,UACV,SAAU,QACV,QAASuD,EAAM,OACvC,CAAqB,EACD1B,EAAO,MAAK,GAGX0B,EAAM,OAAS,OACHA,EAAM,UACjBt4B,EAAM,KAAOs4B,EAAM,MACnBt4B,EAAM,MAAQs4B,EAAM,SAEtB5B,EAAM,KAAK,gBAAgB12B,EAAO02B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,UACnB,QAASuD,EAAM,MACf,KAAM,SACN,UAAWA,EAAM,UACjB,MAAO,GACP,QAASA,EAAM,OACvC,CAAqB,EACD1B,EAAO,MAAK,GAGX0B,EAAM,OAAS,OACLA,EAAM,UACft4B,EAAM,KAAOs4B,EAAM,MACnBt4B,EAAM,MAAQs4B,EAAM,SAEtB5B,EAAM,KAAK,gBAAgB12B,EAAO02B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,QACnB,QAASuD,EAAM,MACf,KAAM,SACN,UAAWA,EAAM,UACjB,MAAO,GACP,QAASA,EAAM,OACvC,CAAqB,EACD1B,EAAO,MAAK,GAGX0B,EAAM,OAAS,aAChB4C,GAAmBl7B,EAAM,KAAMs4B,EAAM,KAAK,IAAM,IAChD5B,EAAM,KAAK,gBAAgB12B,EAAO02B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,gBACnB,WAAYuD,EAAM,MAClB,QAASA,EAAM,OACvC,CAAqB,EACD1B,EAAO,MAAK,GAGX0B,EAAM,OAAS,SACf,OAAO,SAASt4B,EAAM,IAAI,IAC3B02B,EAAM,KAAK,gBAAgB12B,EAAO02B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,WACnB,QAASuD,EAAM,OACvC,CAAqB,EACD1B,EAAO,MAAK,GAIhB3C,EAAK,YAAYqE,CAAK,EAG9B,MAAO,CAAE,OAAQ1B,EAAO,MAAO,MAAO52B,EAAM,KAC/C,CACD,IAAI7J,EAAOlF,EAAS,CAChB,OAAO,KAAK,SAAS,MAAOkF,EAAO,GAAMuhC,EAAU,SAASzmC,CAAO,CAAC,CACvE,CACD,GAAGkF,EAAOlF,EAAS,CACf,OAAO,KAAK,SAAS,MAAOkF,EAAO,GAAOuhC,EAAU,SAASzmC,CAAO,CAAC,CACxE,CACD,IAAIkF,EAAOlF,EAAS,CAChB,OAAO,KAAK,SAAS,MAAOkF,EAAO,GAAMuhC,EAAU,SAASzmC,CAAO,CAAC,CACvE,CACD,GAAGkF,EAAOlF,EAAS,CACf,OAAO,KAAK,SAAS,MAAOkF,EAAO,GAAOuhC,EAAU,SAASzmC,CAAO,CAAC,CACxE,CACD,SAASyqC,EAAMvlC,EAAOwlC,EAAW1qC,EAAS,CACtC,OAAO,IAAIwqC,GAAU,CACjB,GAAG,KAAK,KACR,OAAQ,CACJ,GAAG,KAAK,KAAK,OACb,CACI,KAAAC,EACA,MAAAvlC,EACA,UAAAwlC,EACA,QAASjE,EAAU,SAASzmC,CAAO,CACtC,CACJ,CACb,CAAS,CACJ,CACD,UAAUqnC,EAAO,CACb,OAAO,IAAImD,GAAU,CACjB,GAAG,KAAK,KACR,OAAQ,CAAC,GAAG,KAAK,KAAK,OAAQnD,CAAK,CAC/C,CAAS,CACJ,CACD,IAAIrnC,EAAS,CACT,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,QAASymC,EAAU,SAASzmC,CAAO,CAC/C,CAAS,CACJ,CACD,SAASA,EAAS,CACd,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAO,EACP,UAAW,GACX,QAASymC,EAAU,SAASzmC,CAAO,CAC/C,CAAS,CACJ,CACD,SAASA,EAAS,CACd,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAO,EACP,UAAW,GACX,QAASymC,EAAU,SAASzmC,CAAO,CAC/C,CAAS,CACJ,CACD,YAAYA,EAAS,CACjB,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAO,EACP,UAAW,GACX,QAASymC,EAAU,SAASzmC,CAAO,CAC/C,CAAS,CACJ,CACD,YAAYA,EAAS,CACjB,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAO,EACP,UAAW,GACX,QAASymC,EAAU,SAASzmC,CAAO,CAC/C,CAAS,CACJ,CACD,WAAWkF,EAAOlF,EAAS,CACvB,OAAO,KAAK,UAAU,CAClB,KAAM,aACN,MAAOkF,EACP,QAASuhC,EAAU,SAASzmC,CAAO,CAC/C,CAAS,CACJ,CACD,OAAOA,EAAS,CACZ,OAAO,KAAK,UAAU,CAClB,KAAM,SACN,QAASymC,EAAU,SAASzmC,CAAO,CAC/C,CAAS,CACJ,CACD,KAAKA,EAAS,CACV,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,UAAW,GACX,MAAO,OAAO,iBACd,QAASymC,EAAU,SAASzmC,CAAO,CACtC,GAAE,UAAU,CACT,KAAM,MACN,UAAW,GACX,MAAO,OAAO,iBACd,QAASymC,EAAU,SAASzmC,CAAO,CAC/C,CAAS,CACJ,CACD,IAAI,UAAW,CACX,IAAIiH,EAAM,KACV,UAAW+iC,KAAM,KAAK,KAAK,OACnBA,EAAG,OAAS,QACR/iC,IAAQ,MAAQ+iC,EAAG,MAAQ/iC,KAC3BA,EAAM+iC,EAAG,OAGrB,OAAO/iC,CACV,CACD,IAAI,UAAW,CACX,IAAIC,EAAM,KACV,UAAW8iC,KAAM,KAAK,KAAK,OACnBA,EAAG,OAAS,QACR9iC,IAAQ,MAAQ8iC,EAAG,MAAQ9iC,KAC3BA,EAAM8iC,EAAG,OAGrB,OAAO9iC,CACV,CACD,IAAI,OAAQ,CACR,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAM8iC,GAAOA,EAAG,OAAS,OAC9CA,EAAG,OAAS,cAAgBhH,EAAK,UAAUgH,EAAG,KAAK,CAAE,CAC7D,CACD,IAAI,UAAW,CACX,IAAI9iC,EAAM,KAAMD,EAAM,KACtB,UAAW+iC,KAAM,KAAK,KAAK,OAAQ,CAC/B,GAAIA,EAAG,OAAS,UACZA,EAAG,OAAS,OACZA,EAAG,OAAS,aACZ,MAAO,GAEFA,EAAG,OAAS,OACb/iC,IAAQ,MAAQ+iC,EAAG,MAAQ/iC,KAC3BA,EAAM+iC,EAAG,OAERA,EAAG,OAAS,QACb9iC,IAAQ,MAAQ8iC,EAAG,MAAQ9iC,KAC3BA,EAAM8iC,EAAG,MAEpB,CACD,OAAO,OAAO,SAAS/iC,CAAG,GAAK,OAAO,SAASC,CAAG,CACrD,CACL,CACAsjC,GAAU,OAAUxF,GACT,IAAIwF,GAAU,CACjB,OAAQ,CAAE,EACV,SAAU7C,EAAsB,UAChC,OAAyD3C,GAAO,QAAW,GAC3E,GAAG4B,EAAoB5B,CAAM,CACrC,CAAK,EAEL,MAAM2F,WAAkB1D,CAAQ,CAC5B,aAAc,CACV,MAAM,GAAG,SAAS,EAClB,KAAK,IAAM,KAAK,IAChB,KAAK,IAAM,KAAK,GACnB,CACD,OAAOl4B,EAAO,CAKV,GAJI,KAAK,KAAK,SACVA,EAAM,KAAO,OAAOA,EAAM,IAAI,GAEf,KAAK,SAASA,CAAK,IACnB60B,EAAc,OAAQ,CACrC,MAAM6B,EAAM,KAAK,gBAAgB12B,CAAK,EACtC,OAAAy2B,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,aACnB,SAAUF,EAAc,OACxB,SAAU6B,EAAI,UAC9B,CAAa,EACMK,CACV,CACD,IAAIL,EACJ,MAAME,EAAS,IAAID,EACnB,UAAW2B,KAAS,KAAK,KAAK,OACtBA,EAAM,OAAS,OACEA,EAAM,UACjBt4B,EAAM,KAAOs4B,EAAM,MACnBt4B,EAAM,MAAQs4B,EAAM,SAEtB5B,EAAM,KAAK,gBAAgB12B,EAAO02B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,UACnB,KAAM,SACN,QAASuD,EAAM,MACf,UAAWA,EAAM,UACjB,QAASA,EAAM,OACvC,CAAqB,EACD1B,EAAO,MAAK,GAGX0B,EAAM,OAAS,OACLA,EAAM,UACft4B,EAAM,KAAOs4B,EAAM,MACnBt4B,EAAM,MAAQs4B,EAAM,SAEtB5B,EAAM,KAAK,gBAAgB12B,EAAO02B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,QACnB,KAAM,SACN,QAASuD,EAAM,MACf,UAAWA,EAAM,UACjB,QAASA,EAAM,OACvC,CAAqB,EACD1B,EAAO,MAAK,GAGX0B,EAAM,OAAS,aAChBt4B,EAAM,KAAOs4B,EAAM,QAAU,OAAO,CAAC,IACrC5B,EAAM,KAAK,gBAAgB12B,EAAO02B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,gBACnB,WAAYuD,EAAM,MAClB,QAASA,EAAM,OACvC,CAAqB,EACD1B,EAAO,MAAK,GAIhB3C,EAAK,YAAYqE,CAAK,EAG9B,MAAO,CAAE,OAAQ1B,EAAO,MAAO,MAAO52B,EAAM,KAC/C,CACD,IAAI7J,EAAOlF,EAAS,CAChB,OAAO,KAAK,SAAS,MAAOkF,EAAO,GAAMuhC,EAAU,SAASzmC,CAAO,CAAC,CACvE,CACD,GAAGkF,EAAOlF,EAAS,CACf,OAAO,KAAK,SAAS,MAAOkF,EAAO,GAAOuhC,EAAU,SAASzmC,CAAO,CAAC,CACxE,CACD,IAAIkF,EAAOlF,EAAS,CAChB,OAAO,KAAK,SAAS,MAAOkF,EAAO,GAAMuhC,EAAU,SAASzmC,CAAO,CAAC,CACvE,CACD,GAAGkF,EAAOlF,EAAS,CACf,OAAO,KAAK,SAAS,MAAOkF,EAAO,GAAOuhC,EAAU,SAASzmC,CAAO,CAAC,CACxE,CACD,SAASyqC,EAAMvlC,EAAOwlC,EAAW1qC,EAAS,CACtC,OAAO,IAAI2qC,GAAU,CACjB,GAAG,KAAK,KACR,OAAQ,CACJ,GAAG,KAAK,KAAK,OACb,CACI,KAAAF,EACA,MAAAvlC,EACA,UAAAwlC,EACA,QAASjE,EAAU,SAASzmC,CAAO,CACtC,CACJ,CACb,CAAS,CACJ,CACD,UAAUqnC,EAAO,CACb,OAAO,IAAIsD,GAAU,CACjB,GAAG,KAAK,KACR,OAAQ,CAAC,GAAG,KAAK,KAAK,OAAQtD,CAAK,CAC/C,CAAS,CACJ,CACD,SAASrnC,EAAS,CACd,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAO,OAAO,CAAC,EACf,UAAW,GACX,QAASymC,EAAU,SAASzmC,CAAO,CAC/C,CAAS,CACJ,CACD,SAASA,EAAS,CACd,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAO,OAAO,CAAC,EACf,UAAW,GACX,QAASymC,EAAU,SAASzmC,CAAO,CAC/C,CAAS,CACJ,CACD,YAAYA,EAAS,CACjB,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAO,OAAO,CAAC,EACf,UAAW,GACX,QAASymC,EAAU,SAASzmC,CAAO,CAC/C,CAAS,CACJ,CACD,YAAYA,EAAS,CACjB,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAO,OAAO,CAAC,EACf,UAAW,GACX,QAASymC,EAAU,SAASzmC,CAAO,CAC/C,CAAS,CACJ,CACD,WAAWkF,EAAOlF,EAAS,CACvB,OAAO,KAAK,UAAU,CAClB,KAAM,aACN,MAAAkF,EACA,QAASuhC,EAAU,SAASzmC,CAAO,CAC/C,CAAS,CACJ,CACD,IAAI,UAAW,CACX,IAAIiH,EAAM,KACV,UAAW+iC,KAAM,KAAK,KAAK,OACnBA,EAAG,OAAS,QACR/iC,IAAQ,MAAQ+iC,EAAG,MAAQ/iC,KAC3BA,EAAM+iC,EAAG,OAGrB,OAAO/iC,CACV,CACD,IAAI,UAAW,CACX,IAAIC,EAAM,KACV,UAAW8iC,KAAM,KAAK,KAAK,OACnBA,EAAG,OAAS,QACR9iC,IAAQ,MAAQ8iC,EAAG,MAAQ9iC,KAC3BA,EAAM8iC,EAAG,OAGrB,OAAO9iC,CACV,CACL,CACAyjC,GAAU,OAAU3F,GAAW,CAC3B,IAAImC,EACJ,OAAO,IAAIwD,GAAU,CACjB,OAAQ,CAAE,EACV,SAAUhD,EAAsB,UAChC,QAASR,EAAqDnC,GAAO,UAAY,MAAQmC,IAAO,OAASA,EAAK,GAC9G,GAAGP,EAAoB5B,CAAM,CACrC,CAAK,CACL,EACA,MAAM4F,WAAmB3D,CAAQ,CAC7B,OAAOl4B,EAAO,CAKV,GAJI,KAAK,KAAK,SACVA,EAAM,KAAO,EAAQA,EAAM,MAEZ,KAAK,SAASA,CAAK,IACnB60B,EAAc,QAAS,CACtC,MAAM6B,EAAM,KAAK,gBAAgB12B,CAAK,EACtC,OAAAy2B,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,aACnB,SAAUF,EAAc,QACxB,SAAU6B,EAAI,UAC9B,CAAa,EACMK,CACV,CACD,OAAOM,GAAGr3B,EAAM,IAAI,CACvB,CACL,CACA67B,GAAW,OAAU5F,GACV,IAAI4F,GAAW,CAClB,SAAUjD,EAAsB,WAChC,OAAyD3C,GAAO,QAAW,GAC3E,GAAG4B,EAAoB5B,CAAM,CACrC,CAAK,EAEL,MAAM6F,WAAgB5D,CAAQ,CAC1B,OAAOl4B,EAAO,CAKV,GAJI,KAAK,KAAK,SACVA,EAAM,KAAO,IAAI,KAAKA,EAAM,IAAI,GAEjB,KAAK,SAASA,CAAK,IACnB60B,EAAc,KAAM,CACnC,MAAM6B,EAAM,KAAK,gBAAgB12B,CAAK,EACtC,OAAAy2B,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,aACnB,SAAUF,EAAc,KACxB,SAAU6B,EAAI,UAC9B,CAAa,EACMK,CACV,CACD,GAAI,MAAM/2B,EAAM,KAAK,QAAS,GAAG,CAC7B,MAAM02B,EAAM,KAAK,gBAAgB12B,CAAK,EACtC,OAAAy2B,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,YACnC,CAAa,EACMgC,CACV,CACD,MAAMH,EAAS,IAAID,EACnB,IAAID,EACJ,UAAW4B,KAAS,KAAK,KAAK,OACtBA,EAAM,OAAS,MACXt4B,EAAM,KAAK,QAAO,EAAKs4B,EAAM,QAC7B5B,EAAM,KAAK,gBAAgB12B,EAAO02B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,UACnB,QAASuD,EAAM,QACf,UAAW,GACX,MAAO,GACP,QAASA,EAAM,MACf,KAAM,MAC9B,CAAqB,EACD1B,EAAO,MAAK,GAGX0B,EAAM,OAAS,MAChBt4B,EAAM,KAAK,QAAO,EAAKs4B,EAAM,QAC7B5B,EAAM,KAAK,gBAAgB12B,EAAO02B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,QACnB,QAASuD,EAAM,QACf,UAAW,GACX,MAAO,GACP,QAASA,EAAM,MACf,KAAM,MAC9B,CAAqB,EACD1B,EAAO,MAAK,GAIhB3C,EAAK,YAAYqE,CAAK,EAG9B,MAAO,CACH,OAAQ1B,EAAO,MACf,MAAO,IAAI,KAAK52B,EAAM,KAAK,QAAO,CAAE,CAChD,CACK,CACD,UAAUs4B,EAAO,CACb,OAAO,IAAIwD,GAAQ,CACf,GAAG,KAAK,KACR,OAAQ,CAAC,GAAG,KAAK,KAAK,OAAQxD,CAAK,CAC/C,CAAS,CACJ,CACD,IAAIyD,EAAS9qC,EAAS,CAClB,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAO8qC,EAAQ,QAAS,EACxB,QAASrE,EAAU,SAASzmC,CAAO,CAC/C,CAAS,CACJ,CACD,IAAI+qC,EAAS/qC,EAAS,CAClB,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAO+qC,EAAQ,QAAS,EACxB,QAAStE,EAAU,SAASzmC,CAAO,CAC/C,CAAS,CACJ,CACD,IAAI,SAAU,CACV,IAAIiH,EAAM,KACV,UAAW+iC,KAAM,KAAK,KAAK,OACnBA,EAAG,OAAS,QACR/iC,IAAQ,MAAQ+iC,EAAG,MAAQ/iC,KAC3BA,EAAM+iC,EAAG,OAGrB,OAAO/iC,GAAO,KAAO,IAAI,KAAKA,CAAG,EAAI,IACxC,CACD,IAAI,SAAU,CACV,IAAIC,EAAM,KACV,UAAW8iC,KAAM,KAAK,KAAK,OACnBA,EAAG,OAAS,QACR9iC,IAAQ,MAAQ8iC,EAAG,MAAQ9iC,KAC3BA,EAAM8iC,EAAG,OAGrB,OAAO9iC,GAAO,KAAO,IAAI,KAAKA,CAAG,EAAI,IACxC,CACL,CACA2jC,GAAQ,OAAU7F,GACP,IAAI6F,GAAQ,CACf,OAAQ,CAAE,EACV,OAAyD7F,GAAO,QAAW,GAC3E,SAAU2C,EAAsB,QAChC,GAAGf,EAAoB5B,CAAM,CACrC,CAAK,EAEL,MAAMgG,WAAkB/D,CAAQ,CAC5B,OAAOl4B,EAAO,CAEV,GADmB,KAAK,SAASA,CAAK,IACnB60B,EAAc,OAAQ,CACrC,MAAM6B,EAAM,KAAK,gBAAgB12B,CAAK,EACtC,OAAAy2B,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,aACnB,SAAUF,EAAc,OACxB,SAAU6B,EAAI,UAC9B,CAAa,EACMK,CACV,CACD,OAAOM,GAAGr3B,EAAM,IAAI,CACvB,CACL,CACAi8B,GAAU,OAAUhG,GACT,IAAIgG,GAAU,CACjB,SAAUrD,EAAsB,UAChC,GAAGf,EAAoB5B,CAAM,CACrC,CAAK,EAEL,MAAMiG,WAAqBhE,CAAQ,CAC/B,OAAOl4B,EAAO,CAEV,GADmB,KAAK,SAASA,CAAK,IACnB60B,EAAc,UAAW,CACxC,MAAM6B,EAAM,KAAK,gBAAgB12B,CAAK,EACtC,OAAAy2B,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,aACnB,SAAUF,EAAc,UACxB,SAAU6B,EAAI,UAC9B,CAAa,EACMK,CACV,CACD,OAAOM,GAAGr3B,EAAM,IAAI,CACvB,CACL,CACAk8B,GAAa,OAAUjG,GACZ,IAAIiG,GAAa,CACpB,SAAUtD,EAAsB,aAChC,GAAGf,EAAoB5B,CAAM,CACrC,CAAK,EAEL,MAAMkG,WAAgBjE,CAAQ,CAC1B,OAAOl4B,EAAO,CAEV,GADmB,KAAK,SAASA,CAAK,IACnB60B,EAAc,KAAM,CACnC,MAAM6B,EAAM,KAAK,gBAAgB12B,CAAK,EACtC,OAAAy2B,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,aACnB,SAAUF,EAAc,KACxB,SAAU6B,EAAI,UAC9B,CAAa,EACMK,CACV,CACD,OAAOM,GAAGr3B,EAAM,IAAI,CACvB,CACL,CACAm8B,GAAQ,OAAUlG,GACP,IAAIkG,GAAQ,CACf,SAAUvD,EAAsB,QAChC,GAAGf,EAAoB5B,CAAM,CACrC,CAAK,EAEL,MAAMmG,WAAelE,CAAQ,CACzB,aAAc,CACV,MAAM,GAAG,SAAS,EAElB,KAAK,KAAO,EACf,CACD,OAAOl4B,EAAO,CACV,OAAOq3B,GAAGr3B,EAAM,IAAI,CACvB,CACL,CACAo8B,GAAO,OAAUnG,GACN,IAAImG,GAAO,CACd,SAAUxD,EAAsB,OAChC,GAAGf,EAAoB5B,CAAM,CACrC,CAAK,EAEL,MAAMoG,WAAmBnE,CAAQ,CAC7B,aAAc,CACV,MAAM,GAAG,SAAS,EAElB,KAAK,SAAW,EACnB,CACD,OAAOl4B,EAAO,CACV,OAAOq3B,GAAGr3B,EAAM,IAAI,CACvB,CACL,CACAq8B,GAAW,OAAUpG,GACV,IAAIoG,GAAW,CAClB,SAAUzD,EAAsB,WAChC,GAAGf,EAAoB5B,CAAM,CACrC,CAAK,EAEL,MAAMqG,WAAiBpE,CAAQ,CAC3B,OAAOl4B,EAAO,CACV,MAAM02B,EAAM,KAAK,gBAAgB12B,CAAK,EACtC,OAAAy2B,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,aACnB,SAAUF,EAAc,MACxB,SAAU6B,EAAI,UAC1B,CAAS,EACMK,CACV,CACL,CACAuF,GAAS,OAAUrG,GACR,IAAIqG,GAAS,CAChB,SAAU1D,EAAsB,SAChC,GAAGf,EAAoB5B,CAAM,CACrC,CAAK,EAEL,MAAMsG,WAAgBrE,CAAQ,CAC1B,OAAOl4B,EAAO,CAEV,GADmB,KAAK,SAASA,CAAK,IACnB60B,EAAc,UAAW,CACxC,MAAM6B,EAAM,KAAK,gBAAgB12B,CAAK,EACtC,OAAAy2B,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,aACnB,SAAUF,EAAc,KACxB,SAAU6B,EAAI,UAC9B,CAAa,EACMK,CACV,CACD,OAAOM,GAAGr3B,EAAM,IAAI,CACvB,CACL,CACAu8B,GAAQ,OAAUtG,GACP,IAAIsG,GAAQ,CACf,SAAU3D,EAAsB,QAChC,GAAGf,EAAoB5B,CAAM,CACrC,CAAK,EAEL,MAAM8C,WAAiBb,CAAQ,CAC3B,OAAOl4B,EAAO,CACV,KAAM,CAAE,IAAA02B,EAAK,OAAAE,CAAM,EAAK,KAAK,oBAAoB52B,CAAK,EAChDm4B,EAAM,KAAK,KACjB,GAAIzB,EAAI,aAAe7B,EAAc,MACjC,OAAA4B,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,aACnB,SAAUF,EAAc,MACxB,SAAU6B,EAAI,UAC9B,CAAa,EACMK,EAEX,GAAIoB,EAAI,cAAgB,KAAM,CAC1B,MAAMwC,EAASjE,EAAI,KAAK,OAASyB,EAAI,YAAY,MAC3CyC,EAAWlE,EAAI,KAAK,OAASyB,EAAI,YAAY,OAC/CwC,GAAUC,KACVnE,EAAkBC,EAAK,CACnB,KAAMiE,EAAS5F,EAAa,QAAUA,EAAa,UACnD,QAAU6F,EAAWzC,EAAI,YAAY,MAAQ,OAC7C,QAAUwC,EAASxC,EAAI,YAAY,MAAQ,OAC3C,KAAM,QACN,UAAW,GACX,MAAO,GACP,QAASA,EAAI,YAAY,OAC7C,CAAiB,EACDvB,EAAO,MAAK,EAEnB,CA2BD,GA1BIuB,EAAI,YAAc,MACdzB,EAAI,KAAK,OAASyB,EAAI,UAAU,QAChC1B,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,UACnB,QAASoD,EAAI,UAAU,MACvB,KAAM,QACN,UAAW,GACX,MAAO,GACP,QAASA,EAAI,UAAU,OAC3C,CAAiB,EACDvB,EAAO,MAAK,GAGhBuB,EAAI,YAAc,MACdzB,EAAI,KAAK,OAASyB,EAAI,UAAU,QAChC1B,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,QACnB,QAASoD,EAAI,UAAU,MACvB,KAAM,QACN,UAAW,GACX,MAAO,GACP,QAASA,EAAI,UAAU,OAC3C,CAAiB,EACDvB,EAAO,MAAK,GAGhBF,EAAI,OAAO,MACX,OAAO,QAAQ,IAAI,CAAC,GAAGA,EAAI,IAAI,EAAE,IAAI,CAACl1B,EAAM/P,IACjC0mC,EAAI,KAAK,YAAY,IAAIR,GAAmBjB,EAAKl1B,EAAMk1B,EAAI,KAAMjlC,CAAC,CAAC,CAC7E,CAAC,EAAE,KAAMwB,GACC0jC,EAAY,WAAWC,EAAQ3jC,CAAM,CAC/C,EAEL,MAAMA,EAAS,CAAC,GAAGyjC,EAAI,IAAI,EAAE,IAAI,CAACl1B,EAAM/P,IAC7B0mC,EAAI,KAAK,WAAW,IAAIR,GAAmBjB,EAAKl1B,EAAMk1B,EAAI,KAAMjlC,CAAC,CAAC,CAC5E,EACD,OAAOklC,EAAY,WAAWC,EAAQ3jC,CAAM,CAC/C,CACD,IAAI,SAAU,CACV,OAAO,KAAK,KAAK,IACpB,CACD,IAAI8nC,EAAW9pC,EAAS,CACpB,OAAO,IAAI8nC,GAAS,CAChB,GAAG,KAAK,KACR,UAAW,CAAE,MAAOgC,EAAW,QAASrD,EAAU,SAASzmC,CAAO,CAAG,CACjF,CAAS,CACJ,CACD,IAAI+pC,EAAW/pC,EAAS,CACpB,OAAO,IAAI8nC,GAAS,CAChB,GAAG,KAAK,KACR,UAAW,CAAE,MAAOiC,EAAW,QAAStD,EAAU,SAASzmC,CAAO,CAAG,CACjF,CAAS,CACJ,CACD,OAAOiD,EAAKjD,EAAS,CACjB,OAAO,IAAI8nC,GAAS,CAChB,GAAG,KAAK,KACR,YAAa,CAAE,MAAO7kC,EAAK,QAASwjC,EAAU,SAASzmC,CAAO,CAAG,CAC7E,CAAS,CACJ,CACD,SAASA,EAAS,CACd,OAAO,KAAK,IAAI,EAAGA,CAAO,CAC7B,CACL,CACA8nC,GAAS,OAAS,CAACyD,EAAQvG,IAChB,IAAI8C,GAAS,CAChB,KAAMyD,EACN,UAAW,KACX,UAAW,KACX,YAAa,KACb,SAAU5D,EAAsB,SAChC,GAAGf,EAAoB5B,CAAM,CACrC,CAAK,EAEL,SAASwG,GAAeD,EAAQ,CAC5B,GAAIA,aAAkBE,EAAW,CAC7B,MAAMC,EAAW,GACjB,UAAW5mC,KAAOymC,EAAO,MAAO,CAC5B,MAAMI,EAAcJ,EAAO,MAAMzmC,CAAG,EACpC4mC,EAAS5mC,CAAG,EAAI8iC,GAAY,OAAO4D,GAAeG,CAAW,CAAC,CACjE,CACD,OAAO,IAAIF,EAAU,CACjB,GAAGF,EAAO,KACV,MAAO,IAAMG,CACzB,CAAS,CACJ,KACI,QAAIH,aAAkBzD,GAChB,IAAIA,GAAS,CAChB,GAAGyD,EAAO,KACV,KAAMC,GAAeD,EAAO,OAAO,CAC/C,CAAS,EAEIA,aAAkB3D,GAChBA,GAAY,OAAO4D,GAAeD,EAAO,OAAQ,EAAC,EAEpDA,aAAkB1D,GAChBA,GAAY,OAAO2D,GAAeD,EAAO,OAAQ,EAAC,EAEpDA,aAAkBK,GAChBA,GAAS,OAAOL,EAAO,MAAM,IAAKh7B,GAASi7B,GAAej7B,CAAI,CAAC,CAAC,EAGhEg7B,CAEf,CACA,MAAME,UAAkBxE,CAAQ,CAC5B,aAAc,CACV,MAAM,GAAG,SAAS,EAClB,KAAK,QAAU,KAKf,KAAK,UAAY,KAAK,YAqCtB,KAAK,QAAU,KAAK,MACvB,CACD,YAAa,CACT,GAAI,KAAK,UAAY,KACjB,OAAO,KAAK,QAChB,MAAM4E,EAAQ,KAAK,KAAK,MAAK,EACvBlmC,EAAOq9B,EAAK,WAAW6I,CAAK,EAClC,OAAQ,KAAK,QAAU,CAAE,MAAAA,EAAO,KAAAlmC,CAAI,CACvC,CACD,OAAOoJ,EAAO,CAEV,GADmB,KAAK,SAASA,CAAK,IACnB60B,EAAc,OAAQ,CACrC,MAAM6B,EAAM,KAAK,gBAAgB12B,CAAK,EACtC,OAAAy2B,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,aACnB,SAAUF,EAAc,OACxB,SAAU6B,EAAI,UAC9B,CAAa,EACMK,CACV,CACD,KAAM,CAAE,OAAAH,EAAQ,IAAAF,CAAG,EAAK,KAAK,oBAAoB12B,CAAK,EAChD,CAAE,MAAA88B,EAAO,KAAMC,CAAS,EAAK,KAAK,aAClCC,EAAY,GAClB,GAAI,EAAE,KAAK,KAAK,oBAAoBV,IAChC,KAAK,KAAK,cAAgB,SAC1B,UAAWvmC,KAAO2gC,EAAI,KACbqG,EAAU,SAAShnC,CAAG,GACvBinC,EAAU,KAAKjnC,CAAG,EAI9B,MAAMihC,EAAQ,GACd,UAAWjhC,KAAOgnC,EAAW,CACzB,MAAME,EAAeH,EAAM/mC,CAAG,EACxBI,EAAQugC,EAAI,KAAK3gC,CAAG,EAC1BihC,EAAM,KAAK,CACP,IAAK,CAAE,OAAQ,QAAS,MAAOjhC,CAAK,EACpC,MAAOknC,EAAa,OAAO,IAAItF,GAAmBjB,EAAKvgC,EAAOugC,EAAI,KAAM3gC,CAAG,CAAC,EAC5E,UAAWA,KAAO2gC,EAAI,IACtC,CAAa,CACJ,CACD,GAAI,KAAK,KAAK,oBAAoB4F,GAAU,CACxC,MAAMY,EAAc,KAAK,KAAK,YAC9B,GAAIA,IAAgB,cAChB,UAAWnnC,KAAOinC,EACdhG,EAAM,KAAK,CACP,IAAK,CAAE,OAAQ,QAAS,MAAOjhC,CAAK,EACpC,MAAO,CAAE,OAAQ,QAAS,MAAO2gC,EAAI,KAAK3gC,CAAG,CAAG,CACxE,CAAqB,UAGAmnC,IAAgB,SACjBF,EAAU,OAAS,IACnBvG,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,kBACnB,KAAMiI,CAC9B,CAAqB,EACDpG,EAAO,MAAK,WAGXsG,IAAgB,QAErB,MAAM,IAAI,MAAM,sDAAsD,CAE7E,KACI,CAED,MAAMC,EAAW,KAAK,KAAK,SAC3B,UAAWpnC,KAAOinC,EAAW,CACzB,MAAM7mC,EAAQugC,EAAI,KAAK3gC,CAAG,EAC1BihC,EAAM,KAAK,CACP,IAAK,CAAE,OAAQ,QAAS,MAAOjhC,CAAK,EACpC,MAAOonC,EAAS,OAAO,IAAIxF,GAAmBjB,EAAKvgC,EAAOugC,EAAI,KAAM3gC,CAAG,CACtE,EACD,UAAWA,KAAO2gC,EAAI,IAC1C,CAAiB,CACJ,CACJ,CACD,OAAIA,EAAI,OAAO,MACJ,QAAQ,QAAS,EACnB,KAAK,SAAY,CAClB,MAAMO,EAAY,GAClB,UAAWC,KAAQF,EAAO,CACtB,MAAMjhC,EAAM,MAAMmhC,EAAK,IACvBD,EAAU,KAAK,CACX,IAAAlhC,EACA,MAAO,MAAMmhC,EAAK,MAClB,UAAWA,EAAK,SACxC,CAAqB,CACJ,CACD,OAAOD,CACvB,CAAa,EACI,KAAMA,GACAN,EAAY,gBAAgBC,EAAQK,CAAS,CACvD,EAGMN,EAAY,gBAAgBC,EAAQI,CAAK,CAEvD,CACD,IAAI,OAAQ,CACR,OAAO,KAAK,KAAK,OACpB,CACD,OAAO/lC,EAAS,CACZ,OAAAymC,EAAU,SACH,IAAIgF,EAAU,CACjB,GAAG,KAAK,KACR,YAAa,SACb,GAAIzrC,IAAY,OACV,CACE,SAAU,CAACqkC,EAAOoB,IAAQ,CACtB,IAAI0B,EAAIgF,EAAIC,EAAIC,EAChB,MAAMC,GAAgBF,GAAMD,GAAMhF,EAAK,KAAK,MAAM,YAAc,MAAQgF,IAAO,OAAS,OAASA,EAAG,KAAKhF,EAAI9C,EAAOoB,CAAG,EAAE,WAAa,MAAQ2G,IAAO,OAASA,EAAK3G,EAAI,aACvK,OAAIpB,EAAM,OAAS,oBACR,CACH,SAAUgI,EAAK5F,EAAU,SAASzmC,CAAO,EAAE,WAAa,MAAQqsC,IAAO,OAASA,EAAKC,CACrH,EAC+B,CACH,QAASA,CACrC,CACqB,CACJ,EACC,CAAE,CACpB,CAAS,CACJ,CACD,OAAQ,CACJ,OAAO,IAAIb,EAAU,CACjB,GAAG,KAAK,KACR,YAAa,OACzB,CAAS,CACJ,CACD,aAAc,CACV,OAAO,IAAIA,EAAU,CACjB,GAAG,KAAK,KACR,YAAa,aACzB,CAAS,CACJ,CAkBD,OAAOc,EAAc,CACjB,OAAO,IAAId,EAAU,CACjB,GAAG,KAAK,KACR,MAAO,KAAO,CACV,GAAG,KAAK,KAAK,MAAO,EACpB,GAAGc,CACnB,EACA,CAAS,CACJ,CAMD,MAAMC,EAAS,CAUX,OATe,IAAIf,EAAU,CACzB,YAAae,EAAQ,KAAK,YAC1B,SAAUA,EAAQ,KAAK,SACvB,MAAO,KAAO,CACV,GAAG,KAAK,KAAK,MAAO,EACpB,GAAGA,EAAQ,KAAK,MAAO,CACvC,GACY,SAAU7E,EAAsB,SAC5C,CAAS,CAEJ,CAoCD,OAAO7iC,EAAKymC,EAAQ,CAChB,OAAO,KAAK,QAAQ,CAAE,CAACzmC,CAAG,EAAGymC,CAAQ,EACxC,CAsBD,SAASppC,EAAO,CACZ,OAAO,IAAIspC,EAAU,CACjB,GAAG,KAAK,KACR,SAAUtpC,CACtB,CAAS,CACJ,CACD,KAAKsqC,EAAM,CACP,MAAMZ,EAAQ,GACd,OAAA7I,EAAK,WAAWyJ,CAAI,EAAE,QAAS3nC,GAAQ,CAC/B2nC,EAAK3nC,CAAG,GAAK,KAAK,MAAMA,CAAG,IAC3B+mC,EAAM/mC,CAAG,EAAI,KAAK,MAAMA,CAAG,EAE3C,CAAS,EACM,IAAI2mC,EAAU,CACjB,GAAG,KAAK,KACR,MAAO,IAAMI,CACzB,CAAS,CACJ,CACD,KAAKY,EAAM,CACP,MAAMZ,EAAQ,GACd,OAAA7I,EAAK,WAAW,KAAK,KAAK,EAAE,QAASl+B,GAAQ,CACpC2nC,EAAK3nC,CAAG,IACT+mC,EAAM/mC,CAAG,EAAI,KAAK,MAAMA,CAAG,EAE3C,CAAS,EACM,IAAI2mC,EAAU,CACjB,GAAG,KAAK,KACR,MAAO,IAAMI,CACzB,CAAS,CACJ,CAID,aAAc,CACV,OAAOL,GAAe,IAAI,CAC7B,CACD,QAAQiB,EAAM,CACV,MAAMf,EAAW,GACjB,OAAA1I,EAAK,WAAW,KAAK,KAAK,EAAE,QAASl+B,GAAQ,CACzC,MAAM6mC,EAAc,KAAK,MAAM7mC,CAAG,EAC9B2nC,GAAQ,CAACA,EAAK3nC,CAAG,EACjB4mC,EAAS5mC,CAAG,EAAI6mC,EAGhBD,EAAS5mC,CAAG,EAAI6mC,EAAY,SAAQ,CAEpD,CAAS,EACM,IAAIF,EAAU,CACjB,GAAG,KAAK,KACR,MAAO,IAAMC,CACzB,CAAS,CACJ,CACD,SAASe,EAAM,CACX,MAAMf,EAAW,GACjB,OAAA1I,EAAK,WAAW,KAAK,KAAK,EAAE,QAASl+B,GAAQ,CACzC,GAAI2nC,GAAQ,CAACA,EAAK3nC,CAAG,EACjB4mC,EAAS5mC,CAAG,EAAI,KAAK,MAAMA,CAAG,MAE7B,CAED,IAAI4nC,EADgB,KAAK,MAAM5nC,CAAG,EAElC,KAAO4nC,aAAoB9E,IACvB8E,EAAWA,EAAS,KAAK,UAE7BhB,EAAS5mC,CAAG,EAAI4nC,CACnB,CACb,CAAS,EACM,IAAIjB,EAAU,CACjB,GAAG,KAAK,KACR,MAAO,IAAMC,CACzB,CAAS,CACJ,CACD,OAAQ,CACJ,OAAOiB,GAAc3J,EAAK,WAAW,KAAK,KAAK,CAAC,CACnD,CACL,CACAyI,EAAU,OAAS,CAACI,EAAO7G,IAChB,IAAIyG,EAAU,CACjB,MAAO,IAAMI,EACb,YAAa,QACb,SAAUR,GAAS,OAAQ,EAC3B,SAAU1D,EAAsB,UAChC,GAAGf,EAAoB5B,CAAM,CACrC,CAAK,EAELyG,EAAU,aAAe,CAACI,EAAO7G,IACtB,IAAIyG,EAAU,CACjB,MAAO,IAAMI,EACb,YAAa,SACb,SAAUR,GAAS,OAAQ,EAC3B,SAAU1D,EAAsB,UAChC,GAAGf,EAAoB5B,CAAM,CACrC,CAAK,EAELyG,EAAU,WAAa,CAACI,EAAO7G,IACpB,IAAIyG,EAAU,CACjB,MAAAI,EACA,YAAa,QACb,SAAUR,GAAS,OAAQ,EAC3B,SAAU1D,EAAsB,UAChC,GAAGf,EAAoB5B,CAAM,CACrC,CAAK,EAEL,MAAMiD,WAAiBhB,CAAQ,CAC3B,OAAOl4B,EAAO,CACV,KAAM,CAAE,IAAA02B,CAAK,EAAG,KAAK,oBAAoB12B,CAAK,EACxClI,EAAU,KAAK,KAAK,QAC1B,SAAS+lC,EAAchH,EAAS,CAE5B,UAAW5jC,KAAU4jC,EACjB,GAAI5jC,EAAO,OAAO,SAAW,QACzB,OAAOA,EAAO,OAGtB,UAAWA,KAAU4jC,EACjB,GAAI5jC,EAAO,OAAO,SAAW,QAEzB,OAAAyjC,EAAI,OAAO,OAAO,KAAK,GAAGzjC,EAAO,IAAI,OAAO,MAAM,EAC3CA,EAAO,OAItB,MAAM6qC,EAAcjH,EAAQ,IAAK5jC,GAAW,IAAIgiC,GAAShiC,EAAO,IAAI,OAAO,MAAM,CAAC,EAClF,OAAAwjC,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,cACnB,YAAA+I,CAChB,CAAa,EACM/G,CACV,CACD,GAAIL,EAAI,OAAO,MACX,OAAO,QAAQ,IAAI5+B,EAAQ,IAAI,MAAOmhC,GAAW,CAC7C,MAAM8E,EAAW,CACb,GAAGrH,EACH,OAAQ,CACJ,GAAGA,EAAI,OACP,OAAQ,CAAE,CACb,EACD,OAAQ,IAC5B,EACgB,MAAO,CACH,OAAQ,MAAMuC,EAAO,YAAY,CAC7B,KAAMvC,EAAI,KACV,KAAMA,EAAI,KACV,OAAQqH,CAChC,CAAqB,EACD,IAAKA,CACzB,CACA,CAAa,CAAC,EAAE,KAAKF,CAAa,EAErB,CACD,IAAIG,EACJ,MAAM9I,EAAS,GACf,UAAW+D,KAAUnhC,EAAS,CAC1B,MAAMimC,EAAW,CACb,GAAGrH,EACH,OAAQ,CACJ,GAAGA,EAAI,OACP,OAAQ,CAAE,CACb,EACD,OAAQ,IAC5B,EACsBzjC,EAASgmC,EAAO,WAAW,CAC7B,KAAMvC,EAAI,KACV,KAAMA,EAAI,KACV,OAAQqH,CAC5B,CAAiB,EACD,GAAI9qC,EAAO,SAAW,QAClB,OAAOA,EAEFA,EAAO,SAAW,SAAW,CAAC+qC,IACnCA,EAAQ,CAAE,OAAA/qC,EAAQ,IAAK8qC,CAAQ,GAE/BA,EAAS,OAAO,OAAO,QACvB7I,EAAO,KAAK6I,EAAS,OAAO,MAAM,CAEzC,CACD,GAAIC,EACA,OAAAtH,EAAI,OAAO,OAAO,KAAK,GAAGsH,EAAM,IAAI,OAAO,MAAM,EAC1CA,EAAM,OAEjB,MAAMF,EAAc5I,EAAO,IAAKA,GAAW,IAAID,GAASC,CAAM,CAAC,EAC/D,OAAAuB,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,cACnB,YAAA+I,CAChB,CAAa,EACM/G,CACV,CACJ,CACD,IAAI,SAAU,CACV,OAAO,KAAK,KAAK,OACpB,CACL,CACAmC,GAAS,OAAS,CAAC+E,EAAOhI,IACf,IAAIiD,GAAS,CAChB,QAAS+E,EACT,SAAUrF,EAAsB,SAChC,GAAGf,EAAoB5B,CAAM,CACrC,CAAK,EASL,MAAMiI,GAAoBnsC,GAClBA,aAAgBosC,GACTD,GAAiBnsC,EAAK,MAAM,EAE9BA,aAAgB4mC,GACduF,GAAiBnsC,EAAK,UAAS,CAAE,EAEnCA,aAAgBqsC,GACd,CAACrsC,EAAK,KAAK,EAEbA,aAAgBssC,GACdtsC,EAAK,QAEPA,aAAgBusC,GAEd,OAAO,KAAKvsC,EAAK,IAAI,EAEvBA,aAAgBunC,GACd4E,GAAiBnsC,EAAK,KAAK,SAAS,EAEtCA,aAAgBmqC,GACd,CAAC,MAAS,EAEZnqC,aAAgBoqC,GACd,CAAC,IAAI,EAGL,KAGf,MAAMoC,WAA8BrG,CAAQ,CACxC,OAAOl4B,EAAO,CACV,KAAM,CAAE,IAAA02B,CAAK,EAAG,KAAK,oBAAoB12B,CAAK,EAC9C,GAAI02B,EAAI,aAAe7B,EAAc,OACjC,OAAA4B,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,aACnB,SAAUF,EAAc,OACxB,SAAU6B,EAAI,UAC9B,CAAa,EACMK,EAEX,MAAMyH,EAAgB,KAAK,cACrBC,EAAqB/H,EAAI,KAAK8H,CAAa,EAC3CvF,EAAS,KAAK,WAAW,IAAIwF,CAAkB,EACrD,OAAKxF,EAQDvC,EAAI,OAAO,MACJuC,EAAO,YAAY,CACtB,KAAMvC,EAAI,KACV,KAAMA,EAAI,KACV,OAAQA,CACxB,CAAa,EAGMuC,EAAO,WAAW,CACrB,KAAMvC,EAAI,KACV,KAAMA,EAAI,KACV,OAAQA,CACxB,CAAa,GAnBDD,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,4BACnB,QAAS,MAAM,KAAK,KAAK,WAAW,KAAI,CAAE,EAC1C,KAAM,CAACyJ,CAAa,CACpC,CAAa,EACMzH,EAgBd,CACD,IAAI,eAAgB,CAChB,OAAO,KAAK,KAAK,aACpB,CACD,IAAI,SAAU,CACV,OAAO,KAAK,KAAK,OACpB,CACD,IAAI,YAAa,CACb,OAAO,KAAK,KAAK,UACpB,CASD,OAAO,OAAOyH,EAAe1mC,EAASm+B,EAAQ,CAE1C,MAAMyI,EAAa,IAAI,IAEvB,UAAW3sC,KAAQ+F,EAAS,CACxB,MAAM6mC,EAAsBT,GAAiBnsC,EAAK,MAAMysC,CAAa,CAAC,EACtE,GAAI,CAACG,EACD,MAAM,IAAI,MAAM,mCAAmCH,CAAa,mDAAmD,EAEvH,UAAWroC,KAASwoC,EAAqB,CACrC,GAAID,EAAW,IAAIvoC,CAAK,EACpB,MAAM,IAAI,MAAM,0BAA0B,OAAOqoC,CAAa,CAAC,wBAAwB,OAAOroC,CAAK,CAAC,EAAE,EAE1GuoC,EAAW,IAAIvoC,EAAOpE,CAAI,CAC7B,CACJ,CACD,OAAO,IAAIwsC,GAAsB,CAC7B,SAAU3F,EAAsB,sBAChC,cAAA4F,EACA,QAAA1mC,EACA,WAAA4mC,EACA,GAAG7G,EAAoB5B,CAAM,CACzC,CAAS,CACJ,CACL,CACA,SAAS2I,GAAYhuC,EAAGS,EAAG,CACvB,MAAMwtC,EAAQ/J,GAAclkC,CAAC,EACvBkuC,EAAQhK,GAAczjC,CAAC,EAC7B,GAAIT,IAAMS,EACN,MAAO,CAAE,MAAO,GAAM,KAAMT,CAAC,EAE5B,GAAIiuC,IAAUhK,EAAc,QAAUiK,IAAUjK,EAAc,OAAQ,CACvE,MAAMkK,EAAQ9K,EAAK,WAAW5iC,CAAC,EACzB2tC,EAAa/K,EACd,WAAWrjC,CAAC,EACZ,OAAQmF,GAAQgpC,EAAM,QAAQhpC,CAAG,IAAM,EAAE,EACxCkpC,EAAS,CAAE,GAAGruC,EAAG,GAAGS,CAAC,EAC3B,UAAW0E,KAAOipC,EAAY,CAC1B,MAAME,EAAcN,GAAYhuC,EAAEmF,CAAG,EAAG1E,EAAE0E,CAAG,CAAC,EAC9C,GAAI,CAACmpC,EAAY,MACb,MAAO,CAAE,MAAO,IAEpBD,EAAOlpC,CAAG,EAAImpC,EAAY,IAC7B,CACD,MAAO,CAAE,MAAO,GAAM,KAAMD,CAAM,CACrC,SACQJ,IAAUhK,EAAc,OAASiK,IAAUjK,EAAc,MAAO,CACrE,GAAIjkC,EAAE,SAAWS,EAAE,OACf,MAAO,CAAE,MAAO,IAEpB,MAAM8tC,EAAW,GACjB,QAAS/rC,EAAQ,EAAGA,EAAQxC,EAAE,OAAQwC,IAAS,CAC3C,MAAMgsC,EAAQxuC,EAAEwC,CAAK,EACfisC,EAAQhuC,EAAE+B,CAAK,EACf8rC,EAAcN,GAAYQ,EAAOC,CAAK,EAC5C,GAAI,CAACH,EAAY,MACb,MAAO,CAAE,MAAO,IAEpBC,EAAS,KAAKD,EAAY,IAAI,CACjC,CACD,MAAO,CAAE,MAAO,GAAM,KAAMC,CAAQ,CACvC,KACI,QAAIN,IAAUhK,EAAc,MAC7BiK,IAAUjK,EAAc,MACxB,CAACjkC,GAAM,CAACS,EACD,CAAE,MAAO,GAAM,KAAMT,CAAC,EAGtB,CAAE,MAAO,GAExB,CACA,MAAMwoC,WAAwBlB,CAAQ,CAClC,OAAOl4B,EAAO,CACV,KAAM,CAAE,OAAA42B,EAAQ,IAAAF,CAAG,EAAK,KAAK,oBAAoB12B,CAAK,EAChDs/B,EAAe,CAACC,EAAYC,IAAgB,CAC9C,GAAIlI,GAAUiI,CAAU,GAAKjI,GAAUkI,CAAW,EAC9C,OAAOzI,EAEX,MAAM/vB,EAAS43B,GAAYW,EAAW,MAAOC,EAAY,KAAK,EAC9D,OAAKx4B,EAAO,QAMRuwB,GAAQgI,CAAU,GAAKhI,GAAQiI,CAAW,IAC1C5I,EAAO,MAAK,EAET,CAAE,OAAQA,EAAO,MAAO,MAAO5vB,EAAO,QARzCyvB,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,0BACvC,CAAiB,EACMgC,EAMvB,EACQ,OAAIL,EAAI,OAAO,MACJ,QAAQ,IAAI,CACf,KAAK,KAAK,KAAK,YAAY,CACvB,KAAMA,EAAI,KACV,KAAMA,EAAI,KACV,OAAQA,CAC5B,CAAiB,EACD,KAAK,KAAK,MAAM,YAAY,CACxB,KAAMA,EAAI,KACV,KAAMA,EAAI,KACV,OAAQA,CAC5B,CAAiB,CACjB,CAAa,EAAE,KAAK,CAAC,CAACn0B,EAAMC,CAAK,IAAM88B,EAAa/8B,EAAMC,CAAK,CAAC,EAG7C88B,EAAa,KAAK,KAAK,KAAK,WAAW,CAC1C,KAAM5I,EAAI,KACV,KAAMA,EAAI,KACV,OAAQA,CACX,GAAG,KAAK,KAAK,MAAM,WAAW,CAC3B,KAAMA,EAAI,KACV,KAAMA,EAAI,KACV,OAAQA,CACX,EAAC,CAET,CACL,CACA0C,GAAgB,OAAS,CAAC72B,EAAMC,EAAOyzB,IAC5B,IAAImD,GAAgB,CACvB,KAAM72B,EACN,MAAOC,EACP,SAAUo2B,EAAsB,gBAChC,GAAGf,EAAoB5B,CAAM,CACrC,CAAK,EAEL,MAAM4G,WAAiB3E,CAAQ,CAC3B,OAAOl4B,EAAO,CACV,KAAM,CAAE,OAAA42B,EAAQ,IAAAF,CAAG,EAAK,KAAK,oBAAoB12B,CAAK,EACtD,GAAI02B,EAAI,aAAe7B,EAAc,MACjC,OAAA4B,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,aACnB,SAAUF,EAAc,MACxB,SAAU6B,EAAI,UAC9B,CAAa,EACMK,EAEX,GAAIL,EAAI,KAAK,OAAS,KAAK,KAAK,MAAM,OAClC,OAAAD,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,UACnB,QAAS,KAAK,KAAK,MAAM,OACzB,UAAW,GACX,MAAO,GACP,KAAM,OACtB,CAAa,EACMgC,EAGP,CADS,KAAK,KAAK,MACVL,EAAI,KAAK,OAAS,KAAK,KAAK,MAAM,SAC3CD,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,QACnB,QAAS,KAAK,KAAK,MAAM,OACzB,UAAW,GACX,MAAO,GACP,KAAM,OACtB,CAAa,EACD6B,EAAO,MAAK,GAEhB,MAAMxR,EAAQ,CAAC,GAAGsR,EAAI,IAAI,EACrB,IAAI,CAACl1B,EAAMi+B,IAAc,CAC1B,MAAMjD,EAAS,KAAK,KAAK,MAAMiD,CAAS,GAAK,KAAK,KAAK,KACvD,OAAKjD,EAEEA,EAAO,OAAO,IAAI7E,GAAmBjB,EAAKl1B,EAAMk1B,EAAI,KAAM+I,CAAS,CAAC,EADhE,IAEvB,CAAS,EACI,OAAQnuC,GAAM,CAAC,CAACA,CAAC,EACtB,OAAIolC,EAAI,OAAO,MACJ,QAAQ,IAAItR,CAAK,EAAE,KAAMyR,GACrBF,EAAY,WAAWC,EAAQC,CAAO,CAChD,EAGMF,EAAY,WAAWC,EAAQxR,CAAK,CAElD,CACD,IAAI,OAAQ,CACR,OAAO,KAAK,KAAK,KACpB,CACD,KAAKsa,EAAM,CACP,OAAO,IAAI7C,GAAS,CAChB,GAAG,KAAK,KACR,KAAA6C,CACZ,CAAS,CACJ,CACL,CACA7C,GAAS,OAAS,CAAC8C,EAAS1J,IAAW,CACnC,GAAI,CAAC,MAAM,QAAQ0J,CAAO,EACtB,MAAM,IAAI,MAAM,uDAAuD,EAE3E,OAAO,IAAI9C,GAAS,CAChB,MAAO8C,EACP,SAAU/G,EAAsB,SAChC,KAAM,KACN,GAAGf,EAAoB5B,CAAM,CACrC,CAAK,CACL,EACA,MAAM2J,WAAkB1H,CAAQ,CAC5B,IAAI,WAAY,CACZ,OAAO,KAAK,KAAK,OACpB,CACD,IAAI,aAAc,CACd,OAAO,KAAK,KAAK,SACpB,CACD,OAAOl4B,EAAO,CACV,KAAM,CAAE,OAAA42B,EAAQ,IAAAF,CAAG,EAAK,KAAK,oBAAoB12B,CAAK,EACtD,GAAI02B,EAAI,aAAe7B,EAAc,OACjC,OAAA4B,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,aACnB,SAAUF,EAAc,OACxB,SAAU6B,EAAI,UAC9B,CAAa,EACMK,EAEX,MAAMC,EAAQ,GACR6I,EAAU,KAAK,KAAK,QACpBC,EAAY,KAAK,KAAK,UAC5B,UAAW/pC,KAAO2gC,EAAI,KAClBM,EAAM,KAAK,CACP,IAAK6I,EAAQ,OAAO,IAAIlI,GAAmBjB,EAAK3gC,EAAK2gC,EAAI,KAAM3gC,CAAG,CAAC,EACnE,MAAO+pC,EAAU,OAAO,IAAInI,GAAmBjB,EAAKA,EAAI,KAAK3gC,CAAG,EAAG2gC,EAAI,KAAM3gC,CAAG,CAAC,CACjG,CAAa,EAEL,OAAI2gC,EAAI,OAAO,MACJC,EAAY,iBAAiBC,EAAQI,CAAK,EAG1CL,EAAY,gBAAgBC,EAAQI,CAAK,CAEvD,CACD,IAAI,SAAU,CACV,OAAO,KAAK,KAAK,SACpB,CACD,OAAO,OAAOzM,EAAOqK,EAAQmL,EAAO,CAChC,OAAInL,aAAkBsD,EACX,IAAI0H,GAAU,CACjB,QAASrV,EACT,UAAWqK,EACX,SAAUgE,EAAsB,UAChC,GAAGf,EAAoBkI,CAAK,CAC5C,CAAa,EAEE,IAAIH,GAAU,CACjB,QAASlF,GAAU,OAAQ,EAC3B,UAAWnQ,EACX,SAAUqO,EAAsB,UAChC,GAAGf,EAAoBjD,CAAM,CACzC,CAAS,CACJ,CACL,CACA,MAAMoL,WAAe9H,CAAQ,CACzB,IAAI,WAAY,CACZ,OAAO,KAAK,KAAK,OACpB,CACD,IAAI,aAAc,CACd,OAAO,KAAK,KAAK,SACpB,CACD,OAAOl4B,EAAO,CACV,KAAM,CAAE,OAAA42B,EAAQ,IAAAF,CAAG,EAAK,KAAK,oBAAoB12B,CAAK,EACtD,GAAI02B,EAAI,aAAe7B,EAAc,IACjC,OAAA4B,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,aACnB,SAAUF,EAAc,IACxB,SAAU6B,EAAI,UAC9B,CAAa,EACMK,EAEX,MAAM8I,EAAU,KAAK,KAAK,QACpBC,EAAY,KAAK,KAAK,UACtB9I,EAAQ,CAAC,GAAGN,EAAI,KAAK,QAAO,CAAE,EAAE,IAAI,CAAC,CAAC3gC,EAAKI,CAAK,EAAG/C,KAC9C,CACH,IAAKysC,EAAQ,OAAO,IAAIlI,GAAmBjB,EAAK3gC,EAAK2gC,EAAI,KAAM,CAACtjC,EAAO,KAAK,CAAC,CAAC,EAC9E,MAAO0sC,EAAU,OAAO,IAAInI,GAAmBjB,EAAKvgC,EAAOugC,EAAI,KAAM,CAACtjC,EAAO,OAAO,CAAC,CAAC,CACtG,EACS,EACD,GAAIsjC,EAAI,OAAO,MAAO,CAClB,MAAMuJ,EAAW,IAAI,IACrB,OAAO,QAAQ,UAAU,KAAK,SAAY,CACtC,UAAW/I,KAAQF,EAAO,CACtB,MAAMjhC,EAAM,MAAMmhC,EAAK,IACjB/gC,EAAQ,MAAM+gC,EAAK,MACzB,GAAInhC,EAAI,SAAW,WAAaI,EAAM,SAAW,UAC7C,OAAO4gC,GAEPhhC,EAAI,SAAW,SAAWI,EAAM,SAAW,UAC3CygC,EAAO,MAAK,EAEhBqJ,EAAS,IAAIlqC,EAAI,MAAOI,EAAM,KAAK,CACtC,CACD,MAAO,CAAE,OAAQygC,EAAO,MAAO,MAAOqJ,CAAQ,CAC9D,CAAa,CACJ,KACI,CACD,MAAMA,EAAW,IAAI,IACrB,UAAW/I,KAAQF,EAAO,CACtB,MAAMjhC,EAAMmhC,EAAK,IACX/gC,EAAQ+gC,EAAK,MACnB,GAAInhC,EAAI,SAAW,WAAaI,EAAM,SAAW,UAC7C,OAAO4gC,GAEPhhC,EAAI,SAAW,SAAWI,EAAM,SAAW,UAC3CygC,EAAO,MAAK,EAEhBqJ,EAAS,IAAIlqC,EAAI,MAAOI,EAAM,KAAK,CACtC,CACD,MAAO,CAAE,OAAQygC,EAAO,MAAO,MAAOqJ,CAAQ,CACjD,CACJ,CACL,CACAD,GAAO,OAAS,CAACH,EAASC,EAAW7J,IAC1B,IAAI+J,GAAO,CACd,UAAAF,EACA,QAAAD,EACA,SAAUjH,EAAsB,OAChC,GAAGf,EAAoB5B,CAAM,CACrC,CAAK,EAEL,MAAMiK,WAAehI,CAAQ,CACzB,OAAOl4B,EAAO,CACV,KAAM,CAAE,OAAA42B,EAAQ,IAAAF,CAAG,EAAK,KAAK,oBAAoB12B,CAAK,EACtD,GAAI02B,EAAI,aAAe7B,EAAc,IACjC,OAAA4B,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,aACnB,SAAUF,EAAc,IACxB,SAAU6B,EAAI,UAC9B,CAAa,EACMK,EAEX,MAAMoB,EAAM,KAAK,KACbA,EAAI,UAAY,MACZzB,EAAI,KAAK,KAAOyB,EAAI,QAAQ,QAC5B1B,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,UACnB,QAASoD,EAAI,QAAQ,MACrB,KAAM,MACN,UAAW,GACX,MAAO,GACP,QAASA,EAAI,QAAQ,OACzC,CAAiB,EACDvB,EAAO,MAAK,GAGhBuB,EAAI,UAAY,MACZzB,EAAI,KAAK,KAAOyB,EAAI,QAAQ,QAC5B1B,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,QACnB,QAASoD,EAAI,QAAQ,MACrB,KAAM,MACN,UAAW,GACX,MAAO,GACP,QAASA,EAAI,QAAQ,OACzC,CAAiB,EACDvB,EAAO,MAAK,GAGpB,MAAMkJ,EAAY,KAAK,KAAK,UAC5B,SAASK,EAAYtQ,EAAU,CAC3B,MAAMuQ,EAAY,IAAI,IACtB,UAAW3V,KAAWoF,EAAU,CAC5B,GAAIpF,EAAQ,SAAW,UACnB,OAAOsM,EACPtM,EAAQ,SAAW,SACnBmM,EAAO,MAAK,EAChBwJ,EAAU,IAAI3V,EAAQ,KAAK,CAC9B,CACD,MAAO,CAAE,OAAQmM,EAAO,MAAO,MAAOwJ,CAAS,CAClD,CACD,MAAMvQ,EAAW,CAAC,GAAG6G,EAAI,KAAK,QAAQ,EAAE,IAAI,CAACl1B,EAAM/P,IAAMquC,EAAU,OAAO,IAAInI,GAAmBjB,EAAKl1B,EAAMk1B,EAAI,KAAMjlC,CAAC,CAAC,CAAC,EACzH,OAAIilC,EAAI,OAAO,MACJ,QAAQ,IAAI7G,CAAQ,EAAE,KAAMA,GAAasQ,EAAYtQ,CAAQ,CAAC,EAG9DsQ,EAAYtQ,CAAQ,CAElC,CACD,IAAIwQ,EAASpvC,EAAS,CAClB,OAAO,IAAIivC,GAAO,CACd,GAAG,KAAK,KACR,QAAS,CAAE,MAAOG,EAAS,QAAS3I,EAAU,SAASzmC,CAAO,CAAG,CAC7E,CAAS,CACJ,CACD,IAAIqvC,EAASrvC,EAAS,CAClB,OAAO,IAAIivC,GAAO,CACd,GAAG,KAAK,KACR,QAAS,CAAE,MAAOI,EAAS,QAAS5I,EAAU,SAASzmC,CAAO,CAAG,CAC7E,CAAS,CACJ,CACD,KAAKwlB,EAAMxlB,EAAS,CAChB,OAAO,KAAK,IAAIwlB,EAAMxlB,CAAO,EAAE,IAAIwlB,EAAMxlB,CAAO,CACnD,CACD,SAASA,EAAS,CACd,OAAO,KAAK,IAAI,EAAGA,CAAO,CAC7B,CACL,CACAivC,GAAO,OAAS,CAACJ,EAAW7J,IACjB,IAAIiK,GAAO,CACd,UAAAJ,EACA,QAAS,KACT,QAAS,KACT,SAAUlH,EAAsB,OAChC,GAAGf,EAAoB5B,CAAM,CACrC,CAAK,EAEL,MAAMsK,WAAoBrI,CAAQ,CAC9B,aAAc,CACV,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,KAAK,SACxB,CACD,OAAOl4B,EAAO,CACV,KAAM,CAAE,IAAA02B,CAAK,EAAG,KAAK,oBAAoB12B,CAAK,EAC9C,GAAI02B,EAAI,aAAe7B,EAAc,SACjC,OAAA4B,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,aACnB,SAAUF,EAAc,SACxB,SAAU6B,EAAI,UAC9B,CAAa,EACMK,EAEX,SAASyJ,EAAcjpC,EAAMk+B,EAAO,CAChC,OAAOO,GAAU,CACb,KAAMz+B,EACN,KAAMm/B,EAAI,KACV,UAAW,CACPA,EAAI,OAAO,mBACXA,EAAI,eACJX,GAAa,EACbJ,EACH,EAAC,OAAQrkC,GAAM,CAAC,CAACA,CAAC,EACnB,UAAW,CACP,KAAMyjC,EAAa,kBACnB,eAAgBU,CACnB,CACjB,CAAa,CACJ,CACD,SAASgL,EAAiBC,EAASjL,EAAO,CACtC,OAAOO,GAAU,CACb,KAAM0K,EACN,KAAMhK,EAAI,KACV,UAAW,CACPA,EAAI,OAAO,mBACXA,EAAI,eACJX,GAAa,EACbJ,EACH,EAAC,OAAQrkC,GAAM,CAAC,CAACA,CAAC,EACnB,UAAW,CACP,KAAMyjC,EAAa,oBACnB,gBAAiBU,CACpB,CACjB,CAAa,CACJ,CACD,MAAMQ,EAAS,CAAE,SAAUS,EAAI,OAAO,kBAAkB,EAClDt1B,EAAKs1B,EAAI,KACf,GAAI,KAAK,KAAK,mBAAmBsC,GAAY,CAIzC,MAAM2H,EAAK,KACX,OAAOtJ,GAAG,kBAAmB9/B,EAAM,CAC/B,MAAMk+B,EAAQ,IAAIR,GAAS,EAAE,EACvB2L,EAAa,MAAMD,EAAG,KAAK,KAC5B,WAAWppC,EAAM0+B,CAAM,EACvB,MAAO1M,GAAM,CACd,MAAAkM,EAAM,SAAS+K,EAAcjpC,EAAMgyB,CAAC,CAAC,EAC/BkM,CAC1B,CAAiB,EACKxiC,EAAS,MAAM,QAAQ,MAAMmO,EAAI,KAAMw/B,CAAU,EAOvD,OANsB,MAAMD,EAAG,KAAK,QAAQ,KAAK,KAC5C,WAAW1tC,EAAQgjC,CAAM,EACzB,MAAO1M,GAAM,CACd,MAAAkM,EAAM,SAASgL,EAAiBxtC,EAAQs2B,CAAC,CAAC,EACpCkM,CAC1B,CAAiB,CAEjB,CAAa,CACJ,KACI,CAID,MAAMkL,EAAK,KACX,OAAOtJ,GAAG,YAAa9/B,EAAM,CACzB,MAAMqpC,EAAaD,EAAG,KAAK,KAAK,UAAUppC,EAAM0+B,CAAM,EACtD,GAAI,CAAC2K,EAAW,QACZ,MAAM,IAAI3L,GAAS,CAACuL,EAAcjpC,EAAMqpC,EAAW,KAAK,CAAC,CAAC,EAE9D,MAAM3tC,EAAS,QAAQ,MAAMmO,EAAI,KAAMw/B,EAAW,IAAI,EAChDC,EAAgBF,EAAG,KAAK,QAAQ,UAAU1tC,EAAQgjC,CAAM,EAC9D,GAAI,CAAC4K,EAAc,QACf,MAAM,IAAI5L,GAAS,CAACwL,EAAiBxtC,EAAQ4tC,EAAc,KAAK,CAAC,CAAC,EAEtE,OAAOA,EAAc,IACrC,CAAa,CACJ,CACJ,CACD,YAAa,CACT,OAAO,KAAK,KAAK,IACpB,CACD,YAAa,CACT,OAAO,KAAK,KAAK,OACpB,CACD,QAAQzb,EAAO,CACX,OAAO,IAAImb,GAAY,CACnB,GAAG,KAAK,KACR,KAAM1D,GAAS,OAAOzX,CAAK,EAAE,KAAKiX,GAAW,QAAQ,CACjE,CAAS,CACJ,CACD,QAAQyE,EAAY,CAChB,OAAO,IAAIP,GAAY,CACnB,GAAG,KAAK,KACR,QAASO,CACrB,CAAS,CACJ,CACD,UAAUC,EAAM,CAEZ,OADsB,KAAK,MAAMA,CAAI,CAExC,CACD,gBAAgBA,EAAM,CAElB,OADsB,KAAK,MAAMA,CAAI,CAExC,CACD,OAAO,OAAOxpC,EAAMmpC,EAASzK,EAAQ,CACjC,OAAO,IAAIsK,GAAY,CACnB,KAAOhpC,GAEDslC,GAAS,OAAO,EAAE,EAAE,KAAKR,GAAW,OAAM,CAAE,EAClD,QAASqE,GAAWrE,GAAW,OAAQ,EACvC,SAAUzD,EAAsB,YAChC,GAAGf,EAAoB5B,CAAM,CACzC,CAAS,CACJ,CACL,CACA,MAAMkI,WAAgBjG,CAAQ,CAC1B,IAAI,QAAS,CACT,OAAO,KAAK,KAAK,QACpB,CACD,OAAOl4B,EAAO,CACV,KAAM,CAAE,IAAA02B,CAAK,EAAG,KAAK,oBAAoB12B,CAAK,EAE9C,OADmB,KAAK,KAAK,OAAM,EACjB,OAAO,CAAE,KAAM02B,EAAI,KAAM,KAAMA,EAAI,KAAM,OAAQA,CAAK,EAC3E,CACL,CACAyH,GAAQ,OAAS,CAAC6C,EAAQ/K,IACf,IAAIkI,GAAQ,CACf,OAAQ6C,EACR,SAAUpI,EAAsB,QAChC,GAAGf,EAAoB5B,CAAM,CACrC,CAAK,EAEL,MAAMmI,WAAmBlG,CAAQ,CAC7B,OAAOl4B,EAAO,CACV,GAAIA,EAAM,OAAS,KAAK,KAAK,MAAO,CAChC,MAAM02B,EAAM,KAAK,gBAAgB12B,CAAK,EACtC,OAAAy2B,EAAkBC,EAAK,CACnB,SAAUA,EAAI,KACd,KAAM3B,EAAa,gBACnB,SAAU,KAAK,KAAK,KACpC,CAAa,EACMgC,CACV,CACD,MAAO,CAAE,OAAQ,QAAS,MAAO/2B,EAAM,IAAI,CAC9C,CACD,IAAI,OAAQ,CACR,OAAO,KAAK,KAAK,KACpB,CACL,CACAo+B,GAAW,OAAS,CAACjoC,EAAO8/B,IACjB,IAAImI,GAAW,CAClB,MAAOjoC,EACP,SAAUyiC,EAAsB,WAChC,GAAGf,EAAoB5B,CAAM,CACrC,CAAK,EAEL,SAAS2H,GAAcqD,EAAQhL,EAAQ,CACnC,OAAO,IAAIoI,GAAQ,CACf,OAAA4C,EACA,SAAUrI,EAAsB,QAChC,GAAGf,EAAoB5B,CAAM,CACrC,CAAK,CACL,CACA,MAAMoI,WAAgBnG,CAAQ,CAC1B,OAAOl4B,EAAO,CACV,GAAI,OAAOA,EAAM,MAAS,SAAU,CAChC,MAAM02B,EAAM,KAAK,gBAAgB12B,CAAK,EAChCkhC,EAAiB,KAAK,KAAK,OACjC,OAAAzK,EAAkBC,EAAK,CACnB,SAAUzC,EAAK,WAAWiN,CAAc,EACxC,SAAUxK,EAAI,WACd,KAAM3B,EAAa,YACnC,CAAa,EACMgC,CACV,CACD,GAAI,KAAK,KAAK,OAAO,QAAQ/2B,EAAM,IAAI,IAAM,GAAI,CAC7C,MAAM02B,EAAM,KAAK,gBAAgB12B,CAAK,EAChCkhC,EAAiB,KAAK,KAAK,OACjC,OAAAzK,EAAkBC,EAAK,CACnB,SAAUA,EAAI,KACd,KAAM3B,EAAa,mBACnB,QAASmM,CACzB,CAAa,EACMnK,CACV,CACD,OAAOM,GAAGr3B,EAAM,IAAI,CACvB,CACD,IAAI,SAAU,CACV,OAAO,KAAK,KAAK,MACpB,CACD,IAAI,MAAO,CACP,MAAMmhC,EAAa,GACnB,UAAWnwC,KAAO,KAAK,KAAK,OACxBmwC,EAAWnwC,CAAG,EAAIA,EAEtB,OAAOmwC,CACV,CACD,IAAI,QAAS,CACT,MAAMA,EAAa,GACnB,UAAWnwC,KAAO,KAAK,KAAK,OACxBmwC,EAAWnwC,CAAG,EAAIA,EAEtB,OAAOmwC,CACV,CACD,IAAI,MAAO,CACP,MAAMA,EAAa,GACnB,UAAWnwC,KAAO,KAAK,KAAK,OACxBmwC,EAAWnwC,CAAG,EAAIA,EAEtB,OAAOmwC,CACV,CACD,QAAQF,EAAQ,CACZ,OAAO5C,GAAQ,OAAO4C,CAAM,CAC/B,CACD,QAAQA,EAAQ,CACZ,OAAO5C,GAAQ,OAAO,KAAK,QAAQ,OAAQ+C,GAAQ,CAACH,EAAO,SAASG,CAAG,CAAC,CAAC,CAC5E,CACL,CACA/C,GAAQ,OAAST,GACjB,MAAMU,WAAsBpG,CAAQ,CAChC,OAAOl4B,EAAO,CACV,MAAMqhC,EAAmBpN,EAAK,mBAAmB,KAAK,KAAK,MAAM,EAC3DyC,EAAM,KAAK,gBAAgB12B,CAAK,EACtC,GAAI02B,EAAI,aAAe7B,EAAc,QACjC6B,EAAI,aAAe7B,EAAc,OAAQ,CACzC,MAAMqM,EAAiBjN,EAAK,aAAaoN,CAAgB,EACzD,OAAA5K,EAAkBC,EAAK,CACnB,SAAUzC,EAAK,WAAWiN,CAAc,EACxC,SAAUxK,EAAI,WACd,KAAM3B,EAAa,YACnC,CAAa,EACMgC,CACV,CACD,GAAIsK,EAAiB,QAAQrhC,EAAM,IAAI,IAAM,GAAI,CAC7C,MAAMkhC,EAAiBjN,EAAK,aAAaoN,CAAgB,EACzD,OAAA5K,EAAkBC,EAAK,CACnB,SAAUA,EAAI,KACd,KAAM3B,EAAa,mBACnB,QAASmM,CACzB,CAAa,EACMnK,CACV,CACD,OAAOM,GAAGr3B,EAAM,IAAI,CACvB,CACD,IAAI,MAAO,CACP,OAAO,KAAK,KAAK,MACpB,CACL,CACAs+B,GAAc,OAAS,CAAC2C,EAAQhL,IACrB,IAAIqI,GAAc,CACrB,OAAQ2C,EACR,SAAUrI,EAAsB,cAChC,GAAGf,EAAoB5B,CAAM,CACrC,CAAK,EAEL,MAAM+C,WAAmBd,CAAQ,CAC7B,QAAS,CACL,OAAO,KAAK,KAAK,IACpB,CACD,OAAOl4B,EAAO,CACV,KAAM,CAAE,IAAA02B,CAAK,EAAG,KAAK,oBAAoB12B,CAAK,EAC9C,GAAI02B,EAAI,aAAe7B,EAAc,SACjC6B,EAAI,OAAO,QAAU,GACrB,OAAAD,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,aACnB,SAAUF,EAAc,QACxB,SAAU6B,EAAI,UAC9B,CAAa,EACMK,EAEX,MAAMuK,EAAc5K,EAAI,aAAe7B,EAAc,QAC/C6B,EAAI,KACJ,QAAQ,QAAQA,EAAI,IAAI,EAC9B,OAAOW,GAAGiK,EAAY,KAAMtlC,GACjB,KAAK,KAAK,KAAK,WAAWA,EAAM,CACnC,KAAM06B,EAAI,KACV,SAAUA,EAAI,OAAO,kBACrC,CAAa,CACJ,CAAC,CACL,CACL,CACAsC,GAAW,OAAS,CAACwD,EAAQvG,IAClB,IAAI+C,GAAW,CAClB,KAAMwD,EACN,SAAU5D,EAAsB,WAChC,GAAGf,EAAoB5B,CAAM,CACrC,CAAK,EAEL,MAAM0C,WAAmBT,CAAQ,CAC7B,WAAY,CACR,OAAO,KAAK,KAAK,MACpB,CACD,YAAa,CACT,OAAO,KAAK,KAAK,OAAO,KAAK,WAAaU,EAAsB,WAC1D,KAAK,KAAK,OAAO,WAAY,EAC7B,KAAK,KAAK,MACnB,CACD,OAAO54B,EAAO,CACV,KAAM,CAAE,OAAA42B,EAAQ,IAAAF,CAAG,EAAK,KAAK,oBAAoB12B,CAAK,EAChDuhC,EAAS,KAAK,KAAK,QAAU,KAC7BC,EAAW,CACb,SAAWj+B,GAAQ,CACfkzB,EAAkBC,EAAKnzB,CAAG,EACtBA,EAAI,MACJqzB,EAAO,MAAK,EAGZA,EAAO,MAAK,CAEnB,EACD,IAAI,MAAO,CACP,OAAOF,EAAI,IACd,CACb,EAEQ,GADA8K,EAAS,SAAWA,EAAS,SAAS,KAAKA,CAAQ,EAC/CD,EAAO,OAAS,aAAc,CAC9B,MAAME,EAAYF,EAAO,UAAU7K,EAAI,KAAM8K,CAAQ,EACrD,OAAI9K,EAAI,OAAO,OAAO,OACX,CACH,OAAQ,QACR,MAAOA,EAAI,IAC/B,EAEgBA,EAAI,OAAO,MACJ,QAAQ,QAAQ+K,CAAS,EAAE,KAAMA,GAC7B,KAAK,KAAK,OAAO,YAAY,CAChC,KAAMA,EACN,KAAM/K,EAAI,KACV,OAAQA,CAChC,CAAqB,CACJ,EAGM,KAAK,KAAK,OAAO,WAAW,CAC/B,KAAM+K,EACN,KAAM/K,EAAI,KACV,OAAQA,CAC5B,CAAiB,CAER,CACD,GAAI6K,EAAO,OAAS,aAAc,CAC9B,MAAMG,EAAqBC,GAEtB,CACD,MAAM1uC,EAASsuC,EAAO,WAAWI,EAAKH,CAAQ,EAC9C,GAAI9K,EAAI,OAAO,MACX,OAAO,QAAQ,QAAQzjC,CAAM,EAEjC,GAAIA,aAAkB,QAClB,MAAM,IAAI,MAAM,2FAA2F,EAE/G,OAAO0uC,CACvB,EACY,GAAIjL,EAAI,OAAO,QAAU,GAAO,CAC5B,MAAMkL,EAAQ,KAAK,KAAK,OAAO,WAAW,CACtC,KAAMlL,EAAI,KACV,KAAMA,EAAI,KACV,OAAQA,CAC5B,CAAiB,EACD,OAAIkL,EAAM,SAAW,UACV7K,GACP6K,EAAM,SAAW,SACjBhL,EAAO,MAAK,EAEhB8K,EAAkBE,EAAM,KAAK,EACtB,CAAE,OAAQhL,EAAO,MAAO,MAAOgL,EAAM,OAC/C,KAEG,QAAO,KAAK,KAAK,OACZ,YAAY,CAAE,KAAMlL,EAAI,KAAM,KAAMA,EAAI,KAAM,OAAQA,EAAK,EAC3D,KAAMkL,GACHA,EAAM,SAAW,UACV7K,GACP6K,EAAM,SAAW,SACjBhL,EAAO,MAAK,EACT8K,EAAkBE,EAAM,KAAK,EAAE,KAAK,KAChC,CAAE,OAAQhL,EAAO,MAAO,MAAOgL,EAAM,OAC/C,EACJ,CAER,CACD,GAAIL,EAAO,OAAS,YAChB,GAAI7K,EAAI,OAAO,QAAU,GAAO,CAC5B,MAAMmL,EAAO,KAAK,KAAK,OAAO,WAAW,CACrC,KAAMnL,EAAI,KACV,KAAMA,EAAI,KACV,OAAQA,CAC5B,CAAiB,EACD,GAAI,CAACc,GAAQqK,CAAI,EACb,OAAOA,EACX,MAAM5uC,EAASsuC,EAAO,UAAUM,EAAK,MAAOL,CAAQ,EACpD,GAAIvuC,aAAkB,QAClB,MAAM,IAAI,MAAM,iGAAiG,EAErH,MAAO,CAAE,OAAQ2jC,EAAO,MAAO,MAAO3jC,CAAM,CAC/C,KAEG,QAAO,KAAK,KAAK,OACZ,YAAY,CAAE,KAAMyjC,EAAI,KAAM,KAAMA,EAAI,KAAM,OAAQA,EAAK,EAC3D,KAAMmL,GACFrK,GAAQqK,CAAI,EAEV,QAAQ,QAAQN,EAAO,UAAUM,EAAK,MAAOL,CAAQ,CAAC,EAAE,KAAMvuC,IAAY,CAAE,OAAQ2jC,EAAO,MAAO,MAAO3jC,CAAQ,EAAC,EAD9G4uC,CAEd,EAGT5N,EAAK,YAAYsN,CAAM,CAC1B,CACL,CACA5I,GAAW,OAAS,CAAC6D,EAAQ+E,EAAQtL,IAC1B,IAAI0C,GAAW,CAClB,OAAA6D,EACA,SAAU5D,EAAsB,WAChC,OAAA2I,EACA,GAAG1J,EAAoB5B,CAAM,CACrC,CAAK,EAEL0C,GAAW,qBAAuB,CAACmJ,EAAYtF,EAAQvG,IAC5C,IAAI0C,GAAW,CAClB,OAAA6D,EACA,OAAQ,CAAE,KAAM,aAAc,UAAWsF,CAAY,EACrD,SAAUlJ,EAAsB,WAChC,GAAGf,EAAoB5B,CAAM,CACrC,CAAK,EAEL,MAAM4C,WAAoBX,CAAQ,CAC9B,OAAOl4B,EAAO,CAEV,OADmB,KAAK,SAASA,CAAK,IACnB60B,EAAc,UACtBwC,GAAG,MAAS,EAEhB,KAAK,KAAK,UAAU,OAAOr3B,CAAK,CAC1C,CACD,QAAS,CACL,OAAO,KAAK,KAAK,SACpB,CACL,CACA64B,GAAY,OAAS,CAAC9mC,EAAMkkC,IACjB,IAAI4C,GAAY,CACnB,UAAW9mC,EACX,SAAU6mC,EAAsB,YAChC,GAAGf,EAAoB5B,CAAM,CACrC,CAAK,EAEL,MAAM6C,WAAoBZ,CAAQ,CAC9B,OAAOl4B,EAAO,CAEV,OADmB,KAAK,SAASA,CAAK,IACnB60B,EAAc,KACtBwC,GAAG,IAAI,EAEX,KAAK,KAAK,UAAU,OAAOr3B,CAAK,CAC1C,CACD,QAAS,CACL,OAAO,KAAK,KAAK,SACpB,CACL,CACA84B,GAAY,OAAS,CAAC/mC,EAAMkkC,IACjB,IAAI6C,GAAY,CACnB,UAAW/mC,EACX,SAAU6mC,EAAsB,YAChC,GAAGf,EAAoB5B,CAAM,CACrC,CAAK,EAEL,MAAMqD,WAAmBpB,CAAQ,CAC7B,OAAOl4B,EAAO,CACV,KAAM,CAAE,IAAA02B,CAAK,EAAG,KAAK,oBAAoB12B,CAAK,EAC9C,IAAIhE,EAAO06B,EAAI,KACf,OAAIA,EAAI,aAAe7B,EAAc,YACjC74B,EAAO,KAAK,KAAK,gBAEd,KAAK,KAAK,UAAU,OAAO,CAC9B,KAAAA,EACA,KAAM06B,EAAI,KACV,OAAQA,CACpB,CAAS,CACJ,CACD,eAAgB,CACZ,OAAO,KAAK,KAAK,SACpB,CACL,CACA4C,GAAW,OAAS,CAACvnC,EAAMkkC,IAChB,IAAIqD,GAAW,CAClB,UAAWvnC,EACX,SAAU6mC,EAAsB,WAChC,aAAc,OAAO3C,EAAO,SAAY,WAClCA,EAAO,QACP,IAAMA,EAAO,QACnB,GAAG4B,EAAoB5B,CAAM,CACrC,CAAK,EAEL,MAAMwD,WAAiBvB,CAAQ,CAC3B,OAAOl4B,EAAO,CACV,KAAM,CAAE,IAAA02B,CAAK,EAAG,KAAK,oBAAoB12B,CAAK,EAExC+hC,EAAS,CACX,GAAGrL,EACH,OAAQ,CACJ,GAAGA,EAAI,OACP,OAAQ,CAAE,CACb,CACb,EACczjC,EAAS,KAAK,KAAK,UAAU,OAAO,CACtC,KAAM8uC,EAAO,KACb,KAAMA,EAAO,KACb,OAAQ,CACJ,GAAGA,CACN,CACb,CAAS,EACD,OAAItK,GAAQxkC,CAAM,EACPA,EAAO,KAAMA,IACT,CACH,OAAQ,QACR,MAAOA,EAAO,SAAW,QACnBA,EAAO,MACP,KAAK,KAAK,WAAW,CACnB,IAAI,OAAQ,CACR,OAAO,IAAIgiC,GAAS8M,EAAO,OAAO,MAAM,CAC3C,EACD,MAAOA,EAAO,IAC1C,CAAyB,CACzB,EACa,EAGM,CACH,OAAQ,QACR,MAAO9uC,EAAO,SAAW,QACnBA,EAAO,MACP,KAAK,KAAK,WAAW,CACnB,IAAI,OAAQ,CACR,OAAO,IAAIgiC,GAAS8M,EAAO,OAAO,MAAM,CAC3C,EACD,MAAOA,EAAO,IACtC,CAAqB,CACrB,CAEK,CACD,aAAc,CACV,OAAO,KAAK,KAAK,SACpB,CACL,CACAtI,GAAS,OAAS,CAAC1nC,EAAMkkC,IACd,IAAIwD,GAAS,CAChB,UAAW1nC,EACX,SAAU6mC,EAAsB,SAChC,WAAY,OAAO3C,EAAO,OAAU,WAAaA,EAAO,MAAQ,IAAMA,EAAO,MAC7E,GAAG4B,EAAoB5B,CAAM,CACrC,CAAK,EAEL,MAAM+L,WAAe9J,CAAQ,CACzB,OAAOl4B,EAAO,CAEV,GADmB,KAAK,SAASA,CAAK,IACnB60B,EAAc,IAAK,CAClC,MAAM6B,EAAM,KAAK,gBAAgB12B,CAAK,EACtC,OAAAy2B,EAAkBC,EAAK,CACnB,KAAM3B,EAAa,aACnB,SAAUF,EAAc,IACxB,SAAU6B,EAAI,UAC9B,CAAa,EACMK,CACV,CACD,MAAO,CAAE,OAAQ,QAAS,MAAO/2B,EAAM,IAAI,CAC9C,CACL,CACAgiC,GAAO,OAAU/L,GACN,IAAI+L,GAAO,CACd,SAAUpJ,EAAsB,OAChC,GAAGf,EAAoB5B,CAAM,CACrC,CAAK,EAEL,MAAMgM,GAAQ,OAAO,WAAW,EAChC,MAAM1I,WAAmBrB,CAAQ,CAC7B,OAAOl4B,EAAO,CACV,KAAM,CAAE,IAAA02B,CAAK,EAAG,KAAK,oBAAoB12B,CAAK,EACxChE,EAAO06B,EAAI,KACjB,OAAO,KAAK,KAAK,KAAK,OAAO,CACzB,KAAA16B,EACA,KAAM06B,EAAI,KACV,OAAQA,CACpB,CAAS,CACJ,CACD,QAAS,CACL,OAAO,KAAK,KAAK,IACpB,CACL,CACA,MAAMiD,WAAoBzB,CAAQ,CAC9B,OAAOl4B,EAAO,CACV,KAAM,CAAE,OAAA42B,EAAQ,IAAAF,CAAG,EAAK,KAAK,oBAAoB12B,CAAK,EACtD,GAAI02B,EAAI,OAAO,MAqBX,OApBoB,SAAY,CAC5B,MAAMwL,EAAW,MAAM,KAAK,KAAK,GAAG,YAAY,CAC5C,KAAMxL,EAAI,KACV,KAAMA,EAAI,KACV,OAAQA,CAC5B,CAAiB,EACD,OAAIwL,EAAS,SAAW,UACbnL,EACPmL,EAAS,SAAW,SACpBtL,EAAO,MAAK,EACLQ,GAAM8K,EAAS,KAAK,GAGpB,KAAK,KAAK,IAAI,YAAY,CAC7B,KAAMA,EAAS,MACf,KAAMxL,EAAI,KACV,OAAQA,CAChC,CAAqB,CAErB,GAC8B,EAEjB,CACD,MAAMwL,EAAW,KAAK,KAAK,GAAG,WAAW,CACrC,KAAMxL,EAAI,KACV,KAAMA,EAAI,KACV,OAAQA,CACxB,CAAa,EACD,OAAIwL,EAAS,SAAW,UACbnL,EACPmL,EAAS,SAAW,SACpBtL,EAAO,MAAK,EACL,CACH,OAAQ,QACR,MAAOsL,EAAS,KACpC,GAGuB,KAAK,KAAK,IAAI,WAAW,CAC5B,KAAMA,EAAS,MACf,KAAMxL,EAAI,KACV,OAAQA,CAC5B,CAAiB,CAER,CACJ,CACD,OAAO,OAAO9lC,EAAGS,EAAG,CAChB,OAAO,IAAIsoC,GAAY,CACnB,GAAI/oC,EACJ,IAAKS,EACL,SAAUunC,EAAsB,WAC5C,CAAS,CACJ,CACL,CACA,MAAMgB,WAAoB1B,CAAQ,CAC9B,OAAOl4B,EAAO,CACV,MAAM/M,EAAS,KAAK,KAAK,UAAU,OAAO+M,CAAK,EAC/C,OAAIw3B,GAAQvkC,CAAM,IACdA,EAAO,MAAQ,OAAO,OAAOA,EAAO,KAAK,GAEtCA,CACV,CACL,CACA2mC,GAAY,OAAS,CAAC7nC,EAAMkkC,IACjB,IAAI2D,GAAY,CACnB,UAAW7nC,EACX,SAAU6mC,EAAsB,YAChC,GAAGf,EAAoB5B,CAAM,CACrC,CAAK,EAEL,MAAMkM,GAAS,CAAC7J,EAAOrC,EAAS,CAAE,EAWlCmM,IACQ9J,EACO8D,GAAO,OAAQ,EAAC,YAAY,CAACpgC,EAAM06B,IAAQ,CAC9C,IAAI0B,EAAIgF,EACR,GAAI,CAAC9E,EAAMt8B,CAAI,EAAG,CACd,MAAM+lB,EAAI,OAAOkU,GAAW,WACtBA,EAAOj6B,CAAI,EACX,OAAOi6B,GAAW,SACd,CAAE,QAASA,CAAQ,EACnBA,EACJoM,GAAUjF,GAAMhF,EAAKrW,EAAE,SAAW,MAAQqW,IAAO,OAASA,EAAKgK,KAAW,MAAQhF,IAAO,OAASA,EAAK,GACvGkF,EAAK,OAAOvgB,GAAM,SAAW,CAAE,QAASA,CAAG,EAAGA,EACpD2U,EAAI,SAAS,CAAE,KAAM,SAAU,GAAG4L,EAAI,MAAOD,CAAM,CAAE,CACxD,CACb,CAAS,EACEjG,GAAO,SAEZmG,GAAO,CACT,OAAQ7F,EAAU,UACtB,EACA,IAAI9D,GACH,SAAUA,EAAuB,CAC9BA,EAAsB,UAAe,YACrCA,EAAsB,UAAe,YACrCA,EAAsB,OAAY,SAClCA,EAAsB,UAAe,YACrCA,EAAsB,WAAgB,aACtCA,EAAsB,QAAa,UACnCA,EAAsB,UAAe,YACrCA,EAAsB,aAAkB,eACxCA,EAAsB,QAAa,UACnCA,EAAsB,OAAY,SAClCA,EAAsB,WAAgB,aACtCA,EAAsB,SAAc,WACpCA,EAAsB,QAAa,UACnCA,EAAsB,SAAc,WACpCA,EAAsB,UAAe,YACrCA,EAAsB,SAAc,WACpCA,EAAsB,sBAA2B,wBACjDA,EAAsB,gBAAqB,kBAC3CA,EAAsB,SAAc,WACpCA,EAAsB,UAAe,YACrCA,EAAsB,OAAY,SAClCA,EAAsB,OAAY,SAClCA,EAAsB,YAAiB,cACvCA,EAAsB,QAAa,UACnCA,EAAsB,WAAgB,aACtCA,EAAsB,QAAa,UACnCA,EAAsB,WAAgB,aACtCA,EAAsB,cAAmB,gBACzCA,EAAsB,YAAiB,cACvCA,EAAsB,YAAiB,cACvCA,EAAsB,WAAgB,aACtCA,EAAsB,SAAc,WACpCA,EAAsB,WAAgB,aACtCA,EAAsB,WAAgB,aACtCA,EAAsB,YAAiB,cACvCA,EAAsB,YAAiB,aAC3C,GAAGA,IAA0BA,EAAwB,CAAE,EAAC,EACxD,MAAM4J,GAAiB,CAEvBC,EAAKxM,EAAS,CACV,QAAS,yBAAyBwM,EAAI,IAAI,EAC9C,IAAMN,GAAQnmC,GAASA,aAAgBymC,EAAKxM,CAAM,EAC5CyM,GAAahI,GAAU,OACvBiI,GAAalH,GAAU,OACvBmH,GAAUZ,GAAO,OACjBa,GAAajH,GAAU,OACvBkH,GAAcjH,GAAW,OACzBkH,GAAWjH,GAAQ,OACnBkH,GAAa/G,GAAU,OACvBgH,GAAgB/G,GAAa,OAC7BgH,GAAW/G,GAAQ,OACnBgH,GAAU/G,GAAO,OACjBgH,GAAc/G,GAAW,OACzBgH,GAAY/G,GAAS,OACrBgH,GAAW/G,GAAQ,OACnBgH,GAAYxK,GAAS,OACrByK,GAAa9G,EAAU,OACvB+G,GAAmB/G,EAAU,aAC7BgH,GAAYxK,GAAS,OACrByK,GAAyBpF,GAAsB,OAC/CqF,GAAmBxK,GAAgB,OACnCyK,GAAYhH,GAAS,OACrBiH,GAAalE,GAAU,OACvBmE,GAAU/D,GAAO,OACjBgE,GAAU9D,GAAO,OACjB+D,GAAe1D,GAAY,OAC3B2D,GAAW/F,GAAQ,OACnBgG,GAAc/F,GAAW,OACzBgG,GAAW/F,GAAQ,OACnBgG,GAAiB/F,GAAc,OAC/BgG,GAActL,GAAW,OACzBuL,GAAc5L,GAAW,OACzB6L,GAAe3L,GAAY,OAC3B4L,GAAe3L,GAAY,OAC3B4L,GAAiB/L,GAAW,qBAC5BgM,GAAehL,GAAY,OAC3BiL,GAAU,IAAMlC,KAAa,WAC7BmC,GAAU,IAAMlC,KAAa,WAC7BmC,GAAW,IAAMhC,KAAc,WAC/BiC,GAAS,CACX,OAAUxhC,GAAQm3B,GAAU,OAAO,CAAE,GAAGn3B,EAAK,OAAQ,EAAI,CAAE,EAC3D,OAAUA,GAAQk4B,GAAU,OAAO,CAAE,GAAGl4B,EAAK,OAAQ,EAAI,CAAE,EAC3D,QAAWA,GAAQs4B,GAAW,OAAO,CACjC,GAAGt4B,EACH,OAAQ,EAChB,CAAK,EACD,OAAUA,GAAQq4B,GAAU,OAAO,CAAE,GAAGr4B,EAAK,OAAQ,EAAI,CAAE,EAC3D,KAAQA,GAAQu4B,GAAQ,OAAO,CAAE,GAAGv4B,EAAK,OAAQ,EAAI,CAAE,CAC3D,EACMyhC,GAAQjO,EAEX,IAACkO,EAAiB,OAAO,OAAO,CAC/B,UAAW,KACX,gBAAiBtP,GACjB,YAAaG,GACb,YAAaC,GACb,UAAWC,GACX,WAAYQ,GACZ,kBAAmBC,EACnB,YAAaE,EACb,QAASI,EACT,MAAOK,GACP,GAAIC,GACJ,UAAWC,GACX,QAASC,GACT,QAASC,GACT,QAASC,GACT,IAAI,MAAQ,CAAE,OAAOxD,CAAO,EAC5B,IAAI,YAAc,CAAE,OAAOU,EAAa,EACxC,cAAeE,EACf,cAAeC,GACf,QAASoD,EACT,UAAWwC,GACX,UAAWe,GACX,UAAWG,GACX,WAAYC,GACZ,QAASC,GACT,UAAWG,GACX,aAAcC,GACd,QAASC,GACT,OAAQC,GACR,WAAYC,GACZ,SAAUC,GACV,QAASC,GACT,SAAUxD,GACV,UAAW2D,EACX,SAAUxD,GACV,sBAAuBqF,GACvB,gBAAiBnF,GACjB,SAAUyD,GACV,UAAW+C,GACX,OAAQI,GACR,OAAQE,GACR,YAAaK,GACb,QAASpC,GACT,WAAYC,GACZ,QAASC,GACT,cAAeC,GACf,WAAYtF,GACZ,WAAYL,GACZ,eAAgBA,GAChB,YAAaE,GACb,YAAaC,GACb,WAAYQ,GACZ,SAAUG,GACV,OAAQuI,GACR,MAAOC,GACP,WAAY1I,GACZ,YAAaI,GACb,YAAaC,GACb,OAAQuI,GACR,OAAQjK,EACR,UAAWA,EACX,KAAMqK,GACN,IAAI,uBAAyB,CAAE,OAAO3J,CAAwB,EAC9D,OAAQmM,GACR,IAAK5B,GACL,MAAOI,GACP,OAAQV,GACR,QAASC,GACT,KAAMC,GACN,mBAAoBY,GACpB,OAAQY,GACR,KAAQH,GACR,SAAYH,GACZ,WAAczB,GACd,aAAcoB,GACd,KAAMM,GACN,QAASC,GACT,IAAKJ,GACL,IAAKnB,GACL,WAAYyB,GACZ,MAAOhB,GACP,KAAQH,GACR,SAAUuB,GACV,OAAQ9B,GACR,OAAQa,GACR,SAAUsB,GACV,QAASD,GACT,SAAUL,GACV,QAASI,GACT,SAAUD,GACV,WAAYD,GACZ,QAASJ,GACT,OAAQR,GACR,IAAKE,GACL,aAAcP,GACd,OAAQf,GACR,OAAQM,GACR,YAAauB,GACb,MAAOV,GACP,UAAaZ,GACb,MAAOS,GACP,QAASN,GACT,KAAQE,GACR,MAAO0B,GACP,aAAcjQ,EACd,cAAeC,GACf,SAAUC,EACd,CAAC,ECp6HD,MAAMiQ,GAAgBD,EAAE,SAClBE,GAAeF,EAAE,MAAMA,EAAE,OAAQ,GAAE,WACnCG,GAAgBH,EAAE,MAAMA,EAAE,OAAQ,GAAE,WACpCI,GAAO,CAAC,OAAQ,MAAO,SAAS,EAChCC,GAAaL,EAAE,KAAKI,EAAI,EASjBE,GAAyC,OAAO,OAAO,CAClE,KAAM,CAACvlC,EAAyB,KAAO,IAAIwxB,GAAKxxB,CAAK,EACrD,MAAWA,GAAa,IAAIuxB,GAAMvxB,CAAK,CACzC,CAAC,EAEYwlC,GAAcP,EAAE,OAAO,CAClC,QAASA,EAAE,OAAO,EAClB,MAAOA,EAAE,OAAO,CACd,KAAMK,GACN,QAASJ,GACT,OAAQC,GACR,SAAUC,GACV,MAAOH,EACJ,WACA,KAAKA,EAAE,OAA4B,GACnC,QAAQA,EAAE,OAAOA,EAAE,IAAK,EAAC,EACzB,SAAS,EACZ,QAASA,EAAE,WAAW,OAAO,QAAQA,EAAE,QAAoB,EAAE,SAAS,EACvE,EACD,YAAaA,EACV,WACA,OACA,QAAQA,EAAE,QAA8B,EACxC,SAAS,EACZ,UAAWA,EACR,SAAS,EACT,KAAKA,EAAE,MAAOA,EAAE,SAAUA,EAAE,QAAQ,EACpC,QAAQA,EAAE,KAAK,CAAC,EAChB,SAAS,CACd,CAAC,EA4DM,SAASQ,GAAkB,CAChC,QAAA7V,EACA,MAAA8V,EACA,SAAAC,EACA,UAAAC,EACA,QAAAC,EACA,YAAAC,CACF,EAgBoB,CAClB,MAAMtJ,EAAS,CACb,QAASmJ,EAAS,QAClB,MAAO,CACL,KAAMA,EAAS,KACf,OAAQA,EAAS,OACjB,SAAUA,EAAS,SACnB,QAAA/V,EACA,MAAA8V,EACA,QAAAG,CACF,EACA,UAAAD,EACA,YAAAE,CAAA,EAEF,OAAAN,GAAY,MAAMhJ,CAAM,EACjBA,CACT,CAaA,SAASuJ,IAEP,CAEA,OAAO,KAAM,EACf,CAGa,MAAAC,WAEHD,IAAoB,CAFvB,kCAiBL,aAAU,IAAIxzC,EACd,aAAU,IAAIA,EACd,kBAAe,IAAIA,EACnB,qBAAkB,IAAIA,CAAK,CAE3B,IAAI,UAAW,CACb,OAAO,KAAK,SAAS,OAAO,CAACuD,EAAKyc,EAAOnf,KACnC0C,EAAA,IAAIyc,EAAM,GAAInf,CAAK,EAChB0C,GACF,OAAqB,CAC9B,CAEA,IAAI,UAAW,CACb,MAAMgqB,EAAQ,KAAK,OAAO,IAAI,cAAc,EAC5C,GAAI,CAACA,EACH,MAAO,GAGT,MAAMmmB,EAAyB,GAC/B,OAAAnmB,EAAM,QAActoB,GAAA,CAClB,MAAM+a,EAAQ,KAAK,KAAK,aAAa/a,CAAE,EAClC+a,GAGL0zB,EAAS,KAAK1zB,CAAK,EACpB,EAEM0zB,CACT,CAEA,SAAU,CACD,YAAK,SAAS,SAAW,CAClC,CAEA,YAAgC,CACvB,YAAK,SAAS,CAAC,GAAK,IAC7B,CAEA,WAA+B,CACzB,OAAC,KAAK,SAAS,OAGZ,KAAK,SAAS,KAAK,SAAS,OAAS,CAAC,EAAE,YAFtC,IAGX,CAEA,UAA8B,CACxB,OAAC,KAAK,SAAS,OAGZ,KAAK,SAAS,KAAK,SAAS,OAAS,CAAC,EAFpC,IAGX,CAEA,SAAU,CACR,KAAK,QAAQ,UACb,KAAK,QAAQ,UACb,KAAK,aAAa,UAClB,KAAK,gBAAgB,SACvB,CAEA,OAAc,CACL,cAAO,OAAO,OAAO,OAAO,OAAO,eAAe,IAAI,CAAC,EAAG,IAAI,CACvE,CACF,6pBC1PAC,GAAiBC,GACjB,SAASA,GAASv1C,EAAGS,EAAGyD,EAAK,CACvBlE,aAAa,SAAQA,EAAIw1C,GAAWx1C,EAAGkE,CAAG,GAC1CzD,aAAa,SAAQA,EAAI+0C,GAAW/0C,EAAGyD,CAAG,GAE9C,IAAIa,EAAI0wC,GAAMz1C,EAAGS,EAAGyD,CAAG,EAEvB,OAAOa,GAAK,CACV,MAAOA,EAAE,CAAC,EACV,IAAKA,EAAE,CAAC,EACR,IAAKb,EAAI,MAAM,EAAGa,EAAE,CAAC,CAAC,EACtB,KAAMb,EAAI,MAAMa,EAAE,CAAC,EAAI/E,EAAE,OAAQ+E,EAAE,CAAC,CAAC,EACrC,KAAMb,EAAI,MAAMa,EAAE,CAAC,EAAItE,EAAE,MAAM,CACnC,CACA,CAEA,SAAS+0C,GAAWE,EAAKxxC,EAAK,CAC5B,IAAIY,EAAIZ,EAAI,MAAMwxC,CAAG,EACrB,OAAO5wC,EAAIA,EAAE,CAAC,EAAI,IACpB,CAEAywC,GAAS,MAAQE,GACjB,SAASA,GAAMz1C,EAAGS,EAAGyD,EAAK,CACxB,IAAIyxC,EAAMC,EAAKjkC,EAAMC,EAAOvP,EACxBwzC,EAAK3xC,EAAI,QAAQlE,CAAC,EAClB81C,EAAK5xC,EAAI,QAAQzD,EAAGo1C,EAAK,CAAC,EAC1Bh1C,EAAIg1C,EAER,GAAIA,GAAM,GAAKC,EAAK,EAAG,CACrB,GAAG91C,IAAIS,EACL,MAAO,CAACo1C,EAAIC,CAAE,EAKhB,IAHAH,EAAO,GACPhkC,EAAOzN,EAAI,OAEJrD,GAAK,GAAK,CAACwB,GACZxB,GAAKg1C,GACPF,EAAK,KAAK90C,CAAC,EACXg1C,EAAK3xC,EAAI,QAAQlE,EAAGa,EAAI,CAAC,GAChB80C,EAAK,QAAU,EACxBtzC,EAAS,CAAEszC,EAAK,IAAK,EAAEG,CAAE,GAEzBF,EAAMD,EAAK,MACPC,EAAMjkC,IACRA,EAAOikC,EACPhkC,EAAQkkC,GAGVA,EAAK5xC,EAAI,QAAQzD,EAAGI,EAAI,CAAC,GAG3BA,EAAIg1C,EAAKC,GAAMD,GAAM,EAAIA,EAAKC,EAG5BH,EAAK,SACPtzC,EAAS,CAAEsP,EAAMC,GAEpB,CAED,OAAOvP,CACT,CC7DA,IAAIkzC,GAAWQ,GAEfC,GAAiBC,GAEbC,GAAW,UAAU,KAAK,OAAM,EAAG,KACnCC,GAAU,SAAS,KAAK,OAAM,EAAG,KACjCC,GAAW,UAAU,KAAK,OAAM,EAAG,KACnCC,GAAW,UAAU,KAAK,OAAM,EAAG,KACnCC,GAAY,WAAW,KAAK,OAAM,EAAG,KAEzC,SAASC,GAAQryC,EAAK,CACpB,OAAO,SAASA,EAAK,EAAE,GAAKA,EACxB,SAASA,EAAK,EAAE,EAChBA,EAAI,WAAW,CAAC,CACtB,CAEA,SAASsyC,GAAatyC,EAAK,CACzB,OAAOA,EAAI,MAAM,MAAM,EAAE,KAAKgyC,EAAQ,EAC3B,MAAM,KAAK,EAAE,KAAKC,EAAO,EACzB,MAAM,KAAK,EAAE,KAAKC,EAAQ,EAC1B,MAAM,KAAK,EAAE,KAAKC,EAAQ,EAC1B,MAAM,KAAK,EAAE,KAAKC,EAAS,CACxC,CAEA,SAASG,GAAevyC,EAAK,CAC3B,OAAOA,EAAI,MAAMgyC,EAAQ,EAAE,KAAK,IAAI,EACzB,MAAMC,EAAO,EAAE,KAAK,GAAG,EACvB,MAAMC,EAAQ,EAAE,KAAK,GAAG,EACxB,MAAMC,EAAQ,EAAE,KAAK,GAAG,EACxB,MAAMC,EAAS,EAAE,KAAK,GAAG,CACtC,CAMA,SAASI,GAAgBxyC,EAAK,CAC5B,GAAI,CAACA,EACH,MAAO,CAAC,EAAE,EAEZ,IAAIyyC,EAAQ,GACR7xC,EAAIywC,GAAS,IAAK,IAAKrxC,CAAG,EAE9B,GAAI,CAACY,EACH,OAAOZ,EAAI,MAAM,GAAG,EAEtB,IAAI0yC,EAAM9xC,EAAE,IACR+xC,EAAO/xC,EAAE,KACTgyC,EAAOhyC,EAAE,KACTqsB,EAAIylB,EAAI,MAAM,GAAG,EAErBzlB,EAAEA,EAAE,OAAO,CAAC,GAAK,IAAM0lB,EAAO,IAC9B,IAAIE,EAAYL,GAAgBI,CAAI,EACpC,OAAIA,EAAK,SACP3lB,EAAEA,EAAE,OAAO,CAAC,GAAK4lB,EAAU,QAC3B5lB,EAAE,KAAK,MAAMA,EAAG4lB,CAAS,GAG3BJ,EAAM,KAAK,MAAMA,EAAOxlB,CAAC,EAElBwlB,CACT,CAEA,SAASV,GAAU/xC,EAAK,CACtB,OAAKA,GASDA,EAAI,OAAO,EAAG,CAAC,IAAM,OACvBA,EAAM,SAAWA,EAAI,OAAO,CAAC,GAGxB8yC,GAAOR,GAAatyC,CAAG,EAAG,EAAI,EAAE,IAAIuyC,EAAc,GAZhD,EAaX,CAEA,SAASQ,GAAQ/yC,EAAK,CACpB,MAAO,IAAMA,EAAM,GACrB,CACA,SAASgzC,GAASziB,EAAI,CACpB,MAAO,SAAS,KAAKA,CAAE,CACzB,CAEA,SAAS0iB,GAAIt2C,EAAGoxB,EAAG,CACjB,OAAOpxB,GAAKoxB,CACd,CACA,SAASmlB,GAAIv2C,EAAGoxB,EAAG,CACjB,OAAOpxB,GAAKoxB,CACd,CAEA,SAAS+kB,GAAO9yC,EAAKmzC,EAAO,CAC1B,IAAIC,EAAa,GAEbxyC,EAAIywC,GAAS,IAAK,IAAKrxC,CAAG,EAC9B,GAAI,CAACY,EAAG,MAAO,CAACZ,CAAG,EAGnB,IAAI0yC,EAAM9xC,EAAE,IACRgyC,EAAOhyC,EAAE,KAAK,OACdkyC,GAAOlyC,EAAE,KAAM,EAAK,EACpB,CAAC,EAAE,EAEP,GAAI,MAAM,KAAKA,EAAE,GAAG,EAClB,QAASE,EAAI,EAAGA,EAAI8xC,EAAK,OAAQ9xC,IAAK,CACpC,IAAIuyC,EAAYX,EAAK,IAAM9xC,EAAE,KAAO,IAAMgyC,EAAK9xC,CAAC,EAChDsyC,EAAW,KAAKC,CAAS,CAC1B,KACI,CACL,IAAIC,EAAoB,iCAAiC,KAAK1yC,EAAE,IAAI,EAChE2yC,EAAkB,uCAAuC,KAAK3yC,EAAE,IAAI,EACpE4yC,EAAaF,GAAqBC,EAClCE,EAAY7yC,EAAE,KAAK,QAAQ,GAAG,GAAK,EACvC,GAAI,CAAC4yC,GAAc,CAACC,EAElB,OAAI7yC,EAAE,KAAK,MAAM,OAAO,GACtBZ,EAAMY,EAAE,IAAM,IAAMA,EAAE,KAAOsxC,GAAWtxC,EAAE,KACnCkyC,GAAO9yC,CAAG,GAEZ,CAACA,CAAG,EAGb,IAAIS,EACJ,GAAI+yC,EACF/yC,EAAIG,EAAE,KAAK,MAAM,MAAM,UAEvBH,EAAI+xC,GAAgB5xC,EAAE,IAAI,EACtBH,EAAE,SAAW,IAEfA,EAAIqyC,GAAOryC,EAAE,CAAC,EAAG,EAAK,EAAE,IAAIsyC,EAAO,EAC/BtyC,EAAE,SAAW,GACf,OAAOmyC,EAAK,IAAI,SAAS3lB,GAAG,CAC1B,OAAOrsB,EAAE,IAAMH,EAAE,CAAC,EAAIwsB,EAClC,CAAW,EAOP,IAAIymB,EAEJ,GAAIF,EAAY,CACd,IAAIh3C,EAAI61C,GAAQ5xC,EAAE,CAAC,CAAC,EAChBstB,EAAIskB,GAAQ5xC,EAAE,CAAC,CAAC,EAChBkzC,EAAQ,KAAK,IAAIlzC,EAAE,CAAC,EAAE,OAAQA,EAAE,CAAC,EAAE,MAAM,EACzCmzC,EAAOnzC,EAAE,QAAU,EACnB,KAAK,IAAI4xC,GAAQ5xC,EAAE,CAAC,CAAC,CAAC,EACtB,EACAozC,EAAOZ,GACPa,EAAU/lB,EAAIvxB,EACds3C,IACFF,GAAQ,GACRC,EAAOX,IAET,IAAIa,GAAMtzC,EAAE,KAAKuyC,EAAQ,EAEzBU,EAAI,GAEJ,QAAS/2C,GAAIH,EAAGq3C,EAAKl3C,GAAGoxB,CAAC,EAAGpxB,IAAKi3C,EAAM,CACrC,IAAItmC,EACJ,GAAIimC,EACFjmC,EAAI,OAAO,aAAa3Q,EAAC,EACrB2Q,IAAM,OACRA,EAAI,YAENA,EAAI,OAAO3Q,EAAC,EACRo3C,GAAK,CACP,IAAIC,GAAOL,EAAQrmC,EAAE,OACrB,GAAI0mC,GAAO,EAAG,CACZ,IAAI7D,GAAI,IAAI,MAAM6D,GAAO,CAAC,EAAE,KAAK,GAAG,EAChCr3C,GAAI,EACN2Q,EAAI,IAAM6iC,GAAI7iC,EAAE,MAAM,CAAC,EAEvBA,EAAI6iC,GAAI7iC,CACX,CACF,CAEHomC,EAAE,KAAKpmC,CAAC,CACT,CACP,KAAW,CACLomC,EAAI,GAEJ,QAAS3hC,GAAI,EAAGA,GAAItR,EAAE,OAAQsR,KAC5B2hC,EAAE,KAAK,MAAMA,EAAGZ,GAAOryC,EAAEsR,EAAC,EAAG,EAAK,CAAC,CAEtC,CAED,QAASA,GAAI,EAAGA,GAAI2hC,EAAE,OAAQ3hC,KAC5B,QAASjR,EAAI,EAAGA,EAAI8xC,EAAK,OAAQ9xC,IAAK,CACpC,IAAIuyC,EAAYX,EAAMgB,EAAE3hC,EAAC,EAAI6gC,EAAK9xC,CAAC,GAC/B,CAACqyC,GAASK,GAAcH,IAC1BD,EAAW,KAAKC,CAAS,CAC5B,CAEJ,CAED,OAAOD,CACT,iBCzMMa,GAAqB,KAAO,GACrBC,GAAsBC,GAAY,CAC3C,GAAI,OAAOA,GAAY,SACnB,MAAM,IAAI,UAAU,iBAAiB,EAEzC,GAAIA,EAAQ,OAASF,GACjB,MAAM,IAAI,UAAU,qBAAqB,CAEjD,ECLMG,GAAe,CACjB,YAAa,CAAC,uBAAwB,EAAI,EAC1C,YAAa,CAAC,gBAAiB,EAAI,EACnC,YAAa,CAAC,cAAyB,EAAK,EAC5C,YAAa,CAAC,aAAc,EAAI,EAChC,YAAa,CAAC,UAAW,EAAI,EAC7B,YAAa,CAAC,UAAW,EAAI,EAC7B,YAAa,CAAC,eAAgB,GAAM,EAAI,EACxC,YAAa,CAAC,UAAW,EAAI,EAC7B,YAAa,CAAC,SAAU,EAAI,EAC5B,YAAa,CAAC,SAAU,EAAI,EAC5B,YAAa,CAAC,wBAAyB,EAAI,EAC3C,YAAa,CAAC,UAAW,EAAI,EAC7B,WAAY,CAAC,8BAA+B,EAAI,EAChD,aAAc,CAAC,YAAa,EAAK,CACrC,EAGMC,GAAe,GAAM,EAAE,QAAQ,YAAa,MAAM,EAElDC,GAAgB,GAAM,EAAE,QAAQ,2BAA4B,MAAM,EAElEC,GAAkBC,GAAWA,EAAO,KAAK,EAAE,EAOpCC,GAAa,CAACC,EAAMC,IAAa,CAC1C,MAAMvxB,EAAMuxB,EAEZ,GAAID,EAAK,OAAOtxB,CAAG,IAAM,IACrB,MAAM,IAAI,MAAM,2BAA2B,EAG/C,MAAMoxB,EAAS,GACTI,EAAO,GACb,IAAI,EAAIxxB,EAAM,EACVyxB,EAAW,GACXC,EAAQ,GACRC,EAAW,GACXC,EAAS,GACTC,EAAS7xB,EACT8xB,EAAa,GACjBC,EAAO,KAAO,EAAIT,EAAK,QAAQ,CAC3B,MAAMpnC,EAAIonC,EAAK,OAAO,CAAC,EACvB,IAAKpnC,IAAM,KAAOA,IAAM,MAAQ,IAAM8V,EAAM,EAAG,CAC3C4xB,EAAS,GACT,IACA,QACH,CACD,GAAI1nC,IAAM,KAAOunC,GAAY,CAACE,EAAU,CACpCE,EAAS,EAAI,EACb,KACH,CAED,GADAJ,EAAW,GACPvnC,IAAM,MACF,CAACynC,EAAU,CACXA,EAAW,GACX,IACA,QACH,CAGL,GAAIznC,IAAM,KAAO,CAACynC,GAEd,SAAW,CAACpH,EAAK,CAACyH,EAAMC,EAAGC,CAAG,CAAC,IAAK,OAAO,QAAQlB,EAAY,EAC3D,GAAIM,EAAK,WAAW/G,EAAK,CAAC,EAAG,CAEzB,GAAIuH,EACA,MAAO,CAAC,KAAM,GAAOR,EAAK,OAAStxB,EAAK,EAAI,EAEhD,GAAKuqB,EAAI,OACL2H,EACAV,EAAK,KAAKQ,CAAI,EAEdZ,EAAO,KAAKY,CAAI,EACpBN,EAAQA,GAASO,EACjB,SAASF,CACZ,EAKT,GADAJ,EAAW,GACPG,EAAY,CAGR5nC,EAAI4nC,EACJV,EAAO,KAAKH,GAAYa,CAAU,EAAI,IAAMb,GAAY/mC,CAAC,CAAC,EAErDA,IAAM4nC,GACXV,EAAO,KAAKH,GAAY/mC,CAAC,CAAC,EAE9B4nC,EAAa,GACb,IACA,QACH,CAGD,GAAIR,EAAK,WAAW,KAAM,EAAI,CAAC,EAAG,CAC9BF,EAAO,KAAKH,GAAY/mC,EAAI,GAAG,CAAC,EAChC,GAAK,EACL,QACH,CACD,GAAIonC,EAAK,WAAW,IAAK,EAAI,CAAC,EAAG,CAC7BQ,EAAa5nC,EACb,GAAK,EACL,QACH,CAEDknC,EAAO,KAAKH,GAAY/mC,CAAC,CAAC,EAC1B,GACH,CACD,GAAI2nC,EAAS,EAGT,MAAO,CAAC,GAAI,GAAO,EAAG,EAAK,EAI/B,GAAI,CAACT,EAAO,QAAU,CAACI,EAAK,OACxB,MAAO,CAAC,KAAM,GAAOF,EAAK,OAAStxB,EAAK,EAAI,EAMhD,GAAIwxB,EAAK,SAAW,GAChBJ,EAAO,SAAW,GAClB,SAAS,KAAKA,EAAO,CAAC,CAAC,GACvB,CAACQ,EAAQ,CACT,MAAMn0C,EAAI2zC,EAAO,CAAC,EAAE,SAAW,EAAIA,EAAO,CAAC,EAAE,MAAM,EAAE,EAAIA,EAAO,CAAC,EACjE,MAAO,CAACF,GAAazzC,CAAC,EAAG,GAAOo0C,EAAS7xB,EAAK,EAAK,CACtD,CACD,MAAMmyB,EAAU,KAAOP,EAAS,IAAM,IAAMT,GAAeC,CAAM,EAAI,IAC/DgB,EAAQ,KAAOR,EAAS,GAAK,KAAOT,GAAeK,CAAI,EAAI,IAMjE,MAAO,CALMJ,EAAO,QAAUI,EAAK,OAC7B,IAAMW,EAAU,IAAMC,EAAQ,IAC9BhB,EAAO,OACHe,EACAC,EACIV,EAAOG,EAAS7xB,EAAK,EAAI,CAC3C,ECpIaqyB,GAAW,CAAC,EAAG,CAAE,qBAAAC,EAAuB,EAAK,EAAM,KACrDA,EACD,EAAE,QAAQ,iBAAkB,IAAI,EAChC,EAAE,QAAQ,4BAA6B,MAAM,EAAE,QAAQ,aAAc,IAAI,ECd7EvM,GAAQ,IAAI,IAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAG,CAAC,EACzCwM,GAAiBroC,GAAM67B,GAAM,IAAI77B,CAAC,EAKlCsoC,GAAmB,4BACnBC,GAAa,UAIbC,GAAkB,IAAI,IAAI,CAAC,IAAK,GAAG,CAAC,EAEpCC,GAAW,IAAI,IAAI,CAAC,KAAM,GAAG,CAAC,EAC9BC,GAAa,IAAI,IAAI,iBAAiB,EACtCC,GAAgB,GAAM,EAAE,QAAQ,2BAA4B,MAAM,EAElEC,GAAQ,OAERC,GAAOD,GAAQ,KAGfE,GAAcF,GAAQ,KAGrB,MAAMG,EAAI,CACb,KACAC,GACAC,GACAC,GAAS,GACTC,GAAS,GACTC,GACAC,GACAC,GACAC,GAAc,GACdC,GACAC,GAGAC,GAAY,GACZ,YAAY/5C,EAAMiP,EAAQlJ,EAAU,GAAI,CACpC,KAAK,KAAO/F,EAERA,IACA,KAAKs5C,GAAY,IACrB,KAAKG,GAAUxqC,EACf,KAAKoqC,GAAQ,KAAKI,GAAU,KAAKA,GAAQJ,GAAQ,KACjD,KAAKQ,GAAW,KAAKR,KAAU,KAAOtzC,EAAU,KAAKszC,GAAMQ,GAC3D,KAAKF,GAAQ,KAAKN,KAAU,KAAO,GAAK,KAAKA,GAAMM,GAC/C35C,IAAS,KAAO,CAAC,KAAKq5C,GAAMO,IAC5B,KAAKD,GAAM,KAAK,IAAI,EACxB,KAAKD,GAAe,KAAKD,GAAU,KAAKA,GAAQD,GAAO,OAAS,CACnE,CACD,IAAI,UAAW,CAEX,GAAI,KAAKF,KAAc,OACnB,OAAO,KAAKA,GAEhB,UAAWtpB,KAAK,KAAKwpB,GACjB,GAAI,OAAOxpB,GAAM,WAEbA,EAAE,MAAQA,EAAE,UACZ,OAAQ,KAAKspB,GAAY,GAGjC,OAAO,KAAKA,EACf,CAED,UAAW,CACP,OAAI,KAAKQ,KAAc,OACZ,KAAKA,GACX,KAAK,KAIE,KAAKA,GACT,KAAK,KAAO,IAAM,KAAKN,GAAO,IAAIxpB,GAAK,OAAOA,CAAC,CAAC,EAAE,KAAK,GAAG,EAAI,IAJ1D,KAAK8pB,GAAY,KAAKN,GAAO,IAAIxpB,GAAK,OAAOA,CAAC,CAAC,EAAE,KAAK,EAAE,CAMvE,CACDgqB,IAAY,CAER,GAAI,OAAS,KAAKX,GACd,MAAM,IAAI,MAAM,0BAA0B,EAC9C,GAAI,KAAKO,GACL,OAAO,KAGX,KAAK,SAAQ,EACb,KAAKA,GAAc,GACnB,IAAIp2C,EACJ,KAAQA,EAAI,KAAKm2C,GAAM,IAAG,GAAK,CAC3B,GAAIn2C,EAAE,OAAS,IACX,SAEJ,IAAIwsB,EAAIxsB,EACJy2C,EAAKjqB,EAAEypB,GACX,KAAOQ,GAAI,CACP,QAASv6C,EAAIswB,EAAE0pB,GAAe,EAAG,CAACO,EAAG,MAAQv6C,EAAIu6C,EAAGT,GAAO,OAAQ95C,IAC/D,UAAWw6C,KAAQ12C,EAAEg2C,GAAQ,CAEzB,GAAI,OAAOU,GAAS,SAChB,MAAM,IAAI,MAAM,8BAA8B,EAGlDA,EAAK,OAAOD,EAAGT,GAAO95C,CAAC,CAAC,CAC3B,CAELswB,EAAIiqB,EACJA,EAAKjqB,EAAEypB,EACV,CACJ,CACD,OAAO,IACV,CACD,QAAQjE,EAAO,CACX,UAAWxlB,KAAKwlB,EACZ,GAAIxlB,IAAM,GAGV,IAAI,OAAOA,GAAM,UAAY,EAAEA,aAAaopB,IAAOppB,EAAEypB,KAAY,MAC7D,MAAM,IAAI,MAAM,iBAAmBzpB,CAAC,EAGxC,KAAKwpB,GAAO,KAAKxpB,CAAC,EAEzB,CACD,QAAS,CACL,MAAMmqB,EAAM,KAAK,OAAS,KACpB,KAAKX,GAAO,MAAO,EAAC,IAAIxpB,GAAM,OAAOA,GAAM,SAAWA,EAAIA,EAAE,OAAQ,CAAC,EACrE,CAAC,KAAK,KAAM,GAAG,KAAKwpB,GAAO,IAAIxpB,GAAKA,EAAE,OAAQ,EAAC,EACrD,OAAI,KAAK,WAAa,CAAC,KAAK,MACxBmqB,EAAI,QAAQ,EAAE,EACd,KAAK,MAAO,IACX,OAAS,KAAKd,IACV,KAAKA,GAAMO,IAAe,KAAKH,IAAS,OAAS,MACtDU,EAAI,KAAK,EAAE,EAERA,CACV,CACD,SAAU,CACN,GAAI,KAAKd,KAAU,KACf,MAAO,GAEX,GAAI,CAAC,KAAKI,IAAS,QAAS,EACxB,MAAO,GACX,GAAI,KAAKC,KAAiB,EACtB,MAAO,GAEX,MAAM1pB,EAAI,KAAKypB,GACf,QAAS/5C,EAAI,EAAGA,EAAI,KAAKg6C,GAAch6C,IAAK,CACxC,MAAMu6C,EAAKjqB,EAAEwpB,GAAO95C,CAAC,EACrB,GAAI,EAAEu6C,aAAcb,IAAOa,EAAG,OAAS,KACnC,MAAO,EAEd,CACD,MAAO,EACV,CACD,OAAQ,CAGJ,GAFI,KAAKZ,KAAU,MAEf,KAAKI,IAAS,OAAS,IACvB,MAAO,GACX,GAAI,CAAC,KAAKA,IAAS,MAAO,EACtB,MAAO,GACX,GAAI,CAAC,KAAK,KACN,OAAO,KAAKA,IAAS,QAGzB,MAAMW,EAAK,KAAKX,GAAU,KAAKA,GAAQD,GAAO,OAAS,EAEvD,OAAO,KAAKE,KAAiBU,EAAK,CACrC,CACD,OAAOF,EAAM,CACL,OAAOA,GAAS,SAChB,KAAK,KAAKA,CAAI,EAEd,KAAK,KAAKA,EAAK,MAAM,IAAI,CAAC,CACjC,CACD,MAAMjrC,EAAQ,CACV,MAAMoB,EAAI,IAAI+oC,GAAI,KAAK,KAAMnqC,CAAM,EACnC,UAAW+gB,KAAK,KAAKwpB,GACjBnpC,EAAE,OAAO2f,CAAC,EAEd,OAAO3f,CACV,CACD,MAAOgqC,GAAUt3C,EAAKu3C,EAAKn0B,EAAKkpB,EAAK,CACjC,IAAIyI,EAAW,GACXyC,EAAU,GACVC,EAAa,GACbC,EAAW,GACf,GAAIH,EAAI,OAAS,KAAM,CAEnB,IAAI56C,EAAIymB,EACJypB,EAAM,GACV,KAAOlwC,EAAIqD,EAAI,QAAQ,CACnB,MAAMsN,EAAItN,EAAI,OAAOrD,GAAG,EAGxB,GAAIo4C,GAAYznC,IAAM,KAAM,CACxBynC,EAAW,CAACA,EACZlI,GAAOv/B,EACP,QACH,CACD,GAAIkqC,EAAS,CACL76C,IAAM86C,EAAa,GACfnqC,IAAM,KAAOA,IAAM,OACnBoqC,EAAW,IAGVpqC,IAAM,KAAO,EAAE3Q,IAAM86C,EAAa,GAAKC,KAC5CF,EAAU,IAEd3K,GAAOv/B,EACP,QACH,SACQA,IAAM,IAAK,CAChBkqC,EAAU,GACVC,EAAa96C,EACb+6C,EAAW,GACX7K,GAAOv/B,EACP,QACH,CACD,GAAI,CAACg/B,EAAI,OAASqJ,GAAcroC,CAAC,GAAKtN,EAAI,OAAOrD,CAAC,IAAM,IAAK,CACzD46C,EAAI,KAAK1K,CAAG,EACZA,EAAM,GACN,MAAMjhC,EAAM,IAAIyqC,GAAI/oC,EAAGiqC,CAAG,EAC1B56C,EAAI05C,GAAIiB,GAAUt3C,EAAK4L,EAAKjP,EAAG2vC,CAAG,EAClCiL,EAAI,KAAK3rC,CAAG,EACZ,QACH,CACDihC,GAAOv/B,CACV,CACD,OAAAiqC,EAAI,KAAK1K,CAAG,EACLlwC,CACV,CAGD,IAAIA,EAAIymB,EAAM,EACV+zB,EAAO,IAAId,GAAI,KAAMkB,CAAG,EAC5B,MAAM9E,EAAQ,GACd,IAAI5F,EAAM,GACV,KAAOlwC,EAAIqD,EAAI,QAAQ,CACnB,MAAMsN,EAAItN,EAAI,OAAOrD,GAAG,EAGxB,GAAIo4C,GAAYznC,IAAM,KAAM,CACxBynC,EAAW,CAACA,EACZlI,GAAOv/B,EACP,QACH,CACD,GAAIkqC,EAAS,CACL76C,IAAM86C,EAAa,GACfnqC,IAAM,KAAOA,IAAM,OACnBoqC,EAAW,IAGVpqC,IAAM,KAAO,EAAE3Q,IAAM86C,EAAa,GAAKC,KAC5CF,EAAU,IAEd3K,GAAOv/B,EACP,QACH,SACQA,IAAM,IAAK,CAChBkqC,EAAU,GACVC,EAAa96C,EACb+6C,EAAW,GACX7K,GAAOv/B,EACP,QACH,CACD,GAAIqoC,GAAcroC,CAAC,GAAKtN,EAAI,OAAOrD,CAAC,IAAM,IAAK,CAC3Cw6C,EAAK,KAAKtK,CAAG,EACbA,EAAM,GACN,MAAMjhC,EAAM,IAAIyqC,GAAI/oC,EAAG6pC,CAAI,EAC3BA,EAAK,KAAKvrC,CAAG,EACbjP,EAAI05C,GAAIiB,GAAUt3C,EAAK4L,EAAKjP,EAAG2vC,CAAG,EAClC,QACH,CACD,GAAIh/B,IAAM,IAAK,CACX6pC,EAAK,KAAKtK,CAAG,EACbA,EAAM,GACN4F,EAAM,KAAK0E,CAAI,EACfA,EAAO,IAAId,GAAI,KAAMkB,CAAG,EACxB,QACH,CACD,GAAIjqC,IAAM,IACN,OAAIu/B,IAAQ,IAAM0K,EAAId,GAAO,SAAW,IACpCc,EAAIP,GAAY,IAEpBG,EAAK,KAAKtK,CAAG,EACbA,EAAM,GACN0K,EAAI,KAAK,GAAG9E,EAAO0E,CAAI,EAChBx6C,EAEXkwC,GAAOv/B,CACV,CAID,OAAAiqC,EAAI,KAAO,KACXA,EAAIhB,GAAY,OAChBgB,EAAId,GAAS,CAACz2C,EAAI,UAAUojB,EAAM,CAAC,CAAC,EAC7BzmB,CACV,CACD,OAAO,SAASw3C,EAASnxC,EAAU,GAAI,CACnC,MAAMu0C,EAAM,IAAIlB,GAAI,KAAM,OAAWrzC,CAAO,EAC5C,OAAAqzC,GAAIiB,GAAUnD,EAASoD,EAAK,EAAGv0C,CAAO,EAC/Bu0C,CACV,CAGD,aAAc,CAGV,GAAI,OAAS,KAAKjB,GACd,OAAO,KAAKA,GAAM,cAEtB,MAAM5B,EAAO,KAAK,WACZ,CAACiD,EAAIhF,EAAMiF,EAAU9C,CAAK,EAAI,KAAK,iBASzC,GAAI,EALa8C,GACb,KAAKrB,IACJ,KAAKO,GAAS,QACX,CAAC,KAAKA,GAAS,iBACfpC,EAAK,YAAa,IAAKA,EAAK,YAAa,GAE7C,OAAO/B,EAEX,MAAMkF,GAAS,KAAKf,GAAS,OAAS,IAAM,KAAOhC,EAAQ,IAAM,IACjE,OAAO,OAAO,OAAO,IAAI,OAAO,IAAI6C,CAAE,IAAKE,CAAK,EAAG,CAC/C,KAAMF,EACN,MAAOjD,CACnB,CAAS,CACJ,CAsED,eAAeoD,EAAU,CACrB,MAAMC,EAAMD,GAAY,CAAC,CAAC,KAAKhB,GAAS,IAGxC,GAFI,KAAKR,KAAU,MACf,KAAKW,GAAS,EACd,CAAC,KAAK,KAAM,CACZ,MAAMe,EAAU,KAAK,QAAS,GAAI,KAAK,MAAK,EACtCh5C,EAAM,KAAKy3C,GACZ,IAAIxpB,GAAK,CACV,KAAM,CAAC0qB,EAAI37C,EAAG47C,EAAU9C,CAAK,EAAI,OAAO7nB,GAAM,SACxCopB,GAAI4B,GAAWhrB,EAAG,KAAKspB,GAAWyB,CAAO,EACzC/qB,EAAE,eAAe6qB,CAAQ,EAC/B,YAAKvB,GAAY,KAAKA,IAAaqB,EACnC,KAAKpB,GAAS,KAAKA,IAAU1B,EACtB6C,CACvB,CAAa,EACI,KAAK,EAAE,EACZ,IAAIvpB,EAAQ,GACZ,GAAI,KAAK,WACD,OAAO,KAAKqoB,GAAO,CAAC,GAAM,UAMtB,EADmB,KAAKA,GAAO,SAAW,GAAKV,GAAS,IAAI,KAAKU,GAAO,CAAC,CAAC,GACzD,CACjB,MAAMyB,EAAMpC,GAGNqC,EAELJ,GAAOG,EAAI,IAAIl5C,EAAI,OAAO,CAAC,CAAC,GAExBA,EAAI,WAAW,KAAK,GAAKk5C,EAAI,IAAIl5C,EAAI,OAAO,CAAC,CAAC,GAE9CA,EAAI,WAAW,QAAQ,GAAKk5C,EAAI,IAAIl5C,EAAI,OAAO,CAAC,CAAC,EAGhDo5C,EAAY,CAACL,GAAO,CAACD,GAAYI,EAAI,IAAIl5C,EAAI,OAAO,CAAC,CAAC,EAC5DovB,EAAQ+pB,EAAavC,GAAmBwC,EAAYvC,GAAa,EACpE,CAIT,IAAItrC,EAAM,GACV,OAAI,KAAK,MAAO,GACZ,KAAK+rC,GAAMO,IACX,KAAKH,IAAS,OAAS,MACvBnsC,EAAM,aAGH,CADO6jB,EAAQpvB,EAAMuL,EAGxBkrC,GAASz2C,CAAG,EACX,KAAKu3C,GAAY,CAAC,CAAC,KAAKA,GACzB,KAAKC,EACrB,CACS,CAID,MAAM6B,EAAW,KAAK,OAAS,KAAO,KAAK,OAAS,IAE9CjqB,EAAQ,KAAK,OAAS,IAAM,YAAc,MAChD,IAAIukB,EAAO,KAAK2F,GAAeP,CAAG,EAClC,GAAI,KAAK,QAAS,GAAI,KAAK,SAAW,CAACpF,GAAQ,KAAK,OAAS,IAAK,CAG9D,MAAMjoC,EAAI,KAAK,WACf,YAAK+rC,GAAS,CAAC/rC,CAAC,EAChB,KAAK,KAAO,KACZ,KAAK6rC,GAAY,OACV,CAAC7rC,EAAG+qC,GAAS,KAAK,SAAQ,CAAE,EAAG,GAAO,EAAK,CACrD,CAED,IAAI8C,EAAiB,CAACF,GAAYP,GAAYC,GAAO,CAAClC,GAChD,GACA,KAAKyC,GAAe,EAAI,EAC1BC,IAAmB5F,IACnB4F,EAAiB,IAEjBA,IACA5F,EAAO,MAAMA,CAAI,OAAO4F,CAAc,OAG1C,IAAIC,EAAQ,GACZ,GAAI,KAAK,OAAS,KAAO,KAAKxB,GAC1BwB,GAAS,KAAK,QAAS,GAAI,CAACT,EAAMlC,GAAa,IAAMO,OAEpD,CACD,MAAMqC,EAAQ,KAAK,OAAS,IAEpB,MACK,KAAK,QAAO,GAAM,CAACV,GAAO,CAACD,EAAWjC,GAAa,IACpDM,GACA,IACN,KAAK,OAAS,IACV,IACA,KAAK,OAAS,IACV,KACA,KAAK,OAAS,KAAOoC,EACjB,IACA,KAAK,OAAS,KAAOA,EACjB,KACA,IAAI,KAAK,IAAI,GACnCC,EAAQpqB,EAAQukB,EAAO8F,CAC1B,CACD,MAAO,CACHD,EACA/C,GAAS9C,CAAI,EACZ,KAAK4D,GAAY,CAAC,CAAC,KAAKA,GACzB,KAAKC,EACjB,CACK,CACD8B,GAAeP,EAAK,CAChB,OAAO,KAAKtB,GACP,IAAIxpB,GAAK,CAGV,GAAI,OAAOA,GAAM,SACb,MAAM,IAAI,MAAM,8BAA8B,EAIlD,KAAM,CAAC0qB,EAAI37C,EAAG08C,EAAW5D,CAAK,EAAI7nB,EAAE,eAAe8qB,CAAG,EACtD,YAAKvB,GAAS,KAAKA,IAAU1B,EACtB6C,CACnB,CAAS,EACI,OAAO1qB,GAAK,EAAE,KAAK,QAAO,GAAM,KAAK,MAAO,IAAK,CAAC,CAACA,CAAC,EACpD,KAAK,GAAG,CAChB,CACD,MAAOgrB,GAAWvD,EAAMkD,EAAUI,EAAU,GAAO,CAC/C,IAAIjD,EAAW,GACX4C,EAAK,GACL7C,EAAQ,GACZ,QAASn4C,EAAI,EAAGA,EAAI+3C,EAAK,OAAQ/3C,IAAK,CAClC,MAAM,EAAI+3C,EAAK,OAAO/3C,CAAC,EACvB,GAAIo4C,EAAU,CACVA,EAAW,GACX4C,IAAO3B,GAAW,IAAI,CAAC,EAAI,KAAO,IAAM,EACxC,QACH,CACD,GAAI,IAAM,KAAM,CACRr5C,IAAM+3C,EAAK,OAAS,EACpBiD,GAAM,OAGN5C,EAAW,GAEf,QACH,CACD,GAAI,IAAM,IAAK,CACX,KAAM,CAAC/1C,EAAK25C,EAAWC,EAAUC,CAAK,EAAIpE,GAAWC,EAAM/3C,CAAC,EAC5D,GAAIi8C,EAAU,CACVjB,GAAM34C,EACN81C,EAAQA,GAAS6D,EACjBh8C,GAAKi8C,EAAW,EAChBhB,EAAWA,GAAYiB,EACvB,QACH,CACJ,CACD,GAAI,IAAM,IAAK,CACPb,GAAWtD,IAAS,IACpBiD,GAAMvB,GAENuB,GAAMxB,GACVyB,EAAW,GACX,QACH,CACD,GAAI,IAAM,IAAK,CACXD,GAAMzB,GACN0B,EAAW,GACX,QACH,CACDD,GAAM1B,GAAa,CAAC,CACvB,CACD,MAAO,CAAC0B,EAAIlC,GAASf,CAAI,EAAG,CAAC,CAACkD,EAAU9C,CAAK,CAChD,CACL,CC9jBO,MAAMgE,GAAS,CAAC,EAAG,CAAE,qBAAApD,EAAuB,EAAK,EAAM,KAInDA,EACD,EAAE,QAAQ,aAAc,MAAM,EAC9B,EAAE,QAAQ,eAAgB,MAAM,ECf1C,IAACzyC,GAAA;;0vECcM,MAAM81C,EAAM,CASjB,YACWrR,EACAsR,EACAh2C,EAAwB,GACjC,CAHS,YAAA0kC,EACA,YAAAsR,EACA,aAAAh2C,EANX,KAAQ,aAAwB,GACf,kBAAqC,IA2DtD,WAAS67B,GAAiB,CACpB,KAAK,SAAS,IAAIA,CAAI,IAErB,cAAS,IAAIA,CAAI,EAEjB,WAAMA,CAAI,EAAIf,GAAS,KAAK,OAAO,IAAI,QAAQe,CAAI,EAAE,EAAG,CAC3D,UAAW,CAACx9B,EAAOiU,IACbmnB,GAAM,GAAGnnB,CAAM,EACVjU,EAELiU,aAAkB2lB,EACb,IAAI,MAAM55B,EAAmB,CAClC,IAAK,CAACrE,EAAQiwB,EAAGqR,IACR,QAAQ,IAAIthC,EAAQiwB,EAAGqR,CAAQ,EAExC,IAAK,CAACthC,EAAQiwB,EAAG5rB,EAAOi9B,IAAa,CACnC,MAAMngC,EAAS,QAAQ,IAAInB,EAAQiwB,EAAG5rB,EAAOi9B,CAAQ,EACrD,YAAK,QAAQ,WAAW,KAAMO,EAAMx9B,CAAK,EAClClD,CACT,EACA,eAAgB,CAACnB,EAAQiwB,IAAM,CAC7B,MAAM9uB,EAAS,QAAQ,eAAenB,EAAQiwB,CAAC,EAC/C,YAAK,QAAQ,WAAW,KAAM4R,EAAM,MAAS,EACtC1gC,CACT,EACD,EAECmX,aAAkB4lB,EACb,IAAI,MAAM75B,EAAoB,CACnC,IAAK,CAACrE,EAAQiwB,EAAGqR,IACR,QAAQ,IAAIthC,EAAQiwB,EAAGqR,CAAQ,EAExC,IAAK,CAACthC,EAAQiwB,EAAG5rB,EAAOi9B,IAAa,CAC7B,MAAAhgC,EAAQ,OAAO2uB,CAAC,EAClB,UAAO,MAAM3uB,CAAK,EACpB,OAAO,QAAQ,IAAItB,EAAQiwB,EAAG5rB,EAAOi9B,CAAQ,EAE/C,MAAMngC,EAAS,QAAQ,IAAInB,EAAQiwB,EAAG5rB,EAAOi9B,CAAQ,EACrD,YAAK,QAAQ,WAAW,KAAMO,EAAMx9B,CAAK,EAClClD,CACT,EACA,eAAgB,CAACnB,EAAQiwB,IAAM,CAC7B,MAAM9uB,EAAS,QAAQ,eAAenB,EAAQiwB,CAAC,EAC/C,YAAK,QAAQ,WAAW,KAAMA,EAAa,MAAS,EAC7C9uB,CACT,EACD,EAGIkD,CACT,CACD,IAGH,SAAOw9B,GAAiB,CACtB,GAAI,CAAC,KAAK,SAAS,IAAIA,CAAI,EAAG,OAGxB,MAAAx9B,EAAQ,KAAK,MAAMw9B,CAAI,EAExB,cAAS,OAAOA,CAAI,EAGpB,WAAMA,CAAI,EAAIx9B,CAAA,EAGb,mBAAiBiL,GAAmB,CAC1C,KAAK,aAAe,GACjBA,IACH,KAAK,aAAe,IAGd,oBAAiB,CAACX,EAActK,IAC/Bo9B,GAAap9B,EAAO,CACzB,SAAU,IAAM,CACd,KAAK,QAAQ,WAAW,KAAMsK,EAAMtK,CAAK,CAC3C,EACD,EAjIK,MAAE,GAAAqB,EAAI,QAAAo4B,EAAS,QAAA6K,EAAS,UAAAsT,EAAW,MAAArI,CAAM,EAAI,KAAK,eAExD,KAAK,GAAKluC,EACV,KAAK,QAAUo4B,EACf,KAAK,UAAYme,EACjB,KAAK,QAAUtT,EAEV,WAAQ,KAAK,aAAaiL,CAAK,EAE/B,eAAU,QAAQ,IAAM,CACtB,WAAM,gBAAgB,MAAK,CACjC,EAEI,YAAO,QAAiB1yB,GAAA,CACrBA,EAAA,YAAY,QAAejd,GAAA,CAC/B,MAAMhE,EAAOihB,EAAM,QAAQ,KAAK,IAAIjd,CAAG,EACvC,GAAKhE,EAGL,IAAIA,EAAK,SAAW,UAAYA,EAAK,SAAW,MAAO,CACrD,MAAMoE,EAAQ,KAAK,OAAO,IAAIJ,CAAG,EAC3Bi4C,EAAUj4C,EAAI,QAAQ,QAAS,EAAE,EACjCg+B,EAAQ,KAAK,eAAeia,EAAS73C,CAAK,EAChD,KAAK,cAAc,IAAM,CAElB,WAAM63C,CAAO,EAAIja,CAAA,CACvB,EACD,KAAK,QAAQ,WAAW,KAAMia,EAAS73C,CAAK,EAC5C,MACF,CACI,GAAApE,EAAK,SAAW,SAAU,CAC5B,MAAMi8C,EAAUj4C,EAAI,QAAQ,QAAS,EAAE,EACvC,KAAK,cAAc,IAAM,CAEhB,YAAK,MAAMi4C,CAAO,EAC1B,EACD,KAAK,QAAQ,WAAW,KAAMA,EAAS,MAAS,EAChD,MACF,GACD,EACF,EAEI,YAAO,YAAsBC,GAAA,CAC1B,MAAAC,EAAMD,EAAO,CAAC,EAGhB,CAACC,GAAOA,EAAI,gBAAkBA,EAAI,QAEtC,KAAK,QAAQ,WAAW,KAAM,GAAI,MAAS,EAC5C,CACH,CAkFQ,cAAe,CACjB,IAAA12C,EACAo4B,EACA6K,EACAsT,EACJ,MAAMrI,EAAiC,GAEvC,KAAK,OAAO,QAAQ,CAACvvC,EAAOJ,IAAQ,CAC9B,GAAAA,EAAI,WAAW,OAAO,EAAG,CAC3B,MAAMi4C,EAAUj4C,EAAI,QAAQ,QAAS,EAAE,EACvC2vC,EAAMsI,CAAO,EAAI,KAAK,eAAeA,EAAS73C,CAAK,EACnD,MACF,CACA,GAAIJ,IAAQ,UAAY,OAAOI,GAAU,SAAU,CAC5CqB,EAAArB,EACL,MACF,CACA,GAAIJ,IAAQ,eAAiB,OAAOI,GAAU,SAAU,CAC5Cy5B,EAAAz5B,EACV,MACF,CACA,GAAIJ,IAAQ,gBAAkBI,aAAiB65B,EAAS,CAC1C+d,EAAA53C,EACZ,MACF,CACA,GAAIJ,IAAQ,eAAiB,OAAOI,GAAU,SAAU,CAC5CskC,EAAAtkC,EACV,MACF,EACD,EAEDpF,EAAayG,EAAI,uBAAuB,EACxCzG,EAAa6+B,EAAS,4BAA4B,EAClD7+B,EAAag9C,EAAW,6BAA6B,EAErD,MAAMvR,EAAS,KAAK,OAAO,iBAAiB,IAAI5M,CAAO,EAC1C7+B,EAAAyrC,EAAQ,kCAAkC5M,CAAO,EAAE,EAChE,MAAMue,EAAe3R,EAAO,MAAM,QAAQ+I,EAAkB,EAExD,cAAO9K,GAAY,WAErBA,EAAU+B,EAAO,SAIf2R,GACK,eAAQA,CAAY,EAAE,QAAQ,CAAC,CAACp4C,EAAKI,CAAK,IAAM,CACjD,GAAAuvC,EAAM3vC,CAAG,IAAM,OAAW,OAExB,MAAAq4C,EAAS7b,GAASp8B,CAAK,EAC7B,KAAK,OAAO,IAAI,QAAQJ,CAAG,GAAIq4C,CAAM,EACrC1I,EAAM3vC,CAAG,EAAI,KAAK,eAAeA,EAAKq4C,CAAM,EAC7C,EAGI,CACL,GAAA52C,EACA,QAAAo4B,EACA,QAAA6K,EACA,MAAAiL,EACA,UAAAqI,CAAA,CAEJ,CAEQ,aAAarI,EAAiB,CACpC,MAAMlJ,EAAS,KAAK,OAAO,iBAAiB,IAAI,KAAK,OAAO,EAC5DzrC,EAAayrC,EAAQ,kCAAkC,KAAK,OAAO,EAAE,EAErE,MAAM6R,EAAQ7R,EAAO,MAAM,UAAU,GAAK,IAAIwJ,GACvC,qBAAOqI,EAAO3I,CAAK,EAE1B2I,EAAM,GAAK,KAAK,GAChBA,EAAM,QAAU,KAAK,QACfA,EAAA,KAAO,OAAO,KAAK3I,CAAK,EACxB2I,EAAA,QAAU7R,EAAO,MAAM,QACvB6R,EAAA,KAAO7R,EAAO,MAAM,KAC1B6R,EAAM,OAAS,KAAK,OACpBA,EAAM,MAAQ,KAAK,MACnBA,EAAM,IAAM,KAAK,IAEV,IAAI,MAAMA,EAAO,CACtB,IAAK,CAACv8C,EAAQiwB,IACL,QAAQ,IAAIjwB,EAAQiwB,CAAC,EAE9B,IAAK,CAACjwB,EAAQiwB,EAAG5rB,EAAOi9B,IAAa,CAEjC,IAAC,KAAK,cACN,OAAOrR,GAAM,UACbssB,EAAM,KAAK,SAAStsB,CAAC,EACrB,CACA,GAAI,KAAK,SAAS,IAAIA,CAAC,EAAG,CACxB,MAAM9uB,EAAS,QAAQ,IAAInB,EAAQiwB,EAAG5rB,EAAOi9B,CAAQ,EACrD,YAAK,QAAQ,WAAW,KAAMrR,EAAG5rB,CAAK,EAC/BlD,CACT,CAEM,MAAAm7C,EAAS7b,GAASp8B,CAAK,EAC7B,KAAK,OAAO,IAAI,QAAQ4rB,CAAC,GAAIqsB,CAAM,EACnC,MAAMra,EAAQ,KAAK,eAAehS,EAAGqsB,CAAM,EAC3C,OAAO,QAAQ,IAAIt8C,EAAQiwB,EAAGgS,EAAOX,CAAQ,CAC/C,CAEA,OAAO,QAAQ,IAAIthC,EAAQiwB,EAAG5rB,EAAOi9B,CAAQ,CAC/C,EACA,IAAK,CAACthC,EAAQiwB,EAAGqR,IACR,QAAQ,IAAIthC,EAAQiwB,EAAGqR,CAAQ,EAExC,eAAgB,CAACthC,EAAQiwB,KAErB,CAAC,KAAK,cACN,OAAOA,GAAM,UACbssB,EAAM,KAAK,SAAStsB,CAAC,GAErB,KAAK,OAAO,OAAO,QAAQA,CAAC,EAAE,EAGzB,QAAQ,eAAejwB,EAAQiwB,CAAC,EACzC,CACD,CACH,CACF,CCxRA,IAAAqW,GAKa,MAAAkW,GAAiB,OAAO,gBAAgB,EAE9C,MAAeC,WAAwB,KAAM,CAKlD,YAAYC,EAAiBv9C,EAAiB,CAC5C,MAAMA,CAAO,EALf,KAACmnC,EAAkB,KAMjB,KAAK,KAAOoW,CACd,CAPC,OAAApW,GAAAkW,EAAA,CAQH,CAEO,MAAMG,WAAuBF,EAAgB,CAClD,YAAYvW,EAAqB,CAC/B,MACE,IACA;AAAA,YACMA,CAAW,GAErB,CACF,CAEO,MAAM0W,WAA4BH,EAAgB,CACvD,YAAY3e,EAAiB3+B,EAAiB,CAC5C,MACE,IACA,sBAAsB2+B,CAAO,KAAK3+B,CAAO,GAE7C,CACF,CCxBO,MAAM09C,EAAO,CAAb,cACI,0BAAuB,IAiCrB,eACT/e,EACAgf,EACAC,IACS,CACT,MAAMrS,EAAS,KAAK,iBAAiB,IAAI5M,CAAO,EAChD7+B,EACEyrC,EACA,IAAIkS,GAAoB9e,EAASuB,EAAwB,GAG3D,MAAM2d,EAAmB,IAAM,CAC7BD,GAAe,QAAwBE,GAAA,CACrC,MAAMC,EAAc,KAAK,iBAAiB,IAAID,CAAY,EAC1Dh+C,EACEi+C,EACA,IAAIN,GAAoBK,EAAc5d,EAAwB,GAE3D,oBAAe6d,EAAaxS,CAAM,EACxC,GAGC,GAAAA,EAAO,MAAM,OAAS,OAAQ,CAChC,GAAIoS,EACF,MAAM,IAAIF,GACRlS,EAAO,MAAM,QACb,kCAIasS,IACjB,MACF,CAEA,GAAI,CAACF,EACH,MAAM,IAAIF,GACRlS,EAAO,MAAM,QACb,iCAIJ,MAAMyS,EAAe,KAAK,iBAAiB,IAAIL,CAAa,EAC5D79C,EACEk+C,EACA,IAAIP,GAAoBE,EAAezd,EAAwB,GAE5D,oBAAeqL,EAAQyS,CAAY,EACvBH,GAAA,EAgBnB,sBAAoBI,GAAoB,CACtC,KAAK,sBAAsBA,CAAQ,EACnCjf,GAAoB,QAAqBkf,GAAA,CACnC,IACEA,EAAU,UAAUD,CAAQ,GAC9BC,EAAU,QAAQD,CAAQ,QAErB58C,EAAK,CACZ,cAAQ,MAAMA,CAAG,EACX,IAAIm8C,GAAeU,EAAU,IAAI,CACzC,EACD,GAGW,kBACZ5f,EACA6f,EACAC,IACG,CAEG,MAAA5f,EAAS4f,EAAS,OAAO,QAAQ,EACvC,MAAM,KAAK5f,EAAO,OAAQ,GAAE,QAAiB3P,GAAA,CACrC,MAAA8P,EAAU9P,EAAM,IAAI,aAAa,EACjCwvB,EAAiBF,EAAiBxf,CAAO,GAAK,EACpD7+B,EACEu+C,EACA,gCAAgC1f,CAAO,cAEpC,kBAAaA,EAAS0f,EAAgBxvB,CAAK,EACjD,EAGDwP,GAAe,QAAqB6f,GAAA,CAC9B,IACEA,EAAU,UAAU5f,EAAgB8f,CAAQ,GACpCF,EAAA,QAAQ5f,EAAgB8f,CAAQ,QAErC/8C,EAAK,CACZ,MAAM,IAAIm8C,GAAe,GAAGU,EAAU,IAAI;AAAA,cACpC78C,CAAG,EAAE,CACb,EACD,GAGY,mBACbs9B,EACA2f,EACAC,IACG,CACC,IACF,MAAMC,EAAgB,KAAK,iBAAiB,IAAI7f,CAAO,EACvD7+B,EAAa0+C,CAAa,EACpB,MAAE,UAAA7J,EAAW,QAAAnL,CAAY,EAAAgV,EAC/B,GAAI,CAAC7J,EACH,OAGF,MAAM9lB,EAAQ,IAAI+tB,GAAM,KAAM2B,CAAS,EAEvC,OAAO5J,EAAU9lB,EAAM,MAAOyvB,EAAY9U,CAAO,QAC1CnoC,EAAK,CACN,UAAIm8C,GAAe,iBAAiB7e,CAAO;AAAA,YAC3Ct9B,CAAG,EAAE,CACb,GAGM,2BAAyB48C,GAAoB,CAE7C,MAAAQ,EADOR,EAAS,OAAO,MAAM,EACR,IAAI,eAAe,EACzCQ,GAGSA,EAAA,QAAQ,CAACjV,EAAS7K,IAAY,CAC1C,MAAM6f,EAAgB,KAAK,iBAAiB,IAAI7f,CAAO,EACnD6f,GAAiBhV,IAAYgV,EAAc,SAC/BC,EAAA,IAAI9f,EAAS6f,EAAc,OAAO,CAClD,CACD,EACH,CA5KA,IAAI,UAAW,CACb,OAAO,OAAO,YACZ,MAAM,KAAK,KAAK,iBAAiB,QAAQ,EAAE,IACxCjT,GAA6B,CAACA,EAAO,MAAM,QAASA,EAAO,OAAO,CACrE,EAEJ,CAEA,QAAS,CACP,OAAO,OAAO,YACZ,MAAM,KAAK,KAAK,iBAAiB,QAAQ,EAAE,IACxCA,GAA8C,CAC7CA,EAAO,MAAM,QACb,CACE,KAAMA,EAAO,MAAM,KACnB,OAAQA,EAAO,MAAM,OACrB,SAAUA,EAAO,MAAM,QACzB,CACF,CACF,EAEJ,CAEA,SAASmT,EAAgC,CACvC,OAAAA,EAAY,QAAkBnT,GAAA,CAC5BgJ,GAAY,MAAMhJ,CAAM,EACxB,KAAK,iBAAiB,IAAIA,EAAO,MAAM,QAASA,CAAM,EACvD,EACM,IACT,CAoDA,eAAejqB,EAAwBvR,EAAyB,CAK9D,GAJK,mBAAcuR,EAAOvR,CAAM,EAI5B,CAFyB,KAAK,gBAAgBuR,EAAOvR,CAAM,EAG7D,MAAM,IAAI0tC,GACRn8B,EAAM,MAAM,QACZ,6BAA6BvR,EAAO,MAAM,OAAO,IAGvD,CAkFQ,cAAcuR,EAAwBvR,EAAyB,CAC/D,MAAA4uC,EAAYr9B,EAAM,MAAM,KACxBs9B,EAAa7uC,EAAO,MAAM,KAC1B+tC,EAAex8B,EAAM,MAAM,QAC3Bq8B,EAAgB5tC,EAAO,MAAM,QAEnC,GAAI4uC,IAAc,OAChB,MAAM,IAAIlB,GACRK,EACA,kCAAkCH,CAAa,KAI/C,GAAAgB,IAAc,OAASC,IAAe,UACxC,MAAM,IAAInB,GACRK,EACA,+CAA+CH,CAAa,KAI5D,GAAAgB,IAAc,WAAaC,IAAe,OAC5C,MAAM,IAAInB,GACRK,EACA,oEAAoEH,CAAa,IAGvF,CAEQ,cAAcG,EAAsBH,EAAuB,CACjE,OACEkB,EAAUf,EAAcH,CAAa,GACrCkB,EAAUlB,EAAeG,CAAY,CAEzC,CAEQ,gBACNx8B,EACAvR,EACS,CACH,MAAA+uC,EAAgBx9B,EAAM,MAAM,QAC5By9B,EAAiBhvC,EAAO,MAAM,QAE9BivC,EAAqB19B,EAAM,MAAM,QAAU,CAAC,GAAG,EAG9C,OAFqBvR,EAAO,MAAM,UAAY,CAAC,GAAG,GAE9B,KAA2BkvC,GAC7CD,EAAmB,KAA0BE,GAC9CD,IAAuB,KAAOC,IAAsB,IAC/C,GAGLD,IAAuB,IAClB,KAAK,cAAcC,EAAmBH,CAAc,EAGzDG,IAAsB,IACjB,KAAK,cAAcJ,EAAeG,CAAkB,EAI3D,KAAK,cAAcH,EAAeG,CAAkB,GACpD,KAAK,cAAcC,EAAmBH,CAAc,CAEvD,CACF,CACH,CACF,CCtPO,MAAMI,EAAc,CAIzB,YAAYt4C,EAA8B,CAHzB,oBAAiB,IAIhC,KAAK,MAAQA,EAAQ,IACvB,CAEA,WAAY,CACV,OAAO,KAAK,UACd,CAEA,SAAU,CACR,KAAK,WAAW,OAClB,CAEA,MAAM,aAAasI,EAAgB,CACjC,MAAMI,EAAO,MAAM,KAAK,MAAM,IAAIJ,CAAM,EAC3BrP,EAAAyP,EAAM,QAAQJ,CAAM,4BAA4B,EAExD,gBAAW,IAAIA,EAAQI,CAAI,CAClC,CAEA,MAAM,YAAYJ,EAAgB,CAChC,MAAMI,EAAO,KAAK,WAAW,IAAIJ,CAAM,EACvCrP,EAAayP,CAAI,EAED,MAAM,KAAK,MAAM,IAAIJ,CAAM,IAAO,MAKlD,MAAM,KAAK,MAAM,IAAII,EAAMJ,CAAM,CACnC,CACF,CCrCO,SAASiwC,GAAOl6C,EAAyB,CAC9C,OAAIA,aAAiBo7B,GACZ,CACL,CAACF,EAAsB,EAAG,GAC1B,MAAOl7B,EAAM,SAAS,GAGtBA,aAAiBq7B,GACZ,CACL,CAACJ,EAAoB,EAAG,GACxB,MAAOj7B,EAAM,MAAM,QAAQ,GAG3B,MAAM,QAAQA,CAAK,EACdA,EAAM,IAAIk6C,EAAM,EAErB/d,GAAan8B,CAAK,EACb,OAAO,YACZ,OAAO,QAAQA,CAAK,EAAE,IAAI,CAAC,CAACJ,EAAKI,CAAK,IAC7B,CAACJ,EAAKs6C,GAAOl6C,CAAK,CAAC,CAC3B,GAGEA,CACT,CAEO,SAASm6C,GAASn6C,EAAyB,CAC5C,aAAM,QAAQA,CAAK,EACdA,EAAM,IAAIm6C,EAAQ,EAEvBn6C,aAAiB,OACf,QAAQ,IAAIA,EAAOk7B,EAAsB,EACpC,IAAIE,GAAM,QAAQ,IAAIp7B,EAAO,OAAO,CAAC,EAE1C,QAAQ,IAAIA,EAAOi7B,EAAoB,EAClC,IAAII,GAAK,QAAQ,IAAIr7B,EAAO,OAAO,CAAC,EAEtC,OAAO,YACZ,OAAO,QAAQA,CAAK,EAAE,IAAI,CAAC,CAACJ,EAAKI,CAAK,IAC7B,CAACJ,EAAKu6C,GAASn6C,CAAK,CAAC,CAC7B,GAIEA,CACT,CCrBO,MAAMo6C,EAAoD,CAA1D,cACL,KAAU,UAAgChL,EAAA,CAEhC,mBAAmBiL,EAAoC,CAC/D,OAAO,OAAO,YACZ,OAAO,QAAQA,CAAS,EAAE,IAAI,CAAC,CAACz6C,EAAKI,CAAK,IACjC,CAACJ,EAAKu6C,GAASn6C,CAAK,CAAC,CAC7B,EAEL,CAEU,iBAAiBk4C,EAAmB,CAC5C,OAAO,OAAO,YACZA,EAAM,KAAK,IAAWt4C,GAAA,CACd,MAAAI,EAAQk4C,EAAMt4C,CAAyB,EAC7C,MAAO,CAACA,EAAKs6C,GAAOl6C,CAAK,CAAC,EAC3B,EAEL,CAEA,MAAM,aAAa,CACjB,KAAAyd,CAAA,EACsD,CACtD,KAAM,CAAE,QAAAgc,EAAS,GAAAp4B,EAAI,QAAAijC,EAAS,MAAOgW,CAAW,EAAA78B,EAE1C8xB,EAAQ,KAAK,mBAAmB+K,CAAM,EAErC,OACL,GAAAj5C,EACA,QAAAo4B,EACA,QAAS6K,GAAW,GACpB,MAAAiL,CAAA,CAEJ,CAEA,MAAM,WAAW,CACf,MAAA2I,CAAA,EACuD,CACvD,KAAM,CAAE,GAAA72C,EAAI,QAAAo4B,EAAS,QAAA6K,CAAA,EAAY4T,EAE3B3I,EAAQ,KAAK,iBAAiB2I,CAAK,EAElC,OACL,GAAA72C,EACA,QAAAo4B,EACA,QAAA6K,EACA,MAAAiL,CAAA,CAEJ,CACF,CCjEO,MAAMgL,EAAM,CAejB,YAA4B10C,EAAiB,CAAjB,UAAAA,CAAkB,CAd9C,OAAO,WAAW0zB,EAAYihB,EAAsB,CAC5C,MAAAlnC,EAAOimB,EAAK,UAAU,KACtB,CAAE,YAAAkhB,EAAa,iBAAAC,CAAqB,EAAApnC,EAC1C,OAAA1Y,EAAa6/C,CAAW,EACxB7/C,EAAa8/C,CAAgB,EACtB,IAAIH,GAAM,CACf,QAASC,EACT,YAAajhB,EAAK,UAAU,GAC5B,OAAQA,EAAK,GACb,YAAAkhB,EACA,iBAAAC,CAAA,CACD,CACH,CAIA,IAAI,SAAU,CACZ,OAAO,KAAK,KAAK,OACnB,CAEA,IAAI,aAAc,CAChB,OAAO,KAAK,KAAK,WACnB,CAEA,IAAI,kBAAmB,CACrB,OAAO,KAAK,KAAK,gBACnB,CAEA,IAAI,aAAc,CAChB,OAAO,KAAK,KAAK,WACnB,CAEA,IAAI,QAAS,CACX,OAAO,KAAK,KAAK,MACnB,CACF,CCpCa,MAAAC,GAAgD7L,EAAE,OAAO,CACpE,KAAMA,EAAE,QAAQ,OAAO,EACvB,GAAIA,EAAE,OAAO,EACb,QAASA,EAAE,OAAO,EAClB,QAASA,EAAE,OAAO,EAAE,SAAS,EAC7B,MAAOA,EAAE,OAAOA,EAAE,SAAS,EAC3B,SAAUA,EAAE,KAAK,IAAM6L,GAAoB,OAAO,CACpD,CAAC,EAWYC,GAAgD9L,EAAE,OAAO,CACpE,KAAMA,EAAE,QAAQ,OAAO,EACvB,QAAS6L,GAAoB,MAAM,EACnC,YAAa7L,EAAE,OAAO,EACtB,iBAAkBA,EAAE,OAAO,EAC3B,YAAaA,EAAE,OAAO,EACtB,OAAQA,EAAE,OAAO,CACnB,CAAC,EAUY+L,GACX/L,EAAE,OAAO,CACP,GAAIA,EAAE,OAAO,EACb,KAAMA,EAAE,QAAQ,MAAM,EACtB,YAAaA,EAAE,OAAO,EACtB,iBAAkBA,EAAE,OAAO,EAC3B,WAAYA,EAAE,OAAOA,EAAE,KAAK,CAC9B,CAAC,EAQGgM,GAAiBhM,EAAE,OAAO,CAC9B,GAAIA,EAAE,OAAO,EACb,MAAOA,EAAE,OAAO,EAChB,WAAYA,EAAE,OAAO,EACrB,KAAMA,EAAE,MAAMA,EAAE,QAAQ,CAC1B,CAAC,EAEYiM,GAA8CjM,EAAE,OAAO,CAClE,KAAMA,EAAE,QAAQ,MAAM,EACtB,KAAMgM,GACN,OAAQH,EACV,CAAC,ECvCM,MAAMK,EAAI,CAYf,YAAY,CAAE,UAAAC,EAAW,YAAAC,EAAc,IAAiB,CATvC,yBAA2C,IAE5D,KAAiB,OAAmB,CAClC,aAAc,IAAI9+C,EAClB,YAAa,IAAIA,EACjB,aAAc,IAAIA,EAClB,YAAa,IAAIA,CAAmB,EAkHtC,qBAAkB,MAAO87C,GAA8C,CACrE,MAAMz4B,EAAW,MAAM,KAAK,iBAAiBy4B,CAAK,EAClD,OAAAyC,GAAoB,MAAMl7B,CAAQ,EAE3BA,CAAA,EAsDT,yBAAsB,MAAOA,GAA4B,CACvD,KAAM,CAAE,SAAAqwB,EAAU,QAAArW,EAAS,MAAA8V,EAAO,GAAAluC,GAAOoe,EAEnC4mB,EAAS,KAAK,WAAW5M,CAAO,EAChC0hB,EAAe,CACnB,GAAA95C,EACA,QAAAo4B,EACA,MAAA8V,CAAA,EASK,OANW,MADE,KAAK,gBAAgBlJ,CAAM,EACX,aAAa,CAC/C,KAAM8U,EACN,OAAQ,KAAK,eACb,SAAArL,CAAA,CACD,CAEM,EAGT,qBAAkB,MAChBrwB,EACA8Z,EACA1uB,EACA5N,KAEA09C,GAAoB,MAAMl7B,CAAQ,EACpB,MAAM,KAAK,iBAAiBA,EAAU8Z,EAAM1uB,EAAQ5N,CAAK,GAKzE,oBAAiB,MAAOs8B,GAAsC,CACvD,YAAO,aAAa,KAAK,CAC5B,KAAM,OACN,KAAAA,CAAA,CACD,EACD,MAAMpF,EAAOoF,EAAK,KACZjmB,EAAO,KAAK,gBAAgBimB,CAAI,EACtC3+B,EAAau5B,EAAM,8BAA8B,EACjD,MAAMmF,EAAS,MAAM,KAAK,gBAAgBnF,CAAI,EACxCinB,EAA6B,CACjC,KAAM,OACN,KAAA9nC,EACA,OAAAgmB,CAAA,EAEG,mBAAO,YAAY,KAAK,CAC3B,KAAM,OACN,KAAAC,EACA,SAAU6hB,CAAA,CACX,EACDL,GAAmB,MAAMK,CAAY,EAE9BA,CAAA,EAGT,oBAAiB,MAAO37B,GAA0C,CAC3D,YAAO,aAAa,KAAK,CAC5B,KAAM,OACN,SAAAA,CAAA,CACD,EACDs7B,GAAmB,MAAMt7B,CAAQ,EAC3B,MAAE,KAAAnM,EAAM,OAAAgmB,CAAW,EAAA7Z,EACnB8Z,EAAO,KAAK,WAAW,WAAW,CAAE,GAAIjmB,EAAK,GAAI,EACvD,aAAMimB,EAAK,OACN,qBAAgBA,EAAMjmB,CAAI,EACzB,WAAK,gBAAgBgmB,EAAQC,CAAI,EAClC,YAAO,YAAY,KAAK,CAC3B,KAAM,OACN,SAAA9Z,EACA,KAAA8Z,CAAA,CACD,EAEMA,CAAA,EAGT,6BAA0B,IAA6B,CAChD,YAAO,aAAa,KAAK,CAC5B,KAAM,OACP,EACK,MAAA8hB,EAAgB,KAAK,oBACrB57B,EAAkC,CACtC,KAAM,OACN,GAAI,KAAK,WAAW,GACpB,GAAG47B,CAAA,EAEA,mBAAO,YAAY,KAAK,CAC3B,KAAM,OACN,SAAA57B,CAAA,CACD,EACDo7B,GAA4B,MAAMp7B,CAAQ,EAEnCA,CAAA,EAGT,6BAA2BA,GAA0C,CAC9D,YAAO,aAAa,KAAK,CAC5B,KAAM,OACN,SAAAA,CAAA,CACD,EACDo7B,GAA4B,MAAMp7B,CAAQ,EACpC,MAAE,WAAA67B,CAAe,EAAA77B,EACjB87B,EAAoB,KAAK,WAAW,KAAK,WACzCC,EAAaF,EAAW,MAAM,SAAW,GACzCG,EAAiBF,EAAkB,MAAM,SAAW,GACpD55C,MAAc,IAAI,CAAC,GAAG65C,EAAY,GAAGC,CAAc,CAAC,EACrD,gBAAW,KAAK,cAAc,CACjC,KAAM,CACJ,QAAS,MAAM,KAAK95C,CAAO,CAC7B,EACD,EACI,YAAO,YAAY,KAAK,CAC3B,KAAM,OACN,SAAA8d,CAAA,CACD,GAGH,qBAAkB,MAAOi8B,GAAyC,CAC3D,YAAO,aAAa,KAAK,CAC5B,KAAM,QACN,MAAAA,CAAA,CACD,EACD,KAAM,CAAE,QAAA/mC,EAAS,YAAA8lC,EAAa,iBAAAC,EAAkB,OAAAiB,EAAQ,YAAAC,GACtDF,EAAM,KACFG,EAAkB,GACxB,UAAWlyB,KAAShV,EAClBknC,EAAgB,KAAK,MAAM,KAAK,gBAAgBlyB,CAAK,CAAC,EAExD,MAAMlK,EAA0B,CAC9B,KAAM,QACN,YAAAm8B,EACA,OAAAD,EACA,YAAAlB,EACA,iBAAAC,EACA,QAASmB,CAAA,EAEN,mBAAO,YAAY,KAAK,CAC3B,KAAM,QACN,MAAAH,EACA,SAAAj8B,CAAA,CACD,EACDm7B,GAAoB,MAAMn7B,CAAQ,EAE3BA,CAAA,EAGT,qBAAkB,MAChBA,EACA8Z,EACA1uB,EACA5N,IACmB,CACd,YAAO,aAAa,KAAK,CAC5B,KAAM,QACN,SAAAwiB,CAAA,CACD,EACDm7B,GAAoB,MAAMn7B,CAAQ,EAClC,KAAM,CAAE,QAAA9K,EAAS,YAAA8lC,EAAa,iBAAAC,EAAkB,YAAAkB,EAAa,OAAAD,CAC3D,EAAAl8B,EACIq8B,EAAgB,GACtB,SAAW,CAACxgD,EAAGquB,CAAK,IAAKhV,EAAQ,UACjBmnC,EAAA,KACZ,MAAM,KAAK,iBAAiBnyB,EAAO4P,EAAM1uB,GAAS5N,GAAS,GAAK3B,CAAC,GAG/D,MAAAogD,EAAQ,IAAInB,GAAM,CACtB,QAASuB,EACT,YAAArB,EACA,iBAAAC,EACA,YAAAkB,EACA,OAAAD,CAAA,CACD,EACI,mBAAO,YAAY,KAAK,CAC3B,KAAM,QACN,SAAAl8B,EACA,MAAAi8B,CAAA,CACD,EAEMA,CAAA,EAzVP,KAAK,WAAaT,EAClB,KAAK,eAAiB,IAAIhB,GAAc,CAAE,KAAMgB,EAAU,KAAM,EAEhEC,EAAY,QAAsBa,GAAA,CACrBA,EAAA,CACT,MAAO,KAAK,OACZ,cAAe,KAAK,eACpB,UAAW,KAAK,WAChB,eAAgB,KAAK,gBACtB,EACF,CACH,CAEA,IAAI,eAAgB,CAClB,OAAO,KAAK,cACd,CAEA,IAAI,QAAS,CACJ,YAAK,eAAe,WAC7B,CAEA,IAAI,gBAAiB,CACnB,OAAO,KAAK,eACd,CAEA,OAAQ,CACN,KAAK,eAAe,SACtB,CAEQ,WAAWtiB,EAAiB,CAClC,MAAM4M,EAAS,KAAK,WAAW,OAAO,iBAAiB,IAAI5M,CAAO,EACrD,OAAA7+B,EAAAyrC,EAAQ,gCAAgC5M,CAAO,EAAE,EACvD4M,CACT,CAEQ,gBAAgBA,EAAyB,CAC/C,OAAOA,EAAO,iBAAmB,IAAI+T,EACvC,CAEQ,mBAAoB,CACpB,MAAE,KAAA9mC,CAAK,EAAI,KAAK,WAChB,CAAE,YAAAmnC,EAAa,iBAAAC,EAAkB,WAAAY,EAAY,MAAAU,GAAU1oC,EAC7D,OAAA1Y,EAAa6/C,CAAW,EACxB7/C,EAAa8/C,CAAgB,EAC7B9/C,EAAa0gD,CAAU,EACvB1gD,EAAaohD,CAAK,EACX,CACL,YAAAvB,EACA,iBAAAC,EACA,WAAY,KAAK,MAAM,KAAK,UAAUY,CAAU,CAAC,EACjD,MAAO,KAAK,MAAM,KAAK,UAAUU,CAAK,CAAC,EAE3C,CAEQ,gBAAgBziB,EAAkC,CACxD,MAAM0iB,EAAW1iB,EAAK,KAEtB,OAAA3+B,EAAaqhD,CAAQ,EACd,CACL,GAAIA,EAAS,GACb,MAAOA,EAAS,MAChB,WAAYA,EAAS,WACrB,KAAM,CAAC,GAAGA,EAAS,IAAI,EAE3B,CAEQ,gBAAgB1iB,EAAYjmB,EAA4B,CAC9D,MAAM2oC,EAAW1iB,EAAK,KAEhB2iB,EAAgB,KAAK,WAAW,KAAK,WAAW,MAAM,QAC5DthD,EAAashD,CAAa,EACrB5oC,EAAA,KAAK,QAAe6oC,GAAA,CAEvB,GAAI,CADWD,EAAc,KAAU9nC,KAAE,KAAO+nC,CAAG,EAEjD,MAAM,IAAI,MAAM,OAAOA,CAAG,8BAA8B,EAEjDF,EAAA,KAAK,KAAKE,CAAG,EACvB,CACH,CAEA,MAAc,iBAAiBjE,EAA2C,CACnE,YAAO,aAAa,KAAK,CAC5B,KAAM,QACN,MAAAA,CAAA,CACD,EACD,MAAM7R,EAAS,KAAK,WAAW6R,EAAM,OAAO,EAEtCiD,EAAe,MADD,KAAK,gBAAgB9U,CAAM,EACR,WAAW,CAChD,MAAA6R,EACA,OAAQ,KAAK,eACd,EACKpI,EAAW,MAAM,QAAQ,IAC7BoI,EAAM,SAAS,IAAa97B,GACnB,KAAK,iBAAiBA,CAAK,CACnC,GAEGqD,EAA0B,CAC9B,KAAM,QACN,GAAG07B,EACH,SAAArL,CAAA,EAEG,mBAAO,YAAY,KAAK,CAC3B,KAAM,QACN,MAAAoI,EACA,SAAAz4B,CAAA,CACD,EAEMA,CACT,CASA,MAAc,iBACZA,EACA8Z,EACA1uB,EACA5N,EACA,CACK,YAAO,aAAa,KAAK,CAC5B,KAAM,QACN,SAAAwiB,EACA,OAAA5U,EACA,MAAA5N,CAAA,CACD,EACD,KAAM,CAAE,SAAA6yC,EAAU,QAAArW,EAAS,MAAA8V,EAAO,GAAAluC,GAAOoe,EAEnC4mB,EAAS,KAAK,WAAW5M,CAAO,EAChC0hB,EAAe,CACnB,GAAA95C,EACA,QAAAo4B,EACA,MAAA8V,CAAA,EAGI6M,EAAY,MADE,KAAK,gBAAgB/V,CAAM,EACX,aAAa,CAC/C,KAAM8U,EACN,OAAQ,KAAK,eACb,SAAArL,CAAA,CACD,EAEIvW,EAAA,SACH6iB,EAAU,QACV,CAAE,GAAGA,EAAU,MAAO,GAAIA,EAAU,EAAG,EACvCvxC,EACA5N,CAAA,EAGF,SAAW,CAACA,EAAOmf,CAAK,IAAK0zB,EAAS,UACpC,MAAM,KAAK,iBAAiB1zB,EAAOmd,EAAMl4B,EAAIpE,CAAK,EAG9C,MAAAi7C,EAAQ3e,EAAK,aAAal4B,CAAE,EAClC,OAAAzG,EAAas9C,CAAK,EACb,YAAO,YAAY,KAAK,CAC3B,KAAM,QACN,SAAAz4B,EACA,MAAAy4B,EACA,OAAArtC,EACA,MAAA5N,CAAA,CACD,EAEMi7C,CACT,CAqLF,CCxXU,IAACmE,GAAS,CAAC/7B,EAAO,KAC1B,OAAO,gBAAgB,IAAI,WAAWA,CAAI,CAAC,EAAE,OAAO,CAACjf,EAAIi7C,KACvDA,GAAQ,GACJA,EAAO,GACTj7C,GAAMi7C,EAAK,SAAS,EAAE,EACbA,EAAO,GAChBj7C,IAAOi7C,EAAO,IAAI,SAAS,EAAE,EAAE,YAAa,EACnCA,EAAO,GAChBj7C,GAAM,IAENA,GAAM,IAEDA,GACN,EAAE,EC3BA,SAASk7C,IAA8C,CAC5D,IAAIjhD,EAAI,EACD,WAAOA,KAAK,UACrB,CAEO,SAASkhD,GACdC,EACa,CACb,IAAInhD,EAAI,EACR,MAAO,IAAM,GAAGmhD,CAAQ,IAAInhD,GAAG,EACjC,CAEO,MAAM0Q,GAAsB,IAC1B0wC,GAAkB,EAGdL,GAAsB,IAC1BM,GAAgB,EAAE,ECTX,SAAAC,GACdC,EACAtN,EACA,CACK,MAAM,QAAQA,EAAM,QAAQ,GAE3BA,EAAA,SAAS,QAAiBnzB,GAAA,CAC9B,GAAI,CAACygC,EAAQ,IAAIzgC,EAAM,EAAE,EACvB,MAAM,IAAI,MAAM,qBAAuBA,EAAM,EAAE,CACjD,CACD,CACH,CAEO,SAAS0gC,GACdzW,EACA6R,EACAP,EACApI,EACA,CACA,MAAMyI,EAAe3R,EAAO,MAAM,QAAQ+I,EAAkB,GAAK,GAE1D,eAAQG,CAAK,EAAE,QAAQ,CAAC,CAAC3vC,EAAKI,CAAK,IAAM,CAC1Cm7B,GAAS,IAAIv7B,CAAG,GAChBI,IAAU,SAGdk4C,EAAMt4C,CAAG,EAAII,EAAA,CACd,EAGM,eAAQg4C,CAAY,EAAE,QAAQ,CAAC,CAACp4C,EAAKI,CAAK,IAAM,EAEnD,CAAC23C,EAAO,IAAI,QAAQ/3C,CAAG,EAAE,GAAK+3C,EAAO,IAAI,QAAQ/3C,CAAG,EAAE,IAAM,UAMxDs4C,EAAAt4C,CAAG,EAAIw8B,GAASp8B,CAAK,GAC5B,CACH,CAEO,SAAS+8C,GAA6B9B,EAA8B,CACzE,OAAOzxC,GAASwzC,GAAwB/B,EAAU,GAAG,CAAC,CACxD,8KC1CO,MAAMgC,EAAU,CAarB,YAAY,CAAE,OAAA5W,EAAQ,QAAAwW,GAA6B,CAVhC,iBAAkC,IAWnD,KAAK,SAAWA,EAChB,KAAK,QAAUxW,CACjB,CAXA,SAAShlC,EAAY,CACZ,YAAK,QAAQ,IAAIA,CAAE,CAC5B,CAEA,IAAI,QAAS,CACX,OAAO,KAAK,OACd,CAOA,aAAaA,EAAYk4B,EAAY53B,EAAwB,GAAI,CAC/D,GAAI,KAAK,QAAQ,IAAIN,CAAE,EACrB,OAEF,MAAMs2C,EAAS,KAAK,SAAS,IAAIt2C,CAAE,EACnC,GAAI,CAACs2C,EAAQ,CACH,aAAK,gCAAgCt2C,CAAE,EAAE,EACjD,MACF,CAEA,MAAMsoB,EAAQ,IAAI+tB,GAAM,KAAK,QAASC,EAAQh2C,CAAO,EAChD,aAAQ,IAAIN,EAAIsoB,CAAK,EAC1BA,EAAM,MAAM,KAAO4P,EACb5P,EAAA,MAAM,QAAQ,MACtB,CAEA,eAAetoB,EAAY,CACzB,GAAI,CAAC,KAAK,QAAQ,IAAIA,CAAE,EACtB,OAGF,MAAMsoB,EAAQ,KAAK,QAAQ,IAAItoB,CAAE,EACjCsoB,EAAM,MAAM,UACP,aAAQ,OAAOtoB,CAAE,EAChBsoB,EAAA,MAAM,QAAQ,MACtB,CAEA,SAAStoB,EAAYo4B,EAAiByjB,EAAuC,CAC3E,MAAM7W,EAAS,KAAK,QAAQ,iBAAiB,IAAI5M,CAAO,EAC3C7+B,EAAAyrC,EAAQ,qCAAqC5M,CAAO,EAAE,EAE7D,MAAAke,EAAS,IAAI/d,EACd,cAAS,IAAIv4B,EAAIs2C,CAAM,EAE5B,MAAMrT,EAAU+B,EAAO,QAChBsR,EAAA,IAAI,SAAUt2C,CAAE,EAChBs2C,EAAA,IAAI,cAAele,CAAO,EAC1Bke,EAAA,IAAI,cAAerT,CAAO,EAGjC,MAAMiL,EAAQ,CACZ,GAFmBlJ,EAAO,MAAM,QAAQ+I,EAAkB,GAAK,GAG/D,GAAG8N,CAAA,EAGCtF,EAAY/d,EAAQ,MACvB0V,EAAM,UAAY,CAAC,GAAG,IAAKnzB,GAAsBA,EAAM,EAAE,GAErD,OAAAu7B,EAAA,IAAI,eAAgBC,CAAS,EAEpC,OAAOrI,EAAM,SACb,OAAOA,EAAM,GACb,OAAOA,EAAM,QAEN,eAAQA,CAAK,EAAE,QAAQ,CAAC,CAAC3vC,EAAKI,CAAK,IAAM,CAC1CA,IAAU,QAEd23C,EAAO,IAAI,QAAQ/3C,CAAG,GAAIw8B,GAASp8B,CAAK,CAAC,EAC1C,EAEM23C,CACT,CAEA,YAAYt2C,EAAY,CACjB,cAAS,OAAOA,CAAE,CACzB,CACF,CCxFO,MAAM87C,EAGX,CAgBA,YACE97C,EACA04B,EACAqjB,EACA,CAbM,iBAAc,IAAIhhD,EAoE1B,KAAQ,YAAc,IAAM,CAC1B,IAAIihD,EAAS,KAAK,QAAQ,OAAO,IAAI,KAAK,EAAE,EAC5C,OAAKA,GAQH,KAAK,QAAU,GACf,KAAK,QAAQ,GAAG,UAAW,KAAK,cAAc,IARrCA,EAAA,IAAIC,GAAM,CACjB,KAAM,KAAK,GACZ,EACD,KAAK,QAAQ,OAAO,IAAI,KAAK,GAAID,CAAM,EACvC,KAAK,QAAU,GACf,KAAK,YAAY,QAMZA,CAAA,EAGT,KAAQ,eAAiB,CAAC,CAAE,OAAAE,KAA2C,CACtD,MAAM,KAAKA,CAAM,EAAE,KACzBvpC,KAAI,OAAS,KAAK,WAAW,QAKtC,KAAK,QAAQ,IAAI,UAAW,KAAK,cAAc,EAC/C,KAAK,QAAU,GACf,KAAK,YAAY,OAAK,EAhFtB,KAAK,GAAK3S,EACV,KAAK,QAAU04B,EACf,KAAK,eAAiBqjB,EAEjB,gBAAa,KAAK,cAEvB,KAAK,SAAW,KAAK,WAAW,OAAO,QAAQ,CACjD,CAEA,IAAI,SAAU,CACZ,OAAO,KAAK,QACd,CAEA,IAAI,QAAS,CACX,OAAO,KAAK,OACd,CAEA,IAAI,UAAW,CACb,OAAO,KAAK,UACd,CAEA,MAAM,MAAO,CACX,GAAI,KAAK,OACA,YAGH,MAAAI,EAAU,IAAI,QAAmB7pC,GAAA,CAChC,iBAAY,KAAK,IAAM,CAC1BA,EAAQ,MAAS,EAClB,EACF,EAED,YAAK,WAAW,OAEV,MAAA6pC,EAEC,IACT,CAEA,QAAS,CACP,KAAK,QAAQ,EACb,KAAK,QAAQ,OAAO,OAAO,KAAK,EAAE,CACpC,CAEA,SAAU,CACR,KAAK,WAAW,UAChB,KAAK,YAAY,UACjB,KAAK,QAAU,EACjB,CAEA,OAAQ,CACN,KAAK,SAAS,OAChB,CAkCA,SAASvyC,EAAgBwyC,EAAiB,GAAM,CAC9C,KAAK,WAAW,SAASxyC,EAAIwyC,EAAiB,KAAK,QAAQ,SAAW,IAAI,CAC5E,CACF,CCvFO,MAAMC,WAAaP,EAAoB,CAiD5C,YAAY,CACV,GAAA97C,EACA,UAAA45C,EACA,IAAAjnC,EACA,eAAAopC,EACA,YAAAO,EAAc3xC,EAAA,EACA,CACR,MAAA3K,EAAI2S,EAAKopC,CAAc,EAnD/B,KAAQ,MAA2B,KAEnC,KAAQ,WAAa,GAErB,KAAQ,OAAS,GACjB,KAAQ,gBAAkB,GAE1B,KAAS,MAAQ,CAMf,MAAO,IAAIhhD,EACX,eAAgB,IAAIA,EAMpB,UAAW,IAAIA,EACf,YAAa,IAAIA,EACjB,aAAc,IAAIA,CAmBhB,EAkmBJ,KAAQ,iBAAmB,IAAM,CAC1B,WAAM,eAAe,MAAK,EAwFzB,oBAAkB0mB,GAAwC,CAChE,UAAWjG,KAASiG,EAClB,KAAK,cAAcjG,CAAK,CAC1B,EAnrBA,KAAK,WAAao+B,EAClB,KAAK,aAAe0C,EACf,gBAAa,IAAIV,GAAU,CAC9B,OAAQhC,EAAU,OAClB,QAAS,KAAK,QACf,CACH,CAEA,IAAI,UAAW,CACN,YAAK,eAAe,WAAW,IAAI,CAC5C,CAEA,IAAI,OAAQ,CACV,OAAO,KAAK,MACd,CAEA,IAAI,SAAU,CACZ,OAAO,KAAK,QACd,CAEA,IAAI,WAAY,CACd,OAAO,KAAK,UACd,CAEA,IAAI,QAAS,CACX,OAAO,KAAK,UAAU,MACxB,CAEA,IAAI,MAAO,CACT,OAAO,KAAK,UAAU,KAAK,YAAY,KAAK,EAAE,CAChD,CAEA,IAAI,MAAO,CACT,OAAO,KAAK,UAAU,IACxB,CAEA,IAAI,MAAO,CACT,OAAO,KAAK,KACd,CAEA,IAAI,SAAU,CACL,YAAK,SAAS,OAAS,CAChC,CAEA,IAAI,SAAU,CACZ,OAAI,KAAK,SACA,GAEF,KAAK,SAAS,SACvB,CAEA,IAAI,SAAU,CACZ,OAAI,KAAK,SACA,GAEF,KAAK,SAAS,SACvB,CAEA,IAAI,MAAO,CACF,OAAA5f,EACT,CAEA,gBAAgB/+B,EAAsB,CACpC,KAAK,gBAAkB,GACdA,IACT,KAAK,gBAAkB,EACzB,CAES,SACP2O,EACAwyC,EAA0B,KAAK,gBAC/B,CACM,eAASxyC,EAAIwyC,CAAc,CACnC,CAEA,MAAO,CACL,GAAI,KAAK,SAAU,CACjB,QAAQ,MAAM,qCAAqC,EACnD,MACF,CACA,KAAK,SAAS,MAChB,CAEA,MAAO,CACL,GAAI,KAAK,SAAU,CACjB,QAAQ,MAAM,qCAAqC,EACnD,MACF,CACA,KAAK,SAAS,MAChB,CAGA,aAAc,CACZ,KAAK,SAAS,eAChB,CAEA,cAAe,CACb,KAAK,SAAS,OAChB,CAEA,iBAAkB,CAChB,OAAO,KAAK,cACd,CAEA,aACEp8C,EACc,CACd,OAAQ,KAAK,WAAW,SAASA,CAAE,GAAG,OAAmB,IAC3D,CAEA,kBAAkBu8C,EAAiC,CACjD,MAAMC,EACJ,OAAOD,GAAiB,SAAW,CAACA,CAAY,EAAIA,EAE/C,aAAM,KAAK,KAAK,WAAW,OAAO,OAAO,CAAC,EAC9C,OAAO,CAAC,CAAE,QAAAnkB,CAAQ,IAAMokB,EAAS,SAASpkB,CAAO,CAAC,EAClD,IAASt+B,KAAE,KAAK,CACrB,CAEA,UAAUQ,EAAgD,CACxD,MAAMw4B,EAAO,KAAK,MACZ2pB,EAAW,OAAOniD,GAAW,SAAWA,EAASA,EAAO,GAC1D,IAACw4B,GAAQA,EAAK,KAAO2pB,EAAiB,YAEpC,MAAAC,EAAcC,GAAwC,CACpD,MAAAC,EAAc,KAAK,aAAaD,CAAQ,EAC9C,GAAI,CAACC,EAAoB,YAEzB,SAAW,CAACC,CAAO,IAAKD,EAAY,SAAU,CAC5C,GAAIC,IAAYJ,EAAiB,OAAAG,EAE3BpzC,QAASkzC,EAAWG,CAAO,EACjC,GAAIrzC,IAAW,KAAaA,QAC9B,CAEO,aAGHA,EAASkzC,EAAW5pB,EAAK,EAAE,EACjC,OAAItpB,IAAW,KAAaA,EAErB,IACT,CAEA,mBAAmB8e,EAAmB,CAC9B,MAAA9e,EAAS,KAAK,UAAU8e,CAAK,EACnC,GAAI,CAAC9e,EACI,YAET,MAAM5N,EAAQ4N,EAAO,SAAS,QAAQ8e,CAAK,EAC3C,GAAI1sB,IAAU,GACZ,MAAM,IAAI,MACR,uEAGJ,OAAO4N,EAAO,SAAS5N,EAAQ,CAAC,GAAK,IACvC,CAEA,oBAAoB0sB,EAAmB,CAC/B,MAAA9e,EAAS,KAAK,UAAU8e,CAAK,EACnC,GAAI,CAAC9e,EACH,MAAO,GAET,MAAM5N,EAAQ4N,EAAO,SAAS,QAAQ8e,CAAK,EAC3C,GAAI1sB,IAAU,GACZ,MAAM,IAAI,MACR,uEAGJ,OAAO4N,EAAO,SAAS,MAAM,EAAG5N,CAAK,CACvC,CAEA,eAAe0sB,EAAmB,CAC1B,MAAA9e,EAAS,KAAK,UAAU8e,CAAK,EACnC,GAAI,CAAC9e,EACI,YAET,MAAM5N,EAAQ4N,EAAO,SAAS,QAAQ8e,CAAK,EAC3C,GAAI1sB,IAAU,GACZ,MAAM,IAAI,MACR,uEAGJ,OAAO4N,EAAO,SAAS5N,EAAQ,CAAC,GAAK,IACvC,CAEA,gBAAgB0sB,EAAmB,CAC3B,MAAA9e,EAAS,KAAK,UAAU8e,CAAK,EACnC,GAAI,CAAC9e,EACH,MAAO,GAET,MAAM5N,EAAQ4N,EAAO,SAAS,QAAQ8e,CAAK,EAC3C,GAAI1sB,IAAU,GACZ,MAAM,IAAI,MACR,mEAGJ,OAAO4N,EAAO,SAAS,MAAM5N,EAAQ,CAAC,CACxC,CAEA,mBAAmBw8B,EAAiB,CAClC,OAAO,KAAK,OAAO,iBAAiB,IAAIA,CAAO,CACjD,CAEA,yBAAyBA,EAAiB,CACxC,MAAM4M,EAAS,KAAK,OAAO,iBAAiB,IAAI5M,CAAO,EACvD,OAAA7+B,EAAayrC,CAAM,EACZA,EAAO,MAAM,QAAQ+I,EAAkB,GAAK,EACrD,CAEA,WAAY,CACV,MAAM9V,EAAuB,GAG7B,OAFkB,KAAK,WAAW,OAExB,QAAQ,CAAC,CAAE,MAAA4e,KAAY,CAC/B5e,EAAO,KAAK4e,CAAK,EAClB,EAEM5e,CACT,CAEA,UACEA,EAIAzuB,EACAszC,EACU,CACV,MAAMxhC,EAAgB,GACtB,OAAA2c,EAAO,QAAiB3P,GAAA,CACtB,MAAMtoB,EAAK,KAAK,SACdsoB,EAAM,QACNA,EAAM,YAAc,CAAC,EACrB9e,EACAszC,CAAA,EAEFxhC,EAAI,KAAKtb,CAAE,EACX,OAAO88C,GAAgB,UAAYA,GAAA,CACpC,EAEMxhC,CACT,CAEA,SACE8c,EACA2kB,EAAgE,GAChEvzC,EACAszC,EACQ,CACR,GAAI,KAAK,SACD,UAAI,MAAM,qCAAqC,EAEvD,GAAI,CAAC1kB,EACG,UAAI,MAAM,kCAAkC,EAEpD,MAAMwkB,EACJ,OAAOpzC,GAAW,SAAW,KAAK,aAAaA,CAAM,EAAIA,EAE3D,KAAK,OAAO,SACV4uB,EACAwkB,GAAa,QACbG,EAAW,UAAU,IAAIhiC,GAASA,EAAM,OAAO,GAGjD,MAAM/a,EAAK+8C,EAAW,IAAM,KAAK,aAAa,EACxCC,EAAmD,CACvD,GAAAh9C,EACA,QAAAo4B,EACA,GAAG2kB,CAAA,EAGL,YAAK,SAAS,IAAM,CAClB,KAAK,WAAW,SAAS/8C,EAAIo4B,EAAS,CAAE,GAAG2kB,EAAY,EAGnCxB,GAAA,KAAK,SAAUyB,CAAW,EACxC,MAAAhY,EAAS,KAAK,mBAAmB5M,CAAO,EAC9C7+B,EAAayrC,CAAM,EAEb,MAAA2X,EACJC,GAAa,KACZ5X,EAAO,MAAM,OAAS,OAAS,OAAY,KAAK,OAAO,IAE1D,GAAI2X,EAAU,CAEN,MAAApG,EADU,KAAK,SAAS,IAAIoG,CAAQ,EAChB,IAAI,cAAc,EACtC/gD,EAAQkhD,GAAevG,EAAU,OACvCA,EAAU,OAAO36C,EAAO,CAACoE,CAAE,CAAC,CAC9B,EACD,EAEMA,CACT,CAEA,WACEi9C,EACAC,EACAC,EAAmC,KACnCC,EAA4B,GAC5B,CACA,GAAI,KAAK,SAAU,CACjB,QAAQ,MAAM,sCAAsC,EACpD,MACF,CAEA,GAAI,CAACF,EACG,UAAI,MAAM,6BAA6B,EAIzC,MAAAG,MAA2B,IACjCJ,EAAa,QAAiB30B,GAAA,CACtB,MAAAg1B,EAAc,KAAK,UAAUh1B,CAAK,EACxC,GAAI,CAACg1B,EACG,UAAI,MAAM,+CAA+C,EAGjE,KAAK,OAAO,SAASh1B,EAAM,QAAS40B,EAAU,OAAO,EAE/C,MAAAK,EACJF,EAAqB,IAAIC,CAAW,EACtC,GAAIC,EAA+B,CACjC,GACE,KAAK,eACHA,EACEA,EAA8B,OAAS,CACzC,KACIj1B,EAEN,MAAM,IAAI,MACR,4DAGJi1B,EAA8B,KAAKj1B,CAAK,OAExC+0B,EAAqB,IAAIC,EAAa,CAACh1B,CAAK,CAAC,CAC/C,CACD,EAED,KAAK,SAAS,IAAM,CAClB,IAAIk1B,EAAc,EACdzqB,EAAQ,GACZ,SAAW,CAACuqB,EAAaL,CAAY,IAAKI,EAAsB,CAE9D,MAAMI,EADoB,KAAK,SAAS,IAAIP,EAAU,EAAE,EACT,IAC7C,gBAGIQ,EADoB,KAAK,SAAS,IAAIJ,EAAY,EAAE,EACX,IAC7C,gBAIIK,EAAoBV,EAAa,IAAI,CAAC,CAAE,GAAAj9C,CAAA,IAASA,CAAE,EAGnD2sB,EAAa+wB,EAChB,QAAQ,EACR,UAAgB19C,OAAO29C,EAAkB,CAAC,CAAC,EAG9C,GAFqBD,EAAA,OAAO/wB,EAAYgxB,EAAkB,MAAM,EAE5D5qB,EAAO,CACT,GAAIoqB,EAAe,CACX,MAAAS,EAAcH,EACjB,UACA,UAAgBz9C,OAAOm9C,EAAc,EAAE,EAC1C,GAAIS,IAAgB,GACZ,UAAI,MAAM,0BAA0B,EAE9BJ,EAAAJ,EACVQ,EACAA,EAAc,OAElBJ,EAAcC,EAAqB,OAE7B1qB,EAAA,QAERyqB,IAGmBC,EAAA,OAAOD,EAAaG,CAAiB,CAC5D,EACD,CACH,CAIA,YACE9G,EACAgH,EACM,CACN,GAAI,KAAK,SAAU,CACjB,QAAQ,MAAM,qCAAqC,EACnD,MACF,CAEM,MAAAC,EAAa,OAAOD,GAAoB,WAE9C,GAAI,CAACC,EAAY,CACT,MAAAt0C,EAAS,KAAK,UAAUqtC,CAAK,EACnC,KAAK,OAAO,SACVA,EAAM,QACNrtC,GAAQ,QACRq0C,EAAgB,UAAU,IAAI9iC,GAASA,EAAM,OAAO,EAExD,CAEA,MAAMu7B,EAAS,KAAK,SAAS,IAAIO,EAAM,EAAE,EACzCt9C,EAAa+8C,CAAM,EAEnB,KAAK,SAAS,IAAM,CAClB,GAAI,CAACwH,EAAY,CAIf,GAAID,EAAgB,SAAU,CACtB,MAAAtH,EAAY,IAAI/d,EACZ+d,EAAA,OACR,EACAsH,EAAgB,SAAS,IAAI9iC,GAASA,EAAM,EAAE,GAEzCu7B,EAAA,IAAI,eAAgBC,CAAS,CACtC,CAEA,MAAMvR,EAAS,KAAK,OAAO,iBAAiB,IAAI6R,EAAM,OAAO,EAC7Dt9C,EAAayrC,CAAM,EACJyW,GAAAzW,EAAQ6R,EAAOP,EAAQuH,CAAe,EACrD,MACF,CAEgBA,GAAA,CACjB,CACH,CAEA,iBACEE,EACA7P,EACA8P,EAA4B,QAClB,CACV,GAAI,CAAC9P,EAAM,OAAQ,MAAO,GACpB,MAAA1kC,EAAS,KAAK,UAAUu0C,CAAW,EACzCxkD,EAAaiQ,CAAM,EAEb,MAAAo0C,EACJp0C,EAAO,SAAS,UAAU,CAAC,CAAE,GAAAxJ,CAAS,IAAAA,IAAO+9C,EAAY,EAAE,GAAK,EAC5DP,EAAcQ,IAAU,SAAWJ,EAAcA,EAAc,EAEjE,GAAA1P,EAAM,OAAS,EAAG,CACpB,MAAMjW,EAGD,GACL,OAAAiW,EAAM,QAAgB/R,GAAA,CACpB,KAAM,CAAE,QAAA/D,EAAS,GAAG2kB,CAAA,EAAe5gB,EACnC5iC,EAAa6+B,CAAO,EACpBH,EAAO,KAAK,CAAE,QAAAG,EAAS,WAAA2kB,CAAY,GACpC,EACM,KAAK,UAAU9kB,EAAQzuB,EAAO,GAAIg0C,CAAW,MAC/C,CACQjkD,EAAA20C,EAAM,CAAC,EAAE,OAAO,EAC7B,KAAM,CAAE,QAAA9V,EAAS,GAAG2kB,CAAW,EAAI7O,EAAM,CAAC,EAE1C,MAAO,CADI,KAAK,SAAS9V,EAAS2kB,EAAYvzC,EAAO,GAAIg0C,CAAW,CAC1D,CACZ,CACF,CAEA,YACE3G,EACAv2C,EAGI,CACF,eAAgB,IAElB,CACA,GAAI,KAAK,SAAU,CACjB,QAAQ,MAAM,qCAAqC,EACnD,MACF,CAEM,MAAE,gBAAA29C,EAAiB,eAAAC,CAAmB,EAAA59C,EAC5C,GAAI29C,GAAmBC,EAAgB,CAC7B,cACN,2EAEF,MACF,CAGM,MAAAC,EADS,KAAK,SAAS,IAAItH,EAAM,EAAE,EACX,IAAI,cAAc,EAE1CrtC,EAAS,KAAK,UAAUqtC,CAAK,EACnCt9C,EAAaiQ,CAAM,EAEb,MAAA40C,EADU,KAAK,SAAS,IAAI50C,EAAO,EAAE,EACX,IAAI,cAAc,EAC5C60C,EAAaD,EAAgB,UAAU,QAAQvH,EAAM,EAAE,EAE7D,KAAK,SAAS,IAAM,CAKlB,GAJIwH,EAAa,IACCD,EAAA,OAAOC,EAAY,CAAC,EAGlCJ,EAEIpH,EAAA,SAAS,QAAiB97B,GAAA,CAC9B,KAAK,OAAO,SAASA,EAAM,QAASkjC,EAAgB,OAAO,EAC5D,EAEGA,EAAgB,KAAOz0C,EAAO,GAEhC40C,EAAgB,OAAOC,EAAYF,EAAe,QAAS,GAElC,KAAK,SAAS,IACrCF,EAAgB,IAEgC,IAChD,gBAEuB,KAAKE,EAAe,QAAS,WAGpDD,EAAgB,CAEZ,MAAAI,EAAMt+C,GAAe,CACV,KAAK,SAAS,IAAIA,CAAE,EAEV,IAAI,cAAc,EACjC,QAAQA,GAAM,CACtBs+C,EAAGt+C,CAAE,EACN,EAEI,gBAAW,YAAYA,CAAE,GAGhCm+C,EAAe,QAAcn+C,GAAA,CAC3Bs+C,EAAGt+C,CAAE,EACN,CACH,CAGG,gBAAW,YAAY62C,EAAM,EAAE,EACrC,CACH,CAEA,wBAAyB,CACvB,GAAI,KAAK,WACD,UAAI,MAAM,8CAA8C,GAG3D,KAAK,UAAU,KAAK,OAAO,QAAU,IAAM,GAC9C,KAAK,eAAe,EAGtB,KAAK,aAAa,EAElB,KAAK,SAAS,QAAQ,CAACv9C,EAAG0G,IAAO,CAC/B,KAAK,iBAAiBA,CAAE,EACzB,EAED,KAAK,WAAa,GAEd,KAAK,SAAS,KAAO,IACvB,KAAK,OAAS,GACT,WAAM,MAAM,OAErB,CAEA,SAAU,CACH,WAAM,eAAe,UACrB,WAAM,UAAU,UAChB,WAAM,YAAY,UAClB,WAAM,aAAa,UAEpB,KAAK,aACF,cAAS,cAAc,KAAK,cAAc,EAC/C,KAAK,SAAS,QAElB,CAEQ,cAAe,CACf,MAAE,SAAAu+C,CAAa,OACZA,EAAA,YAAY,KAAK,cAAc,EACxC,KAAK,SAAW,IAAIC,GAAc,CAACD,CAAQ,EAAG,CAC5C,eAAoB,QAAI,CAAC,KAAK,WAAW,QAAQ,CAAC,EACnD,EAED,KAAK,SAAS,GAAG,gBAAiB,KAAK,gBAAgB,EACvD,KAAK,SAAS,GAAG,mBAAoB,KAAK,gBAAgB,EAC1D,KAAK,SAAS,GAAG,oBAAqB,KAAK,gBAAgB,EAC3D,KAAK,SAAS,GAAG,qBAAsB,KAAK,gBAAgB,CAC9D,CAEQ,WAAWv+C,EAA2B,CAC5C,MAAMs2C,EAAS,KAAK,SAAS,IAAIt2C,CAAE,EACnC,OAAKs2C,GAAe,IAEtB,CAMQ,iBAAiBt2C,EAAY,CAC7B,MAAAs2C,EAAS,KAAK,WAAWt2C,CAAE,EACjC,GAAI,CAACs2C,EAAQ,CACH,aACN,+CAA+Ct2C,CAAE,cAEnD,MACF,CAEK,gBAAW,aAAaA,EAAI,KAAM,CACrC,SAAU,CAACsoB,EAAO/pB,IAAQ,CACpBA,GACF+pB,EAAM,MAAM,aAAa,KAAK,CAAE,IAAA/pB,CAAK,GAGlC,WAAM,aAAa,KAAK,CAC3B,KAAM,SACN,GAAAyB,EACA,QAASsoB,EAAM,QACf,MAAO,CAAE,IAAA/pB,CAAI,EACd,CACH,EACD,EACD,MAAM+pB,EAAQ,KAAK,WAAW,SAAStoB,CAAE,EACzCzG,EAAa+uB,CAAK,EAClB,MAAMuuB,EAAQvuB,EAAM,MAEdiuB,EAAYD,EAAO,IAAI,cAAc,EAavC,GAZAC,aAAqB/d,GACb+d,EAAA,QAAQ,CAACv2C,EAAYpE,IAAU,CACtB,KAAK,WAAW,OAAO,IAAIoE,CAAE,GAG5C,KAAK,iBAAiBA,CAAE,EAG1B62C,EAAM,SAASj7C,CAAe,EAAI,KAAK,aAAaoE,CAAE,EACvD,EAGC62C,EAAM,OAAS,OAAQ,CACzB,KAAK,MAAQA,EACb,KAAK,MAAM,UAAU,KAAK,KAAK,KAAK,EACpC,MACF,CAEK,WAAM,aAAa,KAAK,CAAE,KAAM,MAAO,GAAA72C,EAAI,QAAS62C,EAAM,OAAS,EAC1E,CAEQ,oBAAoB72C,EAAY,CAChC,MAAA62C,EAAQ,KAAK,aAAa72C,CAAE,EAE9B62C,IAAU,KAAK,OACZ,WAAM,YAAY,KAAK72C,CAAE,EAEhCzG,EAAas9C,CAAK,EACb,gBAAW,eAAe72C,CAAE,EAC5B,WAAM,aAAa,KAAK,CAC3B,KAAM,SACN,GAAAA,EACA,QAAS62C,EAAM,QACf,OAAQ,KAAK,UAAUA,CAAK,GAAG,IAAM,GACrC,MAAAA,CAAA,CACD,CACH,CAEQ,cAAcr7B,EAAqD,CAErEA,EAAM,SAAW,KAAK,UACxBA,EAAM,KAAK,QAAQ,CAAC7c,EAAOqB,IAAO,CAC5BrB,EAAM,SAAW,MACnB,KAAK,iBAAiBqB,CAAE,EACfrB,EAAM,SAAW,UAC1B,KAAK,oBAAoBqB,CAAE,CAI7B,CACD,CAEL,CAWQ,gBAAiB,CAElB,KAAK,UAAU,KAAK,WAInB,KAAK,eAAe,QAAQ,0BAA0B,GACxD,KAAK,UAAU,KAAK,gBAAgB,KAAK,SAAS,EAJpD,KAAK,UAAU,KAAK,aAAa,KAAK,SAAS,CAOnD,CAEA,MAAe,KAAKy+C,EAAqC,CACvD,aAAM,MAAM,OACP,KAAK,YACR,KAAK,uBAAuB,EAG1BA,IACF,MAAMA,EAAO,EACb,KAAK,OAAS,GACT,WAAM,MAAM,QAGZ,IACT,CAGA,MAAM,eAAgB,CACpB,MAAM,KAAK,MACb,CACF,oCClzBA,OAAO,eAAcC,EAAU,aAAc,CAAE,MAAO,EAAI,CAAE,EAC5DA,EAAA,cAAwBA,QAAgBA,EAAoB,UAAAA,EAAA,MAAgBA,EAAe,YAC3FC,EAAiB,QAAAD,EAAUE,EAC3BF,EAAA,QAAkBE,EAClB,SAASA,GAAO,CAEZ,QADIhxB,EAAQ,GACHixB,EAAK,EAAGA,EAAK,UAAU,OAAQA,IACpCjxB,EAAMixB,CAAE,EAAI,UAAUA,CAAE,EAE5B,OAAOC,EAAM,MAAM,OAAQlxB,CAAK,CACnC,CACD8wB,EAAA,KAAeE,EACfA,EAAK,MAAQG,EACbH,EAAK,cAAgBI,EACrBJ,EAAK,UAAYK,EACjB,SAASH,GAAQ,CAEb,QADIlxB,EAAQ,GACHixB,EAAK,EAAGA,EAAK,UAAU,OAAQA,IACpCjxB,EAAMixB,CAAE,EAAI,UAAUA,CAAE,EAE5B,OAAOK,EAAOtxB,EAAM,CAAC,IAAM,GAAM,GAAOA,CAAK,CAChD,CACD8wB,EAAA,MAAgBI,EAChB,SAASG,GAAY,CAEjB,QADIrxB,EAAQ,GACHixB,EAAK,EAAGA,EAAK,UAAU,OAAQA,IACpCjxB,EAAMixB,CAAE,EAAI,UAAUA,CAAE,EAE5B,OAAOK,EAAOtxB,EAAM,CAAC,IAAM,GAAM,GAAMA,CAAK,CAC/C,CACD8wB,EAAA,UAAoBO,EACpB,SAASF,EAAMv2C,EAAO,CAClB,GAAI,MAAM,QAAQA,CAAK,EAAG,CAEtB,QADI22C,EAAS,GACJvjD,EAAQ,EAAGA,EAAQ4M,EAAM,OAAQ,EAAE5M,EACxCujD,EAAO,KAAKJ,EAAMv2C,EAAM5M,CAAK,CAAC,CAAC,EACnC,OAAOujD,CACV,SACQH,EAAcx2C,CAAK,EAAG,CAC3B,IAAI22C,EAAS,GACb,QAASvjD,KAAS4M,EACd22C,EAAOvjD,CAAK,EAAImjD,EAAMv2C,EAAM5M,CAAK,CAAC,EACtC,OAAOujD,CACV,KAEG,QAAO32C,CAEd,CACDk2C,EAAA,MAAgBK,EAChB,SAASC,EAAcx2C,EAAO,CAC1B,OAAOA,GAAS,OAAOA,GAAU,UAAY,CAAC,MAAM,QAAQA,CAAK,CACpE,CACDk2C,EAAA,cAAwBM,EACxB,SAASI,EAAgB/U,EAAMgV,EAAQ,CACnC,GAAI,CAACL,EAAc3U,CAAI,EACnB,OAAOgV,EACX,QAAS9gD,KAAO8gD,EACR9gD,IAAQ,aAAeA,IAAQ,eAAiBA,IAAQ,cAE5D8rC,EAAK9rC,CAAG,EAAKygD,EAAc3U,EAAK9rC,CAAG,CAAC,GAAKygD,EAAcK,EAAO9gD,CAAG,CAAC,EAC9D6gD,EAAgB/U,EAAK9rC,CAAG,EAAG8gD,EAAO9gD,CAAG,CAAC,EACtC8gD,EAAO9gD,CAAG,GAElB,OAAO8rC,CACV,CACD,SAAS6U,EAAOI,EAASC,EAAa3xB,EAAO,CACzC,IAAInyB,GACA6jD,GAAW,CAACN,EAAcvjD,EAASmyB,EAAM,MAAK,CAAE,KAChDnyB,EAAS,IACb,QAASG,EAAQ,EAAGA,EAAQgyB,EAAM,OAAQ,EAAEhyB,EAAO,CAC/C,IAAIoO,EAAO4jB,EAAMhyB,CAAK,EACtB,GAAKojD,EAAch1C,CAAI,GAEvB,QAASzL,KAAOyL,EACZ,GAAI,EAAAzL,IAAQ,aAAeA,IAAQ,eAAiBA,IAAQ,aAE5D,KAAII,EAAQ2gD,EAAUP,EAAM/0C,EAAKzL,CAAG,CAAC,EAAIyL,EAAKzL,CAAG,EACjD9C,EAAO8C,CAAG,EAAIghD,EAAcH,EAAgB3jD,EAAO8C,CAAG,EAAGI,CAAK,EAAIA,GAEzE,CACD,OAAOlD,CACX,qCCtEO,MAAM+jD,GAAkB,IA0BxB,MAAMC,WAAkBx1C,EAAW,CAIxC,YAAa0I,EAAK,CAChB,MAAO,EACP,KAAK,IAAMA,EAIX,KAAK,SAAWA,EAAI,SAKpB,KAAK,OAAS,IAAI,IAIlB,KAAK,KAAO,IAAI,IAChB,KAAK,eAAqC,YAAY,IAAM,CAC1D,MAAM6R,EAAMC,GAAkB,EAC1B,KAAK,cAAe,IAAK,MAAS+6B,GAAkB,GAAKh7B,EAA2C,KAAK,KAAK,IAAI,KAAK,QAAQ,EAAG,aAEpI,KAAK,cAAc,KAAK,eAAe,EAKzC,MAAMk7B,EAAS,CAAE,EACjB,KAAK,KAAK,QAAQ,CAACztC,EAAMxD,IAAa,CAChCA,IAAa,KAAK,UAAY+wC,IAAmBh7B,EAAMvS,EAAK,aAAe,KAAK,OAAO,IAAIxD,CAAQ,GACrGixC,EAAO,KAAKjxC,CAAQ,CAE9B,CAAO,EACGixC,EAAO,OAAS,GAClBC,GAAsB,KAAMD,EAAQ,SAAS,CAEhD,EAAE/9C,GAAW69C,GAAkB,EAAE,CAAC,EACnC7sC,EAAI,GAAG,UAAW,IAAM,CACtB,KAAK,QAAS,CACpB,CAAK,EACD,KAAK,cAAc,EAAE,CACtB,CAED,SAAW,CACT,KAAK,KAAK,UAAW,CAAC,IAAI,CAAC,EAC3B,KAAK,cAAc,IAAI,EACvB,MAAM,QAAS,EACf,cAAc,KAAK,cAAc,CAClC,CAKD,eAAiB,CACf,OAAO,KAAK,OAAO,IAAI,KAAK,QAAQ,GAAK,IAC1C,CAKD,cAAerX,EAAO,CACpB,MAAMskD,EAAW,KAAK,SAChBC,EAAgB,KAAK,KAAK,IAAID,CAAQ,EACtCzxC,EAAQ0xC,IAAkB,OAAY,EAAIA,EAAc,MAAQ,EAChE1kD,EAAY,KAAK,OAAO,IAAIykD,CAAQ,EACtCtkD,IAAU,KACZ,KAAK,OAAO,OAAOskD,CAAQ,EAE3B,KAAK,OAAO,IAAIA,EAAUtkD,CAAK,EAEjC,KAAK,KAAK,IAAIskD,EAAU,CACtB,MAAAzxC,EACA,YAAasW,GAAkB,CACrC,CAAK,EACD,MAAMsF,EAAQ,CAAE,EACV+1B,EAAU,CAAE,EACZC,EAAkB,CAAE,EACpBC,EAAU,CAAE,EACd1kD,IAAU,KACZ0kD,EAAQ,KAAKJ,CAAQ,EACZzkD,GAAa,KAClBG,GAAS,MACXyuB,EAAM,KAAK61B,CAAQ,GAGrBE,EAAQ,KAAKF,CAAQ,EAChBK,GAAe9kD,EAAWG,CAAK,GAClCykD,EAAgB,KAAKH,CAAQ,IAG7B71B,EAAM,OAAS,GAAKg2B,EAAgB,OAAS,GAAKC,EAAQ,OAAS,IACrE,KAAK,KAAK,SAAU,CAAC,CAAE,MAAAj2B,EAAO,QAASg2B,EAAiB,QAAAC,GAAW,OAAO,CAAC,EAE7E,KAAK,KAAK,SAAU,CAAC,CAAE,MAAAj2B,EAAO,QAAA+1B,EAAS,QAAAE,GAAW,OAAO,CAAC,CAC3D,CAMD,mBAAoBE,EAAOvhD,EAAO,CAChC,MAAMrD,EAAQ,KAAK,cAAe,EAC9BA,IAAU,MACZ,KAAK,cAAc,CACjB,GAAGA,EACH,CAAC4kD,CAAK,EAAGvhD,CACjB,CAAO,CAEJ,CAKD,WAAa,CACX,OAAO,KAAK,MACb,CACH,CAUY,MAACghD,GAAwB,CAAC1xC,EAAWkyC,EAASvtC,IAAW,CACnE,MAAMotC,EAAU,CAAE,EAClB,QAAS/lD,EAAI,EAAGA,EAAIkmD,EAAQ,OAAQlmD,IAAK,CACvC,MAAM2lD,EAAWO,EAAQlmD,CAAC,EAC1B,GAAIgU,EAAU,OAAO,IAAI2xC,CAAQ,EAAG,CAElC,GADA3xC,EAAU,OAAO,OAAO2xC,CAAQ,EAC5BA,IAAa3xC,EAAU,SAAU,CACnC,MAAMmyC,EAA0CnyC,EAAU,KAAK,IAAI2xC,CAAQ,EAC3E3xC,EAAU,KAAK,IAAI2xC,EAAU,CAC3B,MAAOQ,EAAQ,MAAQ,EACvB,YAAa37B,GAAkB,CACzC,CAAS,CACF,CACDu7B,EAAQ,KAAKJ,CAAQ,CACtB,CACF,CACGI,EAAQ,OAAS,IACnB/xC,EAAU,KAAK,SAAU,CAAC,CAAE,MAAO,GAAI,QAAS,CAAE,EAAE,QAAA+xC,CAAS,EAAEptC,CAAM,CAAC,EACtE3E,EAAU,KAAK,SAAU,CAAC,CAAE,MAAO,GAAI,QAAS,CAAE,EAAE,QAAA+xC,CAAS,EAAEptC,CAAM,CAAC,EAE1E,EAOaytC,GAAwB,CAACpyC,EAAWkyC,EAASG,EAASryC,EAAU,SAAW,CACtF,MAAMvR,EAAMyjD,EAAQ,OACdr+C,EAAU2S,GAAwB,EACxCrE,EAAsBtO,EAASpF,CAAG,EAClC,QAAS,EAAI,EAAG,EAAIA,EAAK,IAAK,CAC5B,MAAMkjD,EAAWO,EAAQ,CAAC,EACpB7kD,EAAQglD,EAAO,IAAIV,CAAQ,GAAK,KAChCzxC,EAAwCF,EAAU,KAAK,IAAI2xC,CAAQ,EAAG,MAC5ExvC,EAAsBtO,EAAS89C,CAAQ,EACvCxvC,EAAsBtO,EAASqM,CAAK,EACpC2G,GAAwBhT,EAAS,KAAK,UAAUxG,CAAK,CAAC,CACvD,CACD,OAAOoZ,GAAsB5S,CAAO,CACtC,EAkCay+C,GAAuB,CAACtyC,EAAWwK,EAAQ7F,IAAW,CACjE,MAAM9M,EAAUyS,EAAuBE,CAAM,EACvC+nC,EAAY/7B,GAAkB,EAC9BsF,EAAQ,CAAE,EACV+1B,EAAU,CAAE,EACZC,EAAkB,CAAE,EACpBC,EAAU,CAAE,EACZtjD,EAAM6T,EAAqBzK,CAAO,EACxC,QAAS7L,EAAI,EAAGA,EAAIyC,EAAKzC,IAAK,CAC5B,MAAM2lD,EAAWrvC,EAAqBzK,CAAO,EAC7C,IAAIqI,EAAQoC,EAAqBzK,CAAO,EACxC,MAAMxK,EAAQ,KAAK,MAAMsY,GAAuB9N,CAAO,CAAC,EAClD26C,EAAaxyC,EAAU,KAAK,IAAI2xC,CAAQ,EACxCzkD,EAAY8S,EAAU,OAAO,IAAI2xC,CAAQ,EACzC95B,EAAY26B,IAAe,OAAY,EAAIA,EAAW,OACxD36B,EAAY3X,GAAU2X,IAAc3X,GAAS7S,IAAU,MAAQ2S,EAAU,OAAO,IAAI2xC,CAAQ,KAC1FtkD,IAAU,KAERskD,IAAa3xC,EAAU,UAAYA,EAAU,cAAe,GAAI,KAGlEE,IAEAF,EAAU,OAAO,OAAO2xC,CAAQ,EAGlC3xC,EAAU,OAAO,IAAI2xC,EAAUtkD,CAAK,EAEtC2S,EAAU,KAAK,IAAI2xC,EAAU,CAC3B,MAAAzxC,EACA,YAAaqyC,CACrB,CAAO,EACGC,IAAe,QAAanlD,IAAU,KACxCyuB,EAAM,KAAK61B,CAAQ,EACVa,IAAe,QAAanlD,IAAU,KAC/C0kD,EAAQ,KAAKJ,CAAQ,EACZtkD,IAAU,OACd2kD,GAAe3kD,EAAOH,CAAS,GAClC4kD,EAAgB,KAAKH,CAAQ,EAE/BE,EAAQ,KAAKF,CAAQ,GAG1B,EACG71B,EAAM,OAAS,GAAKg2B,EAAgB,OAAS,GAAKC,EAAQ,OAAS,IACrE/xC,EAAU,KAAK,SAAU,CAAC,CACxB,MAAA8b,EAAO,QAASg2B,EAAiB,QAAAC,CAClC,EAAEptC,CAAM,CAAC,GAERmX,EAAM,OAAS,GAAK+1B,EAAQ,OAAS,GAAKE,EAAQ,OAAS,IAC7D/xC,EAAU,KAAK,SAAU,CAAC,CACxB,MAAA8b,EAAO,QAAA+1B,EAAS,QAAAE,CACjB,EAAEptC,CAAM,CAAC,CAEd,ECzQO,MAAM8tC,EAEX,CAQA,YACE/vC,EACA1C,EACA0yC,EACA,CARF,KAAS,MAAQ,CACf,OAAQ,IAAI5lD,CAA4B,EA8DlC,wBAAsB2M,GAIxB,CACJ,KAAM,CAAE,MAAAqiB,EAAO,QAAAi2B,EAAS,QAAAF,CAAA,EAAYp4C,EAE9B44C,EAAS,KAAK,UAAU,UAAU,EACxCv2B,EAAM,QAAc/pB,GAAA,CACb,WAAM,OAAO,KAAK,CACrB,GAAAA,EACA,KAAM,MACN,MAAOsgD,EAAO,IAAItgD,CAAE,EACrB,EACF,EACD8/C,EAAQ,QAAc9/C,GAAA,CACf,WAAM,OAAO,KAAK,CACrB,GAAAA,EACA,KAAM,SACN,MAAOsgD,EAAO,IAAItgD,CAAE,EACrB,EACF,EACDggD,EAAQ,QAAchgD,GAAA,CACf,WAAM,OAAO,KAAK,CACrB,GAAAA,EACA,KAAM,SACP,EACF,GAjFD,KAAK,MAAQ2Q,EACb,KAAK,UAAY1C,EACjB,KAAK,UAAU,GAAG,SAAU,KAAK,kBAAkB,EACnD,KAAK,UAAU,mBAAmB,YAAa,CAAE,GACjD,KAAK,WAAW0yC,CAAY,CAC9B,CAEQ,WAAWA,EAAqB,CACtC,MAAMC,EAAgB,KAAK,UAAU,iBAAiB,MAChDzL,EAAQyL,EACV9B,SAAM,GAAM6B,EAAcC,CAAa,EACvC,CAAE,GAAGD,GACJ,eAAU,mBAAmB,QAASxL,CAAK,CAClD,CAEA,QAAiC+K,EAAYvhD,EAAmB,CAC9D,MAAMkiD,EAAW,KAAK,UAAU,cAAc,GAAG,OAAS,GACrD,eAAU,mBAAmB,QAAS,CAAE,GAAGA,EAAU,CAACX,CAAK,EAAGvhD,CAAA,CAAO,CAC5E,CAEA,QAAiCuhD,EAAoC,CAEnE,OADc,KAAK,UAAU,cAAc,GAAG,OAAS,IAC1CA,CAAK,CACpB,CAEA,YAAYY,EAAcniD,EAAsB,CAC9C,MAAMw2C,EAAQ,KAAK,QAAQ,UAAU,GAAK,GAC1C,KAAK,QAAQ,WAAY,CACvB,GAAGA,EACH,CAAC2L,EAAM,EAAE,EAAGniD,CAAA,CACQ,CACxB,CAEA,WAAWmiD,EAAuB,CAC1B,MAAAC,EAAK,KAAK,QAAQ,UAAU,EAC9B,OAAAA,GAAM,OAAOA,GAAO,SACf,EAASA,EAA+BD,EAAM,EAAE,EAEhD,EAEX,CAEA,kBAAkBE,EAA2C,CACtD,eAAU,mBAAmB,YAAaA,CAAS,CAC1D,CAEA,mBAA4D,CAC1D,OAAO,KAAK,UAAU,cAAc,GAAG,WAAa,EACtD,CAEA,WAAmD,CAC1C,YAAK,UAAU,WACxB,CAgCA,SAAU,CACJ,KAAK,YACP,KAAK,UAAU,IAAI,SAAU,KAAK,kBAAkB,EAC/C,WAAM,OAAO,UAEtB,CACF,CC3Ha,MAAAC,WAAsBhF,EAAM,CAAlC,kCACG,aAAwB,KAAK,OAAO,QAAQ,EAEpD,IAAI,QAAS,CACX,OAAO,KAAK,OACd,CAGS,QAA8B,CAC/B,MAAA7/B,EAAO,MAAM,SACnB,OAAOA,EAAK,OACZ,MAAM8kC,EAAkC,GACxC,YAAK,OAAO,QAAQ,CAACvuC,EAAKpU,IAAQ,CACzB2iD,EAAA3iD,CAAG,EAAIoU,EAAI,OAAO,EAC1B,EACM,CACL,GAAGyJ,EACH,OAAA8kC,CAAA,CAEJ,CAEA,YAQE3iD,EAAiB,CACX,MAAAD,EAAM,MAAM,OAAOC,CAAG,EAC5B,OAAOw9B,GAAaz9B,CAAG,CACzB,CAEA,cAKEC,EAAiB,CACX,MAAA5B,EAAQ,MAAM,SAAS4B,CAAG,EAChC,OAAOw9B,GAAap/B,CAAK,CAC3B,CAES,SAAYZ,EAA6B6W,EAA0B,CACnE,aAAM,SAAS7W,EAAG6W,CAAM,CACjC,CACF,CCpCY,IAAAuuC,QAIVA,EAAA,OAAS,SAETA,EAAA,OAAS,SAMTA,EAAA,wBAA0B,0BAM1BA,EAAA,cAAgB,gBAlBNA,QAAA,IAgCZ,MAAMC,GAAe,CACnB,yBAA0B,GAC1B,6BAA8B,GAC9B,qBAAsB,GACtB,SAAU,CAAC,CACb,EAEO,MAAMC,EAAM,CAQjB,YACE,CACE,GAAArhD,EACA,iBAAAshD,EAAmB,CAAC,EACpB,UAAArzC,EACA,YAAAquC,EACA,aAAAqE,CAAA,EACgB,CAAE,GAAI3F,GAAA,GACxB,CASI,GAtBN,KAAS,UAA2B,GAC3B,gBAAa,IAapB,KAAK,GAAKh7C,GAAM,GAChB,KAAK,IAAM,IAAIihD,GAAc,CAAE,KAAMjhD,EAAI,EACzC,KAAK,eAAiB,IAAI0gD,GACxB,KACAzyC,GAAa,IAAIwxC,GAA6B,KAAK,GAAG,EACtDX,SAAM,GAAMsC,GAAcT,CAAY,GAGpC,OAAOrE,GAAgB,WACzB,KAAK,YAAcA,MAEnB,QAAQA,EAAa,CACnB,IAAK,gBAAyB,CAC5B,KAAK,YAAcpB,KACnB,KACF,CACA,IAAK,0BAAmC,CACtC,KAAK,YAAcC,GACjB,KAAK,IAAI,UAEX,KACF,CACA,IAAK,SAAkB,CACrB,KAAK,YAAcxwC,GACnB,KACF,CACA,IAAK,SACL,QAAS,CACP,KAAK,YAAcqwC,GACnB,KACF,CACF,CAGF,KAAK,UAAYsG,EAAiB,IAChCC,KAAQ,KAAK,GAAI,KAAK,IAAK,CACzB,UAAW,KAAK,eAAe,UAChC,EAEL,CAEA,iBAAiBC,EAAqCxhD,EAAa,CACjE,MAAMyhD,EAAWD,EAAgBxhD,GAAM,KAAK,GAAI,KAAK,IAAK,CACxD,UAAW,KAAK,eAAe,UAChC,EAEI,sBAAU,KAAKyhD,CAAQ,EACrBA,CACT,CAEA,SAASX,EAAc,CACrB,KAAK,OAAO,IAAIA,EAAM,GAAIA,CAAK,CACjC,CAEA,YAAYA,EAAc,CACnB,YAAO,OAAOA,EAAM,EAAE,CAC7B,CACF,CC7HO,MAAM93C,GACX04C,GACE,cAAcA,CAAc,CAM1B,YAAYC,EAAgC,CAC1C,MAAMA,CAAY,EANpB,KAAiB,UAA2B,GAC3B,mBAAgB,IAO/B,KAAK,WACHA,EAAa,cAAgB,CAACvoB,EAAmB,GACjD,IAAIxvB,GAAMA,EAAG+3C,EAAa,IAAM,EAAE,CAAC,EAErC,KAAK,KAAO,CACV,IAAK,MAAM3hD,GAAM,CACf,IAAI4hD,EAAQ,GACR7yB,EAAQ,EACL,WAAI,QAAerwB,GAAA,CACnB,eAAU,QAAmBmjD,GAAA,CAChCA,EAAQ,KACL,IAAI7hD,CAAE,EACN,KAAevE,GAAA,CACVA,GAAU,CAACmmD,IACLA,EAAA,GACRljD,EAAIjD,CAAM,GAER,EAAEszB,IAAU,KAAK,UAAU,QAAU,CAAC6yB,GACxCljD,EAAI,IAAI,CACV,CACD,EACA,MAAWqzB,GAAA,CACV,QAAQ,MAAMA,CAAC,EACX,EAAEhD,IAAU,KAAK,UAAU,QAAU,CAAC6yB,GACxCljD,EAAI,IAAI,CACV,CACD,EACJ,EACF,CACH,EACA,IAAK,MAAOC,EAAOJ,IAAQ,CACzB,MAAMoK,EAAOpK,GAAQ,MAAMgK,GAAI,MAAM5J,EAAM,aAAa,EACxD,aAAM,QAAQ,IAAI,KAAK,UAAU,IAAIqJ,GAAKA,EAAE,KAAK,IAAIW,EAAMhK,CAAK,CAAC,CAAC,EAC3DgK,CACT,EACA,OAAQ,MAAMpK,GAAO,CACb,cAAQ,IAAI,KAAK,UAAU,IAASyJ,KAAE,KAAK,OAAOzJ,CAAG,CAAC,CAAC,CAC/D,EACA,KAAM,SAAY,CACV,MAAAa,MAAW,IACjB,aAAM,QAAQ,IACZ,KAAK,UAAU,IAAI,MAAM4I,GAAK,EACf,MAAMA,EAAE,KAAK,KAAK,GAC1B,QAAQzJ,GAAOa,EAAK,IAAIb,CAAG,CAAC,EAClC,GAEI,MAAM,KAAKa,CAAI,CACxB,EACA,GAAI,SAAY,EACA,MAAM,KAAK,KAAK,KAAK,GAC7B,QAAkBwJ,GAAA,CACtB,MAAMC,EAAM,KAAK,UAAU,IAAID,CAAM,GACjC,CAACC,GAAOA,GAAO,KACjB,KAAK,KAAK,OAAOD,CAAM,EAAE,MAAM,QAAQ,KAAK,EACvC,eAAU,OAAOA,CAAM,EAC9B,CACD,CACH,EACA,YAAuBA,GAAA,CACrB,MAAMC,EAAM,KAAK,UAAU,IAAID,CAAM,GAAK,EAC1C,KAAK,UAAU,IAAIA,EAAQC,EAAM,CAAC,CACpC,EACA,YAAuBD,GAAA,CACrB,MAAMC,EAAM,KAAK,UAAU,IAAID,CAAM,GAAK,EACrC,eAAU,IAAIA,EAAQ,KAAK,IAAIC,EAAM,EAAG,CAAC,CAAC,CACjD,EAiBJ,CACF,ECjEJ,SAASi5C,GACPC,EACAC,EACAC,EAAU,CAAC7oD,EAAMS,IAAST,IAAMS,EAChC,CACA,MAAMqoD,EAAW,GACXxC,EAAc,GACdyC,EAAiB,GAGvB,UAAWC,KAAQL,EACZC,EAAM,KAAKK,GAAaJ,EAAQI,EAAWD,CAAI,CAAC,EAGnDD,EAAU,KAAKC,CAAI,EAFnB1C,EAAO,KAAK0C,CAAI,EAMpB,UAAWA,KAAQJ,EACZD,EAAO,KAAKO,GAAcL,EAAQK,EAAYF,CAAI,CAAC,GACtDF,EAAI,KAAKE,CAAI,EAIV,OAAE,QAASF,EAAI,QAAUxC,EAAO,OAAQ,IAAAwC,EAAK,OAAAxC,EAAQ,UAAAyC,EAC9D,CAEO,MAAMI,EAAgB,CAe3B,YAAYC,EAA4B,CAdhC,kBAAe,IAAIpoD,GAE3B,KAAQ,cAA+D,GAKvE,KAAO,MAAQ,CAIb,aAAc,IAAIW,CAAwB,EAsB5C,KAAQ,uBAA8D,KAlBpE,KAAK,aAAa,IAChBynD,EAAa,MAAM,aAAa,GAAG,IAAM,KAAK,iBAAiB,GAGjE,KAAK,aAAa,IAChBA,EAAa,MAAM,YAAY,MAAa,KAAK,eAAelI,CAAM,CAAC,GAGzE,KAAK,aAAa,IAChBkI,EAAa,MAAM,aAAa,MAAQ,KAAK,gBAAgBzwB,CAAC,CAAC,GAG5D,WAAM,aAAa,GAAG,IAAM,CAC/B,KAAK,uBAAyB,KAC/B,CACH,CA3BA,IAAI,cAAe,CACjB,OAAO,KAAK,aACd,CAgCO,YAAY0wB,EAAsB,CACvC,GAAI,KAAK,uBACP,OAAO,KAAK,uBAAuBA,CAAY,GAAK,GAEtD,MAAMC,EAAsD,GACjD,UAACC,EAAYC,CAAQ,IAAK,OAAO,QAAQ,KAAK,aAAa,EACpE,SAAW,CAACC,EAAaC,CAAK,IAAK,OAAO,QAAQF,CAAQ,EACxDE,EAAM,QAAQ,CAAC,CAAE,OAAAxI,EAAQ,KAAA//C,KAAW,CAC5B+/C,KAAUoI,IACQA,EAAApI,CAAM,EAAI,IAEZoI,EAAApI,CAAM,EAAE,KAAK,CACjC,OAAQqI,EACR,QAASE,EACT,KAAAtoD,CAAA,CACD,EACF,EAGL,YAAK,uBAAyBmoD,EACvB,KAAK,uBAAuBD,CAAY,GAAK,EACtD,CAEQ,iBAAkB,CACxB,KAAK,cAAgB,EACvB,CAEQ,eAAenI,EAAgB,CAChC,KAAK,cAAcA,CAAM,IAGzB,mBAAcA,CAAM,EAAI,GAC7B,KAAK,MAAM,aAAa,KAAK,CAAE,OAAQ,SAAU,OAAAA,EAAQ,EAC3D,CAEQ,gBAAgB,CAAE,OAAA5wB,EAAQ,OAAA4wB,EAAQ,MAAAhyB,EAAO,QAAAy6B,GAA4B,CAC3E,OAAQr5B,EAAQ,CACd,IAAK,MACL,IAAK,SAAU,CACb,IAAIo5B,EAAsB,GAEpB,MAAAlzB,EAAOtH,EAAM,IAAI,WAAW,EAClC,GAAIsH,EACF,GAAIA,aAAgBoK,EAAM,CAClB,MAAAE,EAAsBtK,EAAK,UACzBkzB,EAAA,CACN,GAAGA,EACH,GAAG5oB,EACA,UAAgBjQ,EAAM,YAAcA,EAAM,WAAW,SAAS,EAE9D,QAAc,CAAE,GAAGA,EAAM,WAAY,UAAY,QAAA84B,GAAU,EAChE,MAEQ,aAAK,4BAA6BnzB,CAAI,EAKlD,GADgBtH,EAAM,IAAI,aAAa,IACvB,0BAA2B,CACnCgyB,QAAShyB,EAAM,IAAI,aAAa,EAClC,OAAOgyB,GAAW,SACZwI,EAAA,CAAC,GAAGA,EAAO,CAAE,OAAAxI,EAAQ,QAAAyI,EAAS,KAAM,aAAc,EAElD,aAAK,8BAA+BzI,CAAM,CAEtD,CAEA,KAAK,YAAY,CAAE,OAAA5wB,EAAQ,OAAA4wB,EAAQ,QAAAyI,EAAS,MAAAD,EAAO,EACnD,MACF,CACA,IAAK,SAAU,CACR,kBAAaxI,EAAQyI,CAAO,EACjC,KACF,CACF,CACF,CAEQ,YAAY,CAClB,OAAAr5B,EACA,OAAA4wB,EACA,QAAAyI,EACA,MAAAD,CAAA,EAMC,CACD,MAAMf,EAAS,KAAK,cAAczH,CAAM,IAAIyI,CAAO,GAAK,GAC3CjB,GAAUC,EAAQe,CAAK,EAC1B,UAEL,mBAAcxI,CAAM,EAAI,CAC3B,GAAG,KAAK,cAAcA,CAAM,EAC5B,CAACyI,CAAO,EAAGD,CAAA,EAEb,KAAK,MAAM,aAAa,KAAK,CAAE,OAAAp5B,EAAQ,OAAA4wB,EAAQ,QAAAyI,EAAS,EAC1D,CAEQ,aAAazI,EAAgByI,EAAkB,CACjD,IAAC,KAAK,cAAczI,CAAM,GAAK,CAAC,KAAK,cAAcA,CAAM,EAAEyI,CAAO,EACpE,OAEF,MAAMC,EAAe,KAAK,cAAc1I,CAAM,EAAEyI,CAAO,EACvD,OAAO,KAAK,cAAczI,CAAM,EAAEyI,CAAO,EACrCC,EAAa,QACV,WAAM,aAAa,KAAK,CAC3B,OAAQ,SACR,OAAA1I,EACA,QAAAyI,CAAA,CACD,CAEL,CAEA,SAAU,CACR,KAAK,aAAa,SACpB,CACF,CCtMO,MAAME,EAAa,CAiBxB,YACEtwC,EACA,CACE,YAAAuwC,EAAc,GACd,MAAAC,CAAA,EAQF,CAIA,GA3BM,kBAAe,IAAI/oD,GAE3B,KAAO,MAAQ,CACb,YAAa,IAAIW,EAIjB,aAAc,IAAIA,EAClB,aAAc,IAAIA,CAAK,EA+FzB,KAAQ,eAAiB,CACvB0mB,EACA8T,EACA,CAAE,OAAA+kB,EAAQ,MAAA8I,KACP,CACH3hC,EAAO,QAAasQ,GAAA,CAClB,GAAI,EAAAA,aAAapE,IAKjB,IAAIoE,aAAa7D,GAAW,CACtB,GAAA6D,EAAE,SAAWA,EAAE,cAAe,CAEhC,GAAIA,EAAE,YAAY,IAAI,WAAW,EAAG,CAE5B,MAAAgxB,EAAUhxB,EAAE,KAAK,CAAC,EAClBzJ,EAAQ86B,EAAM,IAAIL,CAAO,EAC/BxpD,EAAa+uB,CAAK,EAClB,KAAK,YAAY,CACf,OAAQ,SACR,OAAAgyB,EACA,QAAAyI,EACA,MAAAz6B,CAAA,CACD,CACH,CACA,MACF,CAEA,MAAM,KAAKyJ,EAAE,QAAQ,KAAK,QAAS,GAAE,QACnC,CAAC,CAACgxB,EAAS,CAAE,OAAAr5B,CAAA,CAAQ,IAAM,CACzB,GAAIA,IAAW,SAAU,CACvB,KAAK,YAAY,CACf,OAAAA,EACA,OAAA4wB,EACA,QAAAyI,CAAA,CACD,EACD,MACF,CAEM,MAAAz6B,EAAQ86B,EAAM,IAAIL,CAAO,EAC/BxpD,EAAa+uB,CAAK,EAClB,KAAK,YAAY,CACf,OAAAoB,EACA,OAAA4wB,EACA,QAAAyI,EACA,MAAAz6B,CAAA,CACD,CACH,GAEF,MACF,CACA,GAAIyJ,aAAaZ,GAAY,CACrB,MAAA4xB,EAAUhxB,EAAE,KAAK,CAAC,EACxB,GAAI,CAACgxB,GAAW,OAAOA,GAAY,SAC3B,UAAI,MAAM,iDAAiD,EAE7D,MAAAz6B,EAAQ86B,EAAM,IAAIL,CAAO,EAC/BxpD,EAAa+uB,CAAK,EAClB,KAAK,YAAY,CACf,OAAQ,SACR,OAAAgyB,EACA,QAAAyI,EACA,MAAAz6B,CAAA,CACD,EACD,MACF,GACD,GAlJD,KAAK,KAAO3V,EACZ,KAAK,gBAAkBwwC,EAEnBD,EAAa,CACf,KAAK,WAAW,EAChB,MACF,CAEA,WAAW,IAAM,CACf,KAAK,WAAW,GACf,CAAC,CACN,CAEQ,YAAa,CACnB,MAAMvwC,EAAM,KAAK,KAEjB,GAAI,CADUA,EAAI,MACP,IAAI,MAAM,EACb,UAAI,MAAM,wDAAwD,EAG1E,IAAI0wC,EAAkD,GACjD,kBAAa,IAAI,IAAM,CAC1B,OAAO,OAAOA,CAAU,EAAE,QAAQz5C,GAAMA,KAAM,EAC9Cy5C,EAAa,EAAC,CACf,EAEK,WAAK1wC,EAAI,OAAO,KAAM,GACzB,IAAe2nC,IAAA,CAAE,OAAAA,EAAQ,KAAM,KAAK,SAASA,CAAM,GAAI,EACvD,QAAQ,CAAC,CAAE,OAAAA,EAAQ,KAAApiB,KAAW,CAEzB,GADS3+B,EAAA2+B,EAAM,wBAAwBoiB,CAAM,GAAG,EAChD+I,EAAW/I,CAAM,EAAG,CACd,aACN,+BAA+BA,CAAM,oBACrC+I,CAAA,EAEF,MACF,CACA,MAAMxnD,EAAU,KAAK,WAAWy+C,EAAQpiB,CAAI,EAC5CmrB,EAAW/I,CAAM,EAAIz+C,CAAA,CACtB,EAEE,qBAAgB,UAAU,GAAay+C,GAAA,CACpC,MAAApiB,EAAO,KAAK,SAASoiB,CAAM,EAE7B,GADS/gD,EAAA2+B,EAAM,wBAAwBoiB,CAAM,GAAG,EAChD+I,EAAW/I,CAAM,EAEnB,OAEF,MAAMz+C,EAAU,KAAK,WAAWy+C,EAAQpiB,CAAI,EAC5CmrB,EAAW/I,CAAM,EAAIz+C,CAAA,CACtB,EACI,qBAAgB,YAAY,GAAay+C,GAAA,CAC5C+I,EAAW/I,CAAM,MACjB+I,EAAW/I,CAAM,EAAI,KAChB,WAAM,YAAY,KAAKA,CAAM,EACnC,CACH,CAEQ,WAAWA,EAAgB8I,EAAc,CACzC,MAAA5H,EAAU4H,EAAM,OAAe,QAAQ,EACrC5H,EAAA,QAAQ,CAAClzB,EAAOy6B,IAAY,CAClC,KAAK,YAAY,CAAE,OAAQ,MAAO,OAAAzI,EAAQ,QAAAyI,EAAS,MAAAz6B,EAAO,EAC3D,EAED,MAAMg7B,EAAW,CACf7hC,EACAnT,IACG,KAAK,eAAemT,EAAQnT,EAAa,CAAE,OAAAgsC,EAAQ,MAAOkB,CAAS,GAExE,OAAAA,EAAQ,YAAY8H,CAAQ,EACrB,IAAM,CACX9H,EAAQ,cAAc8H,CAAQ,EAElC,CAEQ,YAAYC,EAA6B,CAC1C,WAAM,aAAa,KAAKA,CAAU,CACzC,CAwEQ,SAASjJ,EAAmC,CAClD,OAAO,KAAK,KAAK,OAAO,IAAIA,CAAM,CACpC,CAEA,cAAe,CACR,WAAM,aAAa,OACxB,KAAK,WAAW,CAClB,CAEA,SAAU,CACR,KAAK,aAAa,SACpB,CACF,CCtNA,MAAMkJ,GAAQ,WAAW,WAAW,WAAa,GAC3CC,GAAW,WAAW,WAAW,SAE1BC,GACX,OAAO,OAAW,KAAe,OAAO,SAAa,IAE1CC,GAAU,OAAO,QAAY,KAAe,CAACD,GAE7CE,GAAY,iBAAiB,KAAK,WAAW,WAAW,MAAM,EAE9DC,GACXH,IAAU,UAAU,UAAU,cAAc,QAAQ,SAAS,EAAI,GAItDI,GACXF,KACC,cAAc,KAAKJ,EAAK,GAAK,WAAW,WAAW,eAAiB,GAE1DO,GAAS,OAAO,KAAKN,EAAQ,EAE7BO,GAAa,MAAM,KAAKP,EAAQ,ECd7C,IAAI1wC,EAAE,SAAS4/B,GAAEv5C,EAAE,CAAC,OAAoB,OAAOA,EAArB,IAAuBA,EAAE,EAAE,CAAC,SAASsC,GAAEtC,EAAE,CAAC,MAAMS,EAAE,MAAMT,CAAC,EAAE,QAAQwR,EAAE,EAAEA,EAAExR,EAAEwR,IAAI/Q,EAAE+Q,CAAC,EAAE9Q,EAAC,EAAG,OAAOD,CAAC,CAAC,SAASC,GAAG,CAAC,OAAO,OAAO,OAAO,IAAI,CAAC,CAAC,SAASmqD,GAAG7qD,EAAES,EAAE,CAAC,OAAOA,EAAE,OAAOT,EAAE,MAAM,CAAC,SAAS8qD,EAAE9qD,EAAE,CAAC,OAAiB,OAAOA,GAAlB,QAAmB,CAAC,SAAS+qD,GAAE/qD,EAAE,CAAC,OAAiB,OAAOA,GAAlB,QAAmB,CAAC,SAASgrD,GAAEhrD,EAAE,CAAC,OAAmB,OAAOA,GAApB,UAAqB,CAAE,SAASirD,GAAEjrD,EAAES,EAAE,CAAC,IAAI+Q,EAAE05C,GAAG,GAAGlrD,IAAIS,IAAIT,EAAEmrD,GAAEnrD,EAAES,CAAC,GAAG,KAAK,IAAIT,EAAEmrD,GAAEnrD,EAAE,KAAK,CAAC,GAAG,KAAK,GAAG,EAAEA,EAAE,SAASA,EAAEmrD,GAAEnrD,EAAE,KAAK,CAAC,GAAGwR,GAAQA,IAAL,IAAQ,CAAc,GAAb/Q,EAAET,EAAE,MAAMwR,CAAC,EAAK,KAAK,OAAO,CAACxR,EAAE,KAAK,OAAOwR,EAAE/Q,EAAE,OAAO,MAAMQ,EAAE,GAAG,QAAQ03B,EAAE,EAAEh2B,EAAE,EAAEg2B,EAAEnnB,EAAEmnB,IAAI,CAAC,MAAMyyB,EAAE3qD,EAAEk4B,CAAC,EAAEyyB,GAAG,CAACprD,EAAEorD,CAAC,IAAInqD,EAAE0B,GAAG,EAAEyoD,EAAE,CAACprD,EAAEiB,CAAC,MAAMjB,EAAES,EAAE,OAAOT,CAAC,CAAC,OAAOA,CAAC,CAAC,MAAMkrD,GAAG,2BAA2BG,GAAG,mBAChoB,SAASC,GAAEtrD,EAAES,EAAE,CAAC,MAAM+Q,EAAE,OAAO,KAAKxR,CAAC,EAAEiB,EAAEuQ,EAAE,OAAOmnB,EAAE,GAAG,IAAIh2B,EAAE,GAAGyoD,EAAE,EAAE,QAAQnqC,EAAE,EAAEjc,EAAEF,EAAEmc,EAAEhgB,EAAEggB,IAAIjc,EAAEwM,EAAEyP,CAAC,GAAGnc,EAAE9E,EAAEgF,CAAC,IAAI2zB,EAAEyyB,GAAG,EAAEG,EAAE9qD,EAAE,UAAUuE,EAAE,UAAUA,CAAC,EAAE2zB,EAAEyyB,GAAG,EAAEtmD,GAAGnC,IAAIA,EAAE,IAAI,IAAIqC,EAAE,OAAArC,IAAIg2B,EAAEyyB,GAAG,EAAEG,EAAE9qD,EAAE,WAAWkC,EAAE,WAAW,IAAIA,EAAE,GAAG,EAAEg2B,EAAEyyB,CAAC,EAAE,IAAWzyB,CAAC,CAAC,SAASwyB,GAAEnrD,EAAES,EAAE,CAAC,QAAQ+Q,EAAE,EAAEvQ,EAAER,EAAE,OAAO+Q,EAAEvQ,IAAIjB,EAAEA,EAAE,QAAQS,EAAE+Q,CAAC,EAAE/Q,EAAE+Q,EAAE,CAAC,CAAC,EAAExR,GAAGwR,GAAG,EAAE,CAAC,OAAOxR,CAAC,CAAC,SAASurD,EAAEvrD,EAAE,CAAC,OAAO,IAAI,OAAOA,EAAE,GAAG,CAAC,CAAC,SAASwrD,GAAGxrD,EAAE,CAAC,IAAIS,EAAE,GAAG+Q,EAAE,GAAG,QAAQvQ,EAAE,EAAE03B,EAAE34B,EAAE,OAAO2C,EAAE1B,EAAE03B,EAAE13B,KAAK0B,EAAE3C,EAAEiB,CAAC,KAAKuQ,IAAI/Q,GAAG+Q,EAAE7O,GAAG,OAAOlC,CAAC,CAAE,IAAIgrD,GAAG,CAAC,OAAOC,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,SAASA,GAAG1rD,EAAE,CAAC,OAAOirD,GAAE,KAAK,MAAM,GAAGjrD,GAAG,YAAa,EAAC,EAAE,CAAC,CAAE,MAAM2rD,GAAG,CAAE,EAACC,GAAE,GAAG,SAASC,GAAG7rD,EAAE,CAAC8rD,GAAE9rD,EAAE,KAAK,EAAE8rD,GAAE9rD,EAAE,QAAQ,EAAE8rD,GAAE9rD,EAAE,QAAQ,EAAE8rD,GAAE9rD,EAAE,QAAQ,EAAE8rD,GAAE9rD,EAAE,QAAQ,CAAC,CAAC,SAAS8rD,GAAE9rD,EAAES,EAAE,CAACT,EAAES,EAAE,OAAO,EAAE,UAAU,CAAC,MAAM+Q,EAAE,KAAKvQ,EAAE,UAAU,IAAI03B,EAAE13B,EAAEA,EAAE,OAAO,CAAC,EAAE,IAAI0B,EAAEqoD,UAAEryB,CAAC,IAAIh2B,EAAEg2B,EAAE,OAAO13B,EAAEA,EAAE,OAAO,CAAC,GAAG03B,EAAE,IAAI,QAAQ,SAASyyB,EAAE,CAAC,WAAW,UAAU,CAAC55C,EAAE,MAAM,GAAG,MAAMyP,EAAEzP,EAAE/Q,CAAC,EAAE,MAAM+Q,EAAEvQ,CAAC,EAAEuQ,EAAE,MAAM,GAAG45C,EAAEnqC,CAAC,CAAC,CAAC,CAAC,CAAC,EAASte,GAAGg2B,EAAE,KAAKh2B,CAAC,EAAE,MAAMg2B,CAAC,CAAC,CAAE,SAASozB,GAAG/rD,EAAES,EAAE+Q,EAAEvQ,EAAE,CAAC,MAAM03B,EAAE34B,EAAE,OAAO,IAAI2C,EAAE,GAAGyoD,EAAEnqC,EAAEjc,EAAE,EAAE/D,IAAIA,EAAE,IAAI,QAAQ6D,EAAE6zB,EAAE,EAAE,GAAG7zB,EAAEA,IAAI,CAAC,MAAMH,EAAE3E,EAAE8E,CAAC,EAAEknD,EAAErnD,EAAE,OAAOsnD,EAAEvrD,EAAG,EAAC,IAAIqE,EAAE,CAACqmD,EAAE,QAAQpqC,EAAE,EAAEA,EAAEgrC,EAAEhrC,IAAI,CAAC,MAAMmQ,EAAExsB,EAAEqc,CAAC,EAAEkrC,EAAE/6B,EAAE,OAAO,GAAG+6B,EAAE,QAAQC,EAAE,EAAE9X,EAAEpiB,EAAEk6B,EAAED,EAAEC,IAAI,GAAGl6B,EAAEd,EAAEg7B,CAAC,EAAEf,EAAE,CAAC,GAAGA,EAAEn5B,CAAC,EAAE,CAAC,GAAG,CAACntB,GAAE,GAAG0M,EAAEA,YAAY7O,EAAEqC,GAAG,EAAEitB,EAAEjtB,IAAIvE,EAAE,OAAOkC,GAAKmC,GAAG7D,KAAEgrD,EAAEh6B,CAAC,EAAE,GAAEltB,EAAE,EAAE,CAAC,GAAG9D,IAAIozC,GAAGpzB,EAAEgR,CAAC,GAAG,GAAG,EAAEhR,EAAEgR,CAAC,EAAEoiB,EAAEA,EAAE1b,GAAG,CAAC,MAAMyzB,GAAEnrD,EAAEozC,EAAE,CAAC,IAAIpzC,EAAEozC,EAAE,CAAC,EAAE,CAAE,GAAE+X,GAAEA,GAAE,MAAM,EAAEn6B,CAAC,CAAC,MAAMg6B,EAAEh6B,CAAC,EAAE,CAAC,CAAC,GAAGhxB,EAAEmqD,IAAInqC,EAAEgrC,WAAW,CAAClnD,EAAE,MAAM,GAAGqmD,EAAEa,CAAC,CAAC,GAAGhrD,EAAE,QAAQ6D,EAAE7D,EAAE,OAAO,EAAE0D,EAAEqnD,EAAE,GAAGlnD,EAAEA,IAAI,CAACH,EAAE1D,EAAE6D,CAAC,EAAEknD,EAAErnD,EAAE,OAAO,QAAQsnD,EAAE,EAAElnD,EAAEknD,EAAED,EAAEC,IAAI,GAAGlnD,EAC/3CJ,EAAEsnD,CAAC,EAAE,CAACb,EAAErmD,CAAC,EAAE,CAAC,GAAGyM,EAAEA,YAAY7O,EAAEqC,GAAG,EAAED,EAAEC,IAAIvE,EAAE,OAAOkC,EAAEyoD,EAAErmD,CAAC,EAAE,CAAC,CAAC,CAAC,OAAOpC,CAAC,CAAC,SAAS0pD,GAAGrsD,EAAES,EAAE,CAAC,MAAM+Q,EAAE9Q,EAAG,EAACO,EAAEP,EAAG,EAACi4B,EAAE,CAAE,EAAC,QAAQh2B,EAAE,EAAEA,EAAE3C,EAAE,OAAO2C,IAAI6O,EAAExR,EAAE2C,CAAC,CAAC,EAAE,EAAE,QAAQA,EAAE,EAAEyoD,EAAEzoD,EAAElC,EAAE,OAAOkC,IAAI,CAACyoD,EAAE3qD,EAAEkC,CAAC,EAAE,QAAQse,EAAE,EAAEjc,EAAEic,EAAEmqC,EAAE,OAAOnqC,IAAIjc,EAAEomD,EAAEnqC,CAAC,EAAEzP,EAAExM,CAAC,GAAG,CAAC/D,EAAE+D,CAAC,IAAI/D,EAAE+D,CAAC,EAAE,EAAE2zB,EAAEA,EAAE,MAAM,EAAE3zB,EAAE,CAAC,OAAO2zB,CAAC,CAAE,SAAS2zB,GAAEtsD,EAAE,CAAC,KAAK,EAAOA,IAAL,IAAQA,EAAE,KAAK,MAAMU,IAAI,KAAK,EAAE,EAAE,CAAC,SAAS6rD,GAAGvsD,EAAES,EAAE+Q,EAAE,CAACu5C,GAAE/qD,CAAC,IAAIA,EAAEA,EAAE,OAAO,IAAIiB,EAAE,KAAK,MAAM,IAAIjB,CAAC,EAAE,OAAAiB,IAAIA,EAAE,KAAK,OAAOjB,EAAES,EAAE+Q,CAAC,EAAE,KAAK,MAAM,IAAIxR,EAAEiB,CAAC,GAAUA,CAAC,CAACqrD,GAAE,UAAU,IAAI,SAAStsD,EAAES,EAAE,CAAC,GAAG,CAAC,KAAK,MAAMT,CAAC,EAAE,CAAC,IAAIwR,EAAE,KAAK,EAAE,OAAqD,IAA9CA,IAAI,KAAK,EAAE,OAAO,KAAK,MAAM,KAAK,EAAEA,EAAE,CAAC,CAAC,EAAEA,IAAQ,EAAEA,EAAE,EAAEA,EAAEA,IAAI,KAAK,EAAEA,CAAC,EAAE,KAAK,EAAEA,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAExR,CAAC,CAAC,KAAK,MAAMA,CAAC,EAAES,CAAC,EAAE6rD,GAAE,UAAU,IAAI,SAAStsD,EAAE,CAAC,MAAMS,EAAE,KAAK,MAAMT,CAAC,EAAE,GAAG,KAAK,GAAGS,IAAIT,EAAE,KAAK,EAAE,QAAQA,CAAC,GAAG,CAAC,MAAMwR,EAAE,KAAK,EAAExR,EAAE,CAAC,EAAE,KAAK,EAAEA,EAAE,CAAC,EAAE,KAAK,EAAEA,CAAC,EAAE,KAAK,EAAEA,CAAC,EAAEwR,CAAC,CAAC,OAAO/Q,CAAC,EAAE,MAAM+rD,GAAG,CAAC,OAAO,CAAC,QAAQ,cAAc,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,YAAY,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,QAAQ,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC,QAAQ,cAAc,EAAE,SAAS,EAAE,MAAM,CAAC,QAAQ,iBAAiB,EAAE,GAAG,EAAE,EAAE,QAAQ,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,EAAE,QAAU,EAAE,EAAE,SAASC,GAAGzsD,EAAES,EAAE+Q,EAAEvQ,EAAE03B,EAAEh2B,EAAEyoD,EAAEnqC,EAAE,CAAC,WAAW,UAAU,CAAC,MAAMjc,EAAEhF,EAAEwR,EAAEA,EAAE,IAAIvQ,EAAEA,EAAE,KAAK,UAAUmqD,CAAC,CAAC,EAAEpmD,GAAGA,EAAE,KAAKA,EAAE,KAAK,UAAU,CAACvE,EAAE,OAAOT,EAAES,EAAE+Q,EAAEmnB,EAAEh2B,EAAE,EAAEse,CAAC,CAAC,CAAC,EAAExgB,EAAE,OAAOT,EAAES,EAAE+Q,EAAEmnB,EAAEh2B,EAAE,EAAEse,CAAC,CAAC,CAAC,CAAC,CAAE,SAAS22B,GAAE53C,EAAES,EAAE,CAAC,GAAG,EAAE,gBAAgBm3C,IAAG,OAAO,IAAIA,GAAE53C,CAAC,EAAE,IAAIwR,EAAE,GAAGxR,EAAE,CAAC8qD,EAAE9qD,CAAC,EAAEA,EAAEwsD,GAAGxsD,CAAC,GAAGwR,EAAExR,EAAE,UAAUA,EAAE,OAAO,OAAO,GAAGwR,EAAEA,CAAC,EAAExR,CAAC,GAAGwR,EAAExR,EAAE,QAAQ,IAAIiB,EAAEjB,EAAE,KAAK8qD,EAAEt5C,CAAC,IAASA,EAAE,QAAQ,GAAG,IAAlB,KAAsBA,GAAG,YAAYA,EAAEo6C,GAAEp6C,CAAC,GAAGs5C,EAAE7pD,CAAC,IAAIA,EAAE0qD,GAAG1qD,CAAC,EAAE,MAAMjB,EAAE,GAAG,IAAI24B,EAAEh2B,EAAEyoD,EAAEprD,EAAE,SAAS,GAC/tC,GADkuC,KAAK,OAAOA,EAAE,QAAQwR,GAAGA,EAAE,QAAQk6C,GAAG,KAAK,SAASjrD,GAAGC,EAAC,EAAG,KAAK,EAAEi4B,EAAE34B,EAAE,YAAY,EAAE,KAAK,EAAES,EAAE+Q,GAAGA,EAAE,GAAGxR,EAAE,UAAU,SAAS,KAAK,MAAiBS,IAAX,UAAc2qD,EAAE,MAAM,KAAK,EAAE7R,GAAE6R,EAAE,aAAa,EAAE,KAAK,EAAEzoD,EAAE42C,GAAEv5C,EAAE,QAAQ,EAAE,KAAK,EAAEu5C,GAAEv5C,EAAE,UAAU,EAAE,KAAK,EAAEA,EAAE,WAAW,EAAE,KAAK,EACxoDA,EAAE,MAAM,KAAK,IAAI2C,EAAEL,GAAEq2B,CAAC,EAAEj4B,EAAC,EAAG,KAAK,EAAEi4B,EAAEyyB,EAAE,YAAY,EAAE,KAAK,EAAEzoD,EAAEL,GAAEq2B,CAAC,EAAEj4B,EAAC,EAAG,KAAK,EAAE8Q,GAAGA,EAAE,GAAGxR,EAAE,IAAI,KAAK,GAAGS,EAAET,EAAE,SAASiB,GAAGA,EAAE,IAAIqqD,GAAE7qD,EAAE,EAAE,EAAE,KAAK,GAAGA,EAAET,EAAE,SAASiB,GAAGA,EAAE,IAAIqqD,GAAE7qD,EAAE,EAAE,EAAK+Q,EAAE/Q,EAAET,EAAE,QAAQiB,GAAGA,EAAE,OAAO,CAACuQ,EAAE/Q,EAAEQ,EAAEP,EAAC,EAAG,QAAQugB,EAAE,EAAEjc,EAAEwM,EAAE,OAAOyP,EAAEjc,EAAEic,IAAIhgB,EAAEuQ,EAAEyP,CAAC,CAAC,EAAE,EAAEzP,EAAEvQ,CAAC,CAAC,KAAK,OAAOuQ,EAAE,KAAK,OAAO/Q,EAAET,EAAE,QAAQ,IAAIssD,GAAE7rD,CAAC,CAAC,CAACkZ,EAAEi+B,GAAE,UAAUj+B,EAAE,OAAO,SAAS3Z,EAAES,EAAE,CAAC,OAAO,KAAK,IAAIT,EAAES,EAAE,EAAE,CAAC,EACxWkZ,EAAE,IAAI,SAAS3Z,EAAES,EAAE+Q,EAAEvQ,EAAE,CAAC,GAAGR,IAAIT,GAAOA,IAAJ,GAAO,CAAC,GAAG,CAACiB,GAAG,CAACuQ,GAAG,KAAK,SAASxR,CAAC,EAAE,OAAO,KAAK,OAAOA,EAAES,CAAC,EAAmB,GAAjBA,EAAE,KAAK,OAAOA,CAAC,EAAKQ,EAAER,EAAE,OAAO,CAAC,MAAMqE,EAAEpE,EAAC,EAAGiE,EAAEjE,EAAC,EAAGsrD,EAAE,KAAK,MAAMC,EAAE,KAAK,EAAE,QAAQlnD,EAAE,EAAEA,EAAE9D,EAAE8D,IAAI,CAAC,IAAIic,EAAEvgB,EAAE,KAAK,EAAEQ,EAAE,EAAE8D,EAAEA,CAAC,EAAE,IAAI4zB,EAAE3X,EAAE,OAAO,GAAGA,GAAG2X,GAAG,KAAK,IAAIqzB,GAAG,CAACrnD,EAAEqc,CAAC,GAAG,CAAC,IAAIre,EAAE+pD,GAAET,EAAEhrD,EAAE8D,CAAC,EAAEqmD,EAAE,GAAG,OAAO,KAAK,EAAG,KAAK,OAAO,GAAG,EAAEzyB,EAAE,CAAC,IAAIh2B,EAAE,EAAEA,EAAEg2B,EAAEh2B,IAAI,QAAQse,EAAE0X,EAAE1X,EAAEte,EAAEse,IAAI,GAAGA,EAAEte,GAAG,KAAK,EAAE,CAAC,IAAIqC,EAAE0nD,GAAET,EAAEhrD,EAAE8D,EAAE4zB,EAAEh2B,CAAC,EAAEyoD,EAAEpqC,EAAE,UAAUre,EAAEse,CAAC,EAAE0rC,GAAE,KAAKhoD,EAAEymD,EAAEpmD,EAAEhF,EAAEwR,CAAC,CAAC,CAAC,KAAK,CAAC,IAAK,UAAU,GAAG,EAAEmnB,EAAE,CAAC,IAAI1X,EAAE0X,EAAE,EAAE,EAAE1X,EAAEA,IAAImqC,EAAEpqC,EAAEC,CAAC,EAAEmqC,EAAEA,EAAE,QAAQ,KAAK,GAAGuB,GAAE,KAAKhoD,EACnfymD,EAAEsB,GAAET,EAAEhrD,EAAE8D,EAAE4zB,EAAE1X,CAAC,EAAEjhB,EAAEwR,CAAC,EAAE45C,EAAE,EAAE,CAAC,IAAK,UAAU,GAAG,EAAEzyB,EAAE,CAAC,IAAI1X,EAAE,EAAEA,EAAE0X,EAAE1X,IAAImqC,GAAGpqC,EAAEC,CAAC,EAAEmqC,EAAE,QAAQ,KAAK,GAAGuB,GAAE,KAAKhoD,EAAEymD,EAAEzoD,EAAE3C,EAAEwR,CAAC,EAAE,KAAK,CAAC,QAAQ,GAAG,KAAK,IAAI7O,EAAE,KAAK,IAAIA,EAAE,KAAK,EAAElC,EAAEugB,EAAEjc,CAAC,EAAE,EAAEknD,EAAE,CAAC,GAAGU,GAAE,KAAKhoD,EAAEqc,EAAEre,EAAE3C,EAAEwR,CAAC,EAAEw6C,GAAG,EAAE/qD,GAAG8D,EAAE9D,EAAE,GAAE,IAAI03B,EAAEj4B,EAAC,EAAG0qD,EAAE,KAAK,EAAEzoD,EAAEqe,EAAEC,EAAE,KAAK,IAAI+qC,EAAE,EAAE/qD,EAAE8D,CAAC,EAAE4zB,EAAEh2B,CAAC,EAAE,EAAEqC,EAAE,EAAEA,EAAEic,EAAEjc,IAAI,IAAIgc,EAAEvgB,EAAE,KAAK,EAAEQ,EAAE,EAAE8D,EAAEC,EAAED,EAAEC,CAAC,IAAIgc,EAAE,QAAQ,KAAK,GAAG,CAAC2X,EAAE3X,CAAC,EAAE,CAAC2X,EAAE3X,CAAC,EAAE,EAAE,MAAMmQ,EAAE,KAAK,GAAGnQ,EAAEre,EAAEgqD,GAAE,KAAK7nD,EAAEqsB,EAAExuB,EAAEqe,EAAE0rC,GAAEtB,GAAGnqD,EAAE,EAAEmqD,EAAE,EAAE,GAAGnqD,EAAE8D,EAAEkc,EAAE,EAAEjc,EAAE,CAAC,EAAEhF,EAAEwR,EAAE2f,EAAEnQ,EAAEre,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,KAAK,IAAI,KAAK,SAAS3C,CAAC,EAAE,EAAE,CAAC,CAAC,OAAO,IAAI,EAC5b,SAAS0sD,GAAE1sD,EAAES,EAAE+Q,EAAEvQ,EAAE03B,EAAE,CAAC,OAAOnnB,GAAG,EAAExR,EAAES,GAAGQ,GAAG,IAAIjB,EAAEwR,GAAGmnB,GAAG,IAAI34B,EAAE,IAAIS,GAAGQ,GAAG,KAAKuQ,GAAGmnB,GAAG,IAAI,EAAE,EAAE,CAAC,CAAC,SAASg0B,GAAE3sD,EAAES,EAAE+Q,EAAEvQ,EAAE03B,EAAEh2B,EAAEyoD,EAAE,CAAC,IAAInqC,EAAEmqC,EAAEprD,EAAE,EAAEA,EAAE,KAAO,CAACS,EAAE+Q,CAAC,GAAG45C,GAAG,CAAC3qD,EAAE+Q,CAAC,EAAE45C,CAAC,KAAEprD,EAAE,IAAIihB,EAAEA,EAAEhgB,CAAC,GAAGmqD,GAAG3qD,EAAEA,EAAE+Q,CAAC,IAAI/Q,EAAE+Q,CAAC,EAAE9Q,EAAG,GAAED,EAAE2qD,CAAC,EAAE,EAAEnqC,EAAEA,EAAEmqC,CAAC,IAAInqC,EAAEmqC,CAAC,EAAE1qD,EAAC,IAAKD,EAAE+Q,CAAC,EAAE,EAAEyP,EAAEA,EAAEzP,CAAC,IAAIyP,EAAEzP,CAAC,EAAE,IAAIxR,EAAE,IAAIihB,EAAEA,EAAEhgB,CAAC,IAAIggB,EAAEhgB,CAAC,EAAE,KAAK0B,GAAGse,EAAE,SAAS0X,CAAC,IAAI1X,EAAEA,EAAE,MAAM,EAAE0X,EAAE34B,EAAE,IAAIA,EAAEA,EAAE,SAAS24B,CAAC,IAAI34B,EAAE,SAAS24B,CAAC,EAAE,CAAE,GAAE34B,EAAEA,EAAE,MAAM,EAAEihB,IAAG,CACxWtH,EAAE,OAAO,SAAS3Z,EAAES,EAAE+Q,EAAE,CAACA,IAAI,CAAC/Q,GAAGsqD,GAAE/qD,CAAC,GAAGwR,EAAExR,EAAEA,EAAEwR,EAAE,OAAOu5C,GAAEtqD,CAAC,IAAI+Q,EAAE/Q,IAAI,IAAIQ,EAAE,GAAG03B,EAAMh2B,EAAEyoD,EAAE,EAAE,GAAG55C,EAAE,CAACxR,EAAEwR,EAAE,OAAOxR,EAAES,EAAE+Q,EAAE,MAAM45C,EAAE55C,EAAE,QAAQ,EAAE,IAAIyP,EAAEzP,EAAE,QAAQ7O,EAAE6O,EAAE,OAAO,CAAC,GAAGxR,IAAIA,EAAE,KAAK,OAAO,GAAGA,CAAC,EAAE24B,EAAE34B,EAAE,OAAO,EAAE24B,GAAG,CAACnnB,EAAE9Q,EAAC,EAAG,IAAIsE,EAAE,GAAG,QAAQL,EAAE,EAAEqnD,EAAE,EAAEC,EAAEtnD,EAAEg0B,EAAEh0B,IAAI,IAAIsnD,EAAEjsD,EAAE2E,CAAC,IAAIsnD,EAAE,QAAQ,KAAK,GAAG,CAACz6C,EAAEy6C,CAAC,EAAE,GAAG,KAAK,GAAGtpD,GAAG,KAAK,IAAIspD,CAAC,EAAEjnD,EAAEgnD,GAAG,EAAEC,EAAEz6C,EAAEy6C,CAAC,EAAE,MAAO,QAAOhrD,EAAEjB,EAAEgF,EAAE2zB,EAAE34B,EAAE,MAAM,CAAC,GAAG,CAAC24B,EAAE,OAAO13B,EAAER,IAAIA,EAAE,KAAKwgB,EAAE,KAAK,OAAO,EAAE0X,GAAQ1X,IAAL,GAAOzP,EAAE,EAAE,IAAI1M,EAAEmc,GAAGnc,EAAE9E,EAAE,CAAC,EAAEwR,EAAE,GAAG,EAAEmnB,GAAG34B,EAAE,KAAK6qD,EAAE,EAAE,QAAQlmD,EAAEqnD,EAAEx6C,EAAEmnB,EAAEnnB,IAAI,CACvZ,GADwZw6C,EAAEhsD,EAAEwR,CAAC,EAAEyP,GAAGtc,EAAEioD,GAAG,KAAK3rD,EAAE0B,EAAElC,EAAE2qD,EAAMzyB,IAAJ,EAAMqzB,EACpflnD,CAAC,EAAEnC,GAAQgC,IAAL,IAAQ1D,EAAE,SAAS6D,EAAEknD,IAAIrnD,EAAEioD,GAAG,KAAK3rD,EAAE0B,EAAElC,EAAE2qD,EAAMzyB,IAAJ,EAAMqzB,CAAC,EAAKrnD,EAAE,OAAOA,EAAE,GAAGhC,GAAG6O,IAAImnB,EAAE,EAAE,CAAY,GAAX3zB,EAAE/D,EAAE,OAAU,CAAC+D,EAAE,CAAC,GAAGic,EAAE,CAACA,EAAE,EAAEzP,EAAE,GAAG,QAAQ,CAAC,OAAOvQ,CAAC,CAAC,GAAO+D,IAAJ,EAAM,OAAO6nD,GAAG5rD,EAAE,CAAC,EAAER,EAAE2qD,CAAC,CAAC,CAAC,CAAC,OAAOW,GAAG9qD,EAAER,EAAE2qD,EAAEzoD,CAAC,CAAC,EAC1L,SAASiqD,GAAG5sD,EAAES,EAAE+Q,EAAEvQ,EAAE03B,EAAEh2B,EAAEyoD,EAAEnqC,EAAE,CAAC,IAAIjc,EAAE,GAAGF,EAAEmc,EAAEjhB,EAAE,EAAEA,EAAE,IAA2B,GAAvBA,EAAE,IAAI8E,EAAEgoD,GAAGhoD,EAAEsmD,EAAEnqC,EAAEjhB,EAAE,CAAC,GAAM8E,EAAE,CAAC,IAAIH,EAAE,EAAE,MAAMqnD,EAAE,KAAK,IAAIlnD,EAAE,OAAOmc,EAAEjhB,EAAE,EAAEA,EAAE,CAAC,EAAE,QAAQisD,EAAE,EAAElnD,EAAE,EAAEic,EAAEmQ,EAAE86B,EAAED,GAAS,GAAAhrC,EAAElc,EAAEmnD,CAAC,KAAKjsD,EAAE,IAAIghB,EAAE8rC,GAAG9rC,EAAEoqC,EAAEnqC,EAAEjhB,EAAE,CAAC,GAAG24B,GAAG3X,GAAGre,IAAIwuB,EAAEnQ,EAAE,OAAOmQ,GAAGwH,GAAGA,GAAGxH,EAAEnQ,EAAE,OAAOA,EAAEA,EAAE,MAAM2X,CAAC,EAAEA,EAAE,IAAI3X,IAAIhc,EAAEL,GAAG,EAAEqc,EAAEre,IAAIoC,GAAGic,EAAE,OAAOjc,GAAG9D,MAApIgrD,IAAI,CAA0I,GAAGtnD,EAAE,CAAC,GAAGhC,EAAE,OAAOkqD,GAAG7nD,EAAE/D,EAAE,CAAC,EAAER,EAAEA,EAAE,MAAM,EAAEuE,EAAE,MAAM,CAAC,CAAC,MAAM,CAACwM,GAAGxM,CAAC,CAAC,SAAS6nD,GAAG7sD,EAAES,EAAE+Q,EAAE,CAAC,OAAAxR,EAAMA,EAAE,SAAN,EAAaA,EAAE,CAAC,EAAE,GAAG,OAAO,MAAM,CAAE,EAACA,CAAC,EAASwR,GAAGxR,EAAE,OAAOS,EAAET,EAAE,MAAMwR,EAAEA,EAAE/Q,CAAC,EAAET,CAAC,CACpc,SAAS8sD,GAAG9sD,EAAES,EAAE+Q,EAAEvQ,EAAE,CAAC,OAAAuQ,GAAGvQ,EAAEA,GAAGR,EAAE+Q,EAAExR,GAAGA,EAAEA,EAAEiB,EAAER,EAAE+Q,CAAC,IAAIxR,EAAEiB,EAAEuQ,EAAE/Q,CAAC,GAAGT,EAAEA,EAAES,CAAC,EAAST,CAAC,CAAC2Z,EAAE,QAAQ,SAAS3Z,EAAE,CAAC,MAAM,CAAC,CAAC,KAAK,SAASA,CAAC,CAAC,EAAE2Z,EAAE,OAAO,SAAS3Z,EAAES,EAAE,CAAC,OAAO,KAAK,OAAOT,CAAC,EAAE,IAAIA,EAAES,CAAC,CAAC,EAChLkZ,EAAE,OAAO,SAAS3Z,EAAES,EAAE,CAAC,MAAM+Q,EAAE,KAAK,SAASxR,CAAC,EAAE,GAAGwR,EAAE,CAAC,GAAG,KAAK,EAAE,QAAQvQ,EAAE,EAAE03B,EAAE13B,EAAEuQ,EAAE,OAAOvQ,IAAI03B,EAAEnnB,EAAEvQ,CAAC,EAAE03B,EAAE,OAAOA,EAAE,QAAQ34B,CAAC,EAAE,CAAC,OAAO+sD,GAAE,KAAK,IAAI/sD,EAAE,KAAK,EAAE,KAAK,CAAC,EAAE,KAAK,OAAO+sD,GAAE,KAAK,EAAE/sD,EAAE,KAAK,EAAE,KAAK,CAAC,EAA6B,GAA3BS,GAAG,OAAO,KAAK,SAAST,CAAC,EAAK,KAAK,MAAM,CAACS,EAAE,KAAK,MAAM,QAAQQ,EAAE,EAAE03B,EAAEh2B,EAAE1B,EAAER,EAAE,EAAE,OAAOQ,IAAI0B,EAAElC,EAAE,EAAEQ,CAAC,EAAE03B,EAAEl4B,EAAE,MAAMkC,CAAC,EAAEg2B,EAAE,SAAS34B,CAAC,IAAIS,EAAE,EAAE,OAAOQ,IAAI,CAAC,EAAE,OAAOR,EAAE,MAAMkC,CAAC,EAAE,CAAC,CAAC,OAAO,IAAI,EACnX,SAASoqD,GAAE/sD,EAAES,EAAE+Q,EAAEvQ,EAAE03B,EAAE,CAAC,IAAIh2B,EAAE,EAAE,GAAG3C,EAAE,cAAc,MAAM,GAAG24B,EAAEl4B,EAAET,EAAE,QAAQS,CAAC,EAAOA,IAAL,GAAO,EAAET,EAAE,SAASA,EAAE,OAAOS,EAAE,CAAC,EAAEkC,KAAKA,QAAQ,CAACg2B,EAAE,KAAK,IAAI34B,EAAE,OAAOwR,CAAC,EAAE,QAAQ45C,EAAE,EAAEnqC,EAAEmqC,EAAEzyB,EAAEyyB,KAAOnqC,EAAEjhB,EAAEorD,CAAC,KAAEzoD,EAAEoqD,GAAE9rC,EAAExgB,EAAE+Q,EAAEvQ,EAAE03B,CAAC,EAAE13B,GAAG0B,GAAG,OAAO3C,EAAEorD,CAAC,EAAC,KAAM,SAAQA,KAAKprD,GAAG2C,EAAEoqD,GAAE/sD,EAAEorD,CAAC,EAAE3qD,EAAE+Q,EAAEvQ,EAAE03B,CAAC,IAAI,OAAO34B,EAAEorD,CAAC,EAAE,OAAOzoD,CAAC,CAACgX,EAAE,YAAY4yC,GAC/R5yC,EAAE,OAAO,SAAS3Z,EAAES,EAAE+Q,EAAEvQ,EAAE03B,EAAEh2B,EAAE,CAAC,IAAIyoD,EAAE,GAAiB,OAAOzoD,EAArB,MAAyByoD,EAAE,IAAI,QAAQtmD,GAAG,CAACnC,EAAEmC,CAAC,CAAC,GAAG,IAAImc,EAAEjc,EAAE,OAAO2zB,IAAIA,EAAE,IAAI,IAAK,GAAU,GAAR1X,EAAE,MAAS,KAAK,EAAE,CAACjc,EAAEtE,EAAC,EAAG,QAAQoE,KAAK,KAAK,SAASE,EAAEF,CAAC,EAAE,CAAC,MAAME,EAAE,KAAK,SAAS,MAAM,IAAK,GAAEic,EAAE,MAAMjc,EAAE,CAAC,IAAI,EAAE,IAAI,KAAK,EAAE,EAAE,CAAC,EAAE,MAAM,IAAK,GAAEic,EAAE,MAAMjc,EAAE,KAAK,IAAI,MAAM,IAAK,GAAEic,EAAE,MAAMjc,EAAE,KAAK,EAAE,MAAM,QAAsB,OAAOwM,EAArB,KAAwB7O,GAAGA,IAAI,MAAM,CAAC,OAAA8pD,GAAGzsD,EAAES,GAAG,KAAK+Q,EAAEyP,EAAEhgB,EAAE03B,EAAE3zB,EAAErC,CAAC,EAASyoD,CAAC,EAC5YzxC,EAAE,OAAO,SAAS3Z,EAAES,EAAE,CAAC,GAAGA,EAAE,OAAOqqD,EAAErqD,CAAC,IAAIA,EAAE,KAAK,MAAMA,CAAC,GAAGT,EAAG,KAAK,MAAM,KAAK,EAAE,CAAC,CAACS,EAAE,IAAI,MAAM,IAAK,MAAM,KAAK,EAAE,GAAG,KAAK,SAASA,EAAE,MAAM,IAAK,MAAM,KAAK,IAAIA,EAAE,MAAM,IAAK,MAAM,KAAK,EAAEA,CAAC,CAAC,EAAEorD,GAAGjU,GAAE,SAAS,EAAE,SAASoV,GAAGhtD,EAAE,CAACA,EAAEA,EAAE,KAAK,IAAIS,EAAE,KAAK,OAAO,MAAM+Q,EAAExR,EAAE,KAAK,IAAIiB,EAAEjB,EAAE,KAAK,OAAOiB,GAAG,IAAK,OAAOA,EAAEjB,EAAE,SAAS,GAAGA,EAAEA,EAAE,QAAQS,EAAEQ,EAAE,OAAOA,EAAE,MAAM,GAAGR,GAAOA,EAAE,QAAQ,UAAU,IAAxB,IAA4BQ,EAAE,OAAO,SAAS,UAAUR,CAAC,EAAC,GAAIT,GAAG,SAAS,UAAUA,CAAC,IAAI,IAAI,EAAE,KAAK,OAAO,IAAI,KAAK,WAAW,MAAMiB,CAAC,EAAE,OAAO,KAAK,YAAY,KAAK,OAAO,IAAI22C,GAAE32C,CAAC,EAAE,MAAM,QAAQjB,EAAEA,EAAE,GAAGS,EAAEA,EAAEQ,CAAC,EAAE,MAAMR,EAAE+Q,CAAC,EAAE,YAAuBvQ,IAAX,SAAa,CAAC,GAAGjB,EAAE,IAAIS,CAAC,EAAE,CAAC,GAAGT,CAAC,CAAC,CAAC,CAAC,CAAE,IAAIitD,GAAG,EAAE,SAASC,GAAEltD,EAAE,CAAC,GAAG,EAAE,gBAAgBktD,IAAG,OAAO,IAAIA,GAAEltD,CAAC,EAAE,IAAIS,EAAET,EAAEgrD,GAAEvqD,EAAET,EAAE,MAAM,IAAIA,EAAE,OAAOS,EAAE,YAAYT,EAAE,CAAE,GAAES,GAAG,MAAM,QAAQ,YAAYA,EAAEA,EAAE,SAAQ,GAAI,MAAM+Q,EAAgB,OAAO,OAArB,KAA6B,KAAK,QAAQvQ,EAAE,KAAK,KAAK,EAAEksD,GAAG1sD,EAAE+Q,EAAExR,EAAE,MAAM,EAAE,KAAK,EAAEU,EAAG,EAAI,KAAK,IAAM8Q,EAAE,KAAK,EAAE,GAAG,UAAU,SAASmnB,EAAE,CAAC13B,EAAE,EAAE03B,EAAE,EAAE,EAAEA,EAAE,GAAG,EAAE,OAAO13B,EAAE,EAAE03B,EAAE,EAAE,CAAC,CAAC,EAAO,KAAK,EAAE,UAAU,SAASA,EAAE,CAACA,EAAEA,EAAE,KAAK13B,EAAE,EAAE03B,EAAE,EAAE,EAAEA,EAAE,GAAG,EAAE,OAAO13B,EAAE,EAAE03B,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,YAAY,CAAC,KAAK,OAAO,QAAQl4B,EAAE,QAAQT,CAAC,CAAC,EAAE,CAACotD,GAAE,KAAK,EAAEA,GAAE,QAAQ,EAAEA,GAAE,QAAQ,EAC7lCA,GAAE,QAAQ,EAAEA,GAAE,QAAQ,EAAE,SAASA,GAAEptD,EAAE,CAACktD,GAAE,UAAUltD,CAAC,EAAEktD,GAAE,UAAUltD,EAAE,OAAO,EAAE,UAAU,CAAC,MAAMS,EAAE,KAAK+Q,EAAE,CAAE,EAAC,MAAM,KAAK,SAAS,EAAE,IAAIvQ,EAAEuQ,EAAEA,EAAE,OAAO,CAAC,EAAE,IAAImnB,EAAEqyB,UAAE/pD,CAAC,IAAI03B,EAAE13B,EAAEuQ,EAAE,OAAOA,EAAE,OAAO,EAAE,CAAC,GAAGvQ,EAAE,IAAI,QAAQ,SAAS0B,EAAE,CAAC,WAAW,UAAU,CAAClC,EAAE,EAAE,EAAEwsD,EAAE,EAAEtqD,EAAElC,EAAE,EAAE,YAAY,CAAC,KAAKT,EAAE,GAAGitD,GAAG,KAAKz7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAASmnB,GAAG13B,EAAE,KAAK03B,CAAC,EAAE,MAAM13B,CAAC,CAAC,CAC/T,SAASksD,GAAGntD,EAAES,EAAE+Q,EAAE,CAAC,IAAIvQ,EAAE,GAAG,CAACA,EAAER,EAAE,GAAK,SAAQ,gBAAgB,GAAE,OAAW,UAAY,eAAe,EAAET,EAAE,IAAI,OAAO,IAAI,gBAAgB,IAAI,KAAK,CAAC,aAAagtD,GAAG,SAAU,GAAE,CAAC,KAAK,iBAAiB,CAAC,CAAC,CAAC,EAAE,IAAI,OAAOlC,EAAEt5C,CAAC,EAAEA,EAAE,mBAAmB,CAAC,KAAK,QAAQ,CAAC,CAAC,MAAS,EAAE,OAAOvQ,CAAC,CAAE,SAASosD,GAAErtD,EAAE,CAAC,GAAG,EAAE,gBAAgBqtD,IAAG,OAAO,IAAIA,GAAErtD,CAAC,EAAE,IAAIS,EAAET,EAAE,UAAUA,EAAE,KAAKA,EAAEwR,EAAE,KAAK,EAAE,CAAE,EAAC,KAAK,EAAE,CAAE,EAAC,KAAK,EAAE,GAAG,KAAK,SAAS9Q,IAAI,KAAK,KAAK8Q,EAAE/Q,EAAE,KAAKA,EAAE,KAAK6sD,GAAE97C,EAAE,KAAK,CAAC,GAAG,KAAK,KAAK,EAAE+nC,GAAEv5C,EAAE,UAAU,EAAE,KAAK,GAAGwR,EAAE/Q,EAAE,QAAa+Q,IAAL,IAAQ,GAAG,KAAK,MAAMA,GAAG9Q,IAAI,KAAK,GAAG8Q,EAAE/Q,EAAE,MAAM6sD,GAAE97C,EAAE,KAAK,CAAC,EAAE,KAAK,EAAEA,GAAG9Q,IAAI,KAAK,OAAO8Q,EAAExR,EAAE,QAAQ,IAAIssD,GAAE96C,CAAC,EAAExR,EAAE,MAAM,GAAG,KAAK,EAAEA,EAAE,OAAO,KAAK,MAAM,GAAGwR,EAAE9Q,IAAI,IAAIO,EAAER,EAAE,OAAOA,EAAE,OAAOA,EAAEqqD,EAAE7pD,CAAC,IAAIA,EAAE,CAACA,CAAC,GAAG,QAAQ03B,EAAE,EAAEh2B,EAAEyoD,EAAEzyB,EAAE13B,EAAE,OAAO03B,IAAIh2B,EAAE1B,EAAE03B,CAAC,EAAEmyB,EAAEnoD,CAAC,IAAIyoD,EAAEzoD,EAAEA,EAAEA,EAAE,OAAOyoD,EAAEL,GAAEK,CAAC,EAAE,OAAO,OAAO,GAAGprD,EAAEorD,CAAC,EAAEprD,EACzwB,KAAK,IAAIwR,EAAE7O,CAAC,EAAE,IAAIuqD,GAAE9B,CAAC,EAAE55C,EAAE7O,CAAC,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,IAAI6O,EAAE7O,CAAC,EAAE,IAAIi1C,GAAEwT,EAAE,KAAK,QAAQ,GAAG,KAAK,EAAEzyB,CAAC,EAAE20B,GAAE3qD,EAAE,KAAK,CAAC,EAAE,KAAK,EAAEg2B,CAAC,EAAEh2B,EAAE,GAAG,KAAK,EAAE,IAAI3C,EAAES,EAAE,MAAMqqD,EAAE9qD,CAAC,IAAIA,EAAE,CAACA,CAAC,GAAGS,EAAE,EAAEA,EAAET,EAAE,OAAOS,IAAI,KAAK,EAAEA,CAAC,EAAE6sD,GAAEttD,EAAES,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,MAAM+Q,CAAC,CAAC,SAAS87C,GAAEttD,EAAES,EAAE,CAAC,MAAM+Q,EAAExR,EAAE,MAAM,GAAG,EAAE,IAAIiB,EAAE,EAAE,QAAQ03B,EAAE,EAAEA,EAAEnnB,EAAE,OAAOmnB,IAAI34B,EAAEwR,EAAEmnB,CAAC,EAAE,GAAG34B,EAAE,QAAQ,IAAI,IAAIA,EAAEA,EAAE,UAAU,EAAEA,EAAE,OAAO,CAAC,KAAKS,EAAEQ,CAAC,EAAE,IAAIjB,IAAIwR,EAAEvQ,GAAG,EAAEjB,GAAG,OAAAiB,EAAEuQ,EAAE,SAASA,EAAE,OAAOvQ,GAAU,EAAEA,EAAEuQ,EAAEA,EAAE,CAAC,CAAC,CAAC,SAAS+7C,GAAEvtD,EAAES,EAAE,CAAC,GAAGqqD,EAAErqD,CAAC,EAAET,EAAEA,EAAES,CAAC,MAAO,SAAQ+Q,EAAE,EAAExR,GAAGwR,EAAE/Q,EAAE,OAAO+Q,IAAIxR,EAAEA,EAAES,EAAE+Q,CAAC,CAAC,EAAE,OAAOxR,CAAC,CAC5e,SAASwtD,GAAExtD,EAAES,EAAE+Q,EAAEvQ,EAAE03B,EAAE,CAAQ,GAAP34B,EAAEA,EAAE24B,CAAC,EAAK13B,IAAIuQ,EAAE,OAAO,EAAE/Q,EAAEk4B,CAAC,EAAE34B,UAAUA,EAAE,GAAGA,EAAE,cAAc,MAAM,IAAIS,EAAEA,EAAEk4B,CAAC,EAAE,MAAM34B,EAAE,MAAM,EAAE24B,EAAE,EAAEA,EAAE34B,EAAE,OAAO24B,IAAI60B,GAAExtD,EAAES,EAAE+Q,EAAEvQ,EAAE03B,CAAC,OAAOl4B,EAAEA,EAAEk4B,CAAC,IAAIl4B,EAAEk4B,CAAC,EAAEj4B,KAAKi4B,EAAEnnB,EAAE,EAAEvQ,CAAC,EAAEusD,GAAExtD,EAAES,EAAE+Q,EAAEvQ,EAAE03B,CAAC,CAAC,CAAC,SAAS80B,GAAEztD,EAAES,EAAE+Q,EAAEvQ,EAAE03B,EAAEh2B,EAAEyoD,EAAEnqC,EAAE,CAAC,GAAGjhB,EAAEA,EAAEorD,CAAC,EAAE,GAAGnqD,IAAIR,EAAE,OAAO,EAAE,CAAC,GAAGT,EAAE,cAAc,MAAM,CAAC,GAAGwR,EAAEvQ,CAAC,EAAE,CAAC,IAAIR,EAAE,EAAEA,EAAET,EAAE,OAAOS,IAAIk4B,EAAE,IAAIh2B,EAAE3C,EAAES,CAAC,EAAE,GAAG,EAAE,EAAE,MAAM,CAACT,EAAEA,EAAE,KAAK,GAAG,CAAC,CAAC24B,EAAE,IAAIh2B,EAAE3C,EAAEihB,EAAE,EAAE,CAAC,SAASjhB,EAAE,cAAc,MAAM,IAAIorD,EAAE,EAAEA,EAAEprD,EAAE,OAAOorD,IAAIqC,GAAEztD,EAAES,EAAE+Q,EAAEvQ,EAAE03B,EAAEh2B,EAAEyoD,EAAEnqC,CAAC,OAAOmqC,EAAE3qD,EAAE,EAAEQ,CAAC,EAAEwsD,GAAEztD,EAAES,EAAE+Q,EAAEvQ,EAAE03B,EAAEh2B,EAAEyoD,EAAEnqC,CAAC,CAAC,CAACtH,EAAE0zC,GAAE,UAC3d1zC,EAAE,IAAI,SAAS3Z,EAAES,EAAE+Q,EAAE,CAA6B,GAA5Bu5C,GAAE/qD,CAAC,IAAIS,EAAET,EAAEA,EAAEutD,GAAE9sD,EAAE,KAAK,GAAG,GAAMA,IAAIT,GAAOA,IAAJ,GAAO,CAAC,GAAG,CAACwR,GAAG,KAAK,SAASxR,CAAC,EAAE,OAAO,KAAK,OAAOA,EAAES,CAAC,EAAE,QAAQQ,EAAE,EAAE03B,EAAEh2B,EAAE1B,EAAE,KAAK,EAAE,OAAOA,IAAI0B,EAAE,KAAK,EAAE1B,CAAC,EAAE03B,EAAE,KAAK,EAAE13B,CAAC,EAAE6pD,EAAEnyB,CAAC,IAAIA,EAAE,CAACA,CAAC,GAAG80B,GAAEhtD,EAAEk4B,EAAE,KAAK,EAAE,EAAE,KAAK,MAAMh2B,CAAC,EAAE3C,EAAE24B,EAAE,CAAC,EAAEnnB,CAAC,EAAE,GAAG,KAAK,EAAE,CAAC,IAAIvQ,EAAEssD,GAAE9sD,EAAE,KAAK,CAAC,EAAEk4B,EAAEj4B,EAAG,EAACoqD,EAAE7pD,CAAC,IAAIA,EAAE,CAACA,CAAC,GAAG,QAAQ0B,EAAE,EAAEyoD,EAAEnqC,EAAEte,EAAE1B,EAAE,OAAO0B,IAAI,GAAGyoD,EAAEnqD,EAAE0B,CAAC,EAAE,CAACg2B,EAAEyyB,CAAC,IAAIzyB,EAAEyyB,CAAC,EAAE,EAAEnqC,EAAE,KAAK,EAAEmqC,CAAC,IAAI,KAAK,EAAEA,CAAC,EAAE,CAAE,GAAE,CAAC55C,GAAG,CAACyP,EAAE,SAASjhB,CAAC,KAAMihB,EAAEA,EAAE,MAAM,EAAEjhB,EAAE,KAAK,GAAE,CAAC,MAAMgF,EAAE,KAAK,SAAShF,CAAC,IAAI,KAAK,SAASA,CAAC,EAAE,CAAE,GAAEgF,EAAEA,EAAE,MAAM,EAAEic,CAAC,CAAC,CAAC,GAAG,KAAK,QAAQ,CAACzP,GAAG,CAAC,KAAK,MAAMxR,CAAC,GAAG,CAAC,IAAIiB,EAC/f,GAAG,KAAK,EAAE,CAACA,EAAEP,EAAG,EAAC,QAAQi4B,EAAE,EAAEh2B,EAAEg2B,EAAE,KAAK,EAAE,OAAOA,IAAIh2B,EAAE,KAAK,EAAEg2B,CAAC,EAAEmyB,EAAEnoD,CAAC,EAAE1B,EAAE0B,CAAC,EAAElC,EAAEkC,CAAC,EAAE6qD,GAAE/sD,EAAEQ,EAAE0B,EAAE,EAAEA,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,MAAM3C,CAAC,EAAEiB,GAAGR,CAAC,CAAC,CAAC,OAAO,IAAI,EAAEkZ,EAAE,OAAO,SAAS3Z,EAAES,EAAE,CAAC,OAAO,KAAK,IAAIT,EAAES,EAAE,EAAE,CAAC,EAAEkZ,EAAE,OAAO,SAAS3Z,EAAES,EAAE,CAAC,OAAO,KAAK,OAAOT,CAAC,EAAE,IAAIA,EAAES,CAAC,CAAC,EACpOkZ,EAAE,OAAO,SAAS3Z,EAAE,CAAyB,GAAxB+qD,GAAE/qD,CAAC,IAAIA,EAAEutD,GAAEvtD,EAAE,KAAK,GAAG,GAAM,KAAK,SAASA,CAAC,EAAE,CAAC,QAAQS,EAAE,EAAEA,EAAE,KAAK,EAAE,SAAS,KAAK,MAAM,KAAK,EAAEA,CAAC,CAAC,EAAE,OAAOT,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,GAAGS,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,KAAK,EAAE,QAAQ+Q,KAAK,KAAK,EAAE,CAAC/Q,EAAE,KAAK,EAAE+Q,CAAC,EAAE,MAAMvQ,EAAER,EAAE,QAAQT,CAAC,EAAOiB,IAAL,KAAS,EAAER,EAAE,OAAOA,EAAE,OAAOQ,EAAE,CAAC,EAAE,OAAO,KAAK,EAAEuQ,CAAC,EAAE,CAAC,KAAK,OAAO,OAAO,KAAK,MAAMxR,CAAC,EAAE,OAAO,KAAK,SAASA,CAAC,CAAC,CAAC,OAAO,IAAI,EACvV2Z,EAAE,OAAO,SAAS3Z,EAAES,EAAE+Q,EAAEvQ,EAAE,CAACuQ,IAAI,CAAC/Q,GAAGsqD,GAAE/qD,CAAC,GAAGwR,EAAExR,EAAEA,EAAE,IAAI+qD,GAAEtqD,CAAC,IAAI+Q,EAAE/Q,EAAEA,EAAE,IAAI,IAAIk4B,EAAE,GAAGh2B,EAAE,CAAE,EAACyoD,EAAEnqC,EAAEjc,EAAEF,EAAEH,EAAEqnD,EAAEC,EAAE,EAAE,GAAGz6C,EAAE,GAAGA,EAAE,cAAc,MAAMxM,EAAEwM,EAAEA,EAAE,SAAS,CAA8H,GAA7HxR,EAAEwR,EAAE,OAAOxR,EAAEgF,GAAGomD,EAAE55C,EAAE,QAAQA,EAAE,OAAOA,EAAE,MAAM1M,EAAE0M,EAAE,IAAIyP,EAAE,KAAK,OAAOzP,EAAE,OAAO7M,EAAU6M,EAAE,OAAV,MAAe/Q,EAAE+Q,EAAE,OAAO/Q,GAAG,IAAIurD,EAAEx6C,EAAE,QAAQ,EAAK1M,IAAIgmD,EAAEhmD,CAAC,IAAIA,EAAE,CAACA,CAAC,GAAG,CAAC9E,GAAG,CAAC,QAAQghB,EAAE,EAAEmQ,EAAEnQ,EAAElc,EAAE,OAAOkc,KAAOmQ,EAAEu8B,GAAG,KAAK,KAAK5oD,EAAEkc,CAAC,EAAEvgB,EAAEurD,EAAE/qC,CAAC,KAAE0X,EAAEA,EAAE,MAAM,EAAExH,EAAE86B,KAAI,OAAOA,EAAEtzB,EAAE,CAAE,EAACmyB,EAAE9lD,CAAC,IAAIA,EAAE,CAACA,CAAC,EAAE,CAACA,IAAIA,EAAE,KAAK,GAAGL,EAAEA,IAAI,EAAEK,EAAE,QAAQF,GAAG,EAAEA,EAAE,QAAQ,MAAMC,EAAE,CAAC9D,IAAI,KAAK,GAAG,KAAK,QAAQ,GAAG,QAAQ+f,EAAE,EAAEmQ,EAAE+6B,EAAEC,EAAEnrC,EACtfhc,EAAE,OAAOgc,IAAI,CAAC,IAAIqzB,EAAuE,GAArE6X,EAAElnD,EAAEgc,CAAC,EAAE8pC,EAAEoB,CAAC,IAAI7X,EAAE6X,EAAEA,EAAE7X,EAAE,MAAMr0C,EAAEq0C,EAAE,OAAOr0C,EAAES,EAAE4zC,EAAE,OAAO5zC,EAAEwgB,EAAEozB,EAAE,QAAQpzB,GAAMlc,EAAEA,EAAEic,CAAC,EAAE,KAAK,MAAMkrC,CAAC,EAAE,YAAYlsD,EAAES,EAAE4zC,GAAG7iC,CAAC,MAAM,CAAyD,GAAxDvQ,EAAEkwB,EAAElwB,EAAE+f,CAAC,EAAEmQ,EAAE,KAAK,MAAM+6B,CAAC,EAAE,OAAOlsD,EAAES,EAAE4zC,GAAG7iC,CAAC,EAAE26C,EAAEh7B,GAAGA,EAAE,OAAUrsB,GAAGqnD,EAAE,CAAC,MAAMl6B,EAAE,CAAE,EAAC,IAAIm6B,GAAE,EAAEznD,IAAIstB,EAAE,CAAC,EAAE,CAACd,CAAC,GAAG,QAAQw8B,GAAE,EAAEC,EAAGC,GAAEF,GAAE7oD,EAAE,OAAO6oD,KAAOC,EAAG9oD,EAAE6oD,EAAC,GAAExB,GAAG0B,GAAE,KAAK,EAAED,CAAE,IAAIC,GAAE,UAAOzB,KAAIn6B,EAAEA,EAAE,MAAM,EAAEttB,EAAE,CAACkpD,EAAC,EAAEA,IAAEzB,KAAIj7B,EAAExsB,EAAEonD,GAAG95B,EAAExxB,GAAG,IAAIurD,GAAG,CAAC,EAAEK,GAAGl7B,EAAEc,CAAC,EAAEk6B,EAAEh7B,EAAE,OAAO,CAAC,GAAGg7B,EAAExpD,EAAEspD,CAAC,EAAEC,EAAEvzB,EAAEszB,GAAG,EAAE96B,UAAUxsB,EAAE,MAAM,CAAE,EAAC,CAAC,GAAGI,EAAE,CAAC,MAAMic,EAAE,KAAK,OAAO,IAAI,QAAQ,SAASmQ,EAAE,CAAC,QAAQ,IAAIpsB,CAAC,EAAE,KAAK,SAASmnD,EAAE,CAAC/6B,EAAEnQ,EAAE,OAAOhhB,EAChgBS,EAAE+Q,EAAE06C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAACD,EAAE,MAAM,CAAE,EAAC,GAAGb,IAAI,CAACnqC,GAAG,CAAC,KAAK,OAAO,OAAO0X,EAAE,CAAC,EAAE,QAAQ3X,EAAE,EAAEmQ,EAAEnQ,EAAEre,EAAE,OAAOqe,IAAI,CAAyC,GAAxCmQ,EAAEwH,EAAE3X,CAAC,EAAEmQ,EAAE,QAAQlQ,IAAIkQ,EAAE28B,GAAG,KAAK,KAAK38B,CAAC,GAAMi6B,EAAE,OAAOj6B,EAAEwH,EAAE3X,CAAC,EAAE,CAAC,MAAMre,EAAEqe,CAAC,EAAE,OAAOmQ,CAAC,CAAC,CAAC,OAAOwH,CAAC,EAAE,SAAS+0B,GAAG1tD,EAAES,EAAE+Q,EAAEvQ,EAAE,CAAC,IAAI03B,EAAE,KAAK,EAAE34B,CAAC,EAAE2C,EAAEg2B,GAAGA,EAAE,OAAOnnB,EAAE,GAAG7O,GAAG,EAAEA,EAAG,OAAGA,EAAElC,GAAG+Q,KAAEmnB,EAAEA,EAAE,MAAMnnB,EAAEA,EAAE/Q,CAAC,GAAEQ,IAAI03B,EAAEm1B,GAAG,KAAK,KAAKn1B,CAAC,GAAS,CAAC,IAAI34B,EAAE,OAAO24B,CAAC,CAAE,CAAC,SAASm1B,GAAG9tD,EAAE,CAAC,MAAMS,EAAE,MAAMT,EAAE,MAAM,EAAE,QAAQwR,EAAE,EAAEvQ,EAAEuQ,EAAExR,EAAE,OAAOwR,IAAIvQ,EAAEjB,EAAEwR,CAAC,EAAE/Q,EAAE+Q,CAAC,EAAE,CAAC,GAAGvQ,EAAE,IAAI,KAAK,MAAMA,CAAC,CAAC,EAAE,OAAOR,CAAC,CAACkZ,EAAE,QAAQ,SAAS3Z,EAAE,CAAC,MAAM,CAAC,CAAC,KAAK,SAASA,CAAC,CAAC,EAAE2Z,EAAE,IAAI,SAAS3Z,EAAE,CAAC,OAAO,KAAK,MAAMA,CAAC,CAAC,EAC1gB2Z,EAAE,IAAI,SAAS3Z,EAAES,EAAE,CAAC,YAAK,MAAMT,CAAC,EAAES,EAAS,IAAI,EAAEkZ,EAAE,YAAY4yC,GAAG5yC,EAAE,OAAO,SAAS3Z,EAAES,EAAE+Q,EAAEvQ,EAAE03B,EAAEh2B,EAAE,CAAC,IAAIyoD,EAAsE,GAAtD,OAAOzoD,EAArB,MAAyByoD,EAAE,IAAI,QAAQnqC,GAAG,CAACte,EAAEse,CAAC,CAAC,GAAG0X,IAAIA,EAAE,GAAG13B,IAAIA,EAAE,GAAMA,EAAE,KAAK,EAAE,OAAO,CAAC,MAAMggB,EAAE,KAAK,EAAEhgB,CAAC,EAAE+D,EAAE,KAAK,MAAMic,CAAC,EAAExgB,EAAE,KAAK,WAAW,UAAU,CAACuE,EAAE,OAAOhF,EAAES,EAAEk4B,EAAE1X,EAAE,GAAGhgB,EAAE03B,IAAIh2B,CAAC,IAAI1B,IAAI03B,EAAE,EAAEl4B,EAAE,OAAOT,EAAES,EAAEwgB,EAAEhgB,EAAE03B,EAAEh2B,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,IAAIse,EAAEjc,EAAE,OAAO2zB,EAAC,CAAE,IAAK,GAAE1X,EAAE,MAAMjc,EAAE,KAAK,EAAEwM,EAAE,KAAK,MAAM,IAAK,GAAEyP,EAAE,QAAQjc,EAAE,KAAK,MAAMwM,EAAE,KAAK,MAAM,QAAQ7O,EAAG,EAAC,MAAM,CAAC8pD,GAAGzsD,EAAE,KAAKwR,EAAEyP,EAAEhgB,EAAE03B,EAAE3zB,EAAErC,CAAC,CAAC,CAAC,OAAOyoD,CAAC,EACvdzxC,EAAE,OAAO,SAAS3Z,EAAES,EAAE,CAAC,GAAGA,EAAE,OAAOqqD,EAAErqD,CAAC,IAAIA,EAAE,KAAK,MAAMA,CAAC,GAAGT,EAAG,KAAK,MAAM,KAAK,EAAES,EAAE,MAAM,IAAK,MAAM,KAAK,EAAE,GAAG,KAAK,SAASA,EAAE,QAAQQ,EAAE,EAAE03B,EAAE13B,EAAE,KAAK,EAAE,OAAOA,IAAI03B,EAAE,KAAK,MAAM,KAAK,EAAE13B,CAAC,CAAC,EAAE03B,EAAE,SAASl4B,EAAEk4B,EAAE,EAAE,GAAG,MAAM,IAAK,QAAQ,KAAK,MAAMl4B,EAAE,MAAM,QAAQT,EAAEA,EAAE,MAAM,GAAG,EAAE,MAAMwR,EAAExR,EAAE,CAAC,EAAEA,EAAEA,EAAE,CAAC,EAAEwR,GAAGxR,GAAG,KAAK,MAAMwR,CAAC,EAAE,OAAOxR,EAAES,CAAC,CAAC,CAAC,EAAEorD,GAAGwB,GAAE,SAAS,EAAE,IAAIU,GAAG,CAAC,OAAOC,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,MAAMC,GAAG,CAAC1C,EAAE,UAAwC,EAAE,IAAIA,EAAE,QAA4B,EAAE,IAAIA,EAAE,QAA4B,EAAE,IAAIA,EAAE,UAAwC,EAAE,IAAIA,EAAE,SAAkC,EAAE,IAAIA,EAAE,OAAsB,EAAE,IAAIA,EAAE,GAAQ,EAAE,IAAIA,EAAE,MAAW,EAAE,IAAIA,EAAE,GAAQ,EAAE,IAAIA,EAAE,KAAK,EAAE,OAAO,EAAE,SAASyC,GAAGhuD,EAAE,CAAC,IAAIS,EAAET,EAAE,GAAGA,EAAE,OAAAS,EAAE,YAAYA,EAAEA,EAAE,UAAU,KAAK,EAAE,QAAQ4qD,GAAG,EAAE,GAAUJ,GAAE,KAAK,KAAKxqD,EAAE,YAAa,EAAC,CAACT,EAAE,WAAWiuD,EAAE,CAAC,CAAE,IAAIC,GAAG,CAAC,OAAOC,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,MAAMC,GAAG,aAAaC,GAAG,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAS,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,SAASF,GAAGnuD,EAAE,CAACA,EAAEguD,GAAG,KAAK,KAAKhuD,CAAC,EAAE,KAAK,GAAG,EAAE,MAAMS,EAAE,GAAG,GAAGT,EAAE,CAAC,MAAMwR,EAAExR,EAAE,MAAMouD,EAAE,EAAEntD,EAAEuQ,EAAE,OAAO,QAAQmnB,EAAE,EAAEh2B,EAAEyoD,EAAE,EAAEzyB,EAAE13B,EAAE03B,IAAI,IAAI34B,EAAEwR,EAAEmnB,CAAC,KAAK,CAAC,KAAK,QAAQ,CAAC,KAAK,OAAO34B,CAAC,GAAG,CAAC2C,EAAE3C,EAAE,CAAC,EAAE,IAAIihB,EAAEotC,GAAG1rD,CAAC,GAAGA,EAAEqC,EAAEic,EAAE,QAAQnc,EAAE,EAAEA,EAAE9E,EAAE,OAAO8E,IAAI,CAACnC,EAAE3C,EAAE8E,CAAC,EAAE,MAAMH,EAAE0pD,GAAG1rD,CAAC,GAAGA,EAAEgC,GAAGA,IAAIK,IAAIic,GAAGtc,EAAEK,EAAEL,EAAE,CAAClE,EAAE2qD,GAAG,EAAEnqC,CAAC,CAAC,CAAC,OAAOxgB,CAAC,CAAE,IAAI6tD,GAAG,CAAC,OAAOC,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,MAAMC,GAAG,CAACjD,EAAE,IAAI,EAAE,IAAIA,EAAE,IAAI,EAAE,IAAIA,EAAE,IAAI,EAAE,IAAIA,EAAE,IAAI,EAAE,IAAIA,EAAE,IAAI,EAAE,IAAIA,EAAE,IAAI,EAAE,IAAIA,EAAE,qBAAqB,EAAE,GAAGA,EAAE,uBAAuB,EAAE,EAAE,EAAE,SAASgD,GAAGvuD,EAAES,EAAE,CAAC,OAAAT,IAAIA,EAAEmuD,GAAG,KAAK,KAAKnuD,CAAC,EAAE,KAAK,GAAG,EAAE,EAAEA,EAAE,SAASA,EAAEmrD,GAAEnrD,EAAEwuD,EAAE,GAAG/tD,IAAI,EAAET,EAAE,SAASA,EAAEwrD,GAAGxrD,CAAC,GAAGA,IAAIA,EAAEA,EAAE,MAAM,GAAG,KAAYA,GAAG,EAAE,CAAE,IAAIyuD,GAAG,CAAC,OAAOC,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,MAAMC,GAAGpD,EAAE,cAAc,EAAE,SAASmD,GAAG1uD,EAAE,CAAC,OAAAA,IAAIA,EAAEuuD,GAAG,KAAK,KAAKvuD,EAAE,EAAE,EAAE,EAAEA,EAAE,SAASA,EAAEA,EAAE,QAAQ2uD,GAAG,EAAE,GAAG,EAAE3uD,EAAE,SAASA,EAAEwrD,GAAGxrD,CAAC,GAAGA,IAAIA,EAAEA,EAAE,MAAM,GAAG,IAAWA,GAAG,EAAE,CAAE4rD,GAAE,eAAe,EAAEH,GAAGG,GAAE,cAAc,EAAEmC,GAAGnC,GAAE,eAAe,EAAEsC,GAAGtC,GAAE,gBAAgB,EAAE0C,GAAG1C,GAAE,aAAa,EAAE6C,GAAG,MAAeG,GAAA,CAAC,MAAMhX,GAAE,SAASyV,GAAE,OAAOH,GAAE,gBAAgB,SAASltD,EAAES,EAAE,CAACmrD,GAAE5rD,CAAC,EAAES,CAAC,EAAE,iBAAiB,SAAST,EAAES,EAAE,CAACkrD,GAAG3rD,CAAC,EAAES,CAAC,CAAC,ECvBl7DouD,GAAkBD,GAAW,SAC7BE,GAAQF,GAAW,MAOzB,SAASG,GAASC,EAAgB,CAChC,MAAMC,EAAY,KAAK,UACvB,GAAIA,EAAW,CAGb,MAAMC,EAAoB,IAAIJ,GAAM,CAAE,QAAS,gBAAkB,GAC3DK,EAAeD,EAAa,OAAO,KAAKA,CAAY,EAEpDE,EAAe,mCAEfC,EAAY,IAAIJ,EAAU,CAACD,CAAM,EAAG,CAAE,YAAa,OAAQ,EACjE,OAAQx4B,GAAiB,CACvB,MAAM84B,EAAuB,GAatB,OAAC,GAZS,MAAM,KAAKD,EAAU,QAAQ74B,CAAI,CAAC,EAChD,OAAY5nB,GAAA,CACX,GAAIA,EAAE,WAAY,CAChB,GAAI,CAACwgD,EAAa,KAAKxgD,EAAE,OAAO,EACvB,SAEE0gD,EAAA,KAAK1gD,EAAE,OAAO,CAC3B,CACO,QACR,GACA,IAAIA,GAAKA,EAAE,OAAO,EAEA,GAAGugD,EAAaG,EAAW,KAAK,GAAG,CAAC,CAAC,EAE9D,CACA,OAAQ94B,GAECA,EAAK,QAAQ,eAAgB,EAAE,EAAE,MAAM,EAAE,CAEpD,CASA,MAAM+4B,GAAkB,IAEjB,MAAMC,EAAc,CAKzB,YACEj2C,EAEAy1C,EAAS,QACT,CANF,KAAQ,YAA6C,KA4CrD,KAAQ,SAAW,IAAM,CACvB,GAAK,KAAK,YAEV,WAAWpoD,KAAM,KAAK,YAAY,OAAQ,CACxC,MAAMiS,EAAO,KAAK,YAAY,IAAIjS,CAAE,EAChCiS,IACG,iBAAY,OAAOjS,CAAE,EACrB,cAAS,IAAIA,EAAIiS,CAAI,EAE9B,CAEA,WAAW,IAAM,CACV,KAAK,aACV,oBAAoB,KAAK,SAAU,CAAE,QAAS,GAAM,IACnD02C,EAAe,IAnDlB,KAAK,KAAOh2C,EACP,cAAW,IAAIs1C,GAAqC,CACvD,SAAU,CACR,GAAI,KACJ,MAAO,CAAC,UAAW,YAAa,OAAO,EACvC,IAAK,OACL,MAAO,CAAC,QAAS,SAAS,CAC5B,EACA,OAAQE,GAASC,CAAM,EACvB,SAAU,UACV,QAAS,GACV,EACI,qBAAkB,IACvB,KAAK,SAAS,EAGVz1C,EAAA,OAAO,QAAiB6I,GAAA,CACpBA,EAAA,YAAY,QAAkB8+B,GAAA,CAC5B,MAAApiB,EAAO,KAAK,SAASoiB,CAAM,EAC7BpiB,GAAQ,MACL,yBAAoBoiB,EAAQpiB,CAAI,CACvC,CACD,EACF,EAEGwrB,IACK,wBAAiB,eAAgB,IAAM,CAC5C,KAAK,YAAc,KACpB,EAECC,IACM,WAAG,OAAQ,IAAM,CACvB,KAAK,YAAc,KACpB,CAEL,CAmBA,OAAO3wB,EAAqB,CAC1B,OAAO,IAAI,IACT,KAAK,QAAQA,CAAK,EAAE,QAAQ,CAAC,CAAE,OAAAv3B,CAAO,IACpCA,EAAO,IAAI0C,GAAK,CAACA,EAAE,GAAI,CAAE,MAAOA,EAAE,IAAI,MAAO,QAASA,EAAE,IAAI,QAAS,CAAC,CACxE,EAEJ,CAEQ,QAAQ60B,EAAsC,CAChD,cAAOA,GAAU,SACZ,KAAK,SAAS,OAAO,CAC1B,GAAGA,EACH,OAAQ,GACT,EAEM,KAAK,SAAS,OAAOA,EAAO,CACjC,OAAQ,GACT,CAEL,CAEO,iBAAiBsnB,EAAgBpiB,EAAW,CAC3C,MAAAsjB,EAAUtjB,EAAK,OAAO,QAAQ,EAC5BsjB,EAAA,QAAQ,CAACliD,EAAGiF,IAAQ,CAC1B,KAAK,cAAc+7C,EAAQ/7C,EAAK,MAAOi9C,EAAQ,IAAIj9C,CAAG,CAAC,EACxD,CACH,CAEQ,oBAAoB+7C,EAAgBpiB,EAAW,CACrD,GAAI,CAACA,EACH,OAEI,MAAAsjB,EAAUtjB,EAAK,OAAO,QAAQ,EAC/B,sBAAiBoiB,EAAQpiB,CAAI,EAClCsjB,EAAQ,YAAsB/5B,GAAA,CACtB,MAAAriB,EAAOqiB,EAAO,QAAasQ,IAE1BA,EAAE,MAAM,OAAS,GAAK,EAClB,CAAC,CAACA,EAAE,KAAK,CAAC,EAAG,QAAQ,CAAuB,EAE9C,MAAM,KAAKA,EAAE,QAAQ,KAAK,QAAS,GAAE,IAC1C,CAAC,CAAC3zB,EAAG,CAAE,OAAAsrB,CAAQ,KAAM,CAACtrB,EAAGsrB,CAAM,EAElC,EAEGtqB,EAAK,QACPA,EAAK,QAAQ,CAAC,CAACb,EAAKmrB,CAAM,IAAM,CAC9B,KAAK,cAAc4wB,EAAQ/7C,EAAKmrB,EAAQ8xB,EAAQ,IAAIj9C,CAAG,CAAC,EACzD,CACH,CACD,CACH,CAEQ,cACN25B,EACAl4B,EACA0pB,EACApB,EACA,CACA,OAAQoB,EAAQ,CACd,IAAK,MACL,IAAK,SAAU,CACb,GAAIpB,EAAO,CACT,MAAMhV,EAAU,KAAK,WACnBgV,EAAM,IAAI,YAAY,GAAKA,EAAM,IAAI,WAAW,GAE9ChV,GACG,kBAAa,IAAItT,EAAI,CACxB,QAAAsT,EACA,MAAO4kB,EACP,KAAM,CAACA,CAAI,EACZ,CAEL,CACA,KACF,CACA,IAAK,SAAU,CACR,kBAAa,OAAOl4B,CAAE,EACtB,cAAS,OAAOA,CAAE,EACvB,KACF,CACF,CACF,CAEQ,WAAWV,EAAc,CAC/B,GAAIA,EAAK,CACH,UAAOA,GAAQ,SACV,OAAAA,EACT,GAAWA,aAAe4T,EACxB,OAAO5T,EAAI,QAEf,CAEF,CAEQ,SAASf,EAA8B,CACzC,IACF,OAAO,KAAK,KAAK,OAAO,IAAIA,CAAG,OACrB,CACH,MACT,CACF,CACF,CChNO,MAAMsqD,GACXnH,GACE,cAAcA,CAAc,CAG1B,OAAO1uB,EAAqB,CAC1B,OAAO,KAAK,QAAQ,OAAO,OAAOA,CAAK,CACzC,CAEA,YAAY2uB,EAAgC,CAC1C,MAAMA,CAAY,EACZ,MAAAa,EAAe,IAAIS,GAAa,KAAK,IAAK,CAAE,MAAO,KAAK,MAAO,EACrE,KAAK,QAAU,CACb,OAAQ,IAAI2F,GAAc,KAAK,GAAG,EAClC,SAAU,IAAIrG,GAAgBC,CAAY,EAE9C,CACF,ECZEsG,GAAa,OAAO,IAAI,iBAAiB,EAE/C,SAASC,GAAcvkD,EAAkC,CACvD,MAAI,SAAOA,GAAS,UAAYA,IAAS,KAK3C,CAEA,MAAMwkD,GAAgB,CACpB,SACA,cACA,cACA,eACA,YACA,aACA,eACF,EAEgB,SAAAC,GACdC,EACAC,EACY,CACR,IAACJ,GAAcG,CAAa,EACxB,UAAI,MAAM,2CAA2C,EAEvD,MAAA7/C,EAAO6/C,EAAcC,CAAM,EACjC,GAAI,CAAC9/C,EACH,MAAM,IAAI,MACR,mDAAmD8/C,CAAM,KAIvD,MAAA/wB,EAAU/uB,EAAK,aAAa,EAE5BolC,EAAWplC,EAAK,cAAc,EAC9B6kC,EAAQ,OAAO,YACnB,OAAO,QAAQ7kC,CAAI,EAAE,OAAO,CAAC,CAAC9K,CAAG,IAAM,CAACyqD,GAAc,SAASzqD,CAAG,CAAC,GAGrE,MAAI,cAAe2vC,GAASA,EAAM,WAAW,YAAa,QACxDA,EAAM,WAAW,EAAIkb,GAAWlb,EAAM,WAAW,CAAc,GAG7D,eAAgBA,GAASA,EAAM,YAAY,YAAa,QAC1DA,EAAM,YAAY,EAAIkb,GAAWlb,EAAM,YAAY,CAAc,GAG/D,iBAAkBA,GAASA,EAAM,cAAc,YAAa,QAC9DA,EAAM,cAAc,EAAI,UAAUA,EAAM,cAAc,EAAE,MAAM,KAG5D,eAAgBA,GAASA,EAAM,YAAY,YAAa,QAC1DA,EAAM,YAAY,EAAI,UAAUA,EAAM,YAAY,EAAE,MAAM,KAGrD,CACL,SAAU4a,GACV,KAAM1wB,EACN,MAAA8V,EACA,SAAUO,GAAU,IAAIzuC,GAAMipD,GAAcC,EAAelpD,CAAE,CAAC,GAAK,CAAC,EAExE,CAEO,SAASqpD,GAAc12C,EAAY,CACxC,MAAMyJ,EAAgC,GACtC,OAAAzJ,EAAI,MAAM,QAAQ,CAAChU,EAAOJ,IAAQ,CAC5BI,aAAiB45B,EACdnc,EAAA7d,CAAG,EAAI+qD,GAAc3qD,CAAK,EAE1Byd,EAAA7d,CAAG,EAAII,EAAM,OAAO,CAC3B,CACD,EACMyd,CACT,CAEA,SAASmtC,GAAW5qD,EAAyB,CACvC,OAAAA,aAAiBs9C,GACZoN,GAAc1qD,CAAK,EAExBA,aAAiB45B,EACZ+wB,GAAc3qD,CAAK,EAExBA,aAAiBs7B,EACZuvB,GAAe7qD,CAAK,EAEzBA,aAAiB65B,EACZ75B,EAAM,QAAQ,EAAE,IAAS7E,GAAAyvD,GAAWzvD,CAAC,CAAC,EAE3C6E,aAAiB8qD,EACZ9qD,EAAM,SAERA,CACT,CAEA,SAAS2qD,GAAchrD,EAAqB,CAC1C,MAAM8d,EAAgC,GAClC,OAAA9d,EAAA,QAAQ,CAACK,EAAOJ,IAAQ,CACrB6d,EAAA7d,CAAG,EAAIgrD,GAAW5qD,CAAK,EAC7B,EACMyd,CACT,CAOA,SAASotC,GAAe55B,EAAyB,CAExC,OADOA,EAAK,SAErB,CAEA,SAASw5B,GAAWx5B,EAAiB,CAC/B,GAACA,EAAK,OAGV,OAAIA,EAAK,SAAW,GAAK,CAACA,EAAK,CAAC,EAAE,WAEzBA,EAAK,CAAC,EAAE,OAEV,CAKL,SAAUk5B,GACV,KAAM,GACN,MAAO,CAAC,EACR,SAAUl5B,GAAM,IAAI,CAAC,CAAE,OAAA2B,EAAQ,WAAA/B,MAAkB,CAC/C,SAAUs5B,GACV,KAAM,OACN,MAAO,CAEL,OAAAv3B,EACA,GAAG/B,CACL,GACA,EAEN,CCzJO,MAAM2hB,GACXuQ,GACE,cAAcA,CAAc,CAE1B,UAAUqB,EAAkBzI,EAAS,KAAK,KAAK,UAAU,GAAG,CAAC,GAAG,GAAI,CAClE/gD,EAAa+gD,CAAM,EACnB,MAAM3nC,EAAM,KAAK,IAAI,OAAO,IAAI2nC,CAAM,EACtC/gD,EAAaoZ,CAAG,EACV,MAAA+2C,EAAWL,GAAc12C,CAAG,EAClC,GAAI,CAAC+2C,EACH,MAAM,IAAI,MAAM,QAAQpP,CAAM,gBAAgB,EAEhD,MAAMqP,EAAYD,EAAS,OAC3B,GAAI,CAAC3G,EAAS,CACZ,MAAM6G,EAAc,OAAO,KAAKD,CAAS,EAAE,GAAG,CAAC,EAC/C,GAAI,CAACC,EACI,YAEC7G,EAAA6G,CACZ,CACI,OAACD,EAAU5G,CAAO,EAGfkG,GAAcU,EAAW5G,CAAO,EAF9B,IAGX,CACF,EChCG,MAAM8G,EAAiE,CAQ9E,CCuBO,MAAMC,EAAc,CAczB,YAAYn3C,EAAoB,CAbhC,KAAS,GAAa,OAGd,oBAAiB,IAEzB,mBAAgB,IAAI5X,EACpB,qBAAkB,IAAIA,EACtB,sBAAmB,IAAIA,EACvB,yBAAsB,IAAIA,EAuPlB,gCACN0mB,GACG,CACHA,EAAO,QAAasQ,GAAA,CACZ,MAAAg4B,EAAU3rD,GACd2zB,EAAE,SAAW,KAAK,OAASA,EAAE,QAAQ,KAAK,IAAI3zB,CAAC,GAG/C2zB,EAAE,SAAW,KAAK,QAClBA,EAAE,OAAO,SAAW,KAAK,QACzBg4B,EAAO,OAAO,IAEd,KAAK,qBAAqB,GAGxBA,EAAO,MAAM,GAAKA,EAAO,QAAQ,IACnC,KAAK,yBAAyB,CAChC,CACD,GAnQD,KAAK,IAAMp3C,EACX,KAAK,MAAQA,EAAI,OAAO,KAAK,EAAE,EAC/B,KAAK,OAASA,EAAI,YAAwC,KAAK,EAAE,EAC5D,WAAM,YAAY,KAAK,0BAA0B,CACxD,CAEA,IAAI,QAAS,CACJ,YAAK,MAAM,IAAI,OAAO,CAC/B,CAEA,IAAI,OAAQ,CACV,OAAO,KAAK,OAAO,KACrB,CAEA,IAAI,MAAO,CACT,OAAO,KAAK,OAAO,IACrB,CAEA,IAAI,QAAS,CACX,OAAO,KAAK,OAAO,MACrB,CAEA,IAAI,eAAgB,CAClB,OAAO,KAAK,OAAO,aACrB,CAEA,IAAI,kBAAmB,CACrB,OAAO,KAAK,OAAO,gBACrB,CAEA,IAAI,aAAc,CAChB,OAAO,KAAK,OAAO,WACrB,CAEA,QAAQ1J,EAAc,CACf,SAAI,SAAS,IAAM,CACtB,KAAK,OAAO,KAAOA,CAAA,EAClB,KAAK,IAAI,QAAQ,CACtB,CAEA,UAAU+gD,EAAgB,CACnB,SAAI,SAAS,IAAM,CACtB,KAAK,OAAO,OAASA,CAAA,EACpB,KAAK,IAAI,QAAQ,CACtB,CAEA,IAAI,WAAY,CACV,OAAC,KAAK,OAAO,MAGV,CAAC,GAAI,KAAK,OAAO,KAAoB,EAFnC,EAGX,CAEA,YAAYhqD,EAAY,CACtB,OAAO,KAAK,UAAU,KAAak4B,KAAK,KAAOl4B,CAAE,CACnD,CAEA,YAAYk4B,EAAgBt8B,EAAgB,CACrC,SAAI,SAAS,IAAM,CACjB,KAAK,QACH,YAAO,MAAQ,IAEtB,MAAM++C,EAAQ,KAAK,MACf/+C,IAAU,OACZ++C,EAAM,KAAKziB,CAAI,EAETyiB,EAAA,OAAO/+C,EAAO,EAAGs8B,CAAI,CAC7B,EACC,KAAK,IAAI,QAAQ,CACtB,CAKA,YAAYl4B,EAAYkuC,EAA0B,CAEhD,MAAMtyC,GADS,KAAK,OAAwB,IACxB,UAAWs8B,GAAmBl4B,IAAOk4B,EAAK,EAAE,EAE3D,SAAI,SAAS,IAAM,CAItB,GAHK,KAAK,QACH,YAAO,MAAQ,IAElBt8B,IAAU,GAAI,OAClBrC,EAAa,KAAK,KAAK,EAEjB,MAAA2+B,EAAO,KAAK,MAAMt8B,CAAK,EACtB,eAAQsyC,CAAK,EAAE,QAAQ,CAAC,CAAC3vC,EAAKI,CAAK,IAAM,CAC9Cu5B,EAAK35B,CAAG,EAAII,CAAA,CACb,GACA,KAAK,IAAI,QAAQ,CACtB,CAEA,eAAeqB,EAAY,CAEzBzG,EAAa,KAAK,KAAK,EAEvB,MAAMqC,EADY,KAAK,UACC,UAAWs8B,GAAmBl4B,IAAOk4B,EAAK,EAAE,EAChEt8B,IAAU,IAGT,SAAI,SAAS,IAAM,CACtBrC,EAAa,KAAK,KAAK,EAClB,WAAM,OAAOqC,EAAO,CAAC,GACzB,KAAK,IAAI,QAAQ,CACtB,CAEA,IAAI,YAAa,CACX,OAAC,KAAK,eAAiB,CAAC,KAAK,aAAe,CAAC,KAAK,iBAC7C,GAEF,OAAO,KAAK,KAAK,aAAa,EAAE,OAAS,CAClD,CAKA,aAAag+C,EAAsB,CACjC,KAAM,CAAE,cAAA1B,EAAe,YAAAkB,EAAa,iBAAAC,CAAA,EAAqB,KAAK,OAc9D,GAZKA,EAGH,QAAQ,MAAM,kCAAkC,EAFhD,KAAK,OAAO,iBAAmB5f,GAK5B2f,EAGH,QAAQ,MAAM,6BAA6B,EAF3C,KAAK,OAAO,YAAc1f,GAKvBwe,EAOH,QAAQ,MAAM,+BAA+B,MAP3B,CAClB,MAAM+R,EAAoC,GAC1CrQ,EAAU,OAAO,iBAAiB,QAAQ,CAAC5U,EAAQ5M,IAAY,CACnD6xB,EAAA7xB,CAAO,EAAI4M,EAAO,QAC7B,EACD,KAAK,OAAO,cAAgBilB,CAAA,CAIhC,CAEA,cAAcrQ,EAAsB,CAClC,KAAK,OAAO,iBAAmBngB,GAE/B,KAAK,OAAO,YAAcC,GAE1B,MAAMuwB,EAAoC,GAC1CrQ,EAAU,OAAO,iBAAiB,QAAQ,CAAC5U,EAAQ5M,IAAY,CACnD6xB,EAAA7xB,CAAO,EAAI4M,EAAO,QAC7B,EACD,KAAK,OAAO,cAAgBilB,CAC9B,CAKA,gBAAgBrQ,EAAsB,CAC9B,MAAAP,EAAmB,KAAK,OAAO,iBACrC,GAAI,CAACA,EACH,MAAM,IAAI,MACR,6FAGJ,GAAIA,EAAmB5f,GACrB,MAAM,IAAI,MACR,qBAAqB4f,CAAgB,4CAInC,MAAAD,EAAc,KAAK,OAAO,YAChC,GAAI,CAACA,EACH,MAAM,IAAI,MACR,wFAGJ,GAAIA,EAAc1f,GAChB,MAAM,IAAI,MACR,gBAAgB0f,CAAW,4CAI/B,MAAMlB,EAAgB,CAAE,GAAG,KAAK,OAAO,aAAc,EACrD,GAAI,CAACA,EACH,MAAM,IAAI,MACR,wFAGE,MAAAgS,EAAe,OAAO,KAAKhS,CAAa,EAC1C,GAAAgS,EAAa,SAAW,EAC1B,MAAM,IAAI,MACR,uFAIJA,EAAa,QAAuBC,GAAA,CAC5B,MAAAC,EAAclS,EAAciS,CAAW,EACvCE,EACJzQ,EAAU,OAAO,iBAAiB,IAAIuQ,CAAW,GAAG,QACtD,GAAKE,EAIL,IAAWD,EAAcC,EACvB,MAAM,IAAI,MACR,0BAA0BF,CAAW,IAAIC,CAAW,gCAExD,GAAWA,EAAcC,EACvB,MAAM,IAAI,MACR,wCAAwCF,CAAW,IAAIC,CAAW,wEATpE,OAAM,IAAI,MACR,kBAAkBD,CAAW,+DAUjC,CACD,CACH,CAEQ,sBAAuB,CACvB,MAAE,UAAAG,EAAW,WAAAC,CAAe,OAElCD,EAAU,QAAoB1P,GAAA,CACvB2P,EAAW,IAAI3P,EAAS,EAAE,GACxB,mBAAc,KAAKA,EAAS,EAAE,CACrC,CACD,EAED2P,EAAW,QAAsBC,GAAA,CACb,CAACF,EAAU,KAAU//B,KAAE,KAAOigC,CAAU,GAEnD,qBAAgB,KAAKA,CAAU,CACtC,CACD,EAEDD,EAAW,MAAM,EACjBD,EAAU,QAAgBpyB,GAAAqyB,EAAW,IAAIryB,EAAK,EAAE,CAAC,EAEjD,KAAK,iBAAiB,MACxB,CAEQ,0BAA2B,CACjC,KAAK,oBAAoB,MAC3B,CAuBA,IAAI,YAAkC,CAC9B,MAAAjmB,EAAO,KAAK,OAAO,WACzB,OAAKA,GACI,CACL,KAAM,CACJ,QAAS,CAAC,CACZ,EAIN,CAEA,cAAcA,EAA2B,CACvC,KAAK,OAAO,WAAaA,EACzB,KAAK,iBAAiB,MACxB,CACF,sMCtTa,IAAAw4C,GAAN,cAAwBZ,EAAmB,CAchD,YAAYlI,EAAgC,CACpC,QAPA,YACN,aAAc,IAAI5mD,EAClB,UAAW,IAAIA,EACf,YAAa,IAAIA,CAAa,EAK9B,KAAK,QAAU4mD,EAAa,OAEvB,YAAS,IAAIN,GAAMM,CAAY,EAEpC,KAAK,KAAO,IAAImI,GAAc,KAAK,GAAG,EACtC,KAAK,oBAAoB,CAC3B,CAEA,IAAI,IAAK,CACP,OAAO,KAAK,OAAO,EACrB,CAEA,IAAI,SAAU,CACZ,GAAI,KAAK,IAAI,MAAM,QAAQ,OAAS,EAAU,SAE9C,IAAIY,EAAO,GACX,OAAI,KAAK,IAAI,MAAM,QAAQ,OAAS,GACpB,MAAM,KAAK,KAAK,IAAI,MAAM,QAAQ,QAAQ,EAAE,CAAC,EAEjD,QAAU,IACXA,EAAA,IAGJA,CACT,CAEA,IAAI,gBAAiC,CACnC,OAAO,KAAK,OAAO,cACrB,CAEA,IAAI,WAAY,CACd,OAAO,KAAK,OAAO,SACrB,CAEA,IAAI,OAAQ,CACV,OAAO,KAAK,OAAO,MACrB,CAEA,IAAI,KAAM,CACR,OAAO,KAAK,OAAO,GACrB,CAEA,IAAI,aAAc,CAChB,OAAO,KAAK,OAAO,WACrB,CAEA,IAAI,QAAS,CACX,OAAO,KAAK,OACd,CAEA,iBAAiBlJ,EAAqCxhD,EAAa,CACjE,OAAO,KAAK,OAAO,iBAAiBwhD,EAAiBxhD,CAAE,CACzD,CAEQ,SAASs6C,EAAgB,CACxB,YAAK,MAAM,IAAIA,CAAM,CAC9B,CAEA,QAAQA,EAA6B,CAGnC,OAFc,KAAK,MAAM,IAAIA,CAAM,GAEnB,IAClB,CAEQ,qBAAsB,CACvB,UAAK,cAAc,GAAaA,GAAA,CAC7B,MAAApiB,EAAO,IAAImkB,GAAK,CACpB,GAAI/B,EACJ,UAAW,KACX,IAAK,KAAK,IACV,eAAgB,KAAK,eACrB,YAAa,KAAK,OAAO,YAC1B,EACI,YAAO,SAASpiB,CAAI,EACzB,KAAK,MAAM,UAAU,KAAKA,EAAK,EAAE,EAClC,EAEI,UAAK,iBAAiB,GAAG,IAAM,KAAK,MAAM,aAAa,MAAM,EAE7D,UAAK,gBAAgB,GAASl4B,GAAA,CAC3B,MAAAk4B,EAAO,KAAK,QAAQl4B,CAAE,EACvB,YAAO,YAAYk4B,CAAI,EAC5BA,EAAK,OAAO,EACP,WAAM,YAAY,KAAKl4B,CAAE,EAC/B,CACH,CAOA,WAAWM,EAAoC,GAAI,CAE7C,OAAOA,GAAY,WACXA,EAAA,CAAE,GAAIA,GACR,aACN,2GAEM,aACN,0EAKJ,KAAM,CAAE,GAAIg6C,EAAS,KAAK,aAAkB,EAAAh6C,EACxC,QAAK,SAASg6C,CAAM,EAChB,UAAI,MAAM,qBAAqB,EAGvC,YAAK,KAAK,YAAY,CACpB,GAAIA,EACJ,MAAO,GACP,WAAY,CAAC,IAAI,KACjB,KAAM,CAAC,EACR,EACM,KAAK,QAAQA,CAAM,CAC5B,CAGA,YACEA,EAEApM,EACA,CACK,UAAK,YAAYoM,EAAQpM,CAAK,CACrC,CAEA,WAAWoM,EAAgB,CACzB,MAAMM,EAAW,KAAK,KAAK,YAAYN,CAAM,EAC7C/gD,EAAaqhD,CAAQ,EAEf,MAAA1iB,EAAO,KAAK,QAAQoiB,CAAM,EAC3BpiB,IAELA,EAAK,QAAQ,EACR,UAAK,eAAeoiB,CAAM,EAC1B,YAAO,YAAYpiB,CAAI,EAC9B,CACF,EA3JauyB,GACJ,EAAI7D,GADA6D,GAANE,GAAA,CAHN3hD,GACA6/C,GACA1X,EAAA,EACYsZ,EAAA,ECkBb,MAAMG,GACJ,OAAO,WAAe,IAClB,WACA,OAAO,OAAW,IAChB,OAEA,OAAO,OAAW,IAEhB,OACA,CAAC,EACL/yB,GAAmB,2BAGrB+yB,GAAI/yB,EAAgB,IAAM,IAEpB,cACN,mGAIJ+yB,GAAI/yB,EAAgB,EAAI,y5BCxDxB;AAAA;AAAA;AAAA;AAAA,GAKK,MAAC9kB,GAAE,WAAW9Y,GAAE8Y,GAAE,aAAa/K,GAAE/N,GAAEA,GAAE,aAAa,WAAW,CAAC,WAAW8Y,GAAGA,CAAC,CAAC,EAAE,OAAOgf,GAAE,QAAQyyB,GAAE,QAAQ,KAAK,OAAM,EAAG,IAAI,MAAM,CAAC,CAAC,IAAIz6C,GAAE,IAAIy6C,GAAEzmD,GAAE,IAAIgM,EAAC,IAAI5L,GAAE,SAASic,GAAE,IAAIjc,GAAE,cAAc,EAAE,EAAEyM,GAAEmI,GAAUA,IAAP,MAAoB,OAAOA,GAAjB,UAAgC,OAAOA,GAAnB,WAAqB3Z,GAAE,MAAM,QAAQu5C,GAAE5/B,GAAG3Z,GAAE2Z,CAAC,GAAe,OAAOA,IAAI,OAAO,QAAQ,GAAtC,WAAwC1Y,GAAE;AAAA,OAAc0B,GAAE,sDAAsDL,GAAE,OAAOpC,GAAE,KAAK4E,GAAE,OAAO,KAAK7D,EAAC,qBAAqBA,EAAC,KAAKA,EAAC;AAAA,0BAAsC,GAAG,EAAEkwB,GAAE,KAAKlQ,GAAE,KAAKwwC,GAAE,qCAAqCx/B,GAAEtY,GAAG,CAAC9Y,KAAK+N,KAAK,CAAC,WAAW+K,EAAE,QAAQ9Y,EAAE,OAAO+N,CAAC,GAAGlO,GAAEuxB,GAAE,CAAC,EAAExxB,GAAEwxB,GAAE,CAAC,EAAE+5B,GAAE,OAAO,IAAI,cAAc,EAAEoB,EAAE,OAAO,IAAI,aAAa,EAAElB,GAAE,IAAI,QAAQlB,GAAEjmD,GAAE,iBAAiBA,GAAE,GAAG,EAAE,SAAS+lD,GAAEnxC,EAAE9Y,EAAE,CAAC,GAAG,CAAC,MAAM,QAAQ8Y,CAAC,GAAG,CAACA,EAAE,eAAe,KAAK,EAAE,MAAM,MAAM,gCAAgC,EAAE,OAAgB/K,KAAT,OAAWA,GAAE,WAAW/N,CAAC,EAAEA,CAAC,CAAC,MAAM8rD,GAAE,CAAChzC,EAAE9Y,IAAI,CAAC,MAAM+N,EAAE+K,EAAE,OAAO,EAAEhJ,EAAE,CAAE,EAAC,IAAI,EAAEqQ,EAAMngB,IAAJ,EAAM,QAAQ,GAAG2Q,EAAE7O,GAAE,QAAQ9B,EAAE,EAAEA,EAAE+N,EAAE/N,IAAI,CAAC,MAAM+N,EAAE+K,EAAE9Y,CAAC,EAAE,IAAIb,EAAEu5C,EAAEt4C,EAAE,GAAGgxB,EAAE,EAAE,KAAKA,EAAErjB,EAAE,SAAS4C,EAAE,UAAUygB,EAAEsnB,EAAE/nC,EAAE,KAAK5C,CAAC,EAAS2qC,IAAP,OAAWtnB,EAAEzgB,EAAE,UAAUA,IAAI7O,GAAU42C,EAAE,CAAC,IAAX,MAAa/nC,EAAElP,GAAWi3C,EAAE,CAAC,IAAZ,OAAc/nC,EAAEtR,GAAWq5C,EAAE,CAAC,IAAZ,QAAekY,GAAE,KAAKlY,EAAE,CAAC,CAAC,IAAI,EAAE,OAAO,KAAKA,EAAE,CAAC,EAAE,GAAG,GAAG/nC,EAAE1M,IAAYy0C,EAAE,CAAC,IAAZ,SAAgB/nC,EAAE1M,IAAG0M,IAAI1M,GAAQy0C,EAAE,CAAC,IAAT,KAAY/nC,EAAE,GAAG7O,GAAE1B,EAAE,IAAas4C,EAAE,CAAC,IAAZ,OAAct4C,EAAE,IAAIA,EAAEuQ,EAAE,UAAU+nC,EAAE,CAAC,EAAE,OAAOv5C,EAAEu5C,EAAE,CAAC,EAAE/nC,EAAW+nC,EAAE,CAAC,IAAZ,OAAcz0C,GAAQy0C,EAAE,CAAC,IAAT,IAAWt4B,GAAEkQ,IAAG3f,IAAIyP,IAAGzP,IAAI2f,GAAE3f,EAAE1M,GAAE0M,IAAIlP,IAAGkP,IAAItR,GAAEsR,EAAE7O,IAAG6O,EAAE1M,GAAE,EAAE,QAAQ,MAAMpE,EAAE8Q,IAAI1M,IAAG6U,EAAE9Y,EAAE,CAAC,EAAE,WAAW,IAAI,EAAE,IAAI,GAAGmgB,GAAGxP,IAAI7O,GAAEiM,EAAEjK,GAAE1D,GAAG,GAAG0P,EAAE,KAAK3Q,CAAC,EAAE4O,EAAE,MAAM,EAAE3N,CAAC,EAAE03B,GAAE/pB,EAAE,MAAM3N,CAAC,EAAEmqD,GAAE1qD,GAAGkO,EAAEw8C,IAAQnqD,IAAL,GAAOJ,EAAEH,EAAE,CAAC,MAAM,CAACoqD,GAAEnxC,EAAEqH,GAAGrH,EAAE/K,CAAC,GAAG,QAAY/N,IAAJ,EAAM,SAAS,GAAG,EAAE8P,CAAC,CAAC,EAAE,MAAM28C,EAAC,CAAC,YAAY,CAAC,QAAQ3zC,EAAE,WAAW/K,CAAC,EAAE,EAAE,CAAC,IAAI,EAAE,KAAK,MAAM,GAAG,IAAI4C,EAAE,EAAExR,EAAE,EAAE,MAAMu5C,EAAE5/B,EAAE,OAAO,EAAE1Y,EAAE,KAAK,MAAM,CAAC0B,EAAEL,CAAC,EAAEqqD,GAAEhzC,EAAE/K,CAAC,EAAE,GAAG,KAAK,GAAG0+C,GAAE,cAAc3qD,EAAE,CAAC,EAAEqoD,GAAE,YAAY,KAAK,GAAG,QAAYp8C,IAAJ,EAAM,CAAC,MAAM+K,EAAE,KAAK,GAAG,QAAQ,WAAWA,EAAE,YAAY,GAAGA,EAAE,UAAU,CAAC,CAAC,MAAa,EAAEqxC,GAAE,SAAU,KAAtB,MAAyB/pD,EAAE,OAAOs4C,GAAG,CAAC,GAAO,EAAE,WAAN,EAAe,CAAC,GAAG,EAAE,cAAe,EAAC,UAAU5/B,KAAK,EAAE,oBAAoB,GAAGA,EAAE,SAASgf,EAAC,EAAE,CAAC,MAAM93B,EAAEyB,EAAEtC,GAAG,EAAE4O,EAAE,EAAE,aAAa+K,CAAC,EAAE,MAAMyxC,EAAC,EAAEzyB,EAAE,eAAe,KAAK93B,CAAC,EAAEI,EAAE,KAAK,CAAC,KAAK,EAAE,MAAMuQ,EAAE,KAAKmnB,EAAE,CAAC,EAAE,QAAQ/pB,EAAE,KAAW+pB,EAAE,CAAC,IAAT,IAAW3zB,GAAQ2zB,EAAE,CAAC,IAAT,IAAWyzB,GAAQzzB,EAAE,CAAC,IAAT,IAAW2yB,GAAEuC,EAAC,CAAC,EAAE,EAAE,gBAAgBl0C,CAAC,CAAC,MAAMA,EAAE,WAAWyxC,EAAC,IAAInqD,EAAE,KAAK,CAAC,KAAK,EAAE,MAAMuQ,CAAC,CAAC,EAAE,EAAE,gBAAgBmI,CAAC,GAAG,GAAG83C,GAAE,KAAK,EAAE,OAAO,EAAE,CAAC,MAAM93C,EAAE,EAAE,YAAY,MAAMyxC,EAAC,EAAEx8C,EAAE+K,EAAE,OAAO,EAAE,GAAG/K,EAAE,EAAE,CAAC,EAAE,YAAY/N,GAAEA,GAAE,YAAY,GAAG,QAAQA,EAAE,EAAEA,EAAE+N,EAAE/N,IAAI,EAAE,OAAO8Y,EAAE9Y,CAAC,EAAEmgB,GAAC,CAAE,EAAEgqC,GAAE,SAAU,EAAC/pD,EAAE,KAAK,CAAC,KAAK,EAAE,MAAM,EAAEuQ,CAAC,CAAC,EAAE,EAAE,OAAOmI,EAAE/K,CAAC,EAAEoS,IAAG,CAAC,CAAC,CAAC,SAAa,EAAE,WAAN,EAAe,GAAG,EAAE,OAAOrQ,GAAE1P,EAAE,KAAK,CAAC,KAAK,EAAE,MAAMuQ,CAAC,CAAC,MAAM,CAAC,IAAImI,EAAE,GAAG,MAAWA,EAAE,EAAE,KAAK,QAAQyxC,GAAEzxC,EAAE,CAAC,KAA5B,IAAgC1Y,EAAE,KAAK,CAAC,KAAK,EAAE,MAAMuQ,CAAC,CAAC,EAAEmI,GAAGyxC,GAAE,OAAO,CAAC,CAAC55C,GAAG,CAAC,CAAC,OAAO,cAAcmI,EAAE9Y,EAAE,CAAC,MAAM+N,EAAE7J,GAAE,cAAc,UAAU,EAAE,OAAO6J,EAAE,UAAU+K,EAAE/K,CAAC,CAAC,CAAC,SAASgpC,GAAEj+B,EAAE9Y,EAAE+N,EAAE+K,EAAEgf,EAAE,CAAC,GAAG93B,IAAImrD,GAAE,OAAOnrD,EAAE,IAAIuqD,EAAWzyB,IAAT,OAAW/pB,EAAE,OAAO+pB,CAAC,EAAE/pB,EAAE,KAAK,MAAM+B,EAAEa,GAAE3Q,CAAC,EAAE,OAAOA,EAAE,gBAAgB,OAAOuqD,GAAG,cAAcz6C,IAAIy6C,GAAG,OAAO,EAAE,EAAWz6C,IAAT,OAAWy6C,EAAE,QAAQA,EAAE,IAAIz6C,EAAEgJ,CAAC,EAAEyxC,EAAE,KAAKzxC,EAAE/K,EAAE+pB,CAAC,GAAYA,IAAT,QAAY/pB,EAAE,OAAO,CAAE,GAAE+pB,CAAC,EAAEyyB,EAAEx8C,EAAE,KAAKw8C,GAAYA,IAAT,SAAavqD,EAAE+2C,GAAEj+B,EAAEyxC,EAAE,KAAKzxC,EAAE9Y,EAAE,MAAM,EAAEuqD,EAAEzyB,CAAC,GAAG93B,CAAC,CAAC,MAAMqsD,EAAC,CAAC,YAAYvzC,EAAE9Y,EAAE,CAAC,KAAK,KAAK,GAAG,KAAK,KAAK,OAAO,KAAK,KAAK8Y,EAAE,KAAK,KAAK9Y,CAAC,CAAC,IAAI,YAAY,CAAC,OAAO,KAAK,KAAK,UAAU,CAAC,IAAI,MAAM,CAAC,OAAO,KAAK,KAAK,IAAI,CAAC,EAAE8Y,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ9Y,CAAC,EAAE,MAAM+N,CAAC,EAAE,KAAK,KAAK+pB,GAAGhf,GAAG,eAAe5U,IAAG,WAAWlE,EAAE,EAAE,EAAEmqD,GAAE,YAAYryB,EAAE,IAAIyyB,EAAEJ,GAAE,SAAQ,EAAG,EAAE,EAAErmD,EAAE,EAAEqc,EAAEpS,EAAE,CAAC,EAAE,KAAcoS,IAAT,QAAY,CAAC,GAAG,IAAIA,EAAE,MAAM,CAAC,IAAIngB,EAAMmgB,EAAE,OAAN,EAAWngB,EAAE,IAAIyrD,GAAElB,EAAEA,EAAE,YAAY,KAAKzxC,CAAC,EAAMqH,EAAE,OAAN,EAAWngB,EAAE,IAAImgB,EAAE,KAAKoqC,EAAEpqC,EAAE,KAAKA,EAAE,QAAQ,KAAKrH,CAAC,EAAMqH,EAAE,OAAN,IAAangB,EAAE,IAAIirD,GAAEV,EAAE,KAAKzxC,CAAC,GAAG,KAAK,KAAK,KAAK9Y,CAAC,EAAEmgB,EAAEpS,EAAE,EAAEjK,CAAC,CAAC,CAAC,IAAIqc,GAAG,QAAQoqC,EAAEJ,GAAE,SAAU,EAAC,IAAI,CAAC,OAAOA,GAAE,YAAYjmD,GAAE4zB,CAAC,CAAC,EAAEhf,EAAE,CAAC,IAAI9Y,EAAE,EAAE,UAAU+N,KAAK,KAAK,KAAcA,IAAT,SAAsBA,EAAE,UAAX,QAAoBA,EAAE,KAAK+K,EAAE/K,EAAE/N,CAAC,EAAEA,GAAG+N,EAAE,QAAQ,OAAO,GAAGA,EAAE,KAAK+K,EAAE9Y,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,MAAMyrD,EAAC,CAAC,IAAI,MAAM,CAAC,OAAO,KAAK,MAAM,MAAM,KAAK,IAAI,CAAC,YAAY3yC,EAAE9Y,EAAE+N,EAAE+pB,EAAE,CAAC,KAAK,KAAK,EAAE,KAAK,KAAKy0B,EAAE,KAAK,KAAK,OAAO,KAAK,KAAKzzC,EAAE,KAAK,KAAK9Y,EAAE,KAAK,KAAK+N,EAAE,KAAK,QAAQ+pB,EAAE,KAAK,KAAKA,GAAG,aAAa,EAAE,CAAC,IAAI,YAAY,CAAC,IAAIhf,EAAE,KAAK,KAAK,WAAW,MAAM9Y,EAAE,KAAK,KAAK,OAAgBA,IAAT,QAAiB8Y,GAAG,WAAR,KAAmBA,EAAE9Y,EAAE,YAAY8Y,CAAC,CAAC,IAAI,WAAW,CAAC,OAAO,KAAK,IAAI,CAAC,IAAI,SAAS,CAAC,OAAO,KAAK,IAAI,CAAC,KAAKA,EAAE9Y,EAAE,KAAK,CAAC8Y,EAAEi+B,GAAE,KAAKj+B,EAAE9Y,CAAC,EAAE2Q,GAAEmI,CAAC,EAAEA,IAAIyzC,GAASzzC,GAAN,MAAcA,IAAL,IAAQ,KAAK,OAAOyzC,GAAG,KAAK,KAAI,EAAG,KAAK,KAAKA,GAAGzzC,IAAI,KAAK,MAAMA,IAAIqyC,IAAG,KAAK,EAAEryC,CAAC,EAAWA,EAAE,aAAX,OAAsB,KAAK,EAAEA,CAAC,EAAWA,EAAE,WAAX,OAAoB,KAAK,EAAEA,CAAC,EAAE4/B,GAAE5/B,CAAC,EAAE,KAAK,EAAEA,CAAC,EAAE,KAAK,EAAEA,CAAC,CAAC,CAAC,EAAEA,EAAE,CAAC,OAAO,KAAK,KAAK,WAAW,aAAaA,EAAE,KAAK,IAAI,CAAC,CAAC,EAAEA,EAAE,CAAC,KAAK,OAAOA,IAAI,KAAK,KAAI,EAAG,KAAK,KAAK,KAAK,EAAEA,CAAC,EAAE,CAAC,EAAEA,EAAE,CAAC,KAAK,OAAOyzC,GAAG57C,GAAE,KAAK,IAAI,EAAE,KAAK,KAAK,YAAY,KAAKmI,EAAE,KAAK,EAAE5U,GAAE,eAAe4U,CAAC,CAAC,EAAE,KAAK,KAAKA,CAAC,CAAC,EAAEA,EAAE,CAAC,KAAK,CAAC,OAAO9Y,EAAE,WAAW+N,CAAC,EAAE+K,EAAEgf,EAAY,OAAO/pB,GAAjB,SAAmB,KAAK,KAAK+K,CAAC,GAAY/K,EAAE,KAAX,SAAgBA,EAAE,GAAG0+C,GAAE,cAAcxC,GAAEl8C,EAAE,EAAEA,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,OAAO,GAAGA,GAAG,GAAG,KAAK,MAAM,OAAO+pB,EAAE,KAAK,KAAK,EAAE93B,CAAC,MAAM,CAAC,MAAM8Y,EAAE,IAAIuzC,GAAEv0B,EAAE,IAAI,EAAE/pB,EAAE+K,EAAE,EAAE,KAAK,OAAO,EAAEA,EAAE,EAAE9Y,CAAC,EAAE,KAAK,EAAE+N,CAAC,EAAE,KAAK,KAAK+K,CAAC,CAAC,CAAC,KAAKA,EAAE,CAAC,IAAI9Y,EAAEqrD,GAAE,IAAIvyC,EAAE,OAAO,EAAE,OAAgB9Y,IAAT,QAAYqrD,GAAE,IAAIvyC,EAAE,QAAQ9Y,EAAE,IAAIysD,GAAE3zC,CAAC,CAAC,EAAE9Y,CAAC,CAAC,EAAE8Y,EAAE,CAAC3Z,GAAE,KAAK,IAAI,IAAI,KAAK,KAAK,CAAE,EAAC,KAAK,KAAM,GAAE,MAAMa,EAAE,KAAK,KAAK,IAAI+N,EAAE+pB,EAAE,EAAE,UAAUyyB,KAAKzxC,EAAEgf,IAAI93B,EAAE,OAAOA,EAAE,KAAK+N,EAAE,IAAI09C,GAAE,KAAK,EAAEtrC,GAAC,CAAE,EAAE,KAAK,EAAEA,IAAG,EAAE,KAAK,KAAK,OAAO,CAAC,EAAEpS,EAAE/N,EAAE83B,CAAC,EAAE/pB,EAAE,KAAKw8C,CAAC,EAAEzyB,IAAIA,EAAE93B,EAAE,SAAS,KAAK,KAAK+N,GAAGA,EAAE,KAAK,YAAY+pB,CAAC,EAAE93B,EAAE,OAAO83B,EAAE,CAAC,KAAKhf,EAAE,KAAK,KAAK,YAAY9Y,EAAE,CAAC,IAAI,KAAK,OAAO,GAAG,GAAGA,CAAC,EAAE8Y,GAAGA,IAAI,KAAK,MAAM,CAAC,MAAM9Y,EAAE8Y,EAAE,YAAYA,EAAE,OAAQ,EAACA,EAAE9Y,CAAC,CAAC,CAAC,aAAa8Y,EAAE,CAAU,KAAK,OAAd,SAAqB,KAAK,KAAKA,EAAE,KAAK,OAAOA,CAAC,EAAE,CAAC,CAAC,MAAMk0C,EAAC,CAAC,IAAI,SAAS,CAAC,OAAO,KAAK,QAAQ,OAAO,CAAC,IAAI,MAAM,CAAC,OAAO,KAAK,KAAK,IAAI,CAAC,YAAYl0C,EAAE9Y,EAAE+N,EAAE+pB,EAAEyyB,EAAE,CAAC,KAAK,KAAK,EAAE,KAAK,KAAKgC,EAAE,KAAK,KAAK,OAAO,KAAK,QAAQzzC,EAAE,KAAK,KAAK9Y,EAAE,KAAK,KAAK83B,EAAE,KAAK,QAAQyyB,EAAEx8C,EAAE,OAAO,GAAQA,EAAE,CAAC,IAAR,IAAgBA,EAAE,CAAC,IAAR,IAAW,KAAK,KAAK,MAAMA,EAAE,OAAO,CAAC,EAAE,KAAK,IAAI,MAAM,EAAE,KAAK,QAAQA,GAAG,KAAK,KAAKw+C,CAAC,CAAC,KAAKzzC,EAAE9Y,EAAE,KAAK+N,EAAE+pB,EAAE,CAAC,MAAMyyB,EAAE,KAAK,QAAQ,IAAI,EAAE,GAAG,GAAYA,IAAT,OAAWzxC,EAAEi+B,GAAE,KAAKj+B,EAAE9Y,EAAE,CAAC,EAAE,EAAE,CAAC2Q,GAAEmI,CAAC,GAAGA,IAAI,KAAK,MAAMA,IAAIqyC,GAAE,IAAI,KAAK,KAAKryC,OAAO,CAAC,MAAMgf,EAAEhf,EAAE,IAAIhV,EAAEI,EAAE,IAAI4U,EAAEyxC,EAAE,CAAC,EAAEzmD,EAAE,EAAEA,EAAEymD,EAAE,OAAO,EAAEzmD,IAAII,EAAE6yC,GAAE,KAAKjf,EAAE/pB,EAAEjK,CAAC,EAAE9D,EAAE8D,CAAC,EAAEI,IAAIinD,KAAIjnD,EAAE,KAAK,KAAKJ,CAAC,GAAG,IAAI,CAAC6M,GAAEzM,CAAC,GAAGA,IAAI,KAAK,KAAKJ,CAAC,EAAEI,IAAIqoD,EAAEzzC,EAAEyzC,EAAEzzC,IAAIyzC,IAAIzzC,IAAI5U,GAAG,IAAIqmD,EAAEzmD,EAAE,CAAC,GAAG,KAAK,KAAKA,CAAC,EAAEI,CAAC,CAAC,GAAG,CAAC4zB,GAAG,KAAK,EAAEhf,CAAC,CAAC,CAAC,EAAEA,EAAE,CAACA,IAAIyzC,EAAE,KAAK,QAAQ,gBAAgB,KAAK,IAAI,EAAE,KAAK,QAAQ,aAAa,KAAK,KAAKzzC,GAAG,EAAE,CAAC,CAAC,CAAC,MAAM3U,WAAU6oD,EAAC,CAAC,aAAa,CAAC,MAAM,GAAG,SAAS,EAAE,KAAK,KAAK,CAAC,CAAC,EAAEl0C,EAAE,CAAC,KAAK,QAAQ,KAAK,IAAI,EAAEA,IAAIyzC,EAAE,OAAOzzC,CAAC,CAAC,CAAC,MAAMyyC,WAAUyB,EAAC,CAAC,aAAa,CAAC,MAAM,GAAG,SAAS,EAAE,KAAK,KAAK,CAAC,CAAC,EAAEl0C,EAAE,CAAC,KAAK,QAAQ,gBAAgB,KAAK,KAAK,CAAC,CAACA,GAAGA,IAAIyzC,CAAC,CAAC,CAAC,CAAC,MAAM9B,WAAUuC,EAAC,CAAC,YAAYl0C,EAAE9Y,EAAE+N,EAAE+pB,EAAEyyB,EAAE,CAAC,MAAMzxC,EAAE9Y,EAAE+N,EAAE+pB,EAAEyyB,CAAC,EAAE,KAAK,KAAK,CAAC,CAAC,KAAKzxC,EAAE9Y,EAAE,KAAK,CAAC,IAAI8Y,EAAEi+B,GAAE,KAAKj+B,EAAE9Y,EAAE,CAAC,GAAGusD,KAAKpB,GAAE,OAAO,MAAMp9C,EAAE,KAAK,KAAK+pB,EAAEhf,IAAIyzC,GAAGx+C,IAAIw+C,GAAGzzC,EAAE,UAAU/K,EAAE,SAAS+K,EAAE,OAAO/K,EAAE,MAAM+K,EAAE,UAAU/K,EAAE,QAAQw8C,EAAEzxC,IAAIyzC,IAAIx+C,IAAIw+C,GAAGz0B,GAAGA,GAAG,KAAK,QAAQ,oBAAoB,KAAK,KAAK,KAAK/pB,CAAC,EAAEw8C,GAAG,KAAK,QAAQ,iBAAiB,KAAK,KAAK,KAAKzxC,CAAC,EAAE,KAAK,KAAKA,CAAC,CAAC,YAAYA,EAAE,CAAa,OAAO,KAAK,MAAxB,WAA6B,KAAK,KAAK,KAAK,KAAK,SAAS,MAAM,KAAK,QAAQA,CAAC,EAAE,KAAK,KAAK,YAAYA,CAAC,CAAC,CAAC,CAAC,MAAMmyC,EAAC,CAAC,YAAYnyC,EAAE9Y,EAAE+N,EAAE,CAAC,KAAK,QAAQ+K,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,OAAO,KAAK,KAAK9Y,EAAE,KAAK,QAAQ+N,CAAC,CAAC,IAAI,MAAM,CAAC,OAAO,KAAK,KAAK,IAAI,CAAC,KAAK+K,EAAE,CAACi+B,GAAE,KAAKj+B,CAAC,CAAC,CAAC,CAAM,MAAC06B,GAAE,CAAC,EAAE1b,GAAE,EAAEyyB,GAAE,EAAEz6C,GAAE,EAAE,EAAE,EAAEg8C,GAAE,EAAEO,GAAE,EAAE3T,GAAE,EAAE3B,GAAE,EAAE0U,GAAE,EAAEuB,GAAE,EAAAzB,GAAE,EAAEd,GAAE,EAAEtmD,GAAE,EAAE8mD,EAAC,EAAE2B,GAAE9zC,GAAE,uBAAuB8zC,KAAIH,GAAEhB,EAAC,GAAG3yC,GAAE,kBAAkB,IAAI,KAAK,OAAO,EAAO,MAAC1D,GAAE,CAAC0D,EAAE9Y,EAAE+N,IAAI,CAAC,MAAM+pB,EAAE/pB,GAAG,cAAc/N,EAAE,IAAIuqD,EAAEzyB,EAAE,WAAW,GAAYyyB,IAAT,OAAW,CAAC,MAAMzxC,EAAE/K,GAAG,cAAc,KAAK+pB,EAAE,WAAWyyB,EAAE,IAAIkB,GAAEzrD,EAAE,aAAamgB,GAAC,EAAGrH,CAAC,EAAEA,EAAE,OAAO/K,GAAG,CAAE,EAAC,CAAC,OAAOw8C,EAAE,KAAKzxC,CAAC,EAAEyxC,CAAC,ECJp4N;AAAA;AAAA;AAAA;AAAA,GAIQ,MAACzyB,GAAE,OAAO,IAAI,EAAE,EAAEhoB,GAAEgJ,GAAG,CAAC,GAAGA,GAAG,IAAIgf,GAAE,OAAOhf,GAAG,YAAY,EAAE9Y,GAAE8Y,IAAI,CAAC,aAAaA,EAAE,EAAEgf,EAAC,GAAG/pB,GAAE,CAAC+K,KAAK5U,KAAK,CAAC,aAAaA,EAAE,OAAQ,CAACA,EAAE4zB,EAAEhoB,IAAI5L,GAAG4U,GAAG,CAAC,GAAYA,EAAE,eAAX,OAAwB,OAAOA,EAAE,aAAa,MAAM,MAAM,kEAAkEA,CAAC;AAAA,+CAAsG,CAAC,GAAGgf,CAAC,EAAEhf,EAAEhJ,EAAE,CAAC,EAAGgJ,EAAE,CAAC,CAAC,EAAE,EAAEgf,EAAC,GAAG34B,GAAE,IAAI,IAAIghB,GAAErH,GAAG,CAAC5U,KAAK4zB,IAAI,CAAC,MAAM93B,EAAE83B,EAAE,OAAO,IAAI/pB,EAAEoS,EAAE,MAAMrc,EAAE,GAAG40C,EAAE,CAAE,EAAC,IAAI,EAAEkY,EAAE,EAAE9uD,EAAE,GAAG,KAAK8uD,EAAE5wD,GAAG,CAAC,IAAI,EAAEkE,EAAE0sD,CAAC,EAAEA,EAAE5wD,IAAamgB,EAAE2X,EAAE84B,CAAC,GAAE7iD,EAAE+B,GAAEqQ,CAAC,KAAtB,SAA0B,GAAGpS,EAAE7J,EAAE,EAAE0sD,CAAC,EAAE9uD,EAAE,GAAG8uD,IAAI5wD,GAAG04C,EAAE,KAAKv4B,CAAC,EAAErc,EAAE,KAAK,CAAC,EAAE8sD,GAAG,CAAC,GAAGA,IAAI5wD,GAAG8D,EAAE,KAAKI,EAAElE,CAAC,CAAC,EAAE8B,EAAE,CAAC,MAAMgX,EAAEhV,EAAE,KAAK,SAAS,GAAYI,EAAE/E,GAAE,IAAI2Z,CAAC,KAAnB,SAAwBhV,EAAE,IAAIA,EAAE3E,GAAE,IAAI2Z,EAAE5U,EAAEJ,CAAC,GAAGg0B,EAAE4gB,CAAC,CAAC,OAAO5/B,EAAE5U,EAAE,GAAG4zB,CAAC,CAAC,EAAEh0B,GAAEqc,GAAErH,EAAC","names":["isPrimitive","a","assertType","_","assertExists","val","message","assertNotExists","isEqual","expected","b","x","obj1","obj2","i","assertEquals","assertInstanceOf","DisposableGroup","d","target","type","handler","eventOptions","disposeAll","flattenDisposables","disposables","disposable","err","Slot","selector","callback","config","prevState","filter","equalityFn","state","nextState","testFun","result","v","newCallback","index","dispose","prevEmitting","f","that","create","last","arr","appendTo","dest","src","from","some","unfold","len","array","isArray","fromCharCode","toLowerCase","trimLeftRegex","trimLeft","fromCamelCaseRegex","fromCamelCase","separator","match","_encodeUtf8Polyfill","str","encodedString","buf","utf8TextEncoder","_encodeUtf8Native","encodeUtf8","utf8TextDecoder","repeat","source","n","array.unfold","copy","m","r","k","setIfUndefined","map","key","createT","set","res","value","any","undefinedToNull","VarStoragePolyfill","newValue","_localStorage","usePolyfill","varStorage","assign","keys","forEach","obj","length","isEmpty","_k","every","hasProperty","equalFlat","callAll","fs","args","id","equalityStrict","equalityDeep","object.length","object.hasProperty","isOneOf","options","define_process_env_default","floor","abs","min","max","isNegativeZero","BIT1","BIT2","BIT3","BIT4","BIT6","BIT7","BIT8","BITS5","BITS6","BITS7","BITS31","MAX_SAFE_INTEGER","isInteger","num","math.floor","Encoder","createEncoder","encoder","toUint8Array","uint8arr","curPos","verifyLen","bufferLen","math.max","write","writeUint8","writeVarUint","binary.BITS7","binary.BIT8","writeVarInt","isNegative","math.isNegativeZero","binary.BITS6","binary.BIT7","_strBuffer","_maxStrBSize","_writeVarStringNative","written","string.utf8TextEncoder","writeVarUint8Array","string.encodeUtf8","_writeVarStringPolyfill","writeVarString","writeBinaryEncoder","append","writeUint8Array","uint8Array","cpos","leftCopyLen","math.min","rightCopyLen","writeOnDataView","dview","writeFloat32","writeFloat64","writeBigInt64","floatTestBed","isFloat32","writeAny","data","number.isInteger","math.abs","binary.BITS31","array.isArray","RleEncoder","writer","flushUintOptRleEncoder","UintOptRleEncoder","flushIntDiffOptRleEncoder","encodedDiff","IntDiffOptRleEncoder","StringEncoder","string","methodUnimplemented","unexpectedCase","errorUnexpectedEndOfArray","error.create","errorIntegerOutOfRange","Decoder","createDecoder","hasContent","decoder","readUint8Array","view","readVarUint8Array","readVarUint","readUint8","mult","number.MAX_SAFE_INTEGER","readVarInt","sign","_readVarStringPolyfill","remainingLen","nextLen","bytes","_readVarStringNative","string.utf8TextDecoder","readVarString","readFromDataView","dv","readFloat32","readFloat64","readBigInt64","readAnyLookupTable","readAny","RleDecoder","reader","UintOptRleDecoder","IntDiffOptRleDecoder","diff","hasCount","StringDecoder","end","createUint8ArrayFromLen","toBase64Browser","s","string.fromCharCode","toBase64Node","toBase64","env.isBrowser","copyUint8Array","newBuf","sha","input","hash","MemoryBlobManager","_key","blobId","ref","getAssetName","assets","blob","name","ext","ASTWalkerContext","parentProp","node","stack","ele","parent","BaseAdapter","configs","ASTWalker","fn","oNode","tNode","o","item","Observable","map.create","map.setIfUndefined","set.create","_f","observers","array.from","getRandomValues","uint32","uuidv4Template","uuidv4","c","getUnixTime","Pair","left","right","mapToStyleString","map.map","BOLD","symbol.create","UNBOLD","BLUE","GREY","GREEN","RED","PURPLE","ORANGE","UNCOLOR","computeNoColorLoggingArgs","logArgs","arg","_browserStyleMap","common.BOLD","pair.create","common.UNBOLD","common.BLUE","common.GREEN","common.GREY","common.RED","common.PURPLE","common.ORANGE","common.UNCOLOR","computeBrowserLoggingArgs","strBuilder","styles","currentStyle","style","dom.mapToStyleString","computeLoggingArgs","env.supportsColor","common.computeNoColorLoggingArgs","print","vconsoles","vc","warn","createIterator","next","iteratorFilter","iterator","iteratorMap","fmap","done","AbstractConnector","ydoc","awareness","DeleteItem","clock","DeleteSet","iterateDeletedStructs","transaction","ds","deletes","clientid","structs","del","iterateStructs","findIndexDS","dis","midindex","mid","midclock","isDeleted","sortAndMergeDeleteSet","dels","j","mergeDeleteSets","dss","merged","dssI","delsLeft","client","array.appendTo","addToDeleteSet","createDeleteSet","createDeleteSetFromStructStore","ss","dsitems","struct","writeDeleteSet","encoding.writeVarUint","readDeleteSet","numClients","decoding.readVarUint","numberOfDeletes","dsField","readAndApplyDeleteSet","store","unappliedDS","getState","clockEnd","findIndexSS","splitItem","UpdateEncoderV2","equalDeleteSets","ds1","ds2","deleteItems1","deleteItems2","di1","di2","generateNewClientId","random.uint32","Doc","guid","random.uuidv4","collectionid","gc","gcFilter","meta","autoLoad","shouldLoad","StructStore","promise.create","resolve","provideSyncedPromise","eventHandler","isSynced","transact","doc","origin","TypeConstructor","AbstractType","t","Constr","YArray","YText","YMap","YXmlFragment","subdoc","content","eventName","DSDecoderV1","UpdateDecoderV1","createID","decoding.readUint8","decoding.readVarString","decoding.readAny","buffer.copyUint8Array","decoding.readVarUint8Array","DSDecoderV2","UpdateDecoderV2","decoding.IntDiffOptRleDecoder","decoding.UintOptRleDecoder","decoding.RleDecoder","decoding.StringDecoder","ID","keyClock","DSEncoderV1","encoding.createEncoder","encoding.toUint8Array","UpdateEncoderV1","info","encoding.writeUint8","encoding.writeVarString","isYKey","encoding.writeAny","encoding.writeVarUint8Array","embed","DSEncoderV2","error.unexpectedCase","encoding.IntDiffOptRleEncoder","encoding.UintOptRleEncoder","encoding.RleEncoder","encoding.StringEncoder","encoding.writeUint8Array","writeStructs","startNewStructs","firstStruct","writeClientsStructs","_sm","sm","getStateVector","_clock","readClientsStructRefs","clientRefs","numOfStateUpdates","numberOfStructs","refs","binary.BITS5","GC","Skip","cantCopyParentInfo","Item","binary.BIT6","readItemContent","integrateStructs","clientsStructRefs","clientsStructRefsIds","getNextStructTarget","nextStructsTarget","curStructsTarget","restStructs","missingSV","updateMissingSv","mclock","stackHead","addStackToRestSS","unapplicableItems","offset","missing","structRefs","writeStructsFromTransaction","readUpdateV2","transactionOrigin","structDecoder","retry","pending","mergeUpdatesV2","dsRest","pendingDSUpdate","decoding.createDecoder","dsRest2","update","applyUpdateV2","readUpdate","YDecoder","applyUpdate","writeStateAsUpdate","targetStateVector","encodeStateAsUpdateV2","encodedTargetStateVector","decodeStateVector","updates","diffUpdateV2","mergeUpdates","convertUpdateFormatV2ToV1","encodeStateAsUpdate","readStateVector","ssLength","decodedState","writeStateVector","sv","writeDocumentStateVector","encodeStateVectorV2","encodeStateVector","EventHandler","createEventHandler","addEventHandlerListener","removeEventHandlerListener","l","g","callEventHandlerListeners","arg0","arg1","f.callAll","compareIDs","writeID","readID","findRootTypeKey","isParentOf","child","logType","PermanentUserData","storeType","initUser","user","userDescription","ids","addClientId","event","encodedDs","users","_event","userOverwrite","_userDescription","yds","RelativePosition","tname","assoc","relativePositionToJSON","rpos","json","createRelativePositionFromJSON","AbsolutePosition","createAbsolutePosition","createRelativePosition","typeid","createRelativePositionFromTypeIndex","writeRelativePosition","encoding.writeVarInt","encodeRelativePosition","readRelativePosition","itemID","decoding.hasContent","decoding.readVarInt","decodeRelativePosition","createAbsolutePositionFromRelativePosition","rightID","typeID","followRedone","ContentType","compareRelativePositions","Snapshot","equalSnapshots","snap1","snap2","sv1","sv2","dsitems1","dsitems2","dsitem1","dsitem2","encodeSnapshotV2","snapshot","encodeSnapshot","decodeSnapshotV2","decodeSnapshot","createSnapshot","emptySnapshot","isVisible","splitSnapshotAffectedStructs","getItemCleanStart","_item","createDocFromSnapshot","originDoc","newDoc","size","lastStructIndex","snapshotContainsUpdateV2","updateDecoder","lazyDecoder","LazyStructReader","curr","mergedDS","snapshotContainsUpdate","lastStruct","addStruct","find","getItem","findIndexCleanStart","getItemCleanEnd","replaceStruct","newStruct","clockStart","Transaction","local","writeUpdateMessageFromTransaction","map.any","addChangedTypeToTransaction","parentSub","tryToMergeWithLefts","pos","tryGcDeleteSet","deleteItems","di","deleteItem","endDeleteItemClock","si","tryMergeDeleteSet","mostRightIndexToCheck","tryGc","cleanupTransactions","transactionCleanups","mergeStructs","subs","itemtype","events","event1","event2","cleanupYTextAfterTransaction","beforeClock","firstChangePos","replacedStructPos","logging.print","logging.ORANGE","logging.BOLD","logging.UNBOLD","logging.RED","subdocsAdded","subdocsLoaded","subdocsRemoved","initialCall","finishCleanup","StackItem","deletions","insertions","clearUndoManagerStackItem","tr","um","stackItem","keepItem","popStackItem","undoManager","eventType","_tr","scope","itemsToRedo","itemsToDelete","performedChange","redoItem","subProps","changedParentTypes","UndoManager","typeScope","captureTimeout","captureTransaction","deleteFilter","trackedOrigins","ignoreRemoteMapChanges","undoing","redoing","endClock","startClock","now","time.getUnixTime","didAdd","lastOp","changeEvent","ytypes","ytype","yt","logging.warn","clearUndoStack","clearRedoStack","lazyStructReaderGenerator","filterSkips","logUpdate","logUpdateV2","decodeUpdate","decodeUpdateV2","LazyStructWriter","encodeStateVectorFromUpdateV2","YEncoder","currClient","stopCounting","currClock","enc","encoding.writeBinaryEncoder","encodeStateVectorFromUpdate","parseUpdateMetaV2","to","parseUpdateMeta","sliceStruct","leftItem","updateDecoders","lazyStructDecoders","currWrite","updateEncoder","lazyStructEncoder","dec","dec1","dec2","clockDiff","currDecoder","firstClient","iterated","writeStructToLazyStructWriter","finishLazyStructWriting","lazyStructWriter","svClock","diffUpdate","flushLazyStructWriter","lazyWriter","restEncoder","partStructs","convertUpdateFormat","blockTransformer","createObfuscator","formatting","subdocs","yxml","mapKeyCache","nodeNameCache","formattingKeyCache","formattingValueCache","block","ContentDeleted","YXmlElement","YXmlHook","ContentAny","ContentBinary","ContentDoc","ContentEmbed","ContentFormat","ContentJSON","ContentString","string.repeat","obfuscateUpdate","opts","obfuscateUpdateV2","convertUpdateFormatV1ToV2","f.id","errorComputeChanges","YEvent","getPathTo","action","oldValue","prev","array.last","changes","added","deleted","delta","packOp","path","maxSearchMarker","globalSearchMarkerTimestamp","ArraySearchMarker","p","refreshMarkerTimestamp","marker","overwriteMarker","markPosition","searchMarker","pm","findMarker","yarray","pindex","updateMarkerChanges","getTypeChildren","callTypeObservers","changedType","y","error.methodUnimplemented","_encoder","_parentSubs","typeListSlice","start","cs","typeListToArray","typeListToArraySnapshot","typeListForEach","typeListMap","typeListCreateIterator","currentContent","currentContentIndex","typeListGet","typeListInsertGenericsAfter","referenceItem","ownClientId","jsonContent","packJsonContent","lengthExceeded","typeListInsertGenerics","startIndex","typeListPushGenerics","maxMarker","currMarker","typeListDelete","startLength","typeMapDelete","typeMapSet","typeMapGet","typeMapGetAll","typeMapHas","typeMapGetSnapshot","typeMapGetAllSnapshot","createMapIterator","iterator.iteratorFilter","entry","YArrayEvent","items","el","parentSubs","YArrayRefID","readYArray","_decoder","YMapEvent","ymap","entries","iterator.iteratorMap","_value","YMapRefID","readYMap","equalAttrs","object.equalFlat","ItemTextListPosition","currentAttributes","updateCurrentAttributes","findNextPosition","count","findPosition","useSearchMarker","insertNegatedAttributes","currPos","negatedAttributes","nextFormat","format","minimizeAttributeChanges","attributes","insertAttributes","currentVal","insertText","text","_val","formatText","iterationLoop","attr","newlines","cleanupFormattingGap","startAttributes","currAttributes","endFormats","cf","cleanups","reachedCurr","startAttrValue","cleanupContextlessFormattingGap","attrs","cleanupYTextFormatting","map.copy","needFullCleanup","afterClock","yText","deleteText","startAttrs","YTextEvent","ytext","sub","oldAttributes","insert","retain","deleteLen","addOp","op","object.isEmpty","object.assign","curVal","e","sanitize","ins","prevSnapshot","computeYChange","ops","packStr","addAttributes","computeDelta","cur","attributeName","attributeValue","YTextRefID","readYText","YXmlTreeWalker","root","first","query","element","YXmlEvent","xml","_document","hooks","binding","fragment","xmlType","refItem","pc","YXmlFragmentRefID","readYXmlFragment","nodeName","object.forEach","stringBuilder","keysLen","attrsString","dom","YXmlElementRefID","readYXmlElement","hookName","hook","YXmlHookRefID","readYXmlHook","YXmlText","nestedNodes","YXmlTextRefID","readYXmlText","AbstractStruct","encodingRef","structGCRefNumber","readContentBinary","readContentDeleted","createDocFromOpts","readContentDoc","readContentEmbed","_offset","_right","_transaction","readContentFormat","readContentJSON","readContentAny","firstCharCode","readContentString","typeRefs","readContentType","nextID","keep","rightItem","isDeletedByUndoStack","array.some","redoitems","ownClientID","redone","parentItem","parentType","leftTrace","rightTrace","nextClock","nextId","redoneItem","rightOrigin","binary.BIT2","isMarked","binary.BIT4","binary.BIT1","doKeep","binary.BIT3","doDelete","conflictingItems","itemsBeforeOrigin","parentGCd","ykey","contentRefs","structSkipRefNumber","glo","importIdentifier","pageMigrations","oldPageVersion","pageDoc","blocks","page","surface","flavour","elements","frameModel","Y.Map","Y.Array","workspaceMigrations","rootDoc","createIndexeddbStorage","database","db","mimeTypeDb","idbPromise","__vitePreload","createStore","idb","get","createMemoryStorage","memoryStorage","createSimpleServerStorage","localCache","response","WORKSPACE_VERSION","PAGE_VERSION","SCHEMA_NOT_FOUND_MESSAGE","TEXT_UNIQ_IDENTIFIER","NATIVE_UNIQ_IDENTIFIER","SYS_KEYS","Boxed","Text","Y.Text","deltas","tmpIndex","rightDeltas","insertRight","rightYText","other","begin","charNum","contentText","contentLen","isLastOp","isFirstOp","isPureObject","native2Y","deep","transform","yArray","yMap","y2Native","yAbstract","BaseReactiveYData","proxies","ReactiveYArray","_source","_ySource","_options","receiver","reactive","yData","createYProxy","proxied","change","proxyList","prop","ReactiveYMap","current","stashProp","proxy","popProp","util","assertIs","_arg","assertNever","_x","validKeys","filtered","object","checker","joinValues","objectUtil","second","ZodParsedType","getParsedType","ZodIssueCode","quotelessJson","ZodError","issues","actualProto","_mapper","mapper","issue","fieldErrors","processError","error","formErrors","errorMap","_ctx","overrideErrorMap","setErrorMap","getErrorMap","makeIssue","params","errorMaps","issueData","fullPath","fullIssue","errorMessage","maps","EMPTY_PATH","addIssueToContext","ctx","ParseStatus","status","results","arrayValue","INVALID","pairs","syncPairs","pair","finalObject","DIRTY","OK","isAborted","isDirty","isValid","isAsync","errorUtil","ParseInputLazyPath","handleResult","processCreateParams","invalid_type_error","required_error","description","iss","ZodType","def","_a","maybeAsyncResult","check","getIssueProperties","setError","refinementData","refinement","ZodEffects","ZodFirstPartyTypeKind","ZodOptional","ZodNullable","ZodArray","ZodPromise","option","ZodUnion","incoming","ZodIntersection","defaultValueFunc","ZodDefault","ZodBranded","catchValueFunc","ZodCatch","This","ZodPipeline","ZodReadonly","cuidRegex","cuid2Regex","ulidRegex","uuidRegex","emailRegex","_emojiRegex","emojiRegex","ipv4Regex","ipv6Regex","datetimeRegex","isValidIP","ip","version","ZodString","tooBig","tooSmall","regex","validation","minLength","maxLength","ch","floatSafeRemainder","step","valDecCount","stepDecCount","decCount","valInt","stepInt","ZodNumber","kind","inclusive","ZodBigInt","ZodBoolean","ZodDate","minDate","maxDate","ZodSymbol","ZodUndefined","ZodNull","ZodAny","ZodUnknown","ZodNever","ZodVoid","schema","deepPartialify","ZodObject","newShape","fieldSchema","ZodTuple","shape","shapeKeys","extraKeys","keyValidator","unknownKeys","catchall","_b","_c","_d","defaultError","augmentation","merging","mask","newField","createZodEnum","handleResults","unionErrors","childCtx","dirty","types","getDiscriminator","ZodLazy","ZodLiteral","ZodEnum","ZodNativeEnum","ZodDiscriminatedUnion","discriminator","discriminatorValue","optionsMap","discriminatorValues","mergeValues","aType","bType","bKeys","sharedKeys","newObj","sharedValue","newArray","itemA","itemB","handleParsed","parsedLeft","parsedRight","itemIndex","rest","schemas","ZodRecord","keyType","valueType","third","ZodMap","finalMap","ZodSet","finalizeSet","parsedSet","minSize","maxSize","ZodFunction","makeArgsIssue","makeReturnsIssue","returns","me","parsedArgs","parsedReturns","returnType","func","getter","values","expectedValues","enumValues","opt","nativeEnumValues","promisified","effect","checkCtx","processed","executeRefinement","acc","inner","base","preprocess","newCtx","ZodNaN","BRAND","inResult","custom","fatal","_fatal","p2","late","instanceOfType","cls","stringType","numberType","nanType","bigIntType","booleanType","dateType","symbolType","undefinedType","nullType","anyType","unknownType","neverType","voidType","arrayType","objectType","strictObjectType","unionType","discriminatedUnionType","intersectionType","tupleType","recordType","mapType","setType","functionType","lazyType","literalType","enumType","nativeEnumType","promiseType","effectsType","optionalType","nullableType","preprocessType","pipelineType","ostring","onumber","oboolean","coerce","NEVER","z","FlavourSchema","ParentSchema","ContentSchema","role","RoleSchema","internalPrimitives","BlockSchema","defineBlockSchema","props","metadata","onUpgrade","toModel","transformer","MagicProps","BlockModel","children","balancedMatch","balanced","maybeMatch","range","reg","begs","beg","ai","bi","require$$0","braceExpansion","expandTop","escSlash","escOpen","escClose","escComma","escPeriod","numeric","escapeBraces","unescapeBraces","parseCommaParts","parts","pre","body","post","postParts","expand","embrace","isPadded","lte","gte","isTop","expansions","expansion","isNumericSequence","isAlphaSequence","isSequence","isOptions","N","width","incr","test","reverse","pad","need","MAX_PATTERN_LENGTH","assertValidPattern","pattern","posixClasses","braceEscape","regexpEscape","rangesToString","ranges","parseClass","glob","position","negs","sawStart","uflag","escaping","negate","endPos","rangeStart","WHILE","unip","u","neg","sranges","snegs","unescape","windowsPathsNoEscape","isExtglobType","startNoTraversal","startNoDot","addPatternStart","justDots","reSpecials","regExpEscape","qmark","star","starNoEmpty","AST","#root","#hasMagic","#uflag","#parts","#parent","#parentIndex","#negs","#filledNegs","#options","#toString","#emptyExt","#fillNegs","pp","part","ret","pl","#parseAST","ast","inBrace","braceStart","braceNeg","re","hasMagic","flags","allowDot","dot","noEmpty","#parseGlob","aps","needNoTrav","needNoDot","repeated","#partsToRegExp","bodyDotAllowed","final","close","_hasMagic","needUflag","consumed","magic","escape","Block","yBlock","yChildren","keyName","evtArr","evt","defaultProps","yValue","model","kInternalError","BlockSuiteError","code","MigrationError","SchemaValidateError","Schema","parentFlavour","childFlavours","validateChildren","childFlavour","childSchema","parentSchema","rootData","migration","oldBlockVersions","pageData","currentVersion","oldVersion","blockData","currentSchema","blockVersions","blockSchema","childRole","parentRole","minimatch","_childFlavour","_parentFlavour","childValidFlavours","parentValidFlavour","childValidFlavour","AssetsManager","toJSON","fromJSON","BaseBlockTransformer","propsJson","_props","Slice","models","pageVersion","workspaceVersion","BlockSnapshotSchema","SliceSnapshotSchema","WorkspaceInfoSnapshotSchema","PageMetaSchema","PageSnapshotSchema","Job","workspace","middlewares","snapshotLeaf","pageSnapshot","workspaceMeta","properties","currentProperties","newOptions","currentOptions","slice","pageId","workspaceId","contentSnapshot","contentBlocks","middleware","pages","pageMeta","workspaceTags","tag","modelData","nanoid","byte","createAutoIncrementIdGenerator","createAutoIncrementIdGeneratorByClientId","clientId","uuidv4IdGenerator","nanoidGenerator","assertValidChildren","yBlocks","syncBlockProps","encodeWorkspaceAsYjsUpdateV2","Y.encodeStateAsUpdateV2","BlockTree","initialProps","Space","awarenessStore","subDoc","Y.Doc","loaded","promise","shouldTransact","Page","idGenerator","blockFlavour","flavours","targetId","findParent","parentId","parentModel","childId","parentIndex","blockProps","clonedProps","blocksToMove","newParent","targetSibling","shouldInsertBeforeSibling","childBlocksPerParent","parentBlock","childrenBlocksOfCurrentParent","insertIndex","targetParentChildren","sourceParentChildren","idsOfBlocksToMove","targetIndex","callBackOrProps","isCallback","targetModel","place","bringChildrenTo","deleteChildren","yModelChildren","yParentChildren","modelIndex","dl","_yBlocks","Y.UndoManager","initFn","exports","module","main","_i","merge","clone","isPlainObject","recursive","_merge","output","_recursiveMerge","extend","isClone","isRecursive","outdatedTimeout","Awareness","remove","removeAwarenessStates","clientID","currLocalMeta","updated","filteredUpdated","removed","f.equalityDeep","field","clients","curMeta","encodeAwarenessUpdate","states","applyAwarenessUpdate","timestamp","clientMeta","AwarenessStore","defaultFlags","upstreamFlags","oldFlags","space","rd","selection","BlockSuiteDoc","spaces","Generator","FLAGS_PRESET","Store","providerCreators","creator","providerCreator","provider","originalClass","storeOptions","found","storage","diffArray","before","after","compare","add","unchanged","elem","afterElem","beforeElem","BacklinkIndexer","blockIndexer","targetPageId","backlinkIndexMapCache","fromPageId","blockMap","fromBlockId","links","blockId","previousLink","BlockIndexer","immediately","slots","yPage","disposeMap","observer","indexEvent","agent","platform","IS_WEB","IS_NODE","IS_SAFARI","IS_FIREFOX","IS_IOS","IS_MAC","IS_WINDOWS","aa","C","D","E","F","ba","G","h","ca","I","J","da","fa","ea","ha","K","ia","L","ja","w","q","A","B","H","ka","M","la","na","oa","O","P","pa","qa","ra","Q","sa","ta","S","ua","T","U","V","X","Y","Z","va","W","ma","R","wa","ya","xa","za","Ba","Aa","Ca","Da","Fa","Ea","Ga","Ia","Ha","Ja","FlexSearch","DocumentIndexer","Index","tokenize","locale","tokenizer","latinIndexer","latinEncoder","latinChecker","segmenter","latinChars","REINDEX_TIMEOUT","SearchIndexer","indexer","testSymbol","isValidRecord","IGNORED_PROPS","yDocToJSXNode","serializedDoc","nodeId","parseDelta","serializeYDoc","serializeYMap","serializeY","serializeYText","Y.AbstractType","pageJson","blockJson","pageBlockId","WorkspaceAddonType","WorkspaceMeta","hasKey","avatar","_versions","dataFlavours","dataFlavour","dataVersion","editorVersion","pageMetas","_prevPages","prevPageId","Workspace","flag","__decorateClass","env","$"],"sources":["../../../global/src/utils/assert.ts","../../../global/src/utils/disposable.ts","../../../global/src/utils/slot.ts","../../../../node_modules/.pnpm/lib0@0.2.88/node_modules/lib0/set.js","../../../../node_modules/.pnpm/lib0@0.2.88/node_modules/lib0/array.js","../../../../node_modules/.pnpm/lib0@0.2.88/node_modules/lib0/string.js","../../../../node_modules/.pnpm/lib0@0.2.88/node_modules/lib0/map.js","../../../../node_modules/.pnpm/lib0@0.2.88/node_modules/lib0/conditions.js","../../../../node_modules/.pnpm/lib0@0.2.88/node_modules/lib0/storage.js","../../../../node_modules/.pnpm/lib0@0.2.88/node_modules/lib0/object.js","../../../../node_modules/.pnpm/lib0@0.2.88/node_modules/lib0/function.js","../../../../node_modules/.pnpm/lib0@0.2.88/node_modules/lib0/environment.js","../../../../node_modules/.pnpm/lib0@0.2.88/node_modules/lib0/math.js","../../../../node_modules/.pnpm/lib0@0.2.88/node_modules/lib0/binary.js","../../../../node_modules/.pnpm/lib0@0.2.88/node_modules/lib0/number.js","../../../../node_modules/.pnpm/lib0@0.2.88/node_modules/lib0/encoding.js","../../../../node_modules/.pnpm/lib0@0.2.88/node_modules/lib0/error.js","../../../../node_modules/.pnpm/lib0@0.2.88/node_modules/lib0/decoding.js","../../../../node_modules/.pnpm/lib0@0.2.88/node_modules/lib0/buffer.js","../../../store/src/persistence/blob/utils.ts","../../../store/src/adapter/assets.ts","../../../store/src/adapter/context.ts","../../../store/src/adapter/base.ts","../../../../node_modules/.pnpm/lib0@0.2.88/node_modules/lib0/observable.js","../../../../node_modules/.pnpm/lib0@0.2.88/node_modules/lib0/webcrypto.js","../../../../node_modules/.pnpm/lib0@0.2.88/node_modules/lib0/random.js","../../../../node_modules/.pnpm/lib0@0.2.88/node_modules/lib0/time.js","../../../../node_modules/.pnpm/lib0@0.2.88/node_modules/lib0/promise.js","../../../../node_modules/.pnpm/lib0@0.2.88/node_modules/lib0/pair.js","../../../../node_modules/.pnpm/lib0@0.2.88/node_modules/lib0/dom.js","../../../../node_modules/.pnpm/lib0@0.2.88/node_modules/lib0/symbol.js","../../../../node_modules/.pnpm/lib0@0.2.88/node_modules/lib0/logging.common.js","../../../../node_modules/.pnpm/lib0@0.2.88/node_modules/lib0/logging.js","../../../../node_modules/.pnpm/lib0@0.2.88/node_modules/lib0/iterator.js","../../../../node_modules/.pnpm/yjs@13.6.11/node_modules/yjs/dist/yjs.mjs","../../../store/src/migration/migrate-page.ts","../../../store/src/migration/migrate-workspace.ts","../../../store/src/persistence/blob/indexeddb-storage.ts","../../../store/src/persistence/blob/memory-storage.ts","../../../store/src/persistence/blob/mock-server-storage.ts","../../../store/src/consts.ts","../../../store/src/reactive/boxed.ts","../../../store/src/reactive/text.ts","../../../store/src/reactive/utils.ts","../../../store/src/reactive/proxy.ts","../../../../node_modules/.pnpm/zod@3.22.4/node_modules/zod/lib/index.mjs","../../../store/src/schema/base.ts","../../../../node_modules/.pnpm/balanced-match@1.0.2/node_modules/balanced-match/index.js","../../../../node_modules/.pnpm/brace-expansion@2.0.1/node_modules/brace-expansion/index.js","../../../../node_modules/.pnpm/minimatch@9.0.3/node_modules/minimatch/dist/mjs/assert-valid-pattern.js","../../../../node_modules/.pnpm/minimatch@9.0.3/node_modules/minimatch/dist/mjs/brace-expressions.js","../../../../node_modules/.pnpm/minimatch@9.0.3/node_modules/minimatch/dist/mjs/unescape.js","../../../../node_modules/.pnpm/minimatch@9.0.3/node_modules/minimatch/dist/mjs/ast.js","../../../../node_modules/.pnpm/minimatch@9.0.3/node_modules/minimatch/dist/mjs/escape.js","../../../../node_modules/.pnpm/minimatch@9.0.3/node_modules/minimatch/dist/mjs/index.js","../../../store/src/workspace/block/block.ts","../../../store/src/schema/error.ts","../../../store/src/schema/schema.ts","../../../store/src/transformer/assets.ts","../../../store/src/transformer/json.ts","../../../store/src/transformer/base.ts","../../../store/src/transformer/slice.ts","../../../store/src/transformer/type.ts","../../../store/src/transformer/job.ts","../../../../node_modules/.pnpm/nanoid@5.0.4/node_modules/nanoid/index.browser.js","../../../store/src/utils/id-generator.ts","../../../store/src/utils/utils.ts","../../../store/src/workspace/block/block-tree.ts","../../../store/src/workspace/space.ts","../../../store/src/workspace/page.ts","../../../../node_modules/.pnpm/merge@2.1.1/node_modules/merge/lib/src/index.js","../../../../node_modules/.pnpm/y-protocols@1.0.6_yjs@13.6.11/node_modules/y-protocols/awareness.js","../../../store/src/yjs/awareness.ts","../../../store/src/yjs/doc.ts","../../../store/src/workspace/store.ts","../../../store/src/workspace/addon/blob.ts","../../../store/src/indexer/backlink.ts","../../../store/src/indexer/base.ts","../../../global/src/env/index.ts","../../../../node_modules/.pnpm/flexsearch@0.7.43/node_modules/flexsearch/dist/flexsearch.bundle.module.min.js","../../../store/src/indexer/search.ts","../../../store/src/workspace/addon/indexer.ts","../../../store/src/utils/jsx.ts","../../../store/src/workspace/addon/test.ts","../../../store/src/workspace/addon/type.ts","../../../store/src/workspace/meta.ts","../../../store/src/workspace/workspace.ts","../../../store/src/index.ts","../../../../node_modules/.pnpm/lit-html@3.1.1/node_modules/lit-html/lit-html.js","../../../../node_modules/.pnpm/lit-html@3.1.1/node_modules/lit-html/static.js"],"sourcesContent":["// https://stackoverflow.com/questions/31538010/test-if-a-variable-is-a-primitive-rather-than-an-object\nexport function isPrimitive(\n  a: unknown\n): a is null | undefined | boolean | number | string {\n  return a !== Object(a);\n}\n\nexport function assertType<T>(_: unknown): asserts _ is T {}\n\nexport function assertExists<T>(\n  val: T | null | undefined,\n  message: string | Error = 'val does not exist'\n): asserts val is T {\n  if (val === null || val === undefined) {\n    if (message instanceof Error) {\n      throw message;\n    }\n    throw new Error(message);\n  }\n}\n\nexport function assertNotExists<T>(\n  val: T | null | undefined,\n  message = 'val exists'\n): asserts val is null | undefined {\n  if (val !== null && val !== undefined) {\n    throw new Error(message);\n  }\n}\n\nexport type Equals<X, Y> =\n  ///\n  (<T>() => T extends X ? 1 : 2) extends <T>() => T extends Y ? 1 : 2\n    ? true\n    : false;\n\ntype Allowed =\n  | unknown\n  | void\n  | null\n  | undefined\n  | boolean\n  | number\n  | string\n  | unknown[]\n  | object;\nexport function isEqual<T extends Allowed, U extends T>(\n  val: T,\n  expected: U\n): Equals<T, U> {\n  const a = isPrimitive(val);\n  const b = isPrimitive(expected);\n  if (a && b) {\n    if (!Object.is(val, expected)) {\n      return false as Equals<T, U>;\n    }\n  } else if (a !== b) {\n    return false as Equals<T, U>;\n  } else {\n    if (Array.isArray(val) && Array.isArray(expected)) {\n      if (val.length !== expected.length) {\n        return false as Equals<T, U>;\n      }\n      return val.every((x, i) => isEqual(x, expected[i])) as Equals<T, U>;\n    } else if (typeof val === 'object' && typeof expected === 'object') {\n      const obj1 = Object.entries(val as Record<string, unknown>);\n      const obj2 = Object.entries(expected as Record<string, unknown>);\n      if (obj1.length !== obj2.length) {\n        return false as Equals<T, U>;\n      }\n      return obj1.every((x, i) => isEqual(x, obj2[i])) as Equals<T, U>;\n    }\n  }\n  return true as Equals<T, U>;\n}\nexport function assertEquals<T extends Allowed, U extends T>(\n  val: T,\n  expected: U,\n  message = 'val is not same as expected'\n): asserts val is U {\n  if (!isEqual(val, expected)) {\n    throw new Error(message);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype Class<T> = new (...args: any[]) => T;\n\nexport function assertInstanceOf<T>(\n  val: unknown,\n  expected: Class<T>,\n  message = 'val is not instance of expected'\n): asserts val is T {\n  if (!(val instanceof expected)) {\n    throw new Error(message);\n  }\n}\n","type DisposeCallback = () => void;\n\nexport interface Disposable {\n  dispose: DisposeCallback;\n}\n\nexport class DisposableGroup implements Disposable {\n  private _disposed = false;\n  private _disposables: Disposable[] = [];\n\n  get disposed() {\n    return this._disposed;\n  }\n\n  /**\n   * Add to group to be disposed with others.\n   * This will be immediately disposed if this group has already been disposed.\n   */\n  add(d: Disposable | DisposeCallback) {\n    if (typeof d === 'function') {\n      if (this._disposed) d();\n      else this._disposables.push({ dispose: d });\n    } else {\n      if (this._disposed) d.dispose();\n      else this._disposables.push(d);\n    }\n  }\n\n  addFromEvent<N extends keyof WindowEventMap>(\n    element: Window,\n    eventName: N,\n    handler: (e: WindowEventMap[N]) => void,\n    options?: boolean | AddEventListenerOptions\n  ): void;\n  addFromEvent<N extends keyof DocumentEventMap>(\n    element: Document,\n    eventName: N,\n    handler: (e: DocumentEventMap[N]) => void,\n    eventOptions?: boolean | AddEventListenerOptions\n  ): void;\n  addFromEvent<N extends keyof HTMLElementEventMap>(\n    element: HTMLElement,\n    eventName: N,\n    handler: (e: HTMLElementEventMap[N]) => void,\n    eventOptions?: boolean | AddEventListenerOptions\n  ): void;\n  addFromEvent(\n    target: HTMLElement | Window | Document,\n    type: string,\n    handler: (e: Event) => void,\n    eventOptions?: boolean | AddEventListenerOptions\n  ) {\n    this.add({\n      dispose: () => {\n        target.removeEventListener(type, handler as () => void, eventOptions);\n      },\n    });\n    target.addEventListener(type, handler as () => void, eventOptions);\n  }\n\n  dispose() {\n    disposeAll(this._disposables);\n    this._disposables = [];\n    this._disposed = true;\n  }\n}\n\nexport function flattenDisposables(disposables: Disposable[]): Disposable {\n  return {\n    dispose: () => disposeAll(disposables),\n  };\n}\n\nfunction disposeAll(disposables: Disposable[]) {\n  for (const disposable of disposables) {\n    try {\n      disposable.dispose();\n    } catch (err) {\n      console.error(err);\n    }\n  }\n}\n","import { type Disposable, flattenDisposables } from './disposable.js';\n\n// Credits to blocky-editor\n// https://github.com/vincentdchan/blocky-editor\nexport class Slot<T = void> implements Disposable {\n  private _emitting = false;\n  private _callbacks: ((v: T) => unknown)[] = [];\n  private _disposables: Disposable[] = [];\n\n  filter(testFun: (v: T) => boolean): Slot<T> {\n    const result = new Slot<T>();\n    // if result is disposed, dispose this too\n    result._disposables.push({ dispose: () => this.dispose() });\n\n    this.on((v: T) => {\n      if (testFun(v)) {\n        result.emit(v);\n      }\n    });\n\n    return result;\n  }\n\n  on(callback: (v: T) => unknown): Disposable {\n    if (this._emitting) {\n      const newCallback = [...this._callbacks, callback];\n      this._callbacks = newCallback;\n    } else {\n      this._callbacks.push(callback);\n    }\n    return {\n      dispose: () => {\n        if (this._emitting) {\n          this._callbacks = this._callbacks.filter(v => v !== callback);\n        } else {\n          const index = this._callbacks.indexOf(callback);\n          if (index > -1) {\n            this._callbacks.splice(index, 1); // remove one item only\n          }\n        }\n      },\n    };\n  }\n\n  subscribe = <U>(\n    selector: (state: T) => U,\n    callback: (value: U) => void,\n    config?: {\n      equalityFn?: (a: U, b: U) => boolean;\n      filter?: (state: T) => boolean;\n    }\n  ) => {\n    let prevState: U | undefined;\n    const { filter, equalityFn = Object.is } = config ?? {};\n    return this.on(state => {\n      if (filter && !filter(state)) {\n        return;\n      }\n      const nextState = selector(state);\n      if (prevState === undefined || !equalityFn(prevState, nextState)) {\n        callback(nextState);\n        prevState = nextState;\n      }\n    });\n  };\n\n  once(callback: (v: T) => unknown): Disposable {\n    let dispose: Disposable['dispose'] | undefined = undefined;\n    const handler = (v: T) => {\n      callback(v);\n      if (dispose) {\n        dispose();\n      }\n    };\n    const disposable = this.on(handler);\n    dispose = disposable.dispose;\n    return disposable;\n  }\n\n  unshift(callback: (v: T) => unknown): Disposable {\n    if (this._emitting) {\n      const newCallback = [callback, ...this._callbacks];\n      this._callbacks = newCallback;\n    } else {\n      this._callbacks.unshift(callback);\n    }\n    return {\n      dispose: () => {\n        if (this._emitting) {\n          this._callbacks = this._callbacks.filter(v => v !== callback);\n        } else {\n          const index = this._callbacks.indexOf(callback);\n          if (index > -1) {\n            this._callbacks.splice(index, 1); // remove one item only\n          }\n        }\n      },\n    };\n  }\n\n  emit(v: T) {\n    const prevEmitting = this._emitting;\n    this._emitting = true;\n    this._callbacks.forEach(f => {\n      try {\n        f(v);\n      } catch (err) {\n        console.error(err);\n      }\n    });\n    this._emitting = prevEmitting;\n  }\n\n  pipe(that: Slot<T>): Slot<T> {\n    this._callbacks.push(v => that.emit(v));\n    return this;\n  }\n\n  dispose() {\n    flattenDisposables(this._disposables).dispose();\n    this._callbacks = [];\n    this._disposables = [];\n  }\n\n  toDispose(disposables: Disposable[]): Slot<T> {\n    disposables.push(this);\n    return this;\n  }\n}\n","/**\n * Utility module to work with sets.\n *\n * @module set\n */\n\nexport const create = () => new Set()\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {Array<T>}\n */\nexport const toArray = set => Array.from(set)\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {T}\n */\nexport const first = set =>\n  set.values().next().value || undefined\n\n/**\n * @template T\n * @param {Iterable<T>} entries\n * @return {Set<T>}\n */\nexport const from = entries => new Set(entries)\n","/**\n * Utility module to work with Arrays.\n *\n * @module array\n */\n\nimport * as set from './set.js'\n\n/**\n * Return the last element of an array. The element must exist\n *\n * @template L\n * @param {ArrayLike<L>} arr\n * @return {L}\n */\nexport const last = arr => arr[arr.length - 1]\n\n/**\n * @template C\n * @return {Array<C>}\n */\nexport const create = () => /** @type {Array<C>} */ ([])\n\n/**\n * @template D\n * @param {Array<D>} a\n * @return {Array<D>}\n */\nexport const copy = a => /** @type {Array<D>} */ (a.slice())\n\n/**\n * Append elements from src to dest\n *\n * @template M\n * @param {Array<M>} dest\n * @param {Array<M>} src\n */\nexport const appendTo = (dest, src) => {\n  for (let i = 0; i < src.length; i++) {\n    dest.push(src[i])\n  }\n}\n\n/**\n * Transforms something array-like to an actual Array.\n *\n * @function\n * @template T\n * @param {ArrayLike<T>|Iterable<T>} arraylike\n * @return {T}\n */\nexport const from = Array.from\n\n/**\n * True iff condition holds on every element in the Array.\n *\n * @function\n * @template ITEM\n * @template {ArrayLike<ITEM>} ARR\n *\n * @param {ARR} arr\n * @param {function(ITEM, number, ARR):boolean} f\n * @return {boolean}\n */\nexport const every = (arr, f) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (!f(arr[i], i, arr)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * True iff condition holds on some element in the Array.\n *\n * @function\n * @template S\n * @template {ArrayLike<S>} ARR\n * @param {ARR} arr\n * @param {function(S, number, ARR):boolean} f\n * @return {boolean}\n */\nexport const some = (arr, f) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (f(arr[i], i, arr)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @template ELEM\n *\n * @param {ArrayLike<ELEM>} a\n * @param {ArrayLike<ELEM>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a.length === b.length && every(a, (item, index) => item === b[index])\n\n/**\n * @template ELEM\n * @param {Array<Array<ELEM>>} arr\n * @return {Array<ELEM>}\n */\nexport const flatten = arr => fold(arr, /** @type {Array<ELEM>} */ ([]), (acc, val) => acc.concat(val))\n\n/**\n * @template T\n * @param {number} len\n * @param {function(number, Array<T>):T} f\n * @return {Array<T>}\n */\nexport const unfold = (len, f) => {\n  const array = new Array(len)\n  for (let i = 0; i < len; i++) {\n    array[i] = f(i, array)\n  }\n  return array\n}\n\n/**\n * @template T\n * @template RESULT\n * @param {Array<T>} arr\n * @param {RESULT} seed\n * @param {function(RESULT, T, number):RESULT} folder\n */\nexport const fold = (arr, seed, folder) => arr.reduce(folder, seed)\n\nexport const isArray = Array.isArray\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {Array<T>}\n */\nexport const unique = arr => from(set.from(arr))\n\n/**\n * @template T\n * @template M\n * @param {ArrayLike<T>} arr\n * @param {function(T):M} mapper\n * @return {Array<T>}\n */\nexport const uniqueBy = (arr, mapper) => {\n  /**\n   * @type {Set<M>}\n   */\n  const happened = set.create()\n  /**\n   * @type {Array<T>}\n   */\n  const result = []\n  for (let i = 0; i < arr.length; i++) {\n    const el = arr[i]\n    const mapped = mapper(el)\n    if (!happened.has(mapped)) {\n      happened.add(mapped)\n      result.push(el)\n    }\n  }\n  return result\n}\n\n/**\n * @template {ArrayLike<any>} ARR\n * @template {function(ARR extends ArrayLike<infer T> ? T : never, number, ARR):any} MAPPER\n * @param {ARR} arr\n * @param {MAPPER} mapper\n * @return {Array<MAPPER extends function(...any): infer M ? M : never>}\n */\nexport const map = (arr, mapper) => {\n  /**\n   * @type {Array<any>}\n   */\n  const res = Array(arr.length)\n  for (let i = 0; i < arr.length; i++) {\n    res[i] = mapper(/** @type {any} */ (arr[i]), i, /** @type {any} */ (arr))\n  }\n  return /** @type {any} */ (res)\n}\n","import * as array from './array.js'\n\n/**\n * Utility module to work with strings.\n *\n * @module string\n */\n\nexport const fromCharCode = String.fromCharCode\nexport const fromCodePoint = String.fromCodePoint\n\n/**\n * The largest utf16 character.\n * Corresponds to Uint8Array([255, 255]) or charcodeof(2x2^8)\n */\nexport const MAX_UTF16_CHARACTER = fromCharCode(65535)\n\n/**\n * @param {string} s\n * @return {string}\n */\nconst toLowerCase = s => s.toLowerCase()\n\nconst trimLeftRegex = /^\\s*/g\n\n/**\n * @param {string} s\n * @return {string}\n */\nexport const trimLeft = s => s.replace(trimLeftRegex, '')\n\nconst fromCamelCaseRegex = /([A-Z])/g\n\n/**\n * @param {string} s\n * @param {string} separator\n * @return {string}\n */\nexport const fromCamelCase = (s, separator) => trimLeft(s.replace(fromCamelCaseRegex, match => `${separator}${toLowerCase(match)}`))\n\n/**\n * Compute the utf8ByteLength\n * @param {string} str\n * @return {number}\n */\nexport const utf8ByteLength = str => unescape(encodeURIComponent(str)).length\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Polyfill = str => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  const buf = new Uint8Array(len)\n  for (let i = 0; i < len; i++) {\n    buf[i] = /** @type {number} */ (encodedString.codePointAt(i))\n  }\n  return buf\n}\n\n/* c8 ignore next */\nexport const utf8TextEncoder = /** @type {TextEncoder} */ (typeof TextEncoder !== 'undefined' ? new TextEncoder() : null)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Native = str => utf8TextEncoder.encode(str)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\n/* c8 ignore next */\nexport const encodeUtf8 = utf8TextEncoder ? _encodeUtf8Native : _encodeUtf8Polyfill\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Polyfill = buf => {\n  let remainingLen = buf.length\n  let encodedString = ''\n  let bufPos = 0\n  while (remainingLen > 0) {\n    const nextLen = remainingLen < 10000 ? remainingLen : 10000\n    const bytes = buf.subarray(bufPos, bufPos + nextLen)\n    bufPos += nextLen\n    // Starting with ES5.1 we can supply a generic array-like object as arguments\n    encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n    remainingLen -= nextLen\n  }\n  return decodeURIComponent(escape(encodedString))\n}\n\n/* c8 ignore next */\nexport let utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8', { fatal: true, ignoreBOM: true })\n\n/* c8 ignore start */\nif (utf8TextDecoder && utf8TextDecoder.decode(new Uint8Array()).length === 1) {\n  // Safari doesn't handle BOM correctly.\n  // This fixes a bug in Safari 13.0.5 where it produces a BOM the first time it is called.\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the first call and\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the second call\n  // Another issue is that from then on no BOM chars are recognized anymore\n  /* c8 ignore next */\n  utf8TextDecoder = null\n}\n/* c8 ignore stop */\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Native = buf => /** @type {TextDecoder} */ (utf8TextDecoder).decode(buf)\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\n/* c8 ignore next */\nexport const decodeUtf8 = utf8TextDecoder ? _decodeUtf8Native : _decodeUtf8Polyfill\n\n/**\n * @param {string} str The initial string\n * @param {number} index Starting position\n * @param {number} remove Number of characters to remove\n * @param {string} insert New content to insert\n */\nexport const splice = (str, index, remove, insert = '') => str.slice(0, index) + insert + str.slice(index + remove)\n\n/**\n * @param {string} source\n * @param {number} n\n */\nexport const repeat = (source, n) => array.unfold(n, () => source).join('')\n","/**\n * Utility module to work with key-value stores.\n *\n * @module map\n */\n\n/**\n * Creates a new Map instance.\n *\n * @function\n * @return {Map<any, any>}\n *\n * @function\n */\nexport const create = () => new Map()\n\n/**\n * Copy a Map object into a fresh Map object.\n *\n * @function\n * @template K,V\n * @param {Map<K,V>} m\n * @return {Map<K,V>}\n */\nexport const copy = m => {\n  const r = create()\n  m.forEach((v, k) => { r.set(k, v) })\n  return r\n}\n\n/**\n * Get map property. Create T if property is undefined and set T on map.\n *\n * ```js\n * const listeners = map.setIfUndefined(events, 'eventName', set.create)\n * listeners.add(listener)\n * ```\n *\n * @function\n * @template {Map<any, any>} MAP\n * @template {MAP extends Map<any,infer V> ? function():V : unknown} CF\n * @param {MAP} map\n * @param {MAP extends Map<infer K,any> ? K : unknown} key\n * @param {CF} createT\n * @return {ReturnType<CF>}\n */\nexport const setIfUndefined = (map, key, createT) => {\n  let set = map.get(key)\n  if (set === undefined) {\n    map.set(key, set = createT())\n  }\n  return set\n}\n\n/**\n * Creates an Array and populates it with the content of all key-value pairs using the `f(value, key)` function.\n *\n * @function\n * @template K\n * @template V\n * @template R\n * @param {Map<K,V>} m\n * @param {function(V,K):R} f\n * @return {Array<R>}\n */\nexport const map = (m, f) => {\n  const res = []\n  for (const [key, value] of m) {\n    res.push(f(value, key))\n  }\n  return res\n}\n\n/**\n * Tests whether any key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @todo should rename to some - similarly to Array.some\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const any = (m, f) => {\n  for (const [key, value] of m) {\n    if (f(value, key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Tests whether all key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const all = (m, f) => {\n  for (const [key, value] of m) {\n    if (!f(value, key)) {\n      return false\n    }\n  }\n  return true\n}\n","/**\n * Often used conditions.\n *\n * @module conditions\n */\n\n/**\n * @template T\n * @param {T|null|undefined} v\n * @return {T|null}\n */\n/* c8 ignore next */\nexport const undefinedToNull = v => v === undefined ? null : v\n","/* eslint-env browser */\n\n/**\n * Isomorphic variable storage.\n *\n * Uses LocalStorage in the browser and falls back to in-memory storage.\n *\n * @module storage\n */\n\n/* c8 ignore start */\nclass VarStoragePolyfill {\n  constructor () {\n    this.map = new Map()\n  }\n\n  /**\n   * @param {string} key\n   * @param {any} newValue\n   */\n  setItem (key, newValue) {\n    this.map.set(key, newValue)\n  }\n\n  /**\n   * @param {string} key\n   */\n  getItem (key) {\n    return this.map.get(key)\n  }\n}\n/* c8 ignore stop */\n\n/**\n * @type {any}\n */\nlet _localStorage = new VarStoragePolyfill()\nlet usePolyfill = true\n\n/* c8 ignore start */\ntry {\n  // if the same-origin rule is violated, accessing localStorage might thrown an error\n  if (typeof localStorage !== 'undefined' && localStorage) {\n    _localStorage = localStorage\n    usePolyfill = false\n  }\n} catch (e) { }\n/* c8 ignore stop */\n\n/**\n * This is basically localStorage in browser, or a polyfill in nodejs\n */\n/* c8 ignore next */\nexport const varStorage = _localStorage\n\n/**\n * A polyfill for `addEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */\n/* c8 ignore next */\nexport const onChange = eventHandler => usePolyfill || addEventListener('storage', /** @type {any} */ (eventHandler))\n\n/**\n * A polyfill for `removeEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */\n/* c8 ignore next */\nexport const offChange = eventHandler => usePolyfill || removeEventListener('storage', /** @type {any} */ (eventHandler))\n","/**\n * Utility functions for working with EcmaScript objects.\n *\n * @module object\n */\n\n/**\n * @return {Object<string,any>} obj\n */\nexport const create = () => Object.create(null)\n\n/**\n * Object.assign\n */\nexport const assign = Object.assign\n\n/**\n * @param {Object<string,any>} obj\n */\nexport const keys = Object.keys\n\n/**\n * @template V\n * @param {{[k:string]:V}} obj\n * @param {function(V,string):any} f\n */\nexport const forEach = (obj, f) => {\n  for (const key in obj) {\n    f(obj[key], key)\n  }\n}\n\n/**\n * @todo implement mapToArray & map\n *\n * @template R\n * @param {Object<string,any>} obj\n * @param {function(any,string):R} f\n * @return {Array<R>}\n */\nexport const map = (obj, f) => {\n  const results = []\n  for (const key in obj) {\n    results.push(f(obj[key], key))\n  }\n  return results\n}\n\n/**\n * @param {Object<string,any>} obj\n * @return {number}\n */\nexport const length = obj => keys(obj).length\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const some = (obj, f) => {\n  for (const key in obj) {\n    if (f(obj[key], key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @param {Object|undefined} obj\n */\nexport const isEmpty = obj => {\n  // eslint-disable-next-line\n  for (const _k in obj) {\n    return false\n  }\n  return true\n}\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const every = (obj, f) => {\n  for (const key in obj) {\n    if (!f(obj[key], key)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * Calls `Object.prototype.hasOwnProperty`.\n *\n * @param {any} obj\n * @param {string|symbol} key\n * @return {boolean}\n */\nexport const hasProperty = (obj, key) => Object.prototype.hasOwnProperty.call(obj, key)\n\n/**\n * @param {Object<string,any>} a\n * @param {Object<string,any>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a === b || (length(a) === length(b) && every(a, (val, key) => (val !== undefined || hasProperty(b, key)) && b[key] === val))\n","/**\n * Common functions and function call helpers.\n *\n * @module function\n */\n\nimport * as array from './array.js'\nimport * as object from './object.js'\n\n/**\n * Calls all functions in `fs` with args. Only throws after all functions were called.\n *\n * @param {Array<function>} fs\n * @param {Array<any>} args\n */\nexport const callAll = (fs, args, i = 0) => {\n  try {\n    for (; i < fs.length; i++) {\n      fs[i](...args)\n    }\n  } finally {\n    if (i < fs.length) {\n      callAll(fs, args, i + 1)\n    }\n  }\n}\n\nexport const nop = () => {}\n\n/**\n * @template T\n * @param {function():T} f\n * @return {T}\n */\nexport const apply = f => f()\n\n/**\n * @template A\n *\n * @param {A} a\n * @return {A}\n */\nexport const id = a => a\n\n/**\n * @template T\n *\n * @param {T} a\n * @param {T} b\n * @return {boolean}\n */\nexport const equalityStrict = (a, b) => a === b\n\n/**\n * @template T\n *\n * @param {Array<T>|object} a\n * @param {Array<T>|object} b\n * @return {boolean}\n */\nexport const equalityFlat = (a, b) => a === b || (a != null && b != null && a.constructor === b.constructor && ((array.isArray(a) && array.equalFlat(a, /** @type {Array<T>} */ (b))) || (typeof a === 'object' && object.equalFlat(a, b))))\n\n/* c8 ignore start */\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nexport const equalityDeep = (a, b) => {\n  if (a == null || b == null) {\n    return equalityStrict(a, b)\n  }\n  if (a.constructor !== b.constructor) {\n    return false\n  }\n  if (a === b) {\n    return true\n  }\n  switch (a.constructor) {\n    case ArrayBuffer:\n      a = new Uint8Array(a)\n      b = new Uint8Array(b)\n    // eslint-disable-next-line no-fallthrough\n    case Uint8Array: {\n      if (a.byteLength !== b.byteLength) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false\n        }\n      }\n      break\n    }\n    case Set: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const value of a) {\n        if (!b.has(value)) {\n          return false\n        }\n      }\n      break\n    }\n    case Map: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const key of a.keys()) {\n        if (!b.has(key) || !equalityDeep(a.get(key), b.get(key))) {\n          return false\n        }\n      }\n      break\n    }\n    case Object:\n      if (object.length(a) !== object.length(b)) {\n        return false\n      }\n      for (const key in a) {\n        if (!object.hasProperty(a, key) || !equalityDeep(a[key], b[key])) {\n          return false\n        }\n      }\n      break\n    case Array:\n      if (a.length !== b.length) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (!equalityDeep(a[i], b[i])) {\n          return false\n        }\n      }\n      break\n    default:\n      return false\n  }\n  return true\n}\n\n/**\n * @template V\n * @template {V} OPTS\n *\n * @param {V} value\n * @param {Array<OPTS>} options\n */\n// @ts-ignore\nexport const isOneOf = (value, options) => options.includes(value)\n/* c8 ignore stop */\n\nexport const isArray = array.isArray\n\n/**\n * @param {any} s\n * @return {s is String}\n */\nexport const isString = (s) => s && s.constructor === String\n\n/**\n * @param {any} n\n * @return {n is Number}\n */\nexport const isNumber = n => n != null && n.constructor === Number\n\n/**\n * @template {abstract new (...args: any) => any} TYPE\n * @param {any} n\n * @param {TYPE} T\n * @return {n is InstanceType<TYPE>}\n */\nexport const is = (n, T) => n && n.constructor === T\n\n/**\n * @template {abstract new (...args: any) => any} TYPE\n * @param {TYPE} T\n */\nexport const isTemplate = (T) =>\n  /**\n   * @param {any} n\n   * @return {n is InstanceType<TYPE>}\n   **/\n  n => n && n.constructor === T\n","/**\n * Isomorphic module to work access the environment (query params, env variables).\n *\n * @module map\n */\n\nimport * as map from './map.js'\nimport * as string from './string.js'\nimport * as conditions from './conditions.js'\nimport * as storage from './storage.js'\nimport * as f from './function.js'\n\n/* c8 ignore next 2 */\n// @ts-ignore\nexport const isNode = typeof process !== 'undefined' && process.release && /node|io\\.js/.test(process.release.name) && Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n\n/* c8 ignore next */\nexport const isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && !isNode\n/* c8 ignore next 3 */\nexport const isMac = typeof navigator !== 'undefined'\n  ? /Mac/.test(navigator.platform)\n  : false\n\n/**\n * @type {Map<string,string>}\n */\nlet params\nconst args = []\n\n/* c8 ignore start */\nconst computeParams = () => {\n  if (params === undefined) {\n    if (isNode) {\n      params = map.create()\n      const pargs = process.argv\n      let currParamName = null\n      for (let i = 0; i < pargs.length; i++) {\n        const parg = pargs[i]\n        if (parg[0] === '-') {\n          if (currParamName !== null) {\n            params.set(currParamName, '')\n          }\n          currParamName = parg\n        } else {\n          if (currParamName !== null) {\n            params.set(currParamName, parg)\n            currParamName = null\n          } else {\n            args.push(parg)\n          }\n        }\n      }\n      if (currParamName !== null) {\n        params.set(currParamName, '')\n      }\n      // in ReactNative for example this would not be true (unless connected to the Remote Debugger)\n    } else if (typeof location === 'object') {\n      params = map.create(); // eslint-disable-next-line no-undef\n      (location.search || '?').slice(1).split('&').forEach((kv) => {\n        if (kv.length !== 0) {\n          const [key, value] = kv.split('=')\n          params.set(`--${string.fromCamelCase(key, '-')}`, value)\n          params.set(`-${string.fromCamelCase(key, '-')}`, value)\n        }\n      })\n    } else {\n      params = map.create()\n    }\n  }\n  return params\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* c8 ignore next */\nexport const hasParam = (name) => computeParams().has(name)\n\n/**\n * @param {string} name\n * @param {string} defaultVal\n * @return {string}\n */\n/* c8 ignore next 2 */\nexport const getParam = (name, defaultVal) =>\n  computeParams().get(name) || defaultVal\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* c8 ignore next 4 */\nexport const getVariable = (name) =>\n  isNode\n    ? conditions.undefinedToNull(process.env[name.toUpperCase()])\n    : conditions.undefinedToNull(storage.varStorage.getItem(name))\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* c8 ignore next 2 */\nexport const getConf = (name) =>\n  computeParams().get('--' + name) || getVariable(name)\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* c8 ignore next 2 */\nexport const hasConf = (name) =>\n  hasParam('--' + name) || getVariable(name) !== null\n\n/* c8 ignore next */\nexport const production = hasConf('production')\n\n/* c8 ignore next 2 */\nconst forceColor = isNode &&\n  f.isOneOf(process.env.FORCE_COLOR, ['true', '1', '2'])\n\n/* c8 ignore start */\nexport const supportsColor = !hasParam('no-colors') &&\n  (!isNode || process.stdout.isTTY || forceColor) && (\n  !isNode || hasParam('color') || forceColor ||\n    getVariable('COLORTERM') !== null ||\n    (getVariable('TERM') || '').includes('color')\n)\n/* c8 ignore stop */\n","/**\n * Common Math expressions.\n *\n * @module math\n */\n\nexport const floor = Math.floor\nexport const ceil = Math.ceil\nexport const abs = Math.abs\nexport const imul = Math.imul\nexport const round = Math.round\nexport const log10 = Math.log10\nexport const log2 = Math.log2\nexport const log = Math.log\nexport const sqrt = Math.sqrt\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The sum of a and b\n */\nexport const add = (a, b) => a + b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The smaller element of a and b\n */\nexport const min = (a, b) => a < b ? a : b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The bigger element of a and b\n */\nexport const max = (a, b) => a > b ? a : b\n\nexport const isNaN = Number.isNaN\n\nexport const pow = Math.pow\n/**\n * Base 10 exponential function. Returns the value of 10 raised to the power of pow.\n *\n * @param {number} exp\n * @return {number}\n */\nexport const exp10 = exp => Math.pow(10, exp)\n\nexport const sign = Math.sign\n\n/**\n * @param {number} n\n * @return {boolean} Wether n is negative. This function also differentiates between -0 and +0\n */\nexport const isNegativeZero = n => n !== 0 ? n < 0 : 1 / n < 0\n","/* eslint-env browser */\n\n/**\n * Binary data constants.\n *\n * @module binary\n */\n\n/**\n * n-th bit activated.\n *\n * @type {number}\n */\nexport const BIT1 = 1\nexport const BIT2 = 2\nexport const BIT3 = 4\nexport const BIT4 = 8\nexport const BIT5 = 16\nexport const BIT6 = 32\nexport const BIT7 = 64\nexport const BIT8 = 128\nexport const BIT9 = 256\nexport const BIT10 = 512\nexport const BIT11 = 1024\nexport const BIT12 = 2048\nexport const BIT13 = 4096\nexport const BIT14 = 8192\nexport const BIT15 = 16384\nexport const BIT16 = 32768\nexport const BIT17 = 65536\nexport const BIT18 = 1 << 17\nexport const BIT19 = 1 << 18\nexport const BIT20 = 1 << 19\nexport const BIT21 = 1 << 20\nexport const BIT22 = 1 << 21\nexport const BIT23 = 1 << 22\nexport const BIT24 = 1 << 23\nexport const BIT25 = 1 << 24\nexport const BIT26 = 1 << 25\nexport const BIT27 = 1 << 26\nexport const BIT28 = 1 << 27\nexport const BIT29 = 1 << 28\nexport const BIT30 = 1 << 29\nexport const BIT31 = 1 << 30\nexport const BIT32 = 1 << 31\n\n/**\n * First n bits activated.\n *\n * @type {number}\n */\nexport const BITS0 = 0\nexport const BITS1 = 1\nexport const BITS2 = 3\nexport const BITS3 = 7\nexport const BITS4 = 15\nexport const BITS5 = 31\nexport const BITS6 = 63\nexport const BITS7 = 127\nexport const BITS8 = 255\nexport const BITS9 = 511\nexport const BITS10 = 1023\nexport const BITS11 = 2047\nexport const BITS12 = 4095\nexport const BITS13 = 8191\nexport const BITS14 = 16383\nexport const BITS15 = 32767\nexport const BITS16 = 65535\nexport const BITS17 = BIT18 - 1\nexport const BITS18 = BIT19 - 1\nexport const BITS19 = BIT20 - 1\nexport const BITS20 = BIT21 - 1\nexport const BITS21 = BIT22 - 1\nexport const BITS22 = BIT23 - 1\nexport const BITS23 = BIT24 - 1\nexport const BITS24 = BIT25 - 1\nexport const BITS25 = BIT26 - 1\nexport const BITS26 = BIT27 - 1\nexport const BITS27 = BIT28 - 1\nexport const BITS28 = BIT29 - 1\nexport const BITS29 = BIT30 - 1\nexport const BITS30 = BIT31 - 1\n/**\n * @type {number}\n */\nexport const BITS31 = 0x7FFFFFFF\n/**\n * @type {number}\n */\nexport const BITS32 = 0xFFFFFFFF\n","/**\n * Utility helpers for working with numbers.\n *\n * @module number\n */\n\nimport * as math from './math.js'\nimport * as binary from './binary.js'\n\nexport const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER\nexport const MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER\n\nexport const LOWEST_INT32 = 1 << 31\nexport const HIGHEST_INT32 = binary.BITS31\nexport const HIGHEST_UINT32 = binary.BITS32\n\n/* c8 ignore next */\nexport const isInteger = Number.isInteger || (num => typeof num === 'number' && isFinite(num) && math.floor(num) === num)\nexport const isNaN = Number.isNaN\nexport const parseInt = Number.parseInt\n\n/**\n * Count the number of \"1\" bits in an unsigned 32bit number.\n *\n * Super fun bitcount algorithm by Brian Kernighan.\n *\n * @param {number} n\n */\nexport const countBits = n => {\n  n &= binary.BITS32\n  let count = 0\n  while (n) {\n    n &= (n - 1)\n    count++\n  }\n  return count\n}\n","/**\n * Efficient schema-less binary encoding with support for variable length encoding.\n *\n * Use [lib0/encoding] with [lib0/decoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module encoding\n */\n\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as binary from './binary.js'\nimport * as string from './string.js'\nimport * as array from './array.js'\n\n/**\n * A BinaryEncoder handles the encoding to an Uint8Array.\n */\nexport class Encoder {\n  constructor () {\n    this.cpos = 0\n    this.cbuf = new Uint8Array(100)\n    /**\n     * @type {Array<Uint8Array>}\n     */\n    this.bufs = []\n  }\n}\n\n/**\n * @function\n * @return {Encoder}\n */\nexport const createEncoder = () => new Encoder()\n\n/**\n * @param {function(Encoder):void} f\n */\nexport const encode = (f) => {\n  const encoder = createEncoder()\n  f(encoder)\n  return toUint8Array(encoder)\n}\n\n/**\n * The current length of the encoded data.\n *\n * @function\n * @param {Encoder} encoder\n * @return {number}\n */\nexport const length = encoder => {\n  let len = encoder.cpos\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    len += encoder.bufs[i].length\n  }\n  return len\n}\n\n/**\n * Check whether encoder is empty.\n *\n * @function\n * @param {Encoder} encoder\n * @return {boolean}\n */\nexport const hasContent = encoder => encoder.cpos > 0 || encoder.bufs.length > 0\n\n/**\n * Transform to Uint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @return {Uint8Array} The created ArrayBuffer.\n */\nexport const toUint8Array = encoder => {\n  const uint8arr = new Uint8Array(length(encoder))\n  let curPos = 0\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    const d = encoder.bufs[i]\n    uint8arr.set(d, curPos)\n    curPos += d.length\n  }\n  uint8arr.set(new Uint8Array(encoder.cbuf.buffer, 0, encoder.cpos), curPos)\n  return uint8arr\n}\n\n/**\n * Verify that it is possible to write `len` bytes wtihout checking. If\n * necessary, a new Buffer with the required length is attached.\n *\n * @param {Encoder} encoder\n * @param {number} len\n */\nexport const verifyLen = (encoder, len) => {\n  const bufferLen = encoder.cbuf.length\n  if (bufferLen - encoder.cpos < len) {\n    encoder.bufs.push(new Uint8Array(encoder.cbuf.buffer, 0, encoder.cpos))\n    encoder.cbuf = new Uint8Array(math.max(bufferLen, len) * 2)\n    encoder.cpos = 0\n  }\n}\n\n/**\n * Write one byte to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The byte that is to be encoded.\n */\nexport const write = (encoder, num) => {\n  const bufferLen = encoder.cbuf.length\n  if (encoder.cpos === bufferLen) {\n    encoder.bufs.push(encoder.cbuf)\n    encoder.cbuf = new Uint8Array(bufferLen * 2)\n    encoder.cpos = 0\n  }\n  encoder.cbuf[encoder.cpos++] = num\n}\n\n/**\n * Write one byte at a specific position.\n * Position must already be written (i.e. encoder.length > pos)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos Position to which to write data\n * @param {number} num Unsigned 8-bit integer\n */\nexport const set = (encoder, pos, num) => {\n  let buffer = null\n  // iterate all buffers and adjust position\n  for (let i = 0; i < encoder.bufs.length && buffer === null; i++) {\n    const b = encoder.bufs[i]\n    if (pos < b.length) {\n      buffer = b // found buffer\n    } else {\n      pos -= b.length\n    }\n  }\n  if (buffer === null) {\n    // use current buffer\n    buffer = encoder.cbuf\n  }\n  buffer[pos] = num\n}\n\n/**\n * Write one byte as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint8 = write\n\n/**\n * Write one byte as an unsigned Integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint8 = set\n\n/**\n * Write two bytes as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint16 = (encoder, num) => {\n  write(encoder, num & binary.BITS8)\n  write(encoder, (num >>> 8) & binary.BITS8)\n}\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint16 = (encoder, pos, num) => {\n  set(encoder, pos, num & binary.BITS8)\n  set(encoder, pos + 1, (num >>> 8) & binary.BITS8)\n}\n\n/**\n * Write two bytes as an unsigned integer\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32 = (encoder, num) => {\n  for (let i = 0; i < 4; i++) {\n    write(encoder, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32BigEndian = (encoder, num) => {\n  for (let i = 3; i >= 0; i--) {\n    write(encoder, (num >>> (8 * i)) & binary.BITS8)\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint32 = (encoder, pos, num) => {\n  for (let i = 0; i < 4; i++) {\n    set(encoder, pos + i, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write a variable length unsigned integer. Max encodable integer is 2^53.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarUint = (encoder, num) => {\n  while (num > binary.BITS7) {\n    write(encoder, binary.BIT8 | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n  write(encoder, binary.BITS7 & num)\n}\n\n/**\n * Write a variable length integer.\n *\n * We use the 7th bit instead for signaling that this is a negative number.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarInt = (encoder, num) => {\n  const isNegative = math.isNegativeZero(num)\n  if (isNegative) {\n    num = -num\n  }\n  //             |- whether to continue reading         |- whether is negative     |- number\n  write(encoder, (num > binary.BITS6 ? binary.BIT8 : 0) | (isNegative ? binary.BIT7 : 0) | (binary.BITS6 & num))\n  num = math.floor(num / 64) // shift >>> 6\n  // We don't need to consider the case of num === 0 so we can use a different\n  // pattern here than above.\n  while (num > 0) {\n    write(encoder, (num > binary.BITS7 ? binary.BIT8 : 0) | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n}\n\n/**\n * A cache to store strings temporarily\n */\nconst _strBuffer = new Uint8Array(30000)\nconst _maxStrBSize = _strBuffer.length / 3\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringNative = (encoder, str) => {\n  if (str.length < _maxStrBSize) {\n    // We can encode the string into the existing buffer\n    /* c8 ignore next */\n    const written = string.utf8TextEncoder.encodeInto(str, _strBuffer).written || 0\n    writeVarUint(encoder, written)\n    for (let i = 0; i < written; i++) {\n      write(encoder, _strBuffer[i])\n    }\n  } else {\n    writeVarUint8Array(encoder, string.encodeUtf8(str))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringPolyfill = (encoder, str) => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    write(encoder, /** @type {number} */ (encodedString.codePointAt(i)))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\n/* c8 ignore next */\nexport const writeVarString = (string.utf8TextEncoder && /** @type {any} */ (string.utf8TextEncoder).encodeInto) ? _writeVarStringNative : _writeVarStringPolyfill\n\n/**\n * Write a string terminated by a special byte sequence. This is not very performant and is\n * generally discouraged. However, the resulting byte arrays are lexiographically ordered which\n * makes this a nice feature for databases.\n *\n * The string will be encoded using utf8 and then terminated and escaped using writeTerminatingUint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const writeTerminatedString = (encoder, str) =>\n  writeTerminatedUint8Array(encoder, string.encodeUtf8(str))\n\n/**\n * Write a terminating Uint8Array. Note that this is not performant and is generally\n * discouraged. There are few situations when this is needed.\n *\n * We use 0x0 as a terminating character. 0x1 serves as an escape character for 0x0 and 0x1.\n *\n * Example: [0,1,2] is encoded to [1,0,1,1,2,0]. 0x0, and 0x1 needed to be escaped using 0x1. Then\n * the result is terminated using the 0x0 character.\n *\n * This is basically how many systems implement null terminated strings. However, we use an escape\n * character 0x1 to avoid issues and potenial attacks on our database (if this is used as a key\n * encoder for NoSql databases).\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} buf The string that is to be encoded.\n */\nexport const writeTerminatedUint8Array = (encoder, buf) => {\n  for (let i = 0; i < buf.length; i++) {\n    const b = buf[i]\n    if (b === 0 || b === 1) {\n      write(encoder, 1)\n    }\n    write(encoder, buf[i])\n  }\n  write(encoder, 0)\n}\n\n/**\n * Write the content of another Encoder.\n *\n * @TODO: can be improved!\n *        - Note: Should consider that when appending a lot of small Encoders, we should rather clone than referencing the old structure.\n *                Encoders start with a rather big initial buffer.\n *\n * @function\n * @param {Encoder} encoder The enUint8Arr\n * @param {Encoder} append The BinaryEncoder to be written.\n */\nexport const writeBinaryEncoder = (encoder, append) => writeUint8Array(encoder, toUint8Array(append))\n\n/**\n * Append fixed-length Uint8Array to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeUint8Array = (encoder, uint8Array) => {\n  const bufferLen = encoder.cbuf.length\n  const cpos = encoder.cpos\n  const leftCopyLen = math.min(bufferLen - cpos, uint8Array.length)\n  const rightCopyLen = uint8Array.length - leftCopyLen\n  encoder.cbuf.set(uint8Array.subarray(0, leftCopyLen), cpos)\n  encoder.cpos += leftCopyLen\n  if (rightCopyLen > 0) {\n    // Still something to write, write right half..\n    // Append new buffer\n    encoder.bufs.push(encoder.cbuf)\n    // must have at least size of remaining buffer\n    encoder.cbuf = new Uint8Array(math.max(bufferLen * 2, rightCopyLen))\n    // copy array\n    encoder.cbuf.set(uint8Array.subarray(leftCopyLen))\n    encoder.cpos = rightCopyLen\n  }\n}\n\n/**\n * Append an Uint8Array to Encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeVarUint8Array = (encoder, uint8Array) => {\n  writeVarUint(encoder, uint8Array.byteLength)\n  writeUint8Array(encoder, uint8Array)\n}\n\n/**\n * Create an DataView of the next `len` bytes. Use it to write data after\n * calling this function.\n *\n * ```js\n * // write float32 using DataView\n * const dv = writeOnDataView(encoder, 4)\n * dv.setFloat32(0, 1.1)\n * // read float32 using DataView\n * const dv = readFromDataView(encoder, 4)\n * dv.getFloat32(0) // => 1.100000023841858 (leaving it to the reader to find out why this is the correct result)\n * ```\n *\n * @param {Encoder} encoder\n * @param {number} len\n * @return {DataView}\n */\nexport const writeOnDataView = (encoder, len) => {\n  verifyLen(encoder, len)\n  const dview = new DataView(encoder.cbuf.buffer, encoder.cpos, len)\n  encoder.cpos += len\n  return dview\n}\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat32 = (encoder, num) => writeOnDataView(encoder, 4).setFloat32(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat64 = (encoder, num) => writeOnDataView(encoder, 8).setFloat64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigInt64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigInt64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigUint64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigUint64(0, num, false)\n\nconst floatTestBed = new DataView(new ArrayBuffer(4))\n/**\n * Check if a number can be encoded as a 32 bit float.\n *\n * @param {number} num\n * @return {boolean}\n */\nconst isFloat32 = num => {\n  floatTestBed.setFloat32(0, num)\n  return floatTestBed.getFloat32(0) === num\n}\n\n/**\n * Encode data with efficient binary format.\n *\n * Differences to JSON:\n * • Transforms data to a binary format (not to a string)\n * • Encodes undefined, NaN, and ArrayBuffer (these can't be represented in JSON)\n * • Numbers are efficiently encoded either as a variable length integer, as a\n *   32 bit float, as a 64 bit float, or as a 64 bit bigint.\n *\n * Encoding table:\n *\n * | Data Type           | Prefix   | Encoding Method    | Comment |\n * | ------------------- | -------- | ------------------ | ------- |\n * | undefined           | 127      |                    | Functions, symbol, and everything that cannot be identified is encoded as undefined |\n * | null                | 126      |                    | |\n * | integer             | 125      | writeVarInt        | Only encodes 32 bit signed integers |\n * | float32             | 124      | writeFloat32       | |\n * | float64             | 123      | writeFloat64       | |\n * | bigint              | 122      | writeBigInt64      | |\n * | boolean (false)     | 121      |                    | True and false are different data types so we save the following byte |\n * | boolean (true)      | 120      |                    | - 0b01111000 so the last bit determines whether true or false |\n * | string              | 119      | writeVarString     | |\n * | object<string,any>  | 118      | custom             | Writes {length} then {length} key-value pairs |\n * | array<any>          | 117      | custom             | Writes {length} then {length} json values |\n * | Uint8Array          | 116      | writeVarUint8Array | We use Uint8Array for any kind of binary data |\n *\n * Reasons for the decreasing prefix:\n * We need the first bit for extendability (later we may want to encode the\n * prefix with writeVarUint). The remaining 7 bits are divided as follows:\n * [0-30]   the beginning of the data range is used for custom purposes\n *          (defined by the function that uses this library)\n * [31-127] the end of the data range is used for data encoding by\n *          lib0/encoding.js\n *\n * @param {Encoder} encoder\n * @param {undefined|null|number|bigint|boolean|string|Object<string,any>|Array<any>|Uint8Array} data\n */\nexport const writeAny = (encoder, data) => {\n  switch (typeof data) {\n    case 'string':\n      // TYPE 119: STRING\n      write(encoder, 119)\n      writeVarString(encoder, data)\n      break\n    case 'number':\n      if (number.isInteger(data) && math.abs(data) <= binary.BITS31) {\n        // TYPE 125: INTEGER\n        write(encoder, 125)\n        writeVarInt(encoder, data)\n      } else if (isFloat32(data)) {\n        // TYPE 124: FLOAT32\n        write(encoder, 124)\n        writeFloat32(encoder, data)\n      } else {\n        // TYPE 123: FLOAT64\n        write(encoder, 123)\n        writeFloat64(encoder, data)\n      }\n      break\n    case 'bigint':\n      // TYPE 122: BigInt\n      write(encoder, 122)\n      writeBigInt64(encoder, data)\n      break\n    case 'object':\n      if (data === null) {\n        // TYPE 126: null\n        write(encoder, 126)\n      } else if (array.isArray(data)) {\n        // TYPE 117: Array\n        write(encoder, 117)\n        writeVarUint(encoder, data.length)\n        for (let i = 0; i < data.length; i++) {\n          writeAny(encoder, data[i])\n        }\n      } else if (data instanceof Uint8Array) {\n        // TYPE 116: ArrayBuffer\n        write(encoder, 116)\n        writeVarUint8Array(encoder, data)\n      } else {\n        // TYPE 118: Object\n        write(encoder, 118)\n        const keys = Object.keys(data)\n        writeVarUint(encoder, keys.length)\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i]\n          writeVarString(encoder, key)\n          writeAny(encoder, data[key])\n        }\n      }\n      break\n    case 'boolean':\n      // TYPE 120/121: boolean (true/false)\n      write(encoder, data ? 120 : 121)\n      break\n    default:\n      // TYPE 127: undefined\n      write(encoder, 127)\n  }\n}\n\n/**\n * Now come a few stateful encoder that have their own classes.\n */\n\n/**\n * Basic Run Length Encoder - a basic compression implementation.\n *\n * Encodes [1,1,1,7] to [1,3,7,1] (3 times 1, 1 time 7). This encoder might do more harm than good if there are a lot of values that are not repeated.\n *\n * It was originally used for image compression. Cool .. article http://csbruce.com/cbm/transactor/pdfs/trans_v7_i06.pdf\n *\n * @note T must not be null!\n *\n * @template T\n */\nexport class RleEncoder extends Encoder {\n  /**\n   * @param {function(Encoder, T):void} writer\n   */\n  constructor (writer) {\n    super()\n    /**\n     * The writer\n     */\n    this.w = writer\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  /**\n   * @param {T} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      this.w(this, v)\n      this.s = v\n    }\n  }\n}\n\n/**\n * Basic diff decoder using variable length encoding.\n *\n * Encodes the values [3, 1100, 1101, 1050, 0] to [3, 1097, 1, -51, -1050] using writeVarInt.\n */\nexport class IntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    writeVarInt(this, v - this.s)\n    this.s = v\n  }\n}\n\n/**\n * A combination of IntDiffEncoder and RleEncoder.\n *\n * Basically first writes the IntDiffEncoder and then counts duplicate diffs using RleEncoding.\n *\n * Encodes the values [1,1,1,2,3,4,5,6] as [1,1,0,2,1,5] (RLE([1,0,0,1,1,1,1,1]) ⇒ RleIntDiff[1,1,0,2,1,5])\n */\nexport class RleIntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v && this.count > 0) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      writeVarInt(this, v - this.s)\n      this.s = v\n    }\n  }\n}\n\n/**\n * @param {UintOptRleEncoder} encoder\n */\nconst flushUintOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set sign to positive\n    // case 2: write several values. set sign to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encoder.count === 1 ? encoder.s : -encoder.s)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * Optimized Rle encoder that does not suffer from the mentioned problem of the basic Rle encoder.\n *\n * Internally uses VarInt encoder to write unsigned integers. If the input occurs multiple times, we write\n * write it as a negative number. The UintOptRleDecoder then understands that it needs to read a count.\n *\n * Encodes [1,2,3,3,3] as [1,2,-3,3] (once 1, once 2, three times 3)\n */\nexport class UintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  /**\n   * Flush the encoded state and transform this to a Uint8Array.\n   *\n   * Note that this should only be called once.\n   */\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Increasing Uint Optimized RLE Encoder\n *\n * The RLE encoder counts the number of same occurences of the same value.\n * The IncUintOptRle encoder counts if the value increases.\n * I.e. 7, 8, 9, 10 will be encoded as [-7, 4]. 1, 3, 5 will be encoded\n * as [1, 3, 5].\n */\nexport class IncUintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s + this.count === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  /**\n   * Flush the encoded state and transform this to a Uint8Array.\n   *\n   * Note that this should only be called once.\n   */\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * @param {IntDiffOptRleEncoder} encoder\n */\nconst flushIntDiffOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    //          31 bit making up the diff | wether to write the counter\n    // const encodedDiff = encoder.diff << 1 | (encoder.count === 1 ? 0 : 1)\n    const encodedDiff = encoder.diff * 2 + (encoder.count === 1 ? 0 : 1)\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set first bit to positive\n    // case 2: write several values. set first bit to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encodedDiff)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * A combination of the IntDiffEncoder and the UintOptRleEncoder.\n *\n * The count approach is similar to the UintDiffOptRleEncoder, but instead of using the negative bitflag, it encodes\n * in the LSB whether a count is to be read. Therefore this Encoder only supports 31 bit integers!\n *\n * Encodes [1, 2, 3, 2] as [3, 1, 6, -1] (more specifically [(1 << 1) | 1, (3 << 0) | 0, -1])\n *\n * Internally uses variable length encoding. Contrary to normal UintVar encoding, the first byte contains:\n * * 1 bit that denotes whether the next value is a count (LSB)\n * * 1 bit that denotes whether this value is negative (MSB - 1)\n * * 1 bit that denotes whether to continue reading the variable length integer (MSB)\n *\n * Therefore, only five bits remain to encode diff ranges.\n *\n * Use this Encoder only when appropriate. In most cases, this is probably a bad idea.\n */\nexport class IntDiffOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.diff === v - this.s) {\n      this.s = v\n      this.count++\n    } else {\n      flushIntDiffOptRleEncoder(this)\n      this.count = 1\n      this.diff = v - this.s\n      this.s = v\n    }\n  }\n\n  /**\n   * Flush the encoded state and transform this to a Uint8Array.\n   *\n   * Note that this should only be called once.\n   */\n  toUint8Array () {\n    flushIntDiffOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Optimized String Encoder.\n *\n * Encoding many small strings in a simple Encoder is not very efficient. The function call to decode a string takes some time and creates references that must be eventually deleted.\n * In practice, when decoding several million small strings, the GC will kick in more and more often to collect orphaned string objects (or maybe there is another reason?).\n *\n * This string encoder solves the above problem. All strings are concatenated and written as a single string using a single encoding call.\n *\n * The lengths are encoded using a UintOptRleEncoder.\n */\nexport class StringEncoder {\n  constructor () {\n    /**\n     * @type {Array<string>}\n     */\n    this.sarr = []\n    this.s = ''\n    this.lensE = new UintOptRleEncoder()\n  }\n\n  /**\n   * @param {string} string\n   */\n  write (string) {\n    this.s += string\n    if (this.s.length > 19) {\n      this.sarr.push(this.s)\n      this.s = ''\n    }\n    this.lensE.write(string.length)\n  }\n\n  toUint8Array () {\n    const encoder = new Encoder()\n    this.sarr.push(this.s)\n    this.s = ''\n    writeVarString(encoder, this.sarr.join(''))\n    writeUint8Array(encoder, this.lensE.toUint8Array())\n    return toUint8Array(encoder)\n  }\n}\n","/**\n * Error helpers.\n *\n * @module error\n */\n\n/**\n * @param {string} s\n * @return {Error}\n */\n/* c8 ignore next */\nexport const create = s => new Error(s)\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* c8 ignore next 3 */\nexport const methodUnimplemented = () => {\n  throw create('Method unimplemented')\n}\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* c8 ignore next 3 */\nexport const unexpectedCase = () => {\n  throw create('Unexpected case')\n}\n","/**\n * Efficient schema-less binary decoding with support for variable length encoding.\n *\n * Use [lib0/decoding] with [lib0/encoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module decoding\n */\n\nimport * as binary from './binary.js'\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as string from './string.js'\nimport * as error from './error.js'\nimport * as encoding from './encoding.js'\n\nconst errorUnexpectedEndOfArray = error.create('Unexpected end of array')\nconst errorIntegerOutOfRange = error.create('Integer out of Range')\n\n/**\n * A Decoder handles the decoding of an Uint8Array.\n */\nexport class Decoder {\n  /**\n   * @param {Uint8Array} uint8Array Binary data to decode\n   */\n  constructor (uint8Array) {\n    /**\n     * Decoding target.\n     *\n     * @type {Uint8Array}\n     */\n    this.arr = uint8Array\n    /**\n     * Current decoding position.\n     *\n     * @type {number}\n     */\n    this.pos = 0\n  }\n}\n\n/**\n * @function\n * @param {Uint8Array} uint8Array\n * @return {Decoder}\n */\nexport const createDecoder = uint8Array => new Decoder(uint8Array)\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {boolean}\n */\nexport const hasContent = decoder => decoder.pos !== decoder.arr.length\n\n/**\n * Clone a decoder instance.\n * Optionally set a new position parameter.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} [newPos] Defaults to current position\n * @return {Decoder} A clone of `decoder`\n */\nexport const clone = (decoder, newPos = decoder.pos) => {\n  const _decoder = createDecoder(decoder.arr)\n  _decoder.pos = newPos\n  return _decoder\n}\n\n/**\n * Create an Uint8Array view of the next `len` bytes and advance the position by `len`.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} len The length of bytes to read\n * @return {Uint8Array}\n */\nexport const readUint8Array = (decoder, len) => {\n  const view = new Uint8Array(decoder.arr.buffer, decoder.pos + decoder.arr.byteOffset, len)\n  decoder.pos += len\n  return view\n}\n\n/**\n * Read variable length Uint8Array.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readVarUint8Array = decoder => readUint8Array(decoder, readVarUint(decoder))\n\n/**\n * Read the rest of the content as an ArrayBuffer\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readTailAsUint8Array = decoder => readUint8Array(decoder, decoder.arr.length - decoder.pos)\n\n/**\n * Skip one byte, jump to the next position.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} The next position\n */\nexport const skip8 = decoder => decoder.pos++\n\n/**\n * Read one byte as unsigned integer.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} Unsigned 8-bit integer\n */\nexport const readUint8 = decoder => decoder.arr[decoder.pos++]\n\n/**\n * Read 2 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint16 = decoder => {\n  const uint =\n    decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8)\n  decoder.pos += 2\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32 = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8) +\n    (decoder.arr[decoder.pos + 2] << 16) +\n    (decoder.arr[decoder.pos + 3] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32BigEndian = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos + 3] +\n    (decoder.arr[decoder.pos + 2] << 8) +\n    (decoder.arr[decoder.pos + 1] << 16) +\n    (decoder.arr[decoder.pos] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint8 = decoder => decoder.arr[decoder.pos]\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint16 = decoder =>\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8)\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint32 = decoder => (\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8) +\n  (decoder.arr[decoder.pos + 2] << 16) +\n  (decoder.arr[decoder.pos + 3] << 24)\n) >>> 0\n\n/**\n * Read unsigned integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarUint = decoder => {\n  let num = 0\n  let mult = 1\n  const len = decoder.arr.length\n  while (decoder.pos < len) {\n    const r = decoder.arr[decoder.pos++]\n    // num = num | ((r & binary.BITS7) << len)\n    num = num + (r & binary.BITS7) * mult // shift $r << (7*#iterations) and add it to num\n    mult *= 128 // next iteration, shift 7 \"more\" to the left\n    if (r < binary.BIT8) {\n      return num\n    }\n    /* c8 ignore start */\n    if (num > number.MAX_SAFE_INTEGER) {\n      throw errorIntegerOutOfRange\n    }\n    /* c8 ignore stop */\n  }\n  throw errorUnexpectedEndOfArray\n}\n\n/**\n * Read signed integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n * @todo This should probably create the inverse ~num if number is negative - but this would be a breaking change.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarInt = decoder => {\n  let r = decoder.arr[decoder.pos++]\n  let num = r & binary.BITS6\n  let mult = 64\n  const sign = (r & binary.BIT7) > 0 ? -1 : 1\n  if ((r & binary.BIT8) === 0) {\n    // don't continue reading\n    return sign * num\n  }\n  const len = decoder.arr.length\n  while (decoder.pos < len) {\n    r = decoder.arr[decoder.pos++]\n    // num = num | ((r & binary.BITS7) << len)\n    num = num + (r & binary.BITS7) * mult\n    mult *= 128\n    if (r < binary.BIT8) {\n      return sign * num\n    }\n    /* c8 ignore start */\n    if (num > number.MAX_SAFE_INTEGER) {\n      throw errorIntegerOutOfRange\n    }\n    /* c8 ignore stop */\n  }\n  throw errorUnexpectedEndOfArray\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarUint = decoder => {\n  const pos = decoder.pos\n  const s = readVarUint(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarInt = decoder => {\n  const pos = decoder.pos\n  const s = readVarInt(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * We don't test this function anymore as we use native decoding/encoding by default now.\n * Better not modify this anymore..\n *\n * Transforming utf8 to a string is pretty expensive. The code performs 10x better\n * when String.fromCodePoint is fed with all characters as arguments.\n * But most environments have a maximum number of arguments per functions.\n * For effiency reasons we apply a maximum of 10000 characters at once.\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String.\n */\n/* c8 ignore start */\nexport const _readVarStringPolyfill = decoder => {\n  let remainingLen = readVarUint(decoder)\n  if (remainingLen === 0) {\n    return ''\n  } else {\n    let encodedString = String.fromCodePoint(readUint8(decoder)) // remember to decrease remainingLen\n    if (--remainingLen < 100) { // do not create a Uint8Array for small strings\n      while (remainingLen--) {\n        encodedString += String.fromCodePoint(readUint8(decoder))\n      }\n    } else {\n      while (remainingLen > 0) {\n        const nextLen = remainingLen < 10000 ? remainingLen : 10000\n        // this is dangerous, we create a fresh array view from the existing buffer\n        const bytes = decoder.arr.subarray(decoder.pos, decoder.pos + nextLen)\n        decoder.pos += nextLen\n        // Starting with ES5.1 we can supply a generic array-like object as arguments\n        encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n        remainingLen -= nextLen\n      }\n    }\n    return decodeURIComponent(escape(encodedString))\n  }\n}\n/* c8 ignore stop */\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String\n */\nexport const _readVarStringNative = decoder =>\n  /** @type any */ (string.utf8TextDecoder).decode(readVarUint8Array(decoder))\n\n/**\n * Read string of variable length\n * * varUint is used to store the length of the string\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String\n *\n */\n/* c8 ignore next */\nexport const readVarString = string.utf8TextDecoder ? _readVarStringNative : _readVarStringPolyfill\n\n/**\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readTerminatedUint8Array = decoder => {\n  const encoder = encoding.createEncoder()\n  let b\n  while (true) {\n    b = readUint8(decoder)\n    if (b === 0) {\n      return encoding.toUint8Array(encoder)\n    }\n    if (b === 1) {\n      b = readUint8(decoder)\n    }\n    encoding.write(encoder, b)\n  }\n}\n\n/**\n * @param {Decoder} decoder\n * @return {string}\n */\nexport const readTerminatedString = decoder => string.decodeUtf8(readTerminatedUint8Array(decoder))\n\n/**\n * Look ahead and read varString without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {string}\n */\nexport const peekVarString = decoder => {\n  const pos = decoder.pos\n  const s = readVarString(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * @param {Decoder} decoder\n * @param {number} len\n * @return {DataView}\n */\nexport const readFromDataView = (decoder, len) => {\n  const dv = new DataView(decoder.arr.buffer, decoder.arr.byteOffset + decoder.pos, len)\n  decoder.pos += len\n  return dv\n}\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat32 = decoder => readFromDataView(decoder, 4).getFloat32(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat64 = decoder => readFromDataView(decoder, 8).getFloat64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigInt64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigInt64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigUint64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigUint64(0, false)\n\n/**\n * @type {Array<function(Decoder):any>}\n */\nconst readAnyLookupTable = [\n  decoder => undefined, // CASE 127: undefined\n  decoder => null, // CASE 126: null\n  readVarInt, // CASE 125: integer\n  readFloat32, // CASE 124: float32\n  readFloat64, // CASE 123: float64\n  readBigInt64, // CASE 122: bigint\n  decoder => false, // CASE 121: boolean (false)\n  decoder => true, // CASE 120: boolean (true)\n  readVarString, // CASE 119: string\n  decoder => { // CASE 118: object<string,any>\n    const len = readVarUint(decoder)\n    /**\n     * @type {Object<string,any>}\n     */\n    const obj = {}\n    for (let i = 0; i < len; i++) {\n      const key = readVarString(decoder)\n      obj[key] = readAny(decoder)\n    }\n    return obj\n  },\n  decoder => { // CASE 117: array<any>\n    const len = readVarUint(decoder)\n    const arr = []\n    for (let i = 0; i < len; i++) {\n      arr.push(readAny(decoder))\n    }\n    return arr\n  },\n  readVarUint8Array // CASE 116: Uint8Array\n]\n\n/**\n * @param {Decoder} decoder\n */\nexport const readAny = decoder => readAnyLookupTable[127 - readUint8(decoder)](decoder)\n\n/**\n * T must not be null.\n *\n * @template T\n */\nexport class RleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {function(Decoder):T} reader\n   */\n  constructor (uint8Array, reader) {\n    super(uint8Array)\n    /**\n     * The reader\n     */\n    this.reader = reader\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = this.reader(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {T} */ (this.s)\n  }\n}\n\nexport class IntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    this.s += readVarInt(this)\n    return this.s\n  }\n}\n\nexport class RleIntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      this.s += readVarInt(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class UintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class IncUintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s++)\n  }\n}\n\nexport class IntDiffOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      const diff = readVarInt(this)\n      // if the first bit is set, we read more data\n      const hasCount = diff & 1\n      this.diff = math.floor(diff / 2) // shift >> 1\n      this.count = 1\n      if (hasCount) {\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.s += this.diff\n    this.count--\n    return this.s\n  }\n}\n\nexport class StringDecoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    this.decoder = new UintOptRleDecoder(uint8Array)\n    this.str = readVarString(this.decoder)\n    /**\n     * @type {number}\n     */\n    this.spos = 0\n  }\n\n  /**\n   * @return {string}\n   */\n  read () {\n    const end = this.spos + this.decoder.read()\n    const res = this.str.slice(this.spos, end)\n    this.spos = end\n    return res\n  }\n}\n","/**\n * Utility functions to work with buffers (Uint8Array).\n *\n * @module buffer\n */\n\nimport * as string from './string.js'\nimport * as env from './environment.js'\nimport * as array from './array.js'\nimport * as math from './math.js'\nimport * as encoding from './encoding.js'\nimport * as decoding from './decoding.js'\n\n/**\n * @param {number} len\n */\nexport const createUint8ArrayFromLen = len => new Uint8Array(len)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n * @param {number} byteOffset\n * @param {number} length\n */\nexport const createUint8ArrayViewFromArrayBuffer = (buffer, byteOffset, length) => new Uint8Array(buffer, byteOffset, length)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n */\nexport const createUint8ArrayFromArrayBuffer = buffer => new Uint8Array(buffer)\n\n/* c8 ignore start */\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Browser = bytes => {\n  let s = ''\n  for (let i = 0; i < bytes.byteLength; i++) {\n    s += string.fromCharCode(bytes[i])\n  }\n  // eslint-disable-next-line no-undef\n  return btoa(s)\n}\n/* c8 ignore stop */\n\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Node = bytes => Buffer.from(bytes.buffer, bytes.byteOffset, bytes.byteLength).toString('base64')\n\n/* c8 ignore start */\n/**\n * @param {string} s\n * @return {Uint8Array}\n */\nconst fromBase64Browser = s => {\n  // eslint-disable-next-line no-undef\n  const a = atob(s)\n  const bytes = createUint8ArrayFromLen(a.length)\n  for (let i = 0; i < a.length; i++) {\n    bytes[i] = a.charCodeAt(i)\n  }\n  return bytes\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} s\n */\nconst fromBase64Node = s => {\n  const buf = Buffer.from(s, 'base64')\n  return createUint8ArrayViewFromArrayBuffer(buf.buffer, buf.byteOffset, buf.byteLength)\n}\n\n/* c8 ignore next */\nexport const toBase64 = env.isBrowser ? toBase64Browser : toBase64Node\n\n/* c8 ignore next */\nexport const fromBase64 = env.isBrowser ? fromBase64Browser : fromBase64Node\n\n/**\n * Implements base64url - see https://datatracker.ietf.org/doc/html/rfc4648#section-5\n * @param {Uint8Array} buf\n */\nexport const toBase64UrlEncoded = buf => toBase64(buf).replaceAll('+', '-').replaceAll('/', '_').replaceAll('=', '')\n\n/**\n * @param {string} base64\n */\nexport const fromBase64UrlEncoded = base64 => fromBase64(base64.replaceAll('-', '+').replaceAll('_', '/'))\n\n/**\n * Base64 is always a more efficient choice. This exists for utility purposes only.\n *\n * @param {Uint8Array} buf\n */\nexport const toHexString = buf => array.map(buf, b => b.toString(16).padStart(2, '0')).join('')\n\n/**\n * Note: This function expects that the hex doesn't start with 0x..\n *\n * @param {string} hex\n */\nexport const fromHexString = hex => {\n  const hlen = hex.length\n  const buf = new Uint8Array(math.ceil(hlen / 2))\n  for (let i = 0; i < hlen; i += 2) {\n    buf[buf.length - i / 2 - 1] = Number.parseInt(hex.slice(hlen - i - 2, hlen - i), 16)\n  }\n  return buf\n}\n\n/**\n * Copy the content of an Uint8Array view to a new ArrayBuffer.\n *\n * @param {Uint8Array} uint8Array\n * @return {Uint8Array}\n */\nexport const copyUint8Array = uint8Array => {\n  const newBuf = createUint8ArrayFromLen(uint8Array.byteLength)\n  newBuf.set(uint8Array)\n  return newBuf\n}\n\n/**\n * Encode anything as a UInt8Array. It's a pun on typescripts's `any` type.\n * See encoding.writeAny for more information.\n *\n * @param {any} data\n * @return {Uint8Array}\n */\nexport const encodeAny = data =>\n  encoding.encode(encoder => encoding.writeAny(encoder, data))\n\n/**\n * Decode an any-encoded value.\n *\n * @param {Uint8Array} buf\n * @return {any}\n */\nexport const decodeAny = buf => decoding.readAny(decoding.createDecoder(buf))\n\n/**\n * Shift Byte Array {N} bits to the left. Does not expand byte array.\n *\n * @param {Uint8Array} bs\n * @param {number} N should be in the range of [0-7]\n */\nexport const shiftNBitsLeft = (bs, N) => {\n  if (N === 0) return bs\n  bs = new Uint8Array(bs)\n  bs[0] <<= N\n  for (let i = 1; i < bs.length; i++) {\n    bs[i - 1] |= bs[i] >>> (8 - N)\n    bs[i] <<= N\n  }\n  return bs\n}\n","import { toBase64 } from 'lib0/buffer.js';\n\nexport async function sha(input: ArrayBuffer): Promise<string> {\n  const hash = await crypto.subtle.digest('SHA-256', input);\n\n  // faster conversion from ArrayBuffer to base64 in browser\n  return toBase64(new Uint8Array(hash)).replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n","import { assertExists } from '@blocksuite/global/utils';\n\nimport { sha } from '../persistence/blob/utils.js';\n\nexport class MemoryBlobManager {\n  private readonly _map = new Map<string, Blob>();\n  private readonly _blobsRef = new Map<string, number>();\n\n  async get(key: string) {\n    return this._map.get(key) ?? null;\n  }\n\n  async set(value: Blob, key?: string) {\n    const _key = key || (await sha(await value.arrayBuffer()));\n    this._map.set(_key, value);\n    return _key;\n  }\n\n  async delete(key: string) {\n    this._map.delete(key);\n  }\n\n  async list() {\n    return Array.from(this._map.keys());\n  }\n\n  async gc() {\n    const blobs = await this.list();\n    blobs.forEach(blobId => {\n      const ref = this._blobsRef.get(blobId);\n      if (!ref || ref <= 0) {\n        this.delete(blobId).catch(console.error);\n        this._blobsRef.delete(blobId);\n      }\n    });\n  }\n\n  increaseRef(blobId: string) {\n    const ref = this._blobsRef.get(blobId) ?? 0;\n    this._blobsRef.set(blobId, ref + 1);\n  }\n\n  decreaseRef(blobId: string) {\n    const ref = this._blobsRef.get(blobId) ?? 0;\n    this._blobsRef.set(blobId, Math.max(ref - 1, 0));\n  }\n}\n\nexport function getAssetName(assets: Map<string, Blob>, blobId: string) {\n  const blob = assets.get(blobId);\n  assertExists(blob);\n  const name = (blob as File).name ?? undefined;\n  const ext =\n    name !== undefined && name.includes('.')\n      ? name.split('.').at(-1)\n      : blob.type !== ''\n        ? blob.type.split('/').at(-1)\n        : 'blob';\n  return `${name?.split('.').at(0) ?? blobId}.${ext}`;\n}\n","type Keyof<T> = T extends unknown ? keyof T : never;\n\nexport class ASTWalkerContext<TNode extends object> {\n  private _stack: {\n    node: TNode;\n    prop: Keyof<TNode>;\n    context: Record<string, unknown>;\n  }[] = [];\n\n  private _globalContext: Record<string, unknown> = Object.create(null);\n\n  private _defaultProp: Keyof<TNode> = 'children' as unknown as Keyof<TNode>;\n\n  _skip = false;\n  _skipChildrenNum = 0;\n\n  setDefaultProp = (parentProp: Keyof<TNode>) => {\n    this._defaultProp = parentProp;\n  };\n\n  get stack() {\n    return this._stack;\n  }\n\n  private current() {\n    return this._stack[this._stack.length - 1];\n  }\n\n  currentNode() {\n    return this.current()?.node;\n  }\n\n  openNode(node: TNode, parentProp?: Keyof<TNode>) {\n    this._stack.push({\n      node,\n      prop: parentProp ?? this._defaultProp,\n      context: Object.create(null),\n    });\n    return this;\n  }\n\n  setNodeContext(key: string, value: unknown) {\n    this._stack[this._stack.length - 1].context[key] = value;\n    return this;\n  }\n\n  getNodeContext(key: string) {\n    return this.current().context[key];\n  }\n\n  getGlobalContext(key: string) {\n    return this._globalContext[key];\n  }\n\n  pushGlobalContextStack<StackElement>(key: string, value: StackElement) {\n    const stack = this._globalContext[key];\n    if (stack instanceof Array) {\n      stack.push(value);\n    } else {\n      this._globalContext[key] = [value];\n    }\n  }\n\n  getGlobalContextStack<StackElement>(key: string) {\n    const stack = this._globalContext[key];\n    if (stack instanceof Array) {\n      return stack as StackElement[];\n    } else {\n      return [] as StackElement[];\n    }\n  }\n\n  setGlobalContextStack<StackElement>(key: string, value: StackElement[]) {\n    this._globalContext[key] = value;\n  }\n\n  setGlobalContext(key: string, value: unknown) {\n    this._globalContext[key] = value;\n    return this;\n  }\n\n  closeNode() {\n    const ele = this._stack.pop();\n    if (!ele) return this;\n    const parent = this._stack.pop();\n    if (!parent) {\n      this._stack.push(ele);\n      return this;\n    }\n    if (parent.node[ele.prop] instanceof Array) {\n      (parent.node[ele.prop] as Array<object>).push(ele.node);\n    }\n    this._stack.push(parent);\n    return this;\n  }\n\n  skipAllChildren() {\n    this._skip = true;\n  }\n\n  skipChildren(num = 1) {\n    this._skipChildrenNum = num;\n  }\n}\n","import { assertEquals } from '@blocksuite/global/utils';\n\nimport type { AssetsManager } from '../transformer/assets.js';\nimport type {\n  BlockSnapshot,\n  PageSnapshot,\n  SliceSnapshot,\n} from '../transformer/type.js';\nimport { ASTWalkerContext } from './context.js';\n\nexport type FromPageSnapshotPayload = {\n  snapshot: PageSnapshot;\n  assets?: AssetsManager;\n};\nexport type FromBlockSnapshotPayload = {\n  snapshot: BlockSnapshot;\n  assets?: AssetsManager;\n};\nexport type FromSliceSnapshotPayload = {\n  snapshot: SliceSnapshot;\n  assets?: AssetsManager;\n};\nexport type FromPageSnapshotResult<Target> = {\n  file: Target;\n  assetsIds: string[];\n};\nexport type FromBlockSnapshotResult<Target> = {\n  file: Target;\n  assetsIds: string[];\n};\nexport type FromSliceSnapshotResult<Target> = {\n  file: Target;\n  assetsIds: string[];\n};\nexport type ToPageSnapshotPayload<Target> = {\n  file: Target;\n  assets?: AssetsManager;\n};\nexport type ToBlockSnapshotPayload<Target> = {\n  file: Target;\n  assets?: AssetsManager;\n};\nexport type ToSliceSnapshotPayload<Target> = {\n  file: Target;\n  assets?: AssetsManager;\n};\n\nexport abstract class BaseAdapter<AdapterTarget = unknown> {\n  protected configs: Map<string, unknown> = new Map();\n\n  abstract fromPageSnapshot(\n    payload: FromPageSnapshotPayload\n  ): Promise<FromPageSnapshotResult<AdapterTarget>>;\n  abstract fromBlockSnapshot(\n    payload: FromBlockSnapshotPayload\n  ): Promise<FromBlockSnapshotResult<AdapterTarget>>;\n  abstract fromSliceSnapshot(\n    payload: FromSliceSnapshotPayload\n  ): Promise<FromSliceSnapshotResult<AdapterTarget>>;\n  abstract toPageSnapshot(\n    payload: ToPageSnapshotPayload<AdapterTarget>\n  ): Promise<PageSnapshot>;\n  abstract toBlockSnapshot(\n    payload: ToBlockSnapshotPayload<AdapterTarget>\n  ): Promise<BlockSnapshot>;\n  abstract toSliceSnapshot(\n    payload: ToSliceSnapshotPayload<AdapterTarget>\n  ): Promise<SliceSnapshot | null>;\n\n  applyConfigs(configs: Map<string, unknown>) {\n    this.configs = new Map([...configs]);\n  }\n}\n\ntype Keyof<T> = T extends unknown ? keyof T : never;\n\ntype WalkerFn<ONode extends object, TNode extends object> = (\n  o: NodeProps<ONode>,\n  context: ASTWalkerContext<TNode>\n) => Promise<void>;\n\ntype NodeProps<Node extends object> = {\n  node: Node;\n  parent: Node | null;\n  prop: Keyof<Node> | null;\n  index: number | null;\n};\n\n// Ported from https://github.com/Rich-Harris/estree-walker MIT License\nexport class ASTWalker<ONode extends object, TNode extends object | never> {\n  private _enter: WalkerFn<ONode, TNode> | undefined;\n  private _leave: WalkerFn<ONode, TNode> | undefined;\n  private _isONode!: (node: unknown) => node is ONode;\n\n  private context: ASTWalkerContext<TNode>;\n\n  constructor() {\n    this.context = new ASTWalkerContext<TNode>();\n  }\n\n  setEnter = (fn: WalkerFn<ONode, TNode>) => {\n    this._enter = fn;\n  };\n\n  setLeave = (fn: WalkerFn<ONode, TNode>) => {\n    this._leave = fn;\n  };\n\n  setONodeTypeGuard = (fn: (node: unknown) => node is ONode) => {\n    this._isONode = fn;\n  };\n\n  walk = async (oNode: ONode, tNode: TNode) => {\n    this.context.openNode(tNode);\n    await this._visit({ node: oNode, parent: null, prop: null, index: null });\n    assertEquals(this.context.stack.length, 1, 'There are unclosed nodes');\n    return this.context.currentNode();\n  };\n\n  walkONode = async (oNode: ONode) => {\n    await this._visit({ node: oNode, parent: null, prop: null, index: null });\n  };\n\n  private _visit = async (o: NodeProps<ONode>) => {\n    if (!o.node) return;\n    this.context._skipChildrenNum = 0;\n    this.context._skip = false;\n\n    if (this._enter) {\n      await this._enter(o, this.context);\n    }\n\n    if (this.context._skip) {\n      return;\n    }\n\n    for (const key in o.node) {\n      const value = o.node[key];\n\n      if (value && typeof value === 'object') {\n        if (Array.isArray(value)) {\n          for (\n            let i = this.context._skipChildrenNum;\n            i < value.length;\n            i += 1\n          ) {\n            const item = value[i];\n            if (\n              item !== null &&\n              typeof item === 'object' &&\n              this._isONode(item)\n            ) {\n              await this._visit({\n                node: item,\n                parent: o.node,\n                prop: key as unknown as Keyof<ONode>,\n                index: i,\n              });\n            }\n          }\n        } else if (\n          this.context._skipChildrenNum === 0 &&\n          this._isONode(value)\n        ) {\n          await this._visit({\n            node: value,\n            parent: o.node,\n            prop: key as unknown as Keyof<ONode>,\n            index: null,\n          });\n        }\n      }\n    }\n\n    if (this._leave) {\n      await this._leave(o, this.context);\n    }\n  };\n}\n","/**\n * Observable class prototype.\n *\n * @module observable\n */\n\nimport * as map from './map.js'\nimport * as set from './set.js'\nimport * as array from './array.js'\n\n/**\n * Handles named events.\n * @experimental\n *\n * This is basically a (better typed) duplicate of Observable, which will replace Observable in the\n * next release.\n *\n * @template {{[key in keyof EVENTS]: function(...any):void}} EVENTS\n */\nexport class ObservableV2 {\n  constructor () {\n    /**\n     * Some desc.\n     * @type {Map<string, Set<any>>}\n     */\n    this._observers = map.create()\n  }\n\n  /**\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */\n  on (name, f) {\n    map.setIfUndefined(this._observers, /** @type {string} */ (name), set.create).add(f)\n    return f\n  }\n\n  /**\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */\n  once (name, f) {\n    /**\n     * @param  {...any} args\n     */\n    const _f = (...args) => {\n      this.off(name, /** @type {any} */ (_f))\n      f(...args)\n    }\n    this.on(name, /** @type {any} */ (_f))\n  }\n\n  /**\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */\n  off (name, f) {\n    const observers = this._observers.get(name)\n    if (observers !== undefined) {\n      observers.delete(f)\n      if (observers.size === 0) {\n        this._observers.delete(name)\n      }\n    }\n  }\n\n  /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name The event name.\n   * @param {Parameters<EVENTS[NAME]>} args The arguments that are applied to the event listener.\n   */\n  emit (name, args) {\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args))\n  }\n\n  destroy () {\n    this._observers = map.create()\n  }\n}\n\n/* c8 ignore start */\n/**\n * Handles named events.\n *\n * @deprecated\n * @template N\n */\nexport class Observable {\n  constructor () {\n    /**\n     * Some desc.\n     * @type {Map<N, any>}\n     */\n    this._observers = map.create()\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  on (name, f) {\n    map.setIfUndefined(this._observers, name, set.create).add(f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  once (name, f) {\n    /**\n     * @param  {...any} args\n     */\n    const _f = (...args) => {\n      this.off(name, _f)\n      f(...args)\n    }\n    this.on(name, _f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  off (name, f) {\n    const observers = this._observers.get(name)\n    if (observers !== undefined) {\n      observers.delete(f)\n      if (observers.size === 0) {\n        this._observers.delete(name)\n      }\n    }\n  }\n\n  /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @param {N} name The event name.\n   * @param {Array<any>} args The arguments that are applied to the event listener.\n   */\n  emit (name, args) {\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args))\n  }\n\n  destroy () {\n    this._observers = map.create()\n  }\n}\n/* c8 ignore end */\n","/* eslint-env browser */\n\nexport const subtle = crypto.subtle\nexport const getRandomValues = crypto.getRandomValues.bind(crypto)\n","/**\n * Isomorphic module for true random numbers / buffers / uuids.\n *\n * Attention: falls back to Math.random if the browser does not support crypto.\n *\n * @module random\n */\n\nimport * as math from './math.js'\nimport * as binary from './binary.js'\nimport { getRandomValues } from 'lib0/webcrypto'\n\nexport const rand = Math.random\n\nexport const uint32 = () => getRandomValues(new Uint32Array(1))[0]\n\nexport const uint53 = () => {\n  const arr = getRandomValues(new Uint32Array(8))\n  return (arr[0] & binary.BITS21) * (binary.BITS32 + 1) + (arr[1] >>> 0)\n}\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {T}\n */\nexport const oneOf = arr => arr[math.floor(rand() * arr.length)]\n\n// @ts-ignore\nconst uuidv4Template = [1e7] + -1e3 + -4e3 + -8e3 + -1e11\n\n/**\n * @return {string}\n */\nexport const uuidv4 = () => uuidv4Template.replace(/[018]/g, /** @param {number} c */ c =>\n  (c ^ uint32() & 15 >> c / 4).toString(16)\n)\n","/**\n * Utility module to work with time.\n *\n * @module time\n */\n\nimport * as metric from './metric.js'\nimport * as math from './math.js'\n\n/**\n * Return current time.\n *\n * @return {Date}\n */\nexport const getDate = () => new Date()\n\n/**\n * Return current unix time.\n *\n * @return {number}\n */\nexport const getUnixTime = Date.now\n\n/**\n * Transform time (in ms) to a human readable format. E.g. 1100 => 1.1s. 60s => 1min. .001 => 10μs.\n *\n * @param {number} d duration in milliseconds\n * @return {string} humanized approximation of time\n */\nexport const humanizeDuration = d => {\n  if (d < 60000) {\n    const p = metric.prefix(d, -1)\n    return math.round(p.n * 100) / 100 + p.prefix + 's'\n  }\n  d = math.floor(d / 1000)\n  const seconds = d % 60\n  const minutes = math.floor(d / 60) % 60\n  const hours = math.floor(d / 3600) % 24\n  const days = math.floor(d / 86400)\n  if (days > 0) {\n    return days + 'd' + ((hours > 0 || minutes > 30) ? ' ' + (minutes > 30 ? hours + 1 : hours) + 'h' : '')\n  }\n  if (hours > 0) {\n    /* c8 ignore next */\n    return hours + 'h' + ((minutes > 0 || seconds > 30) ? ' ' + (seconds > 30 ? minutes + 1 : minutes) + 'min' : '')\n  }\n  return minutes + 'min' + (seconds > 0 ? ' ' + seconds + 's' : '')\n}\n","/**\n * Utility helpers to work with promises.\n *\n * @module promise\n */\n\nimport * as time from './time.js'\n\n/**\n * @template T\n * @callback PromiseResolve\n * @param {T|PromiseLike<T>} [result]\n */\n\n/**\n * @template T\n * @param {function(PromiseResolve<T>,function(Error):void):any} f\n * @return {Promise<T>}\n */\nexport const create = f => /** @type {Promise<T>} */ (new Promise(f))\n\n/**\n * @param {function(function():void,function(Error):void):void} f\n * @return {Promise<void>}\n */\nexport const createEmpty = f => new Promise(f)\n\n/**\n * `Promise.all` wait for all promises in the array to resolve and return the result\n * @template {unknown[] | []} PS\n *\n * @param {PS} ps\n * @return {Promise<{ -readonly [P in keyof PS]: Awaited<PS[P]> }>}\n */\nexport const all = Promise.all.bind(Promise)\n\n/**\n * @param {Error} [reason]\n * @return {Promise<never>}\n */\nexport const reject = reason => Promise.reject(reason)\n\n/**\n * @template T\n * @param {T|void} res\n * @return {Promise<T|void>}\n */\nexport const resolve = res => Promise.resolve(res)\n\n/**\n * @template T\n * @param {T} res\n * @return {Promise<T>}\n */\nexport const resolveWith = res => Promise.resolve(res)\n\n/**\n * @todo Next version, reorder parameters: check, [timeout, [intervalResolution]]\n *\n * @param {number} timeout\n * @param {function():boolean} check\n * @param {number} [intervalResolution]\n * @return {Promise<void>}\n */\nexport const until = (timeout, check, intervalResolution = 10) => create((resolve, reject) => {\n  const startTime = time.getUnixTime()\n  const hasTimeout = timeout > 0\n  const untilInterval = () => {\n    if (check()) {\n      clearInterval(intervalHandle)\n      resolve()\n    } else if (hasTimeout) {\n      /* c8 ignore else */\n      if (time.getUnixTime() - startTime > timeout) {\n        clearInterval(intervalHandle)\n        reject(new Error('Timeout'))\n      }\n    }\n  }\n  const intervalHandle = setInterval(untilInterval, intervalResolution)\n})\n\n/**\n * @param {number} timeout\n * @return {Promise<undefined>}\n */\nexport const wait = timeout => create((resolve, reject) => setTimeout(resolve, timeout))\n\n/**\n * Checks if an object is a promise using ducktyping.\n *\n * Promises are often polyfilled, so it makes sense to add some additional guarantees if the user of this\n * library has some insane environment where global Promise objects are overwritten.\n *\n * @param {any} p\n * @return {boolean}\n */\nexport const isPromise = p => p instanceof Promise || (p && p.then && p.catch && p.finally)\n","/**\n * Working with value pairs.\n *\n * @module pair\n */\n\n/**\n * @template L,R\n */\nexport class Pair {\n  /**\n   * @param {L} left\n   * @param {R} right\n   */\n  constructor (left, right) {\n    this.left = left\n    this.right = right\n  }\n}\n\n/**\n * @template L,R\n * @param {L} left\n * @param {R} right\n * @return {Pair<L,R>}\n */\nexport const create = (left, right) => new Pair(left, right)\n\n/**\n * @template L,R\n * @param {R} right\n * @param {L} left\n * @return {Pair<L,R>}\n */\nexport const createReversed = (right, left) => new Pair(left, right)\n\n/**\n * @template L,R\n * @param {Array<Pair<L,R>>} arr\n * @param {function(L, R):any} f\n */\nexport const forEach = (arr, f) => arr.forEach(p => f(p.left, p.right))\n\n/**\n * @template L,R,X\n * @param {Array<Pair<L,R>>} arr\n * @param {function(L, R):X} f\n * @return {Array<X>}\n */\nexport const map = (arr, f) => arr.map(p => f(p.left, p.right))\n","/* eslint-env browser */\n\n/**\n * Utility module to work with the DOM.\n *\n * @module dom\n */\n\nimport * as pair from './pair.js'\nimport * as map from './map.js'\n\n/* c8 ignore start */\n/**\n * @type {Document}\n */\nexport const doc = /** @type {Document} */ (typeof document !== 'undefined' ? document : {})\n\n/**\n * @param {string} name\n * @return {HTMLElement}\n */\nexport const createElement = name => doc.createElement(name)\n\n/**\n * @return {DocumentFragment}\n */\nexport const createDocumentFragment = () => doc.createDocumentFragment()\n\n/**\n * @param {string} text\n * @return {Text}\n */\nexport const createTextNode = text => doc.createTextNode(text)\n\nexport const domParser = /** @type {DOMParser} */ (typeof DOMParser !== 'undefined' ? new DOMParser() : null)\n\n/**\n * @param {HTMLElement} el\n * @param {string} name\n * @param {Object} opts\n */\nexport const emitCustomEvent = (el, name, opts) => el.dispatchEvent(new CustomEvent(name, opts))\n\n/**\n * @param {Element} el\n * @param {Array<pair.Pair<string,string|boolean>>} attrs Array of key-value pairs\n * @return {Element}\n */\nexport const setAttributes = (el, attrs) => {\n  pair.forEach(attrs, (key, value) => {\n    if (value === false) {\n      el.removeAttribute(key)\n    } else if (value === true) {\n      el.setAttribute(key, '')\n    } else {\n      // @ts-ignore\n      el.setAttribute(key, value)\n    }\n  })\n  return el\n}\n\n/**\n * @param {Element} el\n * @param {Map<string, string>} attrs Array of key-value pairs\n * @return {Element}\n */\nexport const setAttributesMap = (el, attrs) => {\n  attrs.forEach((value, key) => { el.setAttribute(key, value) })\n  return el\n}\n\n/**\n * @param {Array<Node>|HTMLCollection} children\n * @return {DocumentFragment}\n */\nexport const fragment = children => {\n  const fragment = createDocumentFragment()\n  for (let i = 0; i < children.length; i++) {\n    appendChild(fragment, children[i])\n  }\n  return fragment\n}\n\n/**\n * @param {Element} parent\n * @param {Array<Node>} nodes\n * @return {Element}\n */\nexport const append = (parent, nodes) => {\n  appendChild(parent, fragment(nodes))\n  return parent\n}\n\n/**\n * @param {HTMLElement} el\n */\nexport const remove = el => el.remove()\n\n/**\n * @param {EventTarget} el\n * @param {string} name\n * @param {EventListener} f\n */\nexport const addEventListener = (el, name, f) => el.addEventListener(name, f)\n\n/**\n * @param {EventTarget} el\n * @param {string} name\n * @param {EventListener} f\n */\nexport const removeEventListener = (el, name, f) => el.removeEventListener(name, f)\n\n/**\n * @param {Node} node\n * @param {Array<pair.Pair<string,EventListener>>} listeners\n * @return {Node}\n */\nexport const addEventListeners = (node, listeners) => {\n  pair.forEach(listeners, (name, f) => addEventListener(node, name, f))\n  return node\n}\n\n/**\n * @param {Node} node\n * @param {Array<pair.Pair<string,EventListener>>} listeners\n * @return {Node}\n */\nexport const removeEventListeners = (node, listeners) => {\n  pair.forEach(listeners, (name, f) => removeEventListener(node, name, f))\n  return node\n}\n\n/**\n * @param {string} name\n * @param {Array<pair.Pair<string,string>|pair.Pair<string,boolean>>} attrs Array of key-value pairs\n * @param {Array<Node>} children\n * @return {Element}\n */\nexport const element = (name, attrs = [], children = []) =>\n  append(setAttributes(createElement(name), attrs), children)\n\n/**\n * @param {number} width\n * @param {number} height\n */\nexport const canvas = (width, height) => {\n  const c = /** @type {HTMLCanvasElement} */ (createElement('canvas'))\n  c.height = height\n  c.width = width\n  return c\n}\n\n/**\n * @param {string} t\n * @return {Text}\n */\nexport const text = createTextNode\n\n/**\n * @param {pair.Pair<string,string>} pair\n */\nexport const pairToStyleString = pair => `${pair.left}:${pair.right};`\n\n/**\n * @param {Array<pair.Pair<string,string>>} pairs\n * @return {string}\n */\nexport const pairsToStyleString = pairs => pairs.map(pairToStyleString).join('')\n\n/**\n * @param {Map<string,string>} m\n * @return {string}\n */\nexport const mapToStyleString = m => map.map(m, (value, key) => `${key}:${value};`).join('')\n\n/**\n * @todo should always query on a dom element\n *\n * @param {HTMLElement|ShadowRoot} el\n * @param {string} query\n * @return {HTMLElement | null}\n */\nexport const querySelector = (el, query) => el.querySelector(query)\n\n/**\n * @param {HTMLElement|ShadowRoot} el\n * @param {string} query\n * @return {NodeListOf<HTMLElement>}\n */\nexport const querySelectorAll = (el, query) => el.querySelectorAll(query)\n\n/**\n * @param {string} id\n * @return {HTMLElement}\n */\nexport const getElementById = id => /** @type {HTMLElement} */ (doc.getElementById(id))\n\n/**\n * @param {string} html\n * @return {HTMLElement}\n */\nconst _parse = html => domParser.parseFromString(`<html><body>${html}</body></html>`, 'text/html').body\n\n/**\n * @param {string} html\n * @return {DocumentFragment}\n */\nexport const parseFragment = html => fragment(/** @type {any} */ (_parse(html).childNodes))\n\n/**\n * @param {string} html\n * @return {HTMLElement}\n */\nexport const parseElement = html => /** @type HTMLElement */ (_parse(html).firstElementChild)\n\n/**\n * @param {HTMLElement} oldEl\n * @param {HTMLElement|DocumentFragment} newEl\n */\nexport const replaceWith = (oldEl, newEl) => oldEl.replaceWith(newEl)\n\n/**\n * @param {HTMLElement} parent\n * @param {HTMLElement} el\n * @param {Node|null} ref\n * @return {HTMLElement}\n */\nexport const insertBefore = (parent, el, ref) => parent.insertBefore(el, ref)\n\n/**\n * @param {Node} parent\n * @param {Node} child\n * @return {Node}\n */\nexport const appendChild = (parent, child) => parent.appendChild(child)\n\nexport const ELEMENT_NODE = doc.ELEMENT_NODE\nexport const TEXT_NODE = doc.TEXT_NODE\nexport const CDATA_SECTION_NODE = doc.CDATA_SECTION_NODE\nexport const COMMENT_NODE = doc.COMMENT_NODE\nexport const DOCUMENT_NODE = doc.DOCUMENT_NODE\nexport const DOCUMENT_TYPE_NODE = doc.DOCUMENT_TYPE_NODE\nexport const DOCUMENT_FRAGMENT_NODE = doc.DOCUMENT_FRAGMENT_NODE\n\n/**\n * @param {any} node\n * @param {number} type\n */\nexport const checkNodeType = (node, type) => node.nodeType === type\n\n/**\n * @param {Node} parent\n * @param {HTMLElement} child\n */\nexport const isParentOf = (parent, child) => {\n  let p = child.parentNode\n  while (p && p !== parent) {\n    p = p.parentNode\n  }\n  return p === parent\n}\n/* c8 ignore stop */\n","/**\n * Utility module to work with EcmaScript Symbols.\n *\n * @module symbol\n */\n\n/**\n * Return fresh symbol.\n *\n * @return {Symbol}\n */\nexport const create = Symbol\n\n/**\n * @param {any} s\n * @return {boolean}\n */\nexport const isSymbol = s => typeof s === 'symbol'\n","import * as symbol from './symbol.js'\nimport * as time from './time.js'\nimport * as env from './environment.js'\nimport * as func from './function.js'\n\nexport const BOLD = symbol.create()\nexport const UNBOLD = symbol.create()\nexport const BLUE = symbol.create()\nexport const GREY = symbol.create()\nexport const GREEN = symbol.create()\nexport const RED = symbol.create()\nexport const PURPLE = symbol.create()\nexport const ORANGE = symbol.create()\nexport const UNCOLOR = symbol.create()\n\n/* c8 ignore start */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */\nexport const computeNoColorLoggingArgs = args => {\n  const strBuilder = []\n  const logArgs = []\n  // try with formatting until we find something unsupported\n  let i = 0\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    if (arg.constructor === String || arg.constructor === Number) {\n      strBuilder.push(arg)\n    } else if (arg.constructor === Object) {\n      logArgs.push(JSON.stringify(arg))\n    }\n  }\n  return logArgs\n}\n/* c8 ignore stop */\n\nconst loggingColors = [GREEN, PURPLE, ORANGE, BLUE]\nlet nextColor = 0\nlet lastLoggingTime = time.getUnixTime()\n\n/* c8 ignore start */\n/**\n * @param {function(...any):void} _print\n * @param {string} moduleName\n * @return {function(...any):void}\n */\nexport const createModuleLogger = (_print, moduleName) => {\n  const color = loggingColors[nextColor]\n  const debugRegexVar = env.getVariable('log')\n  const doLogging = debugRegexVar !== null &&\n    (debugRegexVar === '*' || debugRegexVar === 'true' ||\n      new RegExp(debugRegexVar, 'gi').test(moduleName))\n  nextColor = (nextColor + 1) % loggingColors.length\n  moduleName += ': '\n  return !doLogging\n    ? func.nop\n    : (...args) => {\n        const timeNow = time.getUnixTime()\n        const timeDiff = timeNow - lastLoggingTime\n        lastLoggingTime = timeNow\n        _print(\n          color,\n          moduleName,\n          UNCOLOR,\n          ...args.map((arg) =>\n            (typeof arg === 'string' || typeof arg === 'symbol')\n              ? arg\n              : JSON.stringify(arg)\n          ),\n          color,\n          ' +' + timeDiff + 'ms'\n        )\n      }\n}\n/* c8 ignore stop */\n","/**\n * Isomorphic logging module with support for colors!\n *\n * @module logging\n */\n\nimport * as env from './environment.js'\nimport * as set from './set.js'\nimport * as pair from './pair.js'\nimport * as dom from './dom.js'\nimport * as json from './json.js'\nimport * as map from './map.js'\nimport * as eventloop from './eventloop.js'\nimport * as math from './math.js'\nimport * as common from './logging.common.js'\n\nexport { BOLD, UNBOLD, BLUE, GREY, GREEN, RED, PURPLE, ORANGE, UNCOLOR } from './logging.common.js'\n\n/**\n * @type {Object<Symbol,pair.Pair<string,string>>}\n */\nconst _browserStyleMap = {\n  [common.BOLD]: pair.create('font-weight', 'bold'),\n  [common.UNBOLD]: pair.create('font-weight', 'normal'),\n  [common.BLUE]: pair.create('color', 'blue'),\n  [common.GREEN]: pair.create('color', 'green'),\n  [common.GREY]: pair.create('color', 'grey'),\n  [common.RED]: pair.create('color', 'red'),\n  [common.PURPLE]: pair.create('color', 'purple'),\n  [common.ORANGE]: pair.create('color', 'orange'), // not well supported in chrome when debugging node with inspector - TODO: deprecate\n  [common.UNCOLOR]: pair.create('color', 'black')\n}\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */\n/* c8 ignore start */\nconst computeBrowserLoggingArgs = (args) => {\n  const strBuilder = []\n  const styles = []\n  const currentStyle = map.create()\n  /**\n   * @type {Array<string|Object|number>}\n   */\n  let logArgs = []\n  // try with formatting until we find something unsupported\n  let i = 0\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _browserStyleMap[arg]\n    if (style !== undefined) {\n      currentStyle.set(style.left, style.right)\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        const style = dom.mapToStyleString(currentStyle)\n        if (i > 0 || style.length > 0) {\n          strBuilder.push('%c' + arg)\n          styles.push(style)\n        } else {\n          strBuilder.push(arg)\n        }\n      } else {\n        break\n      }\n    }\n  }\n  if (i > 0) {\n    // create logArgs with what we have so far\n    logArgs = styles\n    logArgs.unshift(strBuilder.join(''))\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    if (!(arg instanceof Symbol)) {\n      logArgs.push(arg)\n    }\n  }\n  return logArgs\n}\n/* c8 ignore stop */\n\n/* c8 ignore start */\nconst computeLoggingArgs = env.supportsColor\n  ? computeBrowserLoggingArgs\n  : common.computeNoColorLoggingArgs\n/* c8 ignore stop */\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const print = (...args) => {\n  console.log(...computeLoggingArgs(args))\n  /* c8 ignore next */\n  vconsoles.forEach((vc) => vc.print(args))\n}\n\n/* c8 ignore start */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const warn = (...args) => {\n  console.warn(...computeLoggingArgs(args))\n  args.unshift(common.ORANGE)\n  vconsoles.forEach((vc) => vc.print(args))\n}\n/* c8 ignore stop */\n\n/**\n * @param {Error} err\n */\n/* c8 ignore start */\nexport const printError = (err) => {\n  console.error(err)\n  vconsoles.forEach((vc) => vc.printError(err))\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} url image location\n * @param {number} height height of the image in pixel\n */\n/* c8 ignore start */\nexport const printImg = (url, height) => {\n  if (env.isBrowser) {\n    console.log(\n      '%c                      ',\n      `font-size: ${height}px; background-size: contain; background-repeat: no-repeat; background-image: url(${url})`\n    )\n    // console.log('%c                ', `font-size: ${height}x; background: url(${url}) no-repeat;`)\n  }\n  vconsoles.forEach((vc) => vc.printImg(url, height))\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} base64\n * @param {number} height\n */\n/* c8 ignore next 2 */\nexport const printImgBase64 = (base64, height) =>\n  printImg(`data:image/gif;base64,${base64}`, height)\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const group = (...args) => {\n  console.group(...computeLoggingArgs(args))\n  /* c8 ignore next */\n  vconsoles.forEach((vc) => vc.group(args))\n}\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const groupCollapsed = (...args) => {\n  console.groupCollapsed(...computeLoggingArgs(args))\n  /* c8 ignore next */\n  vconsoles.forEach((vc) => vc.groupCollapsed(args))\n}\n\nexport const groupEnd = () => {\n  console.groupEnd()\n  /* c8 ignore next */\n  vconsoles.forEach((vc) => vc.groupEnd())\n}\n\n/**\n * @param {function():Node} createNode\n */\n/* c8 ignore next 2 */\nexport const printDom = (createNode) =>\n  vconsoles.forEach((vc) => vc.printDom(createNode()))\n\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {number} height\n */\n/* c8 ignore next 2 */\nexport const printCanvas = (canvas, height) =>\n  printImg(canvas.toDataURL(), height)\n\nexport const vconsoles = set.create()\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<Element>}\n */\n/* c8 ignore start */\nconst _computeLineSpans = (args) => {\n  const spans = []\n  const currentStyle = new Map()\n  // try with formatting until we find something unsupported\n  let i = 0\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _browserStyleMap[arg]\n    if (style !== undefined) {\n      currentStyle.set(style.left, style.right)\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        // @ts-ignore\n        const span = dom.element('span', [\n          pair.create('style', dom.mapToStyleString(currentStyle))\n        ], [dom.text(arg.toString())])\n        if (span.innerHTML === '') {\n          span.innerHTML = '&nbsp;'\n        }\n        spans.push(span)\n      } else {\n        break\n      }\n    }\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    let content = args[i]\n    if (!(content instanceof Symbol)) {\n      if (content.constructor !== String && content.constructor !== Number) {\n        content = ' ' + json.stringify(content) + ' '\n      }\n      spans.push(\n        dom.element('span', [], [dom.text(/** @type {string} */ (content))])\n      )\n    }\n  }\n  return spans\n}\n/* c8 ignore stop */\n\nconst lineStyle =\n  'font-family:monospace;border-bottom:1px solid #e2e2e2;padding:2px;'\n\n/* c8 ignore start */\nexport class VConsole {\n  /**\n   * @param {Element} dom\n   */\n  constructor (dom) {\n    this.dom = dom\n    /**\n     * @type {Element}\n     */\n    this.ccontainer = this.dom\n    this.depth = 0\n    vconsoles.add(this)\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   * @param {boolean} collapsed\n   */\n  group (args, collapsed = false) {\n    eventloop.enqueue(() => {\n      const triangleDown = dom.element('span', [\n        pair.create('hidden', collapsed),\n        pair.create('style', 'color:grey;font-size:120%;')\n      ], [dom.text('▼')])\n      const triangleRight = dom.element('span', [\n        pair.create('hidden', !collapsed),\n        pair.create('style', 'color:grey;font-size:125%;')\n      ], [dom.text('▶')])\n      const content = dom.element(\n        'div',\n        [pair.create(\n          'style',\n          `${lineStyle};padding-left:${this.depth * 10}px`\n        )],\n        [triangleDown, triangleRight, dom.text(' ')].concat(\n          _computeLineSpans(args)\n        )\n      )\n      const nextContainer = dom.element('div', [\n        pair.create('hidden', collapsed)\n      ])\n      const nextLine = dom.element('div', [], [content, nextContainer])\n      dom.append(this.ccontainer, [nextLine])\n      this.ccontainer = nextContainer\n      this.depth++\n      // when header is clicked, collapse/uncollapse container\n      dom.addEventListener(content, 'click', (_event) => {\n        nextContainer.toggleAttribute('hidden')\n        triangleDown.toggleAttribute('hidden')\n        triangleRight.toggleAttribute('hidden')\n      })\n    })\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */\n  groupCollapsed (args) {\n    this.group(args, true)\n  }\n\n  groupEnd () {\n    eventloop.enqueue(() => {\n      if (this.depth > 0) {\n        this.depth--\n        // @ts-ignore\n        this.ccontainer = this.ccontainer.parentElement.parentElement\n      }\n    })\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */\n  print (args) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [\n        dom.element('div', [\n          pair.create(\n            'style',\n            `${lineStyle};padding-left:${this.depth * 10}px`\n          )\n        ], _computeLineSpans(args))\n      ])\n    })\n  }\n\n  /**\n   * @param {Error} err\n   */\n  printError (err) {\n    this.print([common.RED, common.BOLD, err.toString()])\n  }\n\n  /**\n   * @param {string} url\n   * @param {number} height\n   */\n  printImg (url, height) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [\n        dom.element('img', [\n          pair.create('src', url),\n          pair.create('height', `${math.round(height * 1.5)}px`)\n        ])\n      ])\n    })\n  }\n\n  /**\n   * @param {Node} node\n   */\n  printDom (node) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [node])\n    })\n  }\n\n  destroy () {\n    eventloop.enqueue(() => {\n      vconsoles.delete(this)\n    })\n  }\n}\n/* c8 ignore stop */\n\n/**\n * @param {Element} dom\n */\n/* c8 ignore next */\nexport const createVConsole = (dom) => new VConsole(dom)\n\n/**\n * @param {string} moduleName\n * @return {function(...any):void}\n */\nexport const createModuleLogger = (moduleName) => common.createModuleLogger(print, moduleName)\n","/**\n * Utility module to create and manipulate Iterators.\n *\n * @module iterator\n */\n\n/**\n * @template T,R\n * @param {Iterator<T>} iterator\n * @param {function(T):R} f\n * @return {IterableIterator<R>}\n */\nexport const mapIterator = (iterator, f) => ({\n  [Symbol.iterator] () {\n    return this\n  },\n  // @ts-ignore\n  next () {\n    const r = iterator.next()\n    return { value: r.done ? undefined : f(r.value), done: r.done }\n  }\n})\n\n/**\n * @template T\n * @param {function():IteratorResult<T>} next\n * @return {IterableIterator<T>}\n */\nexport const createIterator = next => ({\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return this\n  },\n  // @ts-ignore\n  next\n})\n\n/**\n * @template T\n * @param {Iterator<T>} iterator\n * @param {function(T):boolean} filter\n */\nexport const iteratorFilter = (iterator, filter) => createIterator(() => {\n  let res\n  do {\n    res = iterator.next()\n  } while (!res.done && !filter(res.value))\n  return res\n})\n\n/**\n * @template T,M\n * @param {Iterator<T>} iterator\n * @param {function(T):M} fmap\n */\nexport const iteratorMap = (iterator, fmap) => createIterator(() => {\n  const { done, value } = iterator.next()\n  return { done, value: done ? undefined : fmap(value) }\n})\n","import { Observable } from 'lib0/observable';\nimport * as array from 'lib0/array';\nimport * as math from 'lib0/math';\nimport * as map from 'lib0/map';\nimport * as encoding from 'lib0/encoding';\nimport * as decoding from 'lib0/decoding';\nimport * as random from 'lib0/random';\nimport * as promise from 'lib0/promise';\nimport * as buffer from 'lib0/buffer';\nimport * as error from 'lib0/error';\nimport * as binary from 'lib0/binary';\nimport * as f from 'lib0/function';\nimport { callAll } from 'lib0/function';\nimport * as set from 'lib0/set';\nimport * as logging from 'lib0/logging';\nimport * as time from 'lib0/time';\nimport * as string from 'lib0/string';\nimport * as iterator from 'lib0/iterator';\nimport * as object from 'lib0/object';\n\n/**\n * This is an abstract interface that all Connectors should implement to keep them interchangeable.\n *\n * @note This interface is experimental and it is not advised to actually inherit this class.\n *       It just serves as typing information.\n *\n * @extends {Observable<any>}\n */\nclass AbstractConnector extends Observable {\n  /**\n   * @param {Doc} ydoc\n   * @param {any} awareness\n   */\n  constructor (ydoc, awareness) {\n    super();\n    this.doc = ydoc;\n    this.awareness = awareness;\n  }\n}\n\nclass DeleteItem {\n  /**\n   * @param {number} clock\n   * @param {number} len\n   */\n  constructor (clock, len) {\n    /**\n     * @type {number}\n     */\n    this.clock = clock;\n    /**\n     * @type {number}\n     */\n    this.len = len;\n  }\n}\n\n/**\n * We no longer maintain a DeleteStore. DeleteSet is a temporary object that is created when needed.\n * - When created in a transaction, it must only be accessed after sorting, and merging\n *   - This DeleteSet is send to other clients\n * - We do not create a DeleteSet when we send a sync message. The DeleteSet message is created directly from StructStore\n * - We read a DeleteSet as part of a sync/update message. In this case the DeleteSet is already sorted and merged.\n */\nclass DeleteSet {\n  constructor () {\n    /**\n     * @type {Map<number,Array<DeleteItem>>}\n     */\n    this.clients = new Map();\n  }\n}\n\n/**\n * Iterate over all structs that the DeleteSet gc's.\n *\n * @param {Transaction} transaction\n * @param {DeleteSet} ds\n * @param {function(GC|Item):void} f\n *\n * @function\n */\nconst iterateDeletedStructs = (transaction, ds, f) =>\n  ds.clients.forEach((deletes, clientid) => {\n    const structs = /** @type {Array<GC|Item>} */ (transaction.doc.store.clients.get(clientid));\n    for (let i = 0; i < deletes.length; i++) {\n      const del = deletes[i];\n      iterateStructs(transaction, structs, del.clock, del.len, f);\n    }\n  });\n\n/**\n * @param {Array<DeleteItem>} dis\n * @param {number} clock\n * @return {number|null}\n *\n * @private\n * @function\n */\nconst findIndexDS = (dis, clock) => {\n  let left = 0;\n  let right = dis.length - 1;\n  while (left <= right) {\n    const midindex = math.floor((left + right) / 2);\n    const mid = dis[midindex];\n    const midclock = mid.clock;\n    if (midclock <= clock) {\n      if (clock < midclock + mid.len) {\n        return midindex\n      }\n      left = midindex + 1;\n    } else {\n      right = midindex - 1;\n    }\n  }\n  return null\n};\n\n/**\n * @param {DeleteSet} ds\n * @param {ID} id\n * @return {boolean}\n *\n * @private\n * @function\n */\nconst isDeleted = (ds, id) => {\n  const dis = ds.clients.get(id.client);\n  return dis !== undefined && findIndexDS(dis, id.clock) !== null\n};\n\n/**\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */\nconst sortAndMergeDeleteSet = ds => {\n  ds.clients.forEach(dels => {\n    dels.sort((a, b) => a.clock - b.clock);\n    // merge items without filtering or splicing the array\n    // i is the current pointer\n    // j refers to the current insert position for the pointed item\n    // try to merge dels[i] into dels[j-1] or set dels[j]=dels[i]\n    let i, j;\n    for (i = 1, j = 1; i < dels.length; i++) {\n      const left = dels[j - 1];\n      const right = dels[i];\n      if (left.clock + left.len >= right.clock) {\n        left.len = math.max(left.len, right.clock + right.len - left.clock);\n      } else {\n        if (j < i) {\n          dels[j] = right;\n        }\n        j++;\n      }\n    }\n    dels.length = j;\n  });\n};\n\n/**\n * @param {Array<DeleteSet>} dss\n * @return {DeleteSet} A fresh DeleteSet\n */\nconst mergeDeleteSets = dss => {\n  const merged = new DeleteSet();\n  for (let dssI = 0; dssI < dss.length; dssI++) {\n    dss[dssI].clients.forEach((delsLeft, client) => {\n      if (!merged.clients.has(client)) {\n        // Write all missing keys from current ds and all following.\n        // If merged already contains `client` current ds has already been added.\n        /**\n         * @type {Array<DeleteItem>}\n         */\n        const dels = delsLeft.slice();\n        for (let i = dssI + 1; i < dss.length; i++) {\n          array.appendTo(dels, dss[i].clients.get(client) || []);\n        }\n        merged.clients.set(client, dels);\n      }\n    });\n  }\n  sortAndMergeDeleteSet(merged);\n  return merged\n};\n\n/**\n * @param {DeleteSet} ds\n * @param {number} client\n * @param {number} clock\n * @param {number} length\n *\n * @private\n * @function\n */\nconst addToDeleteSet = (ds, client, clock, length) => {\n  map.setIfUndefined(ds.clients, client, () => /** @type {Array<DeleteItem>} */ ([])).push(new DeleteItem(clock, length));\n};\n\nconst createDeleteSet = () => new DeleteSet();\n\n/**\n * @param {StructStore} ss\n * @return {DeleteSet} Merged and sorted DeleteSet\n *\n * @private\n * @function\n */\nconst createDeleteSetFromStructStore = ss => {\n  const ds = createDeleteSet();\n  ss.clients.forEach((structs, client) => {\n    /**\n     * @type {Array<DeleteItem>}\n     */\n    const dsitems = [];\n    for (let i = 0; i < structs.length; i++) {\n      const struct = structs[i];\n      if (struct.deleted) {\n        const clock = struct.id.clock;\n        let len = struct.length;\n        if (i + 1 < structs.length) {\n          for (let next = structs[i + 1]; i + 1 < structs.length && next.deleted; next = structs[++i + 1]) {\n            len += next.length;\n          }\n        }\n        dsitems.push(new DeleteItem(clock, len));\n      }\n    }\n    if (dsitems.length > 0) {\n      ds.clients.set(client, dsitems);\n    }\n  });\n  return ds\n};\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */\nconst writeDeleteSet = (encoder, ds) => {\n  encoding.writeVarUint(encoder.restEncoder, ds.clients.size);\n\n  // Ensure that the delete set is written in a deterministic order\n  array.from(ds.clients.entries())\n    .sort((a, b) => b[0] - a[0])\n    .forEach(([client, dsitems]) => {\n      encoder.resetDsCurVal();\n      encoding.writeVarUint(encoder.restEncoder, client);\n      const len = dsitems.length;\n      encoding.writeVarUint(encoder.restEncoder, len);\n      for (let i = 0; i < len; i++) {\n        const item = dsitems[i];\n        encoder.writeDsClock(item.clock);\n        encoder.writeDsLen(item.len);\n      }\n    });\n};\n\n/**\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @return {DeleteSet}\n *\n * @private\n * @function\n */\nconst readDeleteSet = decoder => {\n  const ds = new DeleteSet();\n  const numClients = decoding.readVarUint(decoder.restDecoder);\n  for (let i = 0; i < numClients; i++) {\n    decoder.resetDsCurVal();\n    const client = decoding.readVarUint(decoder.restDecoder);\n    const numberOfDeletes = decoding.readVarUint(decoder.restDecoder);\n    if (numberOfDeletes > 0) {\n      const dsField = map.setIfUndefined(ds.clients, client, () => /** @type {Array<DeleteItem>} */ ([]));\n      for (let i = 0; i < numberOfDeletes; i++) {\n        dsField.push(new DeleteItem(decoder.readDsClock(), decoder.readDsLen()));\n      }\n    }\n  }\n  return ds\n};\n\n/**\n * @todo YDecoder also contains references to String and other Decoders. Would make sense to exchange YDecoder.toUint8Array for YDecoder.DsToUint8Array()..\n */\n\n/**\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @return {Uint8Array|null} Returns a v2 update containing all deletes that couldn't be applied yet; or null if all deletes were applied successfully.\n *\n * @private\n * @function\n */\nconst readAndApplyDeleteSet = (decoder, transaction, store) => {\n  const unappliedDS = new DeleteSet();\n  const numClients = decoding.readVarUint(decoder.restDecoder);\n  for (let i = 0; i < numClients; i++) {\n    decoder.resetDsCurVal();\n    const client = decoding.readVarUint(decoder.restDecoder);\n    const numberOfDeletes = decoding.readVarUint(decoder.restDecoder);\n    const structs = store.clients.get(client) || [];\n    const state = getState(store, client);\n    for (let i = 0; i < numberOfDeletes; i++) {\n      const clock = decoder.readDsClock();\n      const clockEnd = clock + decoder.readDsLen();\n      if (clock < state) {\n        if (state < clockEnd) {\n          addToDeleteSet(unappliedDS, client, state, clockEnd - state);\n        }\n        let index = findIndexSS(structs, clock);\n        /**\n         * We can ignore the case of GC and Delete structs, because we are going to skip them\n         * @type {Item}\n         */\n        // @ts-ignore\n        let struct = structs[index];\n        // split the first item if necessary\n        if (!struct.deleted && struct.id.clock < clock) {\n          structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock));\n          index++; // increase we now want to use the next struct\n        }\n        while (index < structs.length) {\n          // @ts-ignore\n          struct = structs[index++];\n          if (struct.id.clock < clockEnd) {\n            if (!struct.deleted) {\n              if (clockEnd < struct.id.clock + struct.length) {\n                structs.splice(index, 0, splitItem(transaction, struct, clockEnd - struct.id.clock));\n              }\n              struct.delete(transaction);\n            }\n          } else {\n            break\n          }\n        }\n      } else {\n        addToDeleteSet(unappliedDS, client, clock, clockEnd - clock);\n      }\n    }\n  }\n  if (unappliedDS.clients.size > 0) {\n    const ds = new UpdateEncoderV2();\n    encoding.writeVarUint(ds.restEncoder, 0); // encode 0 structs\n    writeDeleteSet(ds, unappliedDS);\n    return ds.toUint8Array()\n  }\n  return null\n};\n\n/**\n * @param {DeleteSet} ds1\n * @param {DeleteSet} ds2\n */\nconst equalDeleteSets = (ds1, ds2) => {\n  if (ds1.clients.size !== ds2.clients.size) return false\n  for (const [client, deleteItems1] of ds1.clients.entries()) {\n    const deleteItems2 = /** @type {Array<import('../internals.js').DeleteItem>} */ (ds2.clients.get(client));\n    if (deleteItems2 === undefined || deleteItems1.length !== deleteItems2.length) return false\n    for (let i = 0; i < deleteItems1.length; i++) {\n      const di1 = deleteItems1[i];\n      const di2 = deleteItems2[i];\n      if (di1.clock !== di2.clock || di1.len !== di2.len) {\n        return false\n      }\n    }\n  }\n  return true\n};\n\n/**\n * @module Y\n */\n\nconst generateNewClientId = random.uint32;\n\n/**\n * @typedef {Object} DocOpts\n * @property {boolean} [DocOpts.gc=true] Disable garbage collection (default: gc=true)\n * @property {function(Item):boolean} [DocOpts.gcFilter] Will be called before an Item is garbage collected. Return false to keep the Item.\n * @property {string} [DocOpts.guid] Define a globally unique identifier for this document\n * @property {string | null} [DocOpts.collectionid] Associate this document with a collection. This only plays a role if your provider has a concept of collection.\n * @property {any} [DocOpts.meta] Any kind of meta information you want to associate with this document. If this is a subdocument, remote peers will store the meta information as well.\n * @property {boolean} [DocOpts.autoLoad] If a subdocument, automatically load document. If this is a subdocument, remote peers will load the document as well automatically.\n * @property {boolean} [DocOpts.shouldLoad] Whether the document should be synced by the provider now. This is toggled to true when you call ydoc.load()\n */\n\n/**\n * A Yjs instance handles the state of shared data.\n * @extends Observable<string>\n */\nclass Doc extends Observable {\n  /**\n   * @param {DocOpts} opts configuration\n   */\n  constructor ({ guid = random.uuidv4(), collectionid = null, gc = true, gcFilter = () => true, meta = null, autoLoad = false, shouldLoad = true } = {}) {\n    super();\n    this.gc = gc;\n    this.gcFilter = gcFilter;\n    this.clientID = generateNewClientId();\n    this.guid = guid;\n    this.collectionid = collectionid;\n    /**\n     * @type {Map<string, AbstractType<YEvent<any>>>}\n     */\n    this.share = new Map();\n    this.store = new StructStore();\n    /**\n     * @type {Transaction | null}\n     */\n    this._transaction = null;\n    /**\n     * @type {Array<Transaction>}\n     */\n    this._transactionCleanups = [];\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocs = new Set();\n    /**\n     * If this document is a subdocument - a document integrated into another document - then _item is defined.\n     * @type {Item?}\n     */\n    this._item = null;\n    this.shouldLoad = shouldLoad;\n    this.autoLoad = autoLoad;\n    this.meta = meta;\n    /**\n     * This is set to true when the persistence provider loaded the document from the database or when the `sync` event fires.\n     * Note that not all providers implement this feature. Provider authors are encouraged to fire the `load` event when the doc content is loaded from the database.\n     *\n     * @type {boolean}\n     */\n    this.isLoaded = false;\n    /**\n     * This is set to true when the connection provider has successfully synced with a backend.\n     * Note that when using peer-to-peer providers this event may not provide very useful.\n     * Also note that not all providers implement this feature. Provider authors are encouraged to fire\n     * the `sync` event when the doc has been synced (with `true` as a parameter) or if connection is\n     * lost (with false as a parameter).\n     */\n    this.isSynced = false;\n    /**\n     * Promise that resolves once the document has been loaded from a presistence provider.\n     */\n    this.whenLoaded = promise.create(resolve => {\n      this.on('load', () => {\n        this.isLoaded = true;\n        resolve(this);\n      });\n    });\n    const provideSyncedPromise = () => promise.create(resolve => {\n      /**\n       * @param {boolean} isSynced\n       */\n      const eventHandler = (isSynced) => {\n        if (isSynced === undefined || isSynced === true) {\n          this.off('sync', eventHandler);\n          resolve();\n        }\n      };\n      this.on('sync', eventHandler);\n    });\n    this.on('sync', isSynced => {\n      if (isSynced === false && this.isSynced) {\n        this.whenSynced = provideSyncedPromise();\n      }\n      this.isSynced = isSynced === undefined || isSynced === true;\n      if (this.isSynced && !this.isLoaded) {\n        this.emit('load', []);\n      }\n    });\n    /**\n     * Promise that resolves once the document has been synced with a backend.\n     * This promise is recreated when the connection is lost.\n     * Note the documentation about the `isSynced` property.\n     */\n    this.whenSynced = provideSyncedPromise();\n  }\n\n  /**\n   * Notify the parent document that you request to load data into this subdocument (if it is a subdocument).\n   *\n   * `load()` might be used in the future to request any provider to load the most current data.\n   *\n   * It is safe to call `load()` multiple times.\n   */\n  load () {\n    const item = this._item;\n    if (item !== null && !this.shouldLoad) {\n      transact(/** @type {any} */ (item.parent).doc, transaction => {\n        transaction.subdocsLoaded.add(this);\n      }, null, true);\n    }\n    this.shouldLoad = true;\n  }\n\n  getSubdocs () {\n    return this.subdocs\n  }\n\n  getSubdocGuids () {\n    return new Set(array.from(this.subdocs).map(doc => doc.guid))\n  }\n\n  /**\n   * Changes that happen inside of a transaction are bundled. This means that\n   * the observer fires _after_ the transaction is finished and that all changes\n   * that happened inside of the transaction are sent as one message to the\n   * other peers.\n   *\n   * @template T\n   * @param {function(Transaction):T} f The function that should be executed as a transaction\n   * @param {any} [origin] Origin of who started the transaction. Will be stored on transaction.origin\n   * @return T\n   *\n   * @public\n   */\n  transact (f, origin = null) {\n    return transact(this, f, origin)\n  }\n\n  /**\n   * Define a shared data type.\n   *\n   * Multiple calls of `y.get(name, TypeConstructor)` yield the same result\n   * and do not overwrite each other. I.e.\n   * `y.define(name, Y.Array) === y.define(name, Y.Array)`\n   *\n   * After this method is called, the type is also available on `y.share.get(name)`.\n   *\n   * *Best Practices:*\n   * Define all types right after the Yjs instance is created and store them in a separate object.\n   * Also use the typed methods `getText(name)`, `getArray(name)`, ..\n   *\n   * @example\n   *   const y = new Y(..)\n   *   const appState = {\n   *     document: y.getText('document')\n   *     comments: y.getArray('comments')\n   *   }\n   *\n   * @param {string} name\n   * @param {Function} TypeConstructor The constructor of the type definition. E.g. Y.Text, Y.Array, Y.Map, ...\n   * @return {AbstractType<any>} The created type. Constructed with TypeConstructor\n   *\n   * @public\n   */\n  get (name, TypeConstructor = AbstractType) {\n    const type = map.setIfUndefined(this.share, name, () => {\n      // @ts-ignore\n      const t = new TypeConstructor();\n      t._integrate(this, null);\n      return t\n    });\n    const Constr = type.constructor;\n    if (TypeConstructor !== AbstractType && Constr !== TypeConstructor) {\n      if (Constr === AbstractType) {\n        // @ts-ignore\n        const t = new TypeConstructor();\n        t._map = type._map;\n        type._map.forEach(/** @param {Item?} n */ n => {\n          for (; n !== null; n = n.left) {\n            // @ts-ignore\n            n.parent = t;\n          }\n        });\n        t._start = type._start;\n        for (let n = t._start; n !== null; n = n.right) {\n          n.parent = t;\n        }\n        t._length = type._length;\n        this.share.set(name, t);\n        t._integrate(this, null);\n        return t\n      } else {\n        throw new Error(`Type with the name ${name} has already been defined with a different constructor`)\n      }\n    }\n    return type\n  }\n\n  /**\n   * @template T\n   * @param {string} [name]\n   * @return {YArray<T>}\n   *\n   * @public\n   */\n  getArray (name = '') {\n    // @ts-ignore\n    return this.get(name, YArray)\n  }\n\n  /**\n   * @param {string} [name]\n   * @return {YText}\n   *\n   * @public\n   */\n  getText (name = '') {\n    // @ts-ignore\n    return this.get(name, YText)\n  }\n\n  /**\n   * @template T\n   * @param {string} [name]\n   * @return {YMap<T>}\n   *\n   * @public\n   */\n  getMap (name = '') {\n    // @ts-ignore\n    return this.get(name, YMap)\n  }\n\n  /**\n   * @param {string} [name]\n   * @return {YXmlFragment}\n   *\n   * @public\n   */\n  getXmlFragment (name = '') {\n    // @ts-ignore\n    return this.get(name, YXmlFragment)\n  }\n\n  /**\n   * Converts the entire document into a js object, recursively traversing each yjs type\n   * Doesn't log types that have not been defined (using ydoc.getType(..)).\n   *\n   * @deprecated Do not use this method and rather call toJSON directly on the shared types.\n   *\n   * @return {Object<string, any>}\n   */\n  toJSON () {\n    /**\n     * @type {Object<string, any>}\n     */\n    const doc = {};\n\n    this.share.forEach((value, key) => {\n      doc[key] = value.toJSON();\n    });\n\n    return doc\n  }\n\n  /**\n   * Emit `destroy` event and unregister all event handlers.\n   */\n  destroy () {\n    array.from(this.subdocs).forEach(subdoc => subdoc.destroy());\n    const item = this._item;\n    if (item !== null) {\n      this._item = null;\n      const content = /** @type {ContentDoc} */ (item.content);\n      content.doc = new Doc({ guid: this.guid, ...content.opts, shouldLoad: false });\n      content.doc._item = item;\n      transact(/** @type {any} */ (item).parent.doc, transaction => {\n        const doc = content.doc;\n        if (!item.deleted) {\n          transaction.subdocsAdded.add(doc);\n        }\n        transaction.subdocsRemoved.add(this);\n      }, null, true);\n    }\n    this.emit('destroyed', [true]);\n    this.emit('destroy', [this]);\n    super.destroy();\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function(...any):any} f\n   */\n  on (eventName, f) {\n    super.on(eventName, f);\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function} f\n   */\n  off (eventName, f) {\n    super.off(eventName, f);\n  }\n}\n\nclass DSDecoderV1 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    this.restDecoder = decoder;\n  }\n\n  resetDsCurVal () {\n    // nop\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsClock () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsLen () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n}\n\nclass UpdateDecoderV1 extends DSDecoderV1 {\n  /**\n   * @return {ID}\n   */\n  readLeftID () {\n    return createID(decoding.readVarUint(this.restDecoder), decoding.readVarUint(this.restDecoder))\n  }\n\n  /**\n   * @return {ID}\n   */\n  readRightID () {\n    return createID(decoding.readVarUint(this.restDecoder), decoding.readVarUint(this.restDecoder))\n  }\n\n  /**\n   * Read the next client id.\n   * Use this in favor of readID whenever possible to reduce the number of objects created.\n   */\n  readClient () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readInfo () {\n    return decoding.readUint8(this.restDecoder)\n  }\n\n  /**\n   * @return {string}\n   */\n  readString () {\n    return decoding.readVarString(this.restDecoder)\n  }\n\n  /**\n   * @return {boolean} isKey\n   */\n  readParentInfo () {\n    return decoding.readVarUint(this.restDecoder) === 1\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readTypeRef () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @return {number} len\n   */\n  readLen () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {any}\n   */\n  readAny () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {Uint8Array}\n   */\n  readBuf () {\n    return buffer.copyUint8Array(decoding.readVarUint8Array(this.restDecoder))\n  }\n\n  /**\n   * Legacy implementation uses JSON parse. We use any-decoding in v2.\n   *\n   * @return {any}\n   */\n  readJSON () {\n    return JSON.parse(decoding.readVarString(this.restDecoder))\n  }\n\n  /**\n   * @return {string}\n   */\n  readKey () {\n    return decoding.readVarString(this.restDecoder)\n  }\n}\n\nclass DSDecoderV2 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    /**\n     * @private\n     */\n    this.dsCurrVal = 0;\n    this.restDecoder = decoder;\n  }\n\n  resetDsCurVal () {\n    this.dsCurrVal = 0;\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsClock () {\n    this.dsCurrVal += decoding.readVarUint(this.restDecoder);\n    return this.dsCurrVal\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsLen () {\n    const diff = decoding.readVarUint(this.restDecoder) + 1;\n    this.dsCurrVal += diff;\n    return diff\n  }\n}\n\nclass UpdateDecoderV2 extends DSDecoderV2 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    super(decoder);\n    /**\n     * List of cached keys. If the keys[id] does not exist, we read a new key\n     * from stringEncoder and push it to keys.\n     *\n     * @type {Array<string>}\n     */\n    this.keys = [];\n    decoding.readVarUint(decoder); // read feature flag - currently unused\n    this.keyClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder));\n    this.clientDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder));\n    this.leftClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder));\n    this.rightClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder));\n    this.infoDecoder = new decoding.RleDecoder(decoding.readVarUint8Array(decoder), decoding.readUint8);\n    this.stringDecoder = new decoding.StringDecoder(decoding.readVarUint8Array(decoder));\n    this.parentInfoDecoder = new decoding.RleDecoder(decoding.readVarUint8Array(decoder), decoding.readUint8);\n    this.typeRefDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder));\n    this.lenDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder));\n  }\n\n  /**\n   * @return {ID}\n   */\n  readLeftID () {\n    return new ID(this.clientDecoder.read(), this.leftClockDecoder.read())\n  }\n\n  /**\n   * @return {ID}\n   */\n  readRightID () {\n    return new ID(this.clientDecoder.read(), this.rightClockDecoder.read())\n  }\n\n  /**\n   * Read the next client id.\n   * Use this in favor of readID whenever possible to reduce the number of objects created.\n   */\n  readClient () {\n    return this.clientDecoder.read()\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readInfo () {\n    return /** @type {number} */ (this.infoDecoder.read())\n  }\n\n  /**\n   * @return {string}\n   */\n  readString () {\n    return this.stringDecoder.read()\n  }\n\n  /**\n   * @return {boolean}\n   */\n  readParentInfo () {\n    return this.parentInfoDecoder.read() === 1\n  }\n\n  /**\n   * @return {number} An unsigned 8-bit integer\n   */\n  readTypeRef () {\n    return this.typeRefDecoder.read()\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @return {number}\n   */\n  readLen () {\n    return this.lenDecoder.read()\n  }\n\n  /**\n   * @return {any}\n   */\n  readAny () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {Uint8Array}\n   */\n  readBuf () {\n    return decoding.readVarUint8Array(this.restDecoder)\n  }\n\n  /**\n   * This is mainly here for legacy purposes.\n   *\n   * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.\n   *\n   * @return {any}\n   */\n  readJSON () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {string}\n   */\n  readKey () {\n    const keyClock = this.keyClockDecoder.read();\n    if (keyClock < this.keys.length) {\n      return this.keys[keyClock]\n    } else {\n      const key = this.stringDecoder.read();\n      this.keys.push(key);\n      return key\n    }\n  }\n}\n\nclass DSEncoderV1 {\n  constructor () {\n    this.restEncoder = encoding.createEncoder();\n  }\n\n  toUint8Array () {\n    return encoding.toUint8Array(this.restEncoder)\n  }\n\n  resetDsCurVal () {\n    // nop\n  }\n\n  /**\n   * @param {number} clock\n   */\n  writeDsClock (clock) {\n    encoding.writeVarUint(this.restEncoder, clock);\n  }\n\n  /**\n   * @param {number} len\n   */\n  writeDsLen (len) {\n    encoding.writeVarUint(this.restEncoder, len);\n  }\n}\n\nclass UpdateEncoderV1 extends DSEncoderV1 {\n  /**\n   * @param {ID} id\n   */\n  writeLeftID (id) {\n    encoding.writeVarUint(this.restEncoder, id.client);\n    encoding.writeVarUint(this.restEncoder, id.clock);\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeRightID (id) {\n    encoding.writeVarUint(this.restEncoder, id.client);\n    encoding.writeVarUint(this.restEncoder, id.clock);\n  }\n\n  /**\n   * Use writeClient and writeClock instead of writeID if possible.\n   * @param {number} client\n   */\n  writeClient (client) {\n    encoding.writeVarUint(this.restEncoder, client);\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeInfo (info) {\n    encoding.writeUint8(this.restEncoder, info);\n  }\n\n  /**\n   * @param {string} s\n   */\n  writeString (s) {\n    encoding.writeVarString(this.restEncoder, s);\n  }\n\n  /**\n   * @param {boolean} isYKey\n   */\n  writeParentInfo (isYKey) {\n    encoding.writeVarUint(this.restEncoder, isYKey ? 1 : 0);\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeTypeRef (info) {\n    encoding.writeVarUint(this.restEncoder, info);\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @param {number} len\n   */\n  writeLen (len) {\n    encoding.writeVarUint(this.restEncoder, len);\n  }\n\n  /**\n   * @param {any} any\n   */\n  writeAny (any) {\n    encoding.writeAny(this.restEncoder, any);\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   */\n  writeBuf (buf) {\n    encoding.writeVarUint8Array(this.restEncoder, buf);\n  }\n\n  /**\n   * @param {any} embed\n   */\n  writeJSON (embed) {\n    encoding.writeVarString(this.restEncoder, JSON.stringify(embed));\n  }\n\n  /**\n   * @param {string} key\n   */\n  writeKey (key) {\n    encoding.writeVarString(this.restEncoder, key);\n  }\n}\n\nclass DSEncoderV2 {\n  constructor () {\n    this.restEncoder = encoding.createEncoder(); // encodes all the rest / non-optimized\n    this.dsCurrVal = 0;\n  }\n\n  toUint8Array () {\n    return encoding.toUint8Array(this.restEncoder)\n  }\n\n  resetDsCurVal () {\n    this.dsCurrVal = 0;\n  }\n\n  /**\n   * @param {number} clock\n   */\n  writeDsClock (clock) {\n    const diff = clock - this.dsCurrVal;\n    this.dsCurrVal = clock;\n    encoding.writeVarUint(this.restEncoder, diff);\n  }\n\n  /**\n   * @param {number} len\n   */\n  writeDsLen (len) {\n    if (len === 0) {\n      error.unexpectedCase();\n    }\n    encoding.writeVarUint(this.restEncoder, len - 1);\n    this.dsCurrVal += len;\n  }\n}\n\nclass UpdateEncoderV2 extends DSEncoderV2 {\n  constructor () {\n    super();\n    /**\n     * @type {Map<string,number>}\n     */\n    this.keyMap = new Map();\n    /**\n     * Refers to the next uniqe key-identifier to me used.\n     * See writeKey method for more information.\n     *\n     * @type {number}\n     */\n    this.keyClock = 0;\n    this.keyClockEncoder = new encoding.IntDiffOptRleEncoder();\n    this.clientEncoder = new encoding.UintOptRleEncoder();\n    this.leftClockEncoder = new encoding.IntDiffOptRleEncoder();\n    this.rightClockEncoder = new encoding.IntDiffOptRleEncoder();\n    this.infoEncoder = new encoding.RleEncoder(encoding.writeUint8);\n    this.stringEncoder = new encoding.StringEncoder();\n    this.parentInfoEncoder = new encoding.RleEncoder(encoding.writeUint8);\n    this.typeRefEncoder = new encoding.UintOptRleEncoder();\n    this.lenEncoder = new encoding.UintOptRleEncoder();\n  }\n\n  toUint8Array () {\n    const encoder = encoding.createEncoder();\n    encoding.writeVarUint(encoder, 0); // this is a feature flag that we might use in the future\n    encoding.writeVarUint8Array(encoder, this.keyClockEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, this.clientEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, this.leftClockEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, this.rightClockEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, encoding.toUint8Array(this.infoEncoder));\n    encoding.writeVarUint8Array(encoder, this.stringEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, encoding.toUint8Array(this.parentInfoEncoder));\n    encoding.writeVarUint8Array(encoder, this.typeRefEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, this.lenEncoder.toUint8Array());\n    // @note The rest encoder is appended! (note the missing var)\n    encoding.writeUint8Array(encoder, encoding.toUint8Array(this.restEncoder));\n    return encoding.toUint8Array(encoder)\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeLeftID (id) {\n    this.clientEncoder.write(id.client);\n    this.leftClockEncoder.write(id.clock);\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeRightID (id) {\n    this.clientEncoder.write(id.client);\n    this.rightClockEncoder.write(id.clock);\n  }\n\n  /**\n   * @param {number} client\n   */\n  writeClient (client) {\n    this.clientEncoder.write(client);\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeInfo (info) {\n    this.infoEncoder.write(info);\n  }\n\n  /**\n   * @param {string} s\n   */\n  writeString (s) {\n    this.stringEncoder.write(s);\n  }\n\n  /**\n   * @param {boolean} isYKey\n   */\n  writeParentInfo (isYKey) {\n    this.parentInfoEncoder.write(isYKey ? 1 : 0);\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeTypeRef (info) {\n    this.typeRefEncoder.write(info);\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @param {number} len\n   */\n  writeLen (len) {\n    this.lenEncoder.write(len);\n  }\n\n  /**\n   * @param {any} any\n   */\n  writeAny (any) {\n    encoding.writeAny(this.restEncoder, any);\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   */\n  writeBuf (buf) {\n    encoding.writeVarUint8Array(this.restEncoder, buf);\n  }\n\n  /**\n   * This is mainly here for legacy purposes.\n   *\n   * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.\n   *\n   * @param {any} embed\n   */\n  writeJSON (embed) {\n    encoding.writeAny(this.restEncoder, embed);\n  }\n\n  /**\n   * Property keys are often reused. For example, in y-prosemirror the key `bold` might\n   * occur very often. For a 3d application, the key `position` might occur very often.\n   *\n   * We cache these keys in a Map and refer to them via a unique number.\n   *\n   * @param {string} key\n   */\n  writeKey (key) {\n    const clock = this.keyMap.get(key);\n    if (clock === undefined) {\n      /**\n       * @todo uncomment to introduce this feature finally\n       *\n       * Background. The ContentFormat object was always encoded using writeKey, but the decoder used to use readString.\n       * Furthermore, I forgot to set the keyclock. So everything was working fine.\n       *\n       * However, this feature here is basically useless as it is not being used (it actually only consumes extra memory).\n       *\n       * I don't know yet how to reintroduce this feature..\n       *\n       * Older clients won't be able to read updates when we reintroduce this feature. So this should probably be done using a flag.\n       *\n       */\n      // this.keyMap.set(key, this.keyClock)\n      this.keyClockEncoder.write(this.keyClock++);\n      this.stringEncoder.write(key);\n    } else {\n      this.keyClockEncoder.write(clock);\n    }\n  }\n}\n\n/**\n * @module encoding\n */\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Array<GC|Item>} structs All structs by `client`\n * @param {number} client\n * @param {number} clock write structs starting with `ID(client,clock)`\n *\n * @function\n */\nconst writeStructs = (encoder, structs, client, clock) => {\n  // write first id\n  clock = math.max(clock, structs[0].id.clock); // make sure the first id exists\n  const startNewStructs = findIndexSS(structs, clock);\n  // write # encoded structs\n  encoding.writeVarUint(encoder.restEncoder, structs.length - startNewStructs);\n  encoder.writeClient(client);\n  encoding.writeVarUint(encoder.restEncoder, clock);\n  const firstStruct = structs[startNewStructs];\n  // write first struct with an offset\n  firstStruct.write(encoder, clock - firstStruct.id.clock);\n  for (let i = startNewStructs + 1; i < structs.length; i++) {\n    structs[i].write(encoder, 0);\n  }\n};\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {StructStore} store\n * @param {Map<number,number>} _sm\n *\n * @private\n * @function\n */\nconst writeClientsStructs = (encoder, store, _sm) => {\n  // we filter all valid _sm entries into sm\n  const sm = new Map();\n  _sm.forEach((clock, client) => {\n    // only write if new structs are available\n    if (getState(store, client) > clock) {\n      sm.set(client, clock);\n    }\n  });\n  getStateVector(store).forEach((_clock, client) => {\n    if (!_sm.has(client)) {\n      sm.set(client, 0);\n    }\n  });\n  // write # states that were updated\n  encoding.writeVarUint(encoder.restEncoder, sm.size);\n  // Write items with higher client ids first\n  // This heavily improves the conflict algorithm.\n  array.from(sm.entries()).sort((a, b) => b[0] - a[0]).forEach(([client, clock]) => {\n    writeStructs(encoder, /** @type {Array<GC|Item>} */ (store.clients.get(client)), client, clock);\n  });\n};\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder The decoder object to read data from.\n * @param {Doc} doc\n * @return {Map<number, { i: number, refs: Array<Item | GC> }>}\n *\n * @private\n * @function\n */\nconst readClientsStructRefs = (decoder, doc) => {\n  /**\n   * @type {Map<number, { i: number, refs: Array<Item | GC> }>}\n   */\n  const clientRefs = map.create();\n  const numOfStateUpdates = decoding.readVarUint(decoder.restDecoder);\n  for (let i = 0; i < numOfStateUpdates; i++) {\n    const numberOfStructs = decoding.readVarUint(decoder.restDecoder);\n    /**\n     * @type {Array<GC|Item>}\n     */\n    const refs = new Array(numberOfStructs);\n    const client = decoder.readClient();\n    let clock = decoding.readVarUint(decoder.restDecoder);\n    // const start = performance.now()\n    clientRefs.set(client, { i: 0, refs });\n    for (let i = 0; i < numberOfStructs; i++) {\n      const info = decoder.readInfo();\n      switch (binary.BITS5 & info) {\n        case 0: { // GC\n          const len = decoder.readLen();\n          refs[i] = new GC(createID(client, clock), len);\n          clock += len;\n          break\n        }\n        case 10: { // Skip Struct (nothing to apply)\n          // @todo we could reduce the amount of checks by adding Skip struct to clientRefs so we know that something is missing.\n          const len = decoding.readVarUint(decoder.restDecoder);\n          refs[i] = new Skip(createID(client, clock), len);\n          clock += len;\n          break\n        }\n        default: { // Item with content\n          /**\n           * The optimized implementation doesn't use any variables because inlining variables is faster.\n           * Below a non-optimized version is shown that implements the basic algorithm with\n           * a few comments\n           */\n          const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0;\n          // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n          // and we read the next string as parentYKey.\n          // It indicates how we store/retrieve parent from `y.share`\n          // @type {string|null}\n          const struct = new Item(\n            createID(client, clock),\n            null, // leftd\n            (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null, // origin\n            null, // right\n            (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null, // right origin\n            cantCopyParentInfo ? (decoder.readParentInfo() ? doc.get(decoder.readString()) : decoder.readLeftID()) : null, // parent\n            cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n            readItemContent(decoder, info) // item content\n          );\n          /* A non-optimized implementation of the above algorithm:\n\n          // The item that was originally to the left of this item.\n          const origin = (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null\n          // The item that was originally to the right of this item.\n          const rightOrigin = (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null\n          const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\n          const hasParentYKey = cantCopyParentInfo ? decoder.readParentInfo() : false\n          // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n          // and we read the next string as parentYKey.\n          // It indicates how we store/retrieve parent from `y.share`\n          // @type {string|null}\n          const parentYKey = cantCopyParentInfo && hasParentYKey ? decoder.readString() : null\n\n          const struct = new Item(\n            createID(client, clock),\n            null, // leftd\n            origin, // origin\n            null, // right\n            rightOrigin, // right origin\n            cantCopyParentInfo && !hasParentYKey ? decoder.readLeftID() : (parentYKey !== null ? doc.get(parentYKey) : null), // parent\n            cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n            readItemContent(decoder, info) // item content\n          )\n          */\n          refs[i] = struct;\n          clock += struct.length;\n        }\n      }\n    }\n    // console.log('time to read: ', performance.now() - start) // @todo remove\n  }\n  return clientRefs\n};\n\n/**\n * Resume computing structs generated by struct readers.\n *\n * While there is something to do, we integrate structs in this order\n * 1. top element on stack, if stack is not empty\n * 2. next element from current struct reader (if empty, use next struct reader)\n *\n * If struct causally depends on another struct (ref.missing), we put next reader of\n * `ref.id.client` on top of stack.\n *\n * At some point we find a struct that has no causal dependencies,\n * then we start emptying the stack.\n *\n * It is not possible to have circles: i.e. struct1 (from client1) depends on struct2 (from client2)\n * depends on struct3 (from client1). Therefore the max stack size is eqaul to `structReaders.length`.\n *\n * This method is implemented in a way so that we can resume computation if this update\n * causally depends on another update.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {Map<number, { i: number, refs: (GC | Item)[] }>} clientsStructRefs\n * @return { null | { update: Uint8Array, missing: Map<number,number> } }\n *\n * @private\n * @function\n */\nconst integrateStructs = (transaction, store, clientsStructRefs) => {\n  /**\n   * @type {Array<Item | GC>}\n   */\n  const stack = [];\n  // sort them so that we take the higher id first, in case of conflicts the lower id will probably not conflict with the id from the higher user.\n  let clientsStructRefsIds = array.from(clientsStructRefs.keys()).sort((a, b) => a - b);\n  if (clientsStructRefsIds.length === 0) {\n    return null\n  }\n  const getNextStructTarget = () => {\n    if (clientsStructRefsIds.length === 0) {\n      return null\n    }\n    let nextStructsTarget = /** @type {{i:number,refs:Array<GC|Item>}} */ (clientsStructRefs.get(clientsStructRefsIds[clientsStructRefsIds.length - 1]));\n    while (nextStructsTarget.refs.length === nextStructsTarget.i) {\n      clientsStructRefsIds.pop();\n      if (clientsStructRefsIds.length > 0) {\n        nextStructsTarget = /** @type {{i:number,refs:Array<GC|Item>}} */ (clientsStructRefs.get(clientsStructRefsIds[clientsStructRefsIds.length - 1]));\n      } else {\n        return null\n      }\n    }\n    return nextStructsTarget\n  };\n  let curStructsTarget = getNextStructTarget();\n  if (curStructsTarget === null) {\n    return null\n  }\n\n  /**\n   * @type {StructStore}\n   */\n  const restStructs = new StructStore();\n  const missingSV = new Map();\n  /**\n   * @param {number} client\n   * @param {number} clock\n   */\n  const updateMissingSv = (client, clock) => {\n    const mclock = missingSV.get(client);\n    if (mclock == null || mclock > clock) {\n      missingSV.set(client, clock);\n    }\n  };\n  /**\n   * @type {GC|Item}\n   */\n  let stackHead = /** @type {any} */ (curStructsTarget).refs[/** @type {any} */ (curStructsTarget).i++];\n  // caching the state because it is used very often\n  const state = new Map();\n\n  const addStackToRestSS = () => {\n    for (const item of stack) {\n      const client = item.id.client;\n      const unapplicableItems = clientsStructRefs.get(client);\n      if (unapplicableItems) {\n        // decrement because we weren't able to apply previous operation\n        unapplicableItems.i--;\n        restStructs.clients.set(client, unapplicableItems.refs.slice(unapplicableItems.i));\n        clientsStructRefs.delete(client);\n        unapplicableItems.i = 0;\n        unapplicableItems.refs = [];\n      } else {\n        // item was the last item on clientsStructRefs and the field was already cleared. Add item to restStructs and continue\n        restStructs.clients.set(client, [item]);\n      }\n      // remove client from clientsStructRefsIds to prevent users from applying the same update again\n      clientsStructRefsIds = clientsStructRefsIds.filter(c => c !== client);\n    }\n    stack.length = 0;\n  };\n\n  // iterate over all struct readers until we are done\n  while (true) {\n    if (stackHead.constructor !== Skip) {\n      const localClock = map.setIfUndefined(state, stackHead.id.client, () => getState(store, stackHead.id.client));\n      const offset = localClock - stackHead.id.clock;\n      if (offset < 0) {\n        // update from the same client is missing\n        stack.push(stackHead);\n        updateMissingSv(stackHead.id.client, stackHead.id.clock - 1);\n        // hid a dead wall, add all items from stack to restSS\n        addStackToRestSS();\n      } else {\n        const missing = stackHead.getMissing(transaction, store);\n        if (missing !== null) {\n          stack.push(stackHead);\n          // get the struct reader that has the missing struct\n          /**\n           * @type {{ refs: Array<GC|Item>, i: number }}\n           */\n          const structRefs = clientsStructRefs.get(/** @type {number} */ (missing)) || { refs: [], i: 0 };\n          if (structRefs.refs.length === structRefs.i) {\n            // This update message causally depends on another update message that doesn't exist yet\n            updateMissingSv(/** @type {number} */ (missing), getState(store, missing));\n            addStackToRestSS();\n          } else {\n            stackHead = structRefs.refs[structRefs.i++];\n            continue\n          }\n        } else if (offset === 0 || offset < stackHead.length) {\n          // all fine, apply the stackhead\n          stackHead.integrate(transaction, offset);\n          state.set(stackHead.id.client, stackHead.id.clock + stackHead.length);\n        }\n      }\n    }\n    // iterate to next stackHead\n    if (stack.length > 0) {\n      stackHead = /** @type {GC|Item} */ (stack.pop());\n    } else if (curStructsTarget !== null && curStructsTarget.i < curStructsTarget.refs.length) {\n      stackHead = /** @type {GC|Item} */ (curStructsTarget.refs[curStructsTarget.i++]);\n    } else {\n      curStructsTarget = getNextStructTarget();\n      if (curStructsTarget === null) {\n        // we are done!\n        break\n      } else {\n        stackHead = /** @type {GC|Item} */ (curStructsTarget.refs[curStructsTarget.i++]);\n      }\n    }\n  }\n  if (restStructs.clients.size > 0) {\n    const encoder = new UpdateEncoderV2();\n    writeClientsStructs(encoder, restStructs, new Map());\n    // write empty deleteset\n    // writeDeleteSet(encoder, new DeleteSet())\n    encoding.writeVarUint(encoder.restEncoder, 0); // => no need for an extra function call, just write 0 deletes\n    return { missing: missingSV, update: encoder.toUint8Array() }\n  }\n  return null\n};\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Transaction} transaction\n *\n * @private\n * @function\n */\nconst writeStructsFromTransaction = (encoder, transaction) => writeClientsStructs(encoder, transaction.doc.store, transaction.beforeState);\n\n/**\n * Read and apply a document update.\n *\n * This function has the same effect as `applyUpdate` but accepts an decoder.\n *\n * @param {decoding.Decoder} decoder\n * @param {Doc} ydoc\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n * @param {UpdateDecoderV1 | UpdateDecoderV2} [structDecoder]\n *\n * @function\n */\nconst readUpdateV2 = (decoder, ydoc, transactionOrigin, structDecoder = new UpdateDecoderV2(decoder)) =>\n  transact(ydoc, transaction => {\n    // force that transaction.local is set to non-local\n    transaction.local = false;\n    let retry = false;\n    const doc = transaction.doc;\n    const store = doc.store;\n    // let start = performance.now()\n    const ss = readClientsStructRefs(structDecoder, doc);\n    // console.log('time to read structs: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    // console.log('time to merge: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    const restStructs = integrateStructs(transaction, store, ss);\n    const pending = store.pendingStructs;\n    if (pending) {\n      // check if we can apply something\n      for (const [client, clock] of pending.missing) {\n        if (clock < getState(store, client)) {\n          retry = true;\n          break\n        }\n      }\n      if (restStructs) {\n        // merge restStructs into store.pending\n        for (const [client, clock] of restStructs.missing) {\n          const mclock = pending.missing.get(client);\n          if (mclock == null || mclock > clock) {\n            pending.missing.set(client, clock);\n          }\n        }\n        pending.update = mergeUpdatesV2([pending.update, restStructs.update]);\n      }\n    } else {\n      store.pendingStructs = restStructs;\n    }\n    // console.log('time to integrate: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    const dsRest = readAndApplyDeleteSet(structDecoder, transaction, store);\n    if (store.pendingDs) {\n      // @todo we could make a lower-bound state-vector check as we do above\n      const pendingDSUpdate = new UpdateDecoderV2(decoding.createDecoder(store.pendingDs));\n      decoding.readVarUint(pendingDSUpdate.restDecoder); // read 0 structs, because we only encode deletes in pendingdsupdate\n      const dsRest2 = readAndApplyDeleteSet(pendingDSUpdate, transaction, store);\n      if (dsRest && dsRest2) {\n        // case 1: ds1 != null && ds2 != null\n        store.pendingDs = mergeUpdatesV2([dsRest, dsRest2]);\n      } else {\n        // case 2: ds1 != null\n        // case 3: ds2 != null\n        // case 4: ds1 == null && ds2 == null\n        store.pendingDs = dsRest || dsRest2;\n      }\n    } else {\n      // Either dsRest == null && pendingDs == null OR dsRest != null\n      store.pendingDs = dsRest;\n    }\n    // console.log('time to cleanup: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n\n    // console.log('time to resume delete readers: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    if (retry) {\n      const update = /** @type {{update: Uint8Array}} */ (store.pendingStructs).update;\n      store.pendingStructs = null;\n      applyUpdateV2(transaction.doc, update);\n    }\n  }, transactionOrigin, false);\n\n/**\n * Read and apply a document update.\n *\n * This function has the same effect as `applyUpdate` but accepts an decoder.\n *\n * @param {decoding.Decoder} decoder\n * @param {Doc} ydoc\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */\nconst readUpdate = (decoder, ydoc, transactionOrigin) => readUpdateV2(decoder, ydoc, transactionOrigin, new UpdateDecoderV1(decoder));\n\n/**\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\n *\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\n *\n * @param {Doc} ydoc\n * @param {Uint8Array} update\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n *\n * @function\n */\nconst applyUpdateV2 = (ydoc, update, transactionOrigin, YDecoder = UpdateDecoderV2) => {\n  const decoder = decoding.createDecoder(update);\n  readUpdateV2(decoder, ydoc, transactionOrigin, new YDecoder(decoder));\n};\n\n/**\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\n *\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\n *\n * @param {Doc} ydoc\n * @param {Uint8Array} update\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */\nconst applyUpdate = (ydoc, update, transactionOrigin) => applyUpdateV2(ydoc, update, transactionOrigin, UpdateDecoderV1);\n\n/**\n * Write all the document as a single update message. If you specify the state of the remote client (`targetStateVector`) it will\n * only write the operations that are missing.\n *\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Doc} doc\n * @param {Map<number,number>} [targetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n *\n * @function\n */\nconst writeStateAsUpdate = (encoder, doc, targetStateVector = new Map()) => {\n  writeClientsStructs(encoder, doc.store, targetStateVector);\n  writeDeleteSet(encoder, createDeleteSetFromStructStore(doc.store));\n};\n\n/**\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\n * only write the operations that are missing.\n *\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\n *\n * @param {Doc} doc\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n * @param {UpdateEncoderV1 | UpdateEncoderV2} [encoder]\n * @return {Uint8Array}\n *\n * @function\n */\nconst encodeStateAsUpdateV2 = (doc, encodedTargetStateVector = new Uint8Array([0]), encoder = new UpdateEncoderV2()) => {\n  const targetStateVector = decodeStateVector(encodedTargetStateVector);\n  writeStateAsUpdate(encoder, doc, targetStateVector);\n  const updates = [encoder.toUint8Array()];\n  // also add the pending updates (if there are any)\n  if (doc.store.pendingDs) {\n    updates.push(doc.store.pendingDs);\n  }\n  if (doc.store.pendingStructs) {\n    updates.push(diffUpdateV2(doc.store.pendingStructs.update, encodedTargetStateVector));\n  }\n  if (updates.length > 1) {\n    if (encoder.constructor === UpdateEncoderV1) {\n      return mergeUpdates(updates.map((update, i) => i === 0 ? update : convertUpdateFormatV2ToV1(update)))\n    } else if (encoder.constructor === UpdateEncoderV2) {\n      return mergeUpdatesV2(updates)\n    }\n  }\n  return updates[0]\n};\n\n/**\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\n * only write the operations that are missing.\n *\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\n *\n * @param {Doc} doc\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n * @return {Uint8Array}\n *\n * @function\n */\nconst encodeStateAsUpdate = (doc, encodedTargetStateVector) => encodeStateAsUpdateV2(doc, encodedTargetStateVector, new UpdateEncoderV1());\n\n/**\n * Read state vector from Decoder and return as Map\n *\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\nconst readStateVector = decoder => {\n  const ss = new Map();\n  const ssLength = decoding.readVarUint(decoder.restDecoder);\n  for (let i = 0; i < ssLength; i++) {\n    const client = decoding.readVarUint(decoder.restDecoder);\n    const clock = decoding.readVarUint(decoder.restDecoder);\n    ss.set(client, clock);\n  }\n  return ss\n};\n\n/**\n * Read decodedState and return State as Map.\n *\n * @param {Uint8Array} decodedState\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\n// export const decodeStateVectorV2 = decodedState => readStateVector(new DSDecoderV2(decoding.createDecoder(decodedState)))\n\n/**\n * Read decodedState and return State as Map.\n *\n * @param {Uint8Array} decodedState\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\nconst decodeStateVector = decodedState => readStateVector(new DSDecoderV1(decoding.createDecoder(decodedState)));\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {Map<number,number>} sv\n * @function\n */\nconst writeStateVector = (encoder, sv) => {\n  encoding.writeVarUint(encoder.restEncoder, sv.size);\n  array.from(sv.entries()).sort((a, b) => b[0] - a[0]).forEach(([client, clock]) => {\n    encoding.writeVarUint(encoder.restEncoder, client); // @todo use a special client decoder that is based on mapping\n    encoding.writeVarUint(encoder.restEncoder, clock);\n  });\n  return encoder\n};\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {Doc} doc\n *\n * @function\n */\nconst writeDocumentStateVector = (encoder, doc) => writeStateVector(encoder, getStateVector(doc.store));\n\n/**\n * Encode State as Uint8Array.\n *\n * @param {Doc|Map<number,number>} doc\n * @param {DSEncoderV1 | DSEncoderV2} [encoder]\n * @return {Uint8Array}\n *\n * @function\n */\nconst encodeStateVectorV2 = (doc, encoder = new DSEncoderV2()) => {\n  if (doc instanceof Map) {\n    writeStateVector(encoder, doc);\n  } else {\n    writeDocumentStateVector(encoder, doc);\n  }\n  return encoder.toUint8Array()\n};\n\n/**\n * Encode State as Uint8Array.\n *\n * @param {Doc|Map<number,number>} doc\n * @return {Uint8Array}\n *\n * @function\n */\nconst encodeStateVector = doc => encodeStateVectorV2(doc, new DSEncoderV1());\n\n/**\n * General event handler implementation.\n *\n * @template ARG0, ARG1\n *\n * @private\n */\nclass EventHandler {\n  constructor () {\n    /**\n     * @type {Array<function(ARG0, ARG1):void>}\n     */\n    this.l = [];\n  }\n}\n\n/**\n * @template ARG0,ARG1\n * @returns {EventHandler<ARG0,ARG1>}\n *\n * @private\n * @function\n */\nconst createEventHandler = () => new EventHandler();\n\n/**\n * Adds an event listener that is called when\n * {@link EventHandler#callEventListeners} is called.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler.\n *\n * @private\n * @function\n */\nconst addEventHandlerListener = (eventHandler, f) =>\n  eventHandler.l.push(f);\n\n/**\n * Removes an event listener.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler that was added with\n *                     {@link EventHandler#addEventListener}\n *\n * @private\n * @function\n */\nconst removeEventHandlerListener = (eventHandler, f) => {\n  const l = eventHandler.l;\n  const len = l.length;\n  eventHandler.l = l.filter(g => f !== g);\n  if (len === eventHandler.l.length) {\n    console.error('[yjs] Tried to remove event handler that doesn\\'t exist.');\n  }\n};\n\n/**\n * Call all event listeners that were added via\n * {@link EventHandler#addEventListener}.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {ARG0} arg0\n * @param {ARG1} arg1\n *\n * @private\n * @function\n */\nconst callEventHandlerListeners = (eventHandler, arg0, arg1) =>\n  f.callAll(eventHandler.l, [arg0, arg1]);\n\nclass ID {\n  /**\n   * @param {number} client client id\n   * @param {number} clock unique per client id, continuous number\n   */\n  constructor (client, clock) {\n    /**\n     * Client id\n     * @type {number}\n     */\n    this.client = client;\n    /**\n     * unique per client id, continuous number\n     * @type {number}\n     */\n    this.clock = clock;\n  }\n}\n\n/**\n * @param {ID | null} a\n * @param {ID | null} b\n * @return {boolean}\n *\n * @function\n */\nconst compareIDs = (a, b) => a === b || (a !== null && b !== null && a.client === b.client && a.clock === b.clock);\n\n/**\n * @param {number} client\n * @param {number} clock\n *\n * @private\n * @function\n */\nconst createID = (client, clock) => new ID(client, clock);\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {ID} id\n *\n * @private\n * @function\n */\nconst writeID = (encoder, id) => {\n  encoding.writeVarUint(encoder, id.client);\n  encoding.writeVarUint(encoder, id.clock);\n};\n\n/**\n * Read ID.\n * * If first varUint read is 0xFFFFFF a RootID is returned.\n * * Otherwise an ID is returned\n *\n * @param {decoding.Decoder} decoder\n * @return {ID}\n *\n * @private\n * @function\n */\nconst readID = decoder =>\n  createID(decoding.readVarUint(decoder), decoding.readVarUint(decoder));\n\n/**\n * The top types are mapped from y.share.get(keyname) => type.\n * `type` does not store any information about the `keyname`.\n * This function finds the correct `keyname` for `type` and throws otherwise.\n *\n * @param {AbstractType<any>} type\n * @return {string}\n *\n * @private\n * @function\n */\nconst findRootTypeKey = type => {\n  // @ts-ignore _y must be defined, otherwise unexpected case\n  for (const [key, value] of type.doc.share.entries()) {\n    if (value === type) {\n      return key\n    }\n  }\n  throw error.unexpectedCase()\n};\n\n/**\n * Check if `parent` is a parent of `child`.\n *\n * @param {AbstractType<any>} parent\n * @param {Item|null} child\n * @return {Boolean} Whether `parent` is a parent of `child`.\n *\n * @private\n * @function\n */\nconst isParentOf = (parent, child) => {\n  while (child !== null) {\n    if (child.parent === parent) {\n      return true\n    }\n    child = /** @type {AbstractType<any>} */ (child.parent)._item;\n  }\n  return false\n};\n\n/**\n * Convenient helper to log type information.\n *\n * Do not use in productive systems as the output can be immense!\n *\n * @param {AbstractType<any>} type\n */\nconst logType = type => {\n  const res = [];\n  let n = type._start;\n  while (n) {\n    res.push(n);\n    n = n.right;\n  }\n  console.log('Children: ', res);\n  console.log('Children content: ', res.filter(m => !m.deleted).map(m => m.content));\n};\n\nclass PermanentUserData {\n  /**\n   * @param {Doc} doc\n   * @param {YMap<any>} [storeType]\n   */\n  constructor (doc, storeType = doc.getMap('users')) {\n    /**\n     * @type {Map<string,DeleteSet>}\n     */\n    const dss = new Map();\n    this.yusers = storeType;\n    this.doc = doc;\n    /**\n     * Maps from clientid to userDescription\n     *\n     * @type {Map<number,string>}\n     */\n    this.clients = new Map();\n    this.dss = dss;\n    /**\n     * @param {YMap<any>} user\n     * @param {string} userDescription\n     */\n    const initUser = (user, userDescription) => {\n      /**\n       * @type {YArray<Uint8Array>}\n       */\n      const ds = user.get('ds');\n      const ids = user.get('ids');\n      const addClientId = /** @param {number} clientid */ clientid => this.clients.set(clientid, userDescription);\n      ds.observe(/** @param {YArrayEvent<any>} event */ event => {\n        event.changes.added.forEach(item => {\n          item.content.getContent().forEach(encodedDs => {\n            if (encodedDs instanceof Uint8Array) {\n              this.dss.set(userDescription, mergeDeleteSets([this.dss.get(userDescription) || createDeleteSet(), readDeleteSet(new DSDecoderV1(decoding.createDecoder(encodedDs)))]));\n            }\n          });\n        });\n      });\n      this.dss.set(userDescription, mergeDeleteSets(ds.map(encodedDs => readDeleteSet(new DSDecoderV1(decoding.createDecoder(encodedDs))))));\n      ids.observe(/** @param {YArrayEvent<any>} event */ event =>\n        event.changes.added.forEach(item => item.content.getContent().forEach(addClientId))\n      );\n      ids.forEach(addClientId);\n    };\n    // observe users\n    storeType.observe(event => {\n      event.keysChanged.forEach(userDescription =>\n        initUser(storeType.get(userDescription), userDescription)\n      );\n    });\n    // add intial data\n    storeType.forEach(initUser);\n  }\n\n  /**\n   * @param {Doc} doc\n   * @param {number} clientid\n   * @param {string} userDescription\n   * @param {Object} conf\n   * @param {function(Transaction, DeleteSet):boolean} [conf.filter]\n   */\n  setUserMapping (doc, clientid, userDescription, { filter = () => true } = {}) {\n    const users = this.yusers;\n    let user = users.get(userDescription);\n    if (!user) {\n      user = new YMap();\n      user.set('ids', new YArray());\n      user.set('ds', new YArray());\n      users.set(userDescription, user);\n    }\n    user.get('ids').push([clientid]);\n    users.observe(_event => {\n      setTimeout(() => {\n        const userOverwrite = users.get(userDescription);\n        if (userOverwrite !== user) {\n          // user was overwritten, port all data over to the next user object\n          // @todo Experiment with Y.Sets here\n          user = userOverwrite;\n          // @todo iterate over old type\n          this.clients.forEach((_userDescription, clientid) => {\n            if (userDescription === _userDescription) {\n              user.get('ids').push([clientid]);\n            }\n          });\n          const encoder = new DSEncoderV1();\n          const ds = this.dss.get(userDescription);\n          if (ds) {\n            writeDeleteSet(encoder, ds);\n            user.get('ds').push([encoder.toUint8Array()]);\n          }\n        }\n      }, 0);\n    });\n    doc.on('afterTransaction', /** @param {Transaction} transaction */ transaction => {\n      setTimeout(() => {\n        const yds = user.get('ds');\n        const ds = transaction.deleteSet;\n        if (transaction.local && ds.clients.size > 0 && filter(transaction, ds)) {\n          const encoder = new DSEncoderV1();\n          writeDeleteSet(encoder, ds);\n          yds.push([encoder.toUint8Array()]);\n        }\n      });\n    });\n  }\n\n  /**\n   * @param {number} clientid\n   * @return {any}\n   */\n  getUserByClientId (clientid) {\n    return this.clients.get(clientid) || null\n  }\n\n  /**\n   * @param {ID} id\n   * @return {string | null}\n   */\n  getUserByDeletedId (id) {\n    for (const [userDescription, ds] of this.dss.entries()) {\n      if (isDeleted(ds, id)) {\n        return userDescription\n      }\n    }\n    return null\n  }\n}\n\n/**\n * A relative position is based on the Yjs model and is not affected by document changes.\n * E.g. If you place a relative position before a certain character, it will always point to this character.\n * If you place a relative position at the end of a type, it will always point to the end of the type.\n *\n * A numeric position is often unsuited for user selections, because it does not change when content is inserted\n * before or after.\n *\n * ```Insert(0, 'x')('a|bc') = 'xa|bc'``` Where | is the relative position.\n *\n * One of the properties must be defined.\n *\n * @example\n *   // Current cursor position is at position 10\n *   const relativePosition = createRelativePositionFromIndex(yText, 10)\n *   // modify yText\n *   yText.insert(0, 'abc')\n *   yText.delete(3, 10)\n *   // Compute the cursor position\n *   const absolutePosition = createAbsolutePositionFromRelativePosition(y, relativePosition)\n *   absolutePosition.type === yText // => true\n *   console.log('cursor location is ' + absolutePosition.index) // => cursor location is 3\n *\n */\nclass RelativePosition {\n  /**\n   * @param {ID|null} type\n   * @param {string|null} tname\n   * @param {ID|null} item\n   * @param {number} assoc\n   */\n  constructor (type, tname, item, assoc = 0) {\n    /**\n     * @type {ID|null}\n     */\n    this.type = type;\n    /**\n     * @type {string|null}\n     */\n    this.tname = tname;\n    /**\n     * @type {ID | null}\n     */\n    this.item = item;\n    /**\n     * A relative position is associated to a specific character. By default\n     * assoc >= 0, the relative position is associated to the character\n     * after the meant position.\n     * I.e. position 1 in 'ab' is associated to character 'b'.\n     *\n     * If assoc < 0, then the relative position is associated to the caharacter\n     * before the meant position.\n     *\n     * @type {number}\n     */\n    this.assoc = assoc;\n  }\n}\n\n/**\n * @param {RelativePosition} rpos\n * @return {any}\n */\nconst relativePositionToJSON = rpos => {\n  const json = {};\n  if (rpos.type) {\n    json.type = rpos.type;\n  }\n  if (rpos.tname) {\n    json.tname = rpos.tname;\n  }\n  if (rpos.item) {\n    json.item = rpos.item;\n  }\n  if (rpos.assoc != null) {\n    json.assoc = rpos.assoc;\n  }\n  return json\n};\n\n/**\n * @param {any} json\n * @return {RelativePosition}\n *\n * @function\n */\nconst createRelativePositionFromJSON = json => new RelativePosition(json.type == null ? null : createID(json.type.client, json.type.clock), json.tname || null, json.item == null ? null : createID(json.item.client, json.item.clock), json.assoc == null ? 0 : json.assoc);\n\nclass AbsolutePosition {\n  /**\n   * @param {AbstractType<any>} type\n   * @param {number} index\n   * @param {number} [assoc]\n   */\n  constructor (type, index, assoc = 0) {\n    /**\n     * @type {AbstractType<any>}\n     */\n    this.type = type;\n    /**\n     * @type {number}\n     */\n    this.index = index;\n    this.assoc = assoc;\n  }\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} index\n * @param {number} [assoc]\n *\n * @function\n */\nconst createAbsolutePosition = (type, index, assoc = 0) => new AbsolutePosition(type, index, assoc);\n\n/**\n * @param {AbstractType<any>} type\n * @param {ID|null} item\n * @param {number} [assoc]\n *\n * @function\n */\nconst createRelativePosition = (type, item, assoc) => {\n  let typeid = null;\n  let tname = null;\n  if (type._item === null) {\n    tname = findRootTypeKey(type);\n  } else {\n    typeid = createID(type._item.id.client, type._item.id.clock);\n  }\n  return new RelativePosition(typeid, tname, item, assoc)\n};\n\n/**\n * Create a relativePosition based on a absolute position.\n *\n * @param {AbstractType<any>} type The base type (e.g. YText or YArray).\n * @param {number} index The absolute position.\n * @param {number} [assoc]\n * @return {RelativePosition}\n *\n * @function\n */\nconst createRelativePositionFromTypeIndex = (type, index, assoc = 0) => {\n  let t = type._start;\n  if (assoc < 0) {\n    // associated to the left character or the beginning of a type, increment index if possible.\n    if (index === 0) {\n      return createRelativePosition(type, null, assoc)\n    }\n    index--;\n  }\n  while (t !== null) {\n    if (!t.deleted && t.countable) {\n      if (t.length > index) {\n        // case 1: found position somewhere in the linked list\n        return createRelativePosition(type, createID(t.id.client, t.id.clock + index), assoc)\n      }\n      index -= t.length;\n    }\n    if (t.right === null && assoc < 0) {\n      // left-associated position, return last available id\n      return createRelativePosition(type, t.lastId, assoc)\n    }\n    t = t.right;\n  }\n  return createRelativePosition(type, null, assoc)\n};\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {RelativePosition} rpos\n *\n * @function\n */\nconst writeRelativePosition = (encoder, rpos) => {\n  const { type, tname, item, assoc } = rpos;\n  if (item !== null) {\n    encoding.writeVarUint(encoder, 0);\n    writeID(encoder, item);\n  } else if (tname !== null) {\n    // case 2: found position at the end of the list and type is stored in y.share\n    encoding.writeUint8(encoder, 1);\n    encoding.writeVarString(encoder, tname);\n  } else if (type !== null) {\n    // case 3: found position at the end of the list and type is attached to an item\n    encoding.writeUint8(encoder, 2);\n    writeID(encoder, type);\n  } else {\n    throw error.unexpectedCase()\n  }\n  encoding.writeVarInt(encoder, assoc);\n  return encoder\n};\n\n/**\n * @param {RelativePosition} rpos\n * @return {Uint8Array}\n */\nconst encodeRelativePosition = rpos => {\n  const encoder = encoding.createEncoder();\n  writeRelativePosition(encoder, rpos);\n  return encoding.toUint8Array(encoder)\n};\n\n/**\n * @param {decoding.Decoder} decoder\n * @return {RelativePosition}\n *\n * @function\n */\nconst readRelativePosition = decoder => {\n  let type = null;\n  let tname = null;\n  let itemID = null;\n  switch (decoding.readVarUint(decoder)) {\n    case 0:\n      // case 1: found position somewhere in the linked list\n      itemID = readID(decoder);\n      break\n    case 1:\n      // case 2: found position at the end of the list and type is stored in y.share\n      tname = decoding.readVarString(decoder);\n      break\n    case 2: {\n      // case 3: found position at the end of the list and type is attached to an item\n      type = readID(decoder);\n    }\n  }\n  const assoc = decoding.hasContent(decoder) ? decoding.readVarInt(decoder) : 0;\n  return new RelativePosition(type, tname, itemID, assoc)\n};\n\n/**\n * @param {Uint8Array} uint8Array\n * @return {RelativePosition}\n */\nconst decodeRelativePosition = uint8Array => readRelativePosition(decoding.createDecoder(uint8Array));\n\n/**\n * @param {RelativePosition} rpos\n * @param {Doc} doc\n * @return {AbsolutePosition|null}\n *\n * @function\n */\nconst createAbsolutePositionFromRelativePosition = (rpos, doc) => {\n  const store = doc.store;\n  const rightID = rpos.item;\n  const typeID = rpos.type;\n  const tname = rpos.tname;\n  const assoc = rpos.assoc;\n  let type = null;\n  let index = 0;\n  if (rightID !== null) {\n    if (getState(store, rightID.client) <= rightID.clock) {\n      return null\n    }\n    const res = followRedone(store, rightID);\n    const right = res.item;\n    if (!(right instanceof Item)) {\n      return null\n    }\n    type = /** @type {AbstractType<any>} */ (right.parent);\n    if (type._item === null || !type._item.deleted) {\n      index = (right.deleted || !right.countable) ? 0 : (res.diff + (assoc >= 0 ? 0 : 1)); // adjust position based on left association if necessary\n      let n = right.left;\n      while (n !== null) {\n        if (!n.deleted && n.countable) {\n          index += n.length;\n        }\n        n = n.left;\n      }\n    }\n  } else {\n    if (tname !== null) {\n      type = doc.get(tname);\n    } else if (typeID !== null) {\n      if (getState(store, typeID.client) <= typeID.clock) {\n        // type does not exist yet\n        return null\n      }\n      const { item } = followRedone(store, typeID);\n      if (item instanceof Item && item.content instanceof ContentType) {\n        type = item.content.type;\n      } else {\n        // struct is garbage collected\n        return null\n      }\n    } else {\n      throw error.unexpectedCase()\n    }\n    if (assoc >= 0) {\n      index = type._length;\n    } else {\n      index = 0;\n    }\n  }\n  return createAbsolutePosition(type, index, rpos.assoc)\n};\n\n/**\n * @param {RelativePosition|null} a\n * @param {RelativePosition|null} b\n * @return {boolean}\n *\n * @function\n */\nconst compareRelativePositions = (a, b) => a === b || (\n  a !== null && b !== null && a.tname === b.tname && compareIDs(a.item, b.item) && compareIDs(a.type, b.type) && a.assoc === b.assoc\n);\n\nclass Snapshot {\n  /**\n   * @param {DeleteSet} ds\n   * @param {Map<number,number>} sv state map\n   */\n  constructor (ds, sv) {\n    /**\n     * @type {DeleteSet}\n     */\n    this.ds = ds;\n    /**\n     * State Map\n     * @type {Map<number,number>}\n     */\n    this.sv = sv;\n  }\n}\n\n/**\n * @param {Snapshot} snap1\n * @param {Snapshot} snap2\n * @return {boolean}\n */\nconst equalSnapshots = (snap1, snap2) => {\n  const ds1 = snap1.ds.clients;\n  const ds2 = snap2.ds.clients;\n  const sv1 = snap1.sv;\n  const sv2 = snap2.sv;\n  if (sv1.size !== sv2.size || ds1.size !== ds2.size) {\n    return false\n  }\n  for (const [key, value] of sv1.entries()) {\n    if (sv2.get(key) !== value) {\n      return false\n    }\n  }\n  for (const [client, dsitems1] of ds1.entries()) {\n    const dsitems2 = ds2.get(client) || [];\n    if (dsitems1.length !== dsitems2.length) {\n      return false\n    }\n    for (let i = 0; i < dsitems1.length; i++) {\n      const dsitem1 = dsitems1[i];\n      const dsitem2 = dsitems2[i];\n      if (dsitem1.clock !== dsitem2.clock || dsitem1.len !== dsitem2.len) {\n        return false\n      }\n    }\n  }\n  return true\n};\n\n/**\n * @param {Snapshot} snapshot\n * @param {DSEncoderV1 | DSEncoderV2} [encoder]\n * @return {Uint8Array}\n */\nconst encodeSnapshotV2 = (snapshot, encoder = new DSEncoderV2()) => {\n  writeDeleteSet(encoder, snapshot.ds);\n  writeStateVector(encoder, snapshot.sv);\n  return encoder.toUint8Array()\n};\n\n/**\n * @param {Snapshot} snapshot\n * @return {Uint8Array}\n */\nconst encodeSnapshot = snapshot => encodeSnapshotV2(snapshot, new DSEncoderV1());\n\n/**\n * @param {Uint8Array} buf\n * @param {DSDecoderV1 | DSDecoderV2} [decoder]\n * @return {Snapshot}\n */\nconst decodeSnapshotV2 = (buf, decoder = new DSDecoderV2(decoding.createDecoder(buf))) => {\n  return new Snapshot(readDeleteSet(decoder), readStateVector(decoder))\n};\n\n/**\n * @param {Uint8Array} buf\n * @return {Snapshot}\n */\nconst decodeSnapshot = buf => decodeSnapshotV2(buf, new DSDecoderV1(decoding.createDecoder(buf)));\n\n/**\n * @param {DeleteSet} ds\n * @param {Map<number,number>} sm\n * @return {Snapshot}\n */\nconst createSnapshot = (ds, sm) => new Snapshot(ds, sm);\n\nconst emptySnapshot = createSnapshot(createDeleteSet(), new Map());\n\n/**\n * @param {Doc} doc\n * @return {Snapshot}\n */\nconst snapshot = doc => createSnapshot(createDeleteSetFromStructStore(doc.store), getStateVector(doc.store));\n\n/**\n * @param {Item} item\n * @param {Snapshot|undefined} snapshot\n *\n * @protected\n * @function\n */\nconst isVisible = (item, snapshot) => snapshot === undefined\n  ? !item.deleted\n  : snapshot.sv.has(item.id.client) && (snapshot.sv.get(item.id.client) || 0) > item.id.clock && !isDeleted(snapshot.ds, item.id);\n\n/**\n * @param {Transaction} transaction\n * @param {Snapshot} snapshot\n */\nconst splitSnapshotAffectedStructs = (transaction, snapshot) => {\n  const meta = map.setIfUndefined(transaction.meta, splitSnapshotAffectedStructs, set.create);\n  const store = transaction.doc.store;\n  // check if we already split for this snapshot\n  if (!meta.has(snapshot)) {\n    snapshot.sv.forEach((clock, client) => {\n      if (clock < getState(store, client)) {\n        getItemCleanStart(transaction, createID(client, clock));\n      }\n    });\n    iterateDeletedStructs(transaction, snapshot.ds, _item => {});\n    meta.add(snapshot);\n  }\n};\n\n/**\n * @example\n *  const ydoc = new Y.Doc({ gc: false })\n *  ydoc.getText().insert(0, 'world!')\n *  const snapshot = Y.snapshot(ydoc)\n *  ydoc.getText().insert(0, 'hello ')\n *  const restored = Y.createDocFromSnapshot(ydoc, snapshot)\n *  assert(restored.getText().toString() === 'world!')\n *\n * @param {Doc} originDoc\n * @param {Snapshot} snapshot\n * @param {Doc} [newDoc] Optionally, you may define the Yjs document that receives the data from originDoc\n * @return {Doc}\n */\nconst createDocFromSnapshot = (originDoc, snapshot, newDoc = new Doc()) => {\n  if (originDoc.gc) {\n    // we should not try to restore a GC-ed document, because some of the restored items might have their content deleted\n    throw new Error('Garbage-collection must be disabled in `originDoc`!')\n  }\n  const { sv, ds } = snapshot;\n\n  const encoder = new UpdateEncoderV2();\n  originDoc.transact(transaction => {\n    let size = 0;\n    sv.forEach(clock => {\n      if (clock > 0) {\n        size++;\n      }\n    });\n    encoding.writeVarUint(encoder.restEncoder, size);\n    // splitting the structs before writing them to the encoder\n    for (const [client, clock] of sv) {\n      if (clock === 0) {\n        continue\n      }\n      if (clock < getState(originDoc.store, client)) {\n        getItemCleanStart(transaction, createID(client, clock));\n      }\n      const structs = originDoc.store.clients.get(client) || [];\n      const lastStructIndex = findIndexSS(structs, clock - 1);\n      // write # encoded structs\n      encoding.writeVarUint(encoder.restEncoder, lastStructIndex + 1);\n      encoder.writeClient(client);\n      // first clock written is 0\n      encoding.writeVarUint(encoder.restEncoder, 0);\n      for (let i = 0; i <= lastStructIndex; i++) {\n        structs[i].write(encoder, 0);\n      }\n    }\n    writeDeleteSet(encoder, ds);\n  });\n\n  applyUpdateV2(newDoc, encoder.toUint8Array(), 'snapshot');\n  return newDoc\n};\n\n/**\n * @param {Snapshot} snapshot\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n */\nconst snapshotContainsUpdateV2 = (snapshot, update, YDecoder = UpdateDecoderV2) => {\n  const updateDecoder = new YDecoder(decoding.createDecoder(update));\n  const lazyDecoder = new LazyStructReader(updateDecoder, false);\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    if ((snapshot.sv.get(curr.id.client) || 0) < curr.id.clock + curr.length) {\n      return false\n    }\n  }\n  const mergedDS = mergeDeleteSets([snapshot.ds, readDeleteSet(updateDecoder)]);\n  return equalDeleteSets(snapshot.ds, mergedDS)\n};\n\n/**\n * @param {Snapshot} snapshot\n * @param {Uint8Array} update\n */\nconst snapshotContainsUpdate = (snapshot, update) => snapshotContainsUpdateV2(snapshot, update, UpdateDecoderV1);\n\nclass StructStore {\n  constructor () {\n    /**\n     * @type {Map<number,Array<GC|Item>>}\n     */\n    this.clients = new Map();\n    /**\n     * @type {null | { missing: Map<number, number>, update: Uint8Array }}\n     */\n    this.pendingStructs = null;\n    /**\n     * @type {null | Uint8Array}\n     */\n    this.pendingDs = null;\n  }\n}\n\n/**\n * Return the states as a Map<client,clock>.\n * Note that clock refers to the next expected clock id.\n *\n * @param {StructStore} store\n * @return {Map<number,number>}\n *\n * @public\n * @function\n */\nconst getStateVector = store => {\n  const sm = new Map();\n  store.clients.forEach((structs, client) => {\n    const struct = structs[structs.length - 1];\n    sm.set(client, struct.id.clock + struct.length);\n  });\n  return sm\n};\n\n/**\n * @param {StructStore} store\n * @param {number} client\n * @return {number}\n *\n * @public\n * @function\n */\nconst getState = (store, client) => {\n  const structs = store.clients.get(client);\n  if (structs === undefined) {\n    return 0\n  }\n  const lastStruct = structs[structs.length - 1];\n  return lastStruct.id.clock + lastStruct.length\n};\n\n/**\n * @param {StructStore} store\n * @param {GC|Item} struct\n *\n * @private\n * @function\n */\nconst addStruct = (store, struct) => {\n  let structs = store.clients.get(struct.id.client);\n  if (structs === undefined) {\n    structs = [];\n    store.clients.set(struct.id.client, structs);\n  } else {\n    const lastStruct = structs[structs.length - 1];\n    if (lastStruct.id.clock + lastStruct.length !== struct.id.clock) {\n      throw error.unexpectedCase()\n    }\n  }\n  structs.push(struct);\n};\n\n/**\n * Perform a binary search on a sorted array\n * @param {Array<Item|GC>} structs\n * @param {number} clock\n * @return {number}\n *\n * @private\n * @function\n */\nconst findIndexSS = (structs, clock) => {\n  let left = 0;\n  let right = structs.length - 1;\n  let mid = structs[right];\n  let midclock = mid.id.clock;\n  if (midclock === clock) {\n    return right\n  }\n  // @todo does it even make sense to pivot the search?\n  // If a good split misses, it might actually increase the time to find the correct item.\n  // Currently, the only advantage is that search with pivoting might find the item on the first try.\n  let midindex = math.floor((clock / (midclock + mid.length - 1)) * right); // pivoting the search\n  while (left <= right) {\n    mid = structs[midindex];\n    midclock = mid.id.clock;\n    if (midclock <= clock) {\n      if (clock < midclock + mid.length) {\n        return midindex\n      }\n      left = midindex + 1;\n    } else {\n      right = midindex - 1;\n    }\n    midindex = math.floor((left + right) / 2);\n  }\n  // Always check state before looking for a struct in StructStore\n  // Therefore the case of not finding a struct is unexpected\n  throw error.unexpectedCase()\n};\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {GC|Item}\n *\n * @private\n * @function\n */\nconst find = (store, id) => {\n  /**\n   * @type {Array<GC|Item>}\n   */\n  // @ts-ignore\n  const structs = store.clients.get(id.client);\n  return structs[findIndexSS(structs, id.clock)]\n};\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n * @private\n * @function\n */\nconst getItem = /** @type {function(StructStore,ID):Item} */ (find);\n\n/**\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clock\n */\nconst findIndexCleanStart = (transaction, structs, clock) => {\n  const index = findIndexSS(structs, clock);\n  const struct = structs[index];\n  if (struct.id.clock < clock && struct instanceof Item) {\n    structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock));\n    return index + 1\n  }\n  return index\n};\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\nconst getItemCleanStart = (transaction, id) => {\n  const structs = /** @type {Array<Item>} */ (transaction.doc.store.clients.get(id.client));\n  return structs[findIndexCleanStart(transaction, structs, id.clock)]\n};\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\nconst getItemCleanEnd = (transaction, store, id) => {\n  /**\n   * @type {Array<Item>}\n   */\n  // @ts-ignore\n  const structs = store.clients.get(id.client);\n  const index = findIndexSS(structs, id.clock);\n  const struct = structs[index];\n  if (id.clock !== struct.id.clock + struct.length - 1 && struct.constructor !== GC) {\n    structs.splice(index + 1, 0, splitItem(transaction, struct, id.clock - struct.id.clock + 1));\n  }\n  return struct\n};\n\n/**\n * Replace `item` with `newitem` in store\n * @param {StructStore} store\n * @param {GC|Item} struct\n * @param {GC|Item} newStruct\n *\n * @private\n * @function\n */\nconst replaceStruct = (store, struct, newStruct) => {\n  const structs = /** @type {Array<GC|Item>} */ (store.clients.get(struct.id.client));\n  structs[findIndexSS(structs, struct.id.clock)] = newStruct;\n};\n\n/**\n * Iterate over a range of structs\n *\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clockStart Inclusive start\n * @param {number} len\n * @param {function(GC|Item):void} f\n *\n * @function\n */\nconst iterateStructs = (transaction, structs, clockStart, len, f) => {\n  if (len === 0) {\n    return\n  }\n  const clockEnd = clockStart + len;\n  let index = findIndexCleanStart(transaction, structs, clockStart);\n  let struct;\n  do {\n    struct = structs[index++];\n    if (clockEnd < struct.id.clock + struct.length) {\n      findIndexCleanStart(transaction, structs, clockEnd);\n    }\n    f(struct);\n  } while (index < structs.length && structs[index].id.clock < clockEnd)\n};\n\n/**\n * A transaction is created for every change on the Yjs model. It is possible\n * to bundle changes on the Yjs model in a single transaction to\n * minimize the number on messages sent and the number of observer calls.\n * If possible the user of this library should bundle as many changes as\n * possible. Here is an example to illustrate the advantages of bundling:\n *\n * @example\n * const map = y.define('map', YMap)\n * // Log content when change is triggered\n * map.observe(() => {\n *   console.log('change triggered')\n * })\n * // Each change on the map type triggers a log message:\n * map.set('a', 0) // => \"change triggered\"\n * map.set('b', 0) // => \"change triggered\"\n * // When put in a transaction, it will trigger the log after the transaction:\n * y.transact(() => {\n *   map.set('a', 1)\n *   map.set('b', 1)\n * }) // => \"change triggered\"\n *\n * @public\n */\nclass Transaction {\n  /**\n   * @param {Doc} doc\n   * @param {any} origin\n   * @param {boolean} local\n   */\n  constructor (doc, origin, local) {\n    /**\n     * The Yjs instance.\n     * @type {Doc}\n     */\n    this.doc = doc;\n    /**\n     * Describes the set of deleted items by ids\n     * @type {DeleteSet}\n     */\n    this.deleteSet = new DeleteSet();\n    /**\n     * Holds the state before the transaction started.\n     * @type {Map<Number,Number>}\n     */\n    this.beforeState = getStateVector(doc.store);\n    /**\n     * Holds the state after the transaction.\n     * @type {Map<Number,Number>}\n     */\n    this.afterState = new Map();\n    /**\n     * All types that were directly modified (property added or child\n     * inserted/deleted). New types are not included in this Set.\n     * Maps from type to parentSubs (`item.parentSub = null` for YArray)\n     * @type {Map<AbstractType<YEvent<any>>,Set<String|null>>}\n     */\n    this.changed = new Map();\n    /**\n     * Stores the events for the types that observe also child elements.\n     * It is mainly used by `observeDeep`.\n     * @type {Map<AbstractType<YEvent<any>>,Array<YEvent<any>>>}\n     */\n    this.changedParentTypes = new Map();\n    /**\n     * @type {Array<AbstractStruct>}\n     */\n    this._mergeStructs = [];\n    /**\n     * @type {any}\n     */\n    this.origin = origin;\n    /**\n     * Stores meta information on the transaction\n     * @type {Map<any,any>}\n     */\n    this.meta = new Map();\n    /**\n     * Whether this change originates from this doc.\n     * @type {boolean}\n     */\n    this.local = local;\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsAdded = new Set();\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsRemoved = new Set();\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsLoaded = new Set();\n    /**\n     * @type {boolean}\n     */\n    this._needFormattingCleanup = false;\n  }\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Transaction} transaction\n * @return {boolean} Whether data was written.\n */\nconst writeUpdateMessageFromTransaction = (encoder, transaction) => {\n  if (transaction.deleteSet.clients.size === 0 && !map.any(transaction.afterState, (clock, client) => transaction.beforeState.get(client) !== clock)) {\n    return false\n  }\n  sortAndMergeDeleteSet(transaction.deleteSet);\n  writeStructsFromTransaction(encoder, transaction);\n  writeDeleteSet(encoder, transaction.deleteSet);\n  return true\n};\n\n/**\n * If `type.parent` was added in current transaction, `type` technically\n * did not change, it was just added and we should not fire events for `type`.\n *\n * @param {Transaction} transaction\n * @param {AbstractType<YEvent<any>>} type\n * @param {string|null} parentSub\n */\nconst addChangedTypeToTransaction = (transaction, type, parentSub) => {\n  const item = type._item;\n  if (item === null || (item.id.clock < (transaction.beforeState.get(item.id.client) || 0) && !item.deleted)) {\n    map.setIfUndefined(transaction.changed, type, set.create).add(parentSub);\n  }\n};\n\n/**\n * @param {Array<AbstractStruct>} structs\n * @param {number} pos\n * @return {number} # of merged structs\n */\nconst tryToMergeWithLefts = (structs, pos) => {\n  let right = structs[pos];\n  let left = structs[pos - 1];\n  let i = pos;\n  for (; i > 0; right = left, left = structs[--i - 1]) {\n    if (left.deleted === right.deleted && left.constructor === right.constructor) {\n      if (left.mergeWith(right)) {\n        if (right instanceof Item && right.parentSub !== null && /** @type {AbstractType<any>} */ (right.parent)._map.get(right.parentSub) === right) {\n          /** @type {AbstractType<any>} */ (right.parent)._map.set(right.parentSub, /** @type {Item} */ (left));\n        }\n        continue\n      }\n    }\n    break\n  }\n  const merged = pos - i;\n  if (merged) {\n    // remove all merged structs from the array\n    structs.splice(pos + 1 - merged, merged);\n  }\n  return merged\n};\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n * @param {function(Item):boolean} gcFilter\n */\nconst tryGcDeleteSet = (ds, store, gcFilter) => {\n  for (const [client, deleteItems] of ds.clients.entries()) {\n    const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client));\n    for (let di = deleteItems.length - 1; di >= 0; di--) {\n      const deleteItem = deleteItems[di];\n      const endDeleteItemClock = deleteItem.clock + deleteItem.len;\n      for (\n        let si = findIndexSS(structs, deleteItem.clock), struct = structs[si];\n        si < structs.length && struct.id.clock < endDeleteItemClock;\n        struct = structs[++si]\n      ) {\n        const struct = structs[si];\n        if (deleteItem.clock + deleteItem.len <= struct.id.clock) {\n          break\n        }\n        if (struct instanceof Item && struct.deleted && !struct.keep && gcFilter(struct)) {\n          struct.gc(store, false);\n        }\n      }\n    }\n  }\n};\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n */\nconst tryMergeDeleteSet = (ds, store) => {\n  // try to merge deleted / gc'd items\n  // merge from right to left for better efficiecy and so we don't miss any merge targets\n  ds.clients.forEach((deleteItems, client) => {\n    const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client));\n    for (let di = deleteItems.length - 1; di >= 0; di--) {\n      const deleteItem = deleteItems[di];\n      // start with merging the item next to the last deleted item\n      const mostRightIndexToCheck = math.min(structs.length - 1, 1 + findIndexSS(structs, deleteItem.clock + deleteItem.len - 1));\n      for (\n        let si = mostRightIndexToCheck, struct = structs[si];\n        si > 0 && struct.id.clock >= deleteItem.clock;\n        struct = structs[si]\n      ) {\n        si -= 1 + tryToMergeWithLefts(structs, si);\n      }\n    }\n  });\n};\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n * @param {function(Item):boolean} gcFilter\n */\nconst tryGc = (ds, store, gcFilter) => {\n  tryGcDeleteSet(ds, store, gcFilter);\n  tryMergeDeleteSet(ds, store);\n};\n\n/**\n * @param {Array<Transaction>} transactionCleanups\n * @param {number} i\n */\nconst cleanupTransactions = (transactionCleanups, i) => {\n  if (i < transactionCleanups.length) {\n    const transaction = transactionCleanups[i];\n    const doc = transaction.doc;\n    const store = doc.store;\n    const ds = transaction.deleteSet;\n    const mergeStructs = transaction._mergeStructs;\n    try {\n      sortAndMergeDeleteSet(ds);\n      transaction.afterState = getStateVector(transaction.doc.store);\n      doc.emit('beforeObserverCalls', [transaction, doc]);\n      /**\n       * An array of event callbacks.\n       *\n       * Each callback is called even if the other ones throw errors.\n       *\n       * @type {Array<function():void>}\n       */\n      const fs = [];\n      // observe events on changed types\n      transaction.changed.forEach((subs, itemtype) =>\n        fs.push(() => {\n          if (itemtype._item === null || !itemtype._item.deleted) {\n            itemtype._callObserver(transaction, subs);\n          }\n        })\n      );\n      fs.push(() => {\n        // deep observe events\n        transaction.changedParentTypes.forEach((events, type) => {\n          // We need to think about the possibility that the user transforms the\n          // Y.Doc in the event.\n          if (type._dEH.l.length > 0 && (type._item === null || !type._item.deleted)) {\n            events = events\n              .filter(event =>\n                event.target._item === null || !event.target._item.deleted\n              );\n            events\n              .forEach(event => {\n                event.currentTarget = type;\n                // path is relative to the current target\n                event._path = null;\n              });\n            // sort events by path length so that top-level events are fired first.\n            events\n              .sort((event1, event2) => event1.path.length - event2.path.length);\n            // We don't need to check for events.length\n            // because we know it has at least one element\n            callEventHandlerListeners(type._dEH, events, transaction);\n          }\n        });\n      });\n      fs.push(() => doc.emit('afterTransaction', [transaction, doc]));\n      callAll(fs, []);\n      if (transaction._needFormattingCleanup) {\n        cleanupYTextAfterTransaction(transaction);\n      }\n    } finally {\n      // Replace deleted items with ItemDeleted / GC.\n      // This is where content is actually remove from the Yjs Doc.\n      if (doc.gc) {\n        tryGcDeleteSet(ds, store, doc.gcFilter);\n      }\n      tryMergeDeleteSet(ds, store);\n\n      // on all affected store.clients props, try to merge\n      transaction.afterState.forEach((clock, client) => {\n        const beforeClock = transaction.beforeState.get(client) || 0;\n        if (beforeClock !== clock) {\n          const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client));\n          // we iterate from right to left so we can safely remove entries\n          const firstChangePos = math.max(findIndexSS(structs, beforeClock), 1);\n          for (let i = structs.length - 1; i >= firstChangePos;) {\n            i -= 1 + tryToMergeWithLefts(structs, i);\n          }\n        }\n      });\n      // try to merge mergeStructs\n      // @todo: it makes more sense to transform mergeStructs to a DS, sort it, and merge from right to left\n      //        but at the moment DS does not handle duplicates\n      for (let i = mergeStructs.length - 1; i >= 0; i--) {\n        const { client, clock } = mergeStructs[i].id;\n        const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client));\n        const replacedStructPos = findIndexSS(structs, clock);\n        if (replacedStructPos + 1 < structs.length) {\n          if (tryToMergeWithLefts(structs, replacedStructPos + 1) > 1) {\n            continue // no need to perform next check, both are already merged\n          }\n        }\n        if (replacedStructPos > 0) {\n          tryToMergeWithLefts(structs, replacedStructPos);\n        }\n      }\n      if (!transaction.local && transaction.afterState.get(doc.clientID) !== transaction.beforeState.get(doc.clientID)) {\n        logging.print(logging.ORANGE, logging.BOLD, '[yjs] ', logging.UNBOLD, logging.RED, 'Changed the client-id because another client seems to be using it.');\n        doc.clientID = generateNewClientId();\n      }\n      // @todo Merge all the transactions into one and provide send the data as a single update message\n      doc.emit('afterTransactionCleanup', [transaction, doc]);\n      if (doc._observers.has('update')) {\n        const encoder = new UpdateEncoderV1();\n        const hasContent = writeUpdateMessageFromTransaction(encoder, transaction);\n        if (hasContent) {\n          doc.emit('update', [encoder.toUint8Array(), transaction.origin, doc, transaction]);\n        }\n      }\n      if (doc._observers.has('updateV2')) {\n        const encoder = new UpdateEncoderV2();\n        const hasContent = writeUpdateMessageFromTransaction(encoder, transaction);\n        if (hasContent) {\n          doc.emit('updateV2', [encoder.toUint8Array(), transaction.origin, doc, transaction]);\n        }\n      }\n      const { subdocsAdded, subdocsLoaded, subdocsRemoved } = transaction;\n      if (subdocsAdded.size > 0 || subdocsRemoved.size > 0 || subdocsLoaded.size > 0) {\n        subdocsAdded.forEach(subdoc => {\n          subdoc.clientID = doc.clientID;\n          if (subdoc.collectionid == null) {\n            subdoc.collectionid = doc.collectionid;\n          }\n          doc.subdocs.add(subdoc);\n        });\n        subdocsRemoved.forEach(subdoc => doc.subdocs.delete(subdoc));\n        doc.emit('subdocs', [{ loaded: subdocsLoaded, added: subdocsAdded, removed: subdocsRemoved }, doc, transaction]);\n        subdocsRemoved.forEach(subdoc => subdoc.destroy());\n      }\n\n      if (transactionCleanups.length <= i + 1) {\n        doc._transactionCleanups = [];\n        doc.emit('afterAllTransactions', [doc, transactionCleanups]);\n      } else {\n        cleanupTransactions(transactionCleanups, i + 1);\n      }\n    }\n  }\n};\n\n/**\n * Implements the functionality of `y.transact(()=>{..})`\n *\n * @template T\n * @param {Doc} doc\n * @param {function(Transaction):T} f\n * @param {any} [origin=true]\n * @return {T}\n *\n * @function\n */\nconst transact = (doc, f, origin = null, local = true) => {\n  const transactionCleanups = doc._transactionCleanups;\n  let initialCall = false;\n  /**\n   * @type {any}\n   */\n  let result = null;\n  if (doc._transaction === null) {\n    initialCall = true;\n    doc._transaction = new Transaction(doc, origin, local);\n    transactionCleanups.push(doc._transaction);\n    if (transactionCleanups.length === 1) {\n      doc.emit('beforeAllTransactions', [doc]);\n    }\n    doc.emit('beforeTransaction', [doc._transaction, doc]);\n  }\n  try {\n    result = f(doc._transaction);\n  } finally {\n    if (initialCall) {\n      const finishCleanup = doc._transaction === transactionCleanups[0];\n      doc._transaction = null;\n      if (finishCleanup) {\n        // The first transaction ended, now process observer calls.\n        // Observer call may create new transactions for which we need to call the observers and do cleanup.\n        // We don't want to nest these calls, so we execute these calls one after\n        // another.\n        // Also we need to ensure that all cleanups are called, even if the\n        // observes throw errors.\n        // This file is full of hacky try {} finally {} blocks to ensure that an\n        // event can throw errors and also that the cleanup is called.\n        cleanupTransactions(transactionCleanups, 0);\n      }\n    }\n  }\n  return result\n};\n\nclass StackItem {\n  /**\n   * @param {DeleteSet} deletions\n   * @param {DeleteSet} insertions\n   */\n  constructor (deletions, insertions) {\n    this.insertions = insertions;\n    this.deletions = deletions;\n    /**\n     * Use this to save and restore metadata like selection range\n     */\n    this.meta = new Map();\n  }\n}\n/**\n * @param {Transaction} tr\n * @param {UndoManager} um\n * @param {StackItem} stackItem\n */\nconst clearUndoManagerStackItem = (tr, um, stackItem) => {\n  iterateDeletedStructs(tr, stackItem.deletions, item => {\n    if (item instanceof Item && um.scope.some(type => isParentOf(type, item))) {\n      keepItem(item, false);\n    }\n  });\n};\n\n/**\n * @param {UndoManager} undoManager\n * @param {Array<StackItem>} stack\n * @param {string} eventType\n * @return {StackItem?}\n */\nconst popStackItem = (undoManager, stack, eventType) => {\n  /**\n   * Whether a change happened\n   * @type {StackItem?}\n   */\n  let result = null;\n  /**\n   * Keep a reference to the transaction so we can fire the event with the changedParentTypes\n   * @type {any}\n   */\n  let _tr = null;\n  const doc = undoManager.doc;\n  const scope = undoManager.scope;\n  transact(doc, transaction => {\n    while (stack.length > 0 && result === null) {\n      const store = doc.store;\n      const stackItem = /** @type {StackItem} */ (stack.pop());\n      /**\n       * @type {Set<Item>}\n       */\n      const itemsToRedo = new Set();\n      /**\n       * @type {Array<Item>}\n       */\n      const itemsToDelete = [];\n      let performedChange = false;\n      iterateDeletedStructs(transaction, stackItem.insertions, struct => {\n        if (struct instanceof Item) {\n          if (struct.redone !== null) {\n            let { item, diff } = followRedone(store, struct.id);\n            if (diff > 0) {\n              item = getItemCleanStart(transaction, createID(item.id.client, item.id.clock + diff));\n            }\n            struct = item;\n          }\n          if (!struct.deleted && scope.some(type => isParentOf(type, /** @type {Item} */ (struct)))) {\n            itemsToDelete.push(struct);\n          }\n        }\n      });\n      iterateDeletedStructs(transaction, stackItem.deletions, struct => {\n        if (\n          struct instanceof Item &&\n          scope.some(type => isParentOf(type, struct)) &&\n          // Never redo structs in stackItem.insertions because they were created and deleted in the same capture interval.\n          !isDeleted(stackItem.insertions, struct.id)\n        ) {\n          itemsToRedo.add(struct);\n        }\n      });\n      itemsToRedo.forEach(struct => {\n        performedChange = redoItem(transaction, struct, itemsToRedo, stackItem.insertions, undoManager.ignoreRemoteMapChanges, undoManager) !== null || performedChange;\n      });\n      // We want to delete in reverse order so that children are deleted before\n      // parents, so we have more information available when items are filtered.\n      for (let i = itemsToDelete.length - 1; i >= 0; i--) {\n        const item = itemsToDelete[i];\n        if (undoManager.deleteFilter(item)) {\n          item.delete(transaction);\n          performedChange = true;\n        }\n      }\n      result = performedChange ? stackItem : null;\n    }\n    transaction.changed.forEach((subProps, type) => {\n      // destroy search marker if necessary\n      if (subProps.has(null) && type._searchMarker) {\n        type._searchMarker.length = 0;\n      }\n    });\n    _tr = transaction;\n  }, undoManager);\n  if (result != null) {\n    const changedParentTypes = _tr.changedParentTypes;\n    undoManager.emit('stack-item-popped', [{ stackItem: result, type: eventType, changedParentTypes }, undoManager]);\n  }\n  return result\n};\n\n/**\n * @typedef {Object} UndoManagerOptions\n * @property {number} [UndoManagerOptions.captureTimeout=500]\n * @property {function(Transaction):boolean} [UndoManagerOptions.captureTransaction] Do not capture changes of a Transaction if result false.\n * @property {function(Item):boolean} [UndoManagerOptions.deleteFilter=()=>true] Sometimes\n * it is necessary to filter what an Undo/Redo operation can delete. If this\n * filter returns false, the type/item won't be deleted even it is in the\n * undo/redo scope.\n * @property {Set<any>} [UndoManagerOptions.trackedOrigins=new Set([null])]\n * @property {boolean} [ignoreRemoteMapChanges] Experimental. By default, the UndoManager will never overwrite remote changes. Enable this property to enable overwriting remote changes on key-value changes (Y.Map, properties on Y.Xml, etc..).\n * @property {Doc} [doc] The document that this UndoManager operates on. Only needed if typeScope is empty.\n */\n\n/**\n * Fires 'stack-item-added' event when a stack item was added to either the undo- or\n * the redo-stack. You may store additional stack information via the\n * metadata property on `event.stackItem.meta` (it is a `Map` of metadata properties).\n * Fires 'stack-item-popped' event when a stack item was popped from either the\n * undo- or the redo-stack. You may restore the saved stack information from `event.stackItem.meta`.\n *\n * @extends {Observable<'stack-item-added'|'stack-item-popped'|'stack-cleared'|'stack-item-updated'>}\n */\nclass UndoManager extends Observable {\n  /**\n   * @param {AbstractType<any>|Array<AbstractType<any>>} typeScope Accepts either a single type, or an array of types\n   * @param {UndoManagerOptions} options\n   */\n  constructor (typeScope, {\n    captureTimeout = 500,\n    captureTransaction = _tr => true,\n    deleteFilter = () => true,\n    trackedOrigins = new Set([null]),\n    ignoreRemoteMapChanges = false,\n    doc = /** @type {Doc} */ (array.isArray(typeScope) ? typeScope[0].doc : typeScope.doc)\n  } = {}) {\n    super();\n    /**\n     * @type {Array<AbstractType<any>>}\n     */\n    this.scope = [];\n    this.doc = doc;\n    this.addToScope(typeScope);\n    this.deleteFilter = deleteFilter;\n    trackedOrigins.add(this);\n    this.trackedOrigins = trackedOrigins;\n    this.captureTransaction = captureTransaction;\n    /**\n     * @type {Array<StackItem>}\n     */\n    this.undoStack = [];\n    /**\n     * @type {Array<StackItem>}\n     */\n    this.redoStack = [];\n    /**\n     * Whether the client is currently undoing (calling UndoManager.undo)\n     *\n     * @type {boolean}\n     */\n    this.undoing = false;\n    this.redoing = false;\n    this.lastChange = 0;\n    this.ignoreRemoteMapChanges = ignoreRemoteMapChanges;\n    this.captureTimeout = captureTimeout;\n    /**\n     * @param {Transaction} transaction\n     */\n    this.afterTransactionHandler = transaction => {\n      // Only track certain transactions\n      if (\n        !this.captureTransaction(transaction) ||\n        !this.scope.some(type => transaction.changedParentTypes.has(type)) ||\n        (!this.trackedOrigins.has(transaction.origin) && (!transaction.origin || !this.trackedOrigins.has(transaction.origin.constructor)))\n      ) {\n        return\n      }\n      const undoing = this.undoing;\n      const redoing = this.redoing;\n      const stack = undoing ? this.redoStack : this.undoStack;\n      if (undoing) {\n        this.stopCapturing(); // next undo should not be appended to last stack item\n      } else if (!redoing) {\n        // neither undoing nor redoing: delete redoStack\n        this.clear(false, true);\n      }\n      const insertions = new DeleteSet();\n      transaction.afterState.forEach((endClock, client) => {\n        const startClock = transaction.beforeState.get(client) || 0;\n        const len = endClock - startClock;\n        if (len > 0) {\n          addToDeleteSet(insertions, client, startClock, len);\n        }\n      });\n      const now = time.getUnixTime();\n      let didAdd = false;\n      if (this.lastChange > 0 && now - this.lastChange < this.captureTimeout && stack.length > 0 && !undoing && !redoing) {\n        // append change to last stack op\n        const lastOp = stack[stack.length - 1];\n        lastOp.deletions = mergeDeleteSets([lastOp.deletions, transaction.deleteSet]);\n        lastOp.insertions = mergeDeleteSets([lastOp.insertions, insertions]);\n      } else {\n        // create a new stack op\n        stack.push(new StackItem(transaction.deleteSet, insertions));\n        didAdd = true;\n      }\n      if (!undoing && !redoing) {\n        this.lastChange = now;\n      }\n      // make sure that deleted structs are not gc'd\n      iterateDeletedStructs(transaction, transaction.deleteSet, /** @param {Item|GC} item */ item => {\n        if (item instanceof Item && this.scope.some(type => isParentOf(type, item))) {\n          keepItem(item, true);\n        }\n      });\n      const changeEvent = [{ stackItem: stack[stack.length - 1], origin: transaction.origin, type: undoing ? 'redo' : 'undo', changedParentTypes: transaction.changedParentTypes }, this];\n      if (didAdd) {\n        this.emit('stack-item-added', changeEvent);\n      } else {\n        this.emit('stack-item-updated', changeEvent);\n      }\n    };\n    this.doc.on('afterTransaction', this.afterTransactionHandler);\n    this.doc.on('destroy', () => {\n      this.destroy();\n    });\n  }\n\n  /**\n   * @param {Array<AbstractType<any>> | AbstractType<any>} ytypes\n   */\n  addToScope (ytypes) {\n    ytypes = array.isArray(ytypes) ? ytypes : [ytypes];\n    ytypes.forEach(ytype => {\n      if (this.scope.every(yt => yt !== ytype)) {\n        if (ytype.doc !== this.doc) logging.warn('[yjs#509] Not same Y.Doc'); // use MultiDocUndoManager instead. also see https://github.com/yjs/yjs/issues/509\n        this.scope.push(ytype);\n      }\n    });\n  }\n\n  /**\n   * @param {any} origin\n   */\n  addTrackedOrigin (origin) {\n    this.trackedOrigins.add(origin);\n  }\n\n  /**\n   * @param {any} origin\n   */\n  removeTrackedOrigin (origin) {\n    this.trackedOrigins.delete(origin);\n  }\n\n  clear (clearUndoStack = true, clearRedoStack = true) {\n    if ((clearUndoStack && this.canUndo()) || (clearRedoStack && this.canRedo())) {\n      this.doc.transact(tr => {\n        if (clearUndoStack) {\n          this.undoStack.forEach(item => clearUndoManagerStackItem(tr, this, item));\n          this.undoStack = [];\n        }\n        if (clearRedoStack) {\n          this.redoStack.forEach(item => clearUndoManagerStackItem(tr, this, item));\n          this.redoStack = [];\n        }\n        this.emit('stack-cleared', [{ undoStackCleared: clearUndoStack, redoStackCleared: clearRedoStack }]);\n      });\n    }\n  }\n\n  /**\n   * UndoManager merges Undo-StackItem if they are created within time-gap\n   * smaller than `options.captureTimeout`. Call `um.stopCapturing()` so that the next\n   * StackItem won't be merged.\n   *\n   *\n   * @example\n   *     // without stopCapturing\n   *     ytext.insert(0, 'a')\n   *     ytext.insert(1, 'b')\n   *     um.undo()\n   *     ytext.toString() // => '' (note that 'ab' was removed)\n   *     // with stopCapturing\n   *     ytext.insert(0, 'a')\n   *     um.stopCapturing()\n   *     ytext.insert(0, 'b')\n   *     um.undo()\n   *     ytext.toString() // => 'a' (note that only 'b' was removed)\n   *\n   */\n  stopCapturing () {\n    this.lastChange = 0;\n  }\n\n  /**\n   * Undo last changes on type.\n   *\n   * @return {StackItem?} Returns StackItem if a change was applied\n   */\n  undo () {\n    this.undoing = true;\n    let res;\n    try {\n      res = popStackItem(this, this.undoStack, 'undo');\n    } finally {\n      this.undoing = false;\n    }\n    return res\n  }\n\n  /**\n   * Redo last undo operation.\n   *\n   * @return {StackItem?} Returns StackItem if a change was applied\n   */\n  redo () {\n    this.redoing = true;\n    let res;\n    try {\n      res = popStackItem(this, this.redoStack, 'redo');\n    } finally {\n      this.redoing = false;\n    }\n    return res\n  }\n\n  /**\n   * Are undo steps available?\n   *\n   * @return {boolean} `true` if undo is possible\n   */\n  canUndo () {\n    return this.undoStack.length > 0\n  }\n\n  /**\n   * Are redo steps available?\n   *\n   * @return {boolean} `true` if redo is possible\n   */\n  canRedo () {\n    return this.redoStack.length > 0\n  }\n\n  destroy () {\n    this.trackedOrigins.delete(this);\n    this.doc.off('afterTransaction', this.afterTransactionHandler);\n    super.destroy();\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n */\nfunction * lazyStructReaderGenerator (decoder) {\n  const numOfStateUpdates = decoding.readVarUint(decoder.restDecoder);\n  for (let i = 0; i < numOfStateUpdates; i++) {\n    const numberOfStructs = decoding.readVarUint(decoder.restDecoder);\n    const client = decoder.readClient();\n    let clock = decoding.readVarUint(decoder.restDecoder);\n    for (let i = 0; i < numberOfStructs; i++) {\n      const info = decoder.readInfo();\n      // @todo use switch instead of ifs\n      if (info === 10) {\n        const len = decoding.readVarUint(decoder.restDecoder);\n        yield new Skip(createID(client, clock), len);\n        clock += len;\n      } else if ((binary.BITS5 & info) !== 0) {\n        const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0;\n        // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n        // and we read the next string as parentYKey.\n        // It indicates how we store/retrieve parent from `y.share`\n        // @type {string|null}\n        const struct = new Item(\n          createID(client, clock),\n          null, // left\n          (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null, // origin\n          null, // right\n          (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null, // right origin\n          // @ts-ignore Force writing a string here.\n          cantCopyParentInfo ? (decoder.readParentInfo() ? decoder.readString() : decoder.readLeftID()) : null, // parent\n          cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n          readItemContent(decoder, info) // item content\n        );\n        yield struct;\n        clock += struct.length;\n      } else {\n        const len = decoder.readLen();\n        yield new GC(createID(client, clock), len);\n        clock += len;\n      }\n    }\n  }\n}\n\nclass LazyStructReader {\n  /**\n   * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n   * @param {boolean} filterSkips\n   */\n  constructor (decoder, filterSkips) {\n    this.gen = lazyStructReaderGenerator(decoder);\n    /**\n     * @type {null | Item | Skip | GC}\n     */\n    this.curr = null;\n    this.done = false;\n    this.filterSkips = filterSkips;\n    this.next();\n  }\n\n  /**\n   * @return {Item | GC | Skip |null}\n   */\n  next () {\n    // ignore \"Skip\" structs\n    do {\n      this.curr = this.gen.next().value || null;\n    } while (this.filterSkips && this.curr !== null && this.curr.constructor === Skip)\n    return this.curr\n  }\n}\n\n/**\n * @param {Uint8Array} update\n *\n */\nconst logUpdate = update => logUpdateV2(update, UpdateDecoderV1);\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n *\n */\nconst logUpdateV2 = (update, YDecoder = UpdateDecoderV2) => {\n  const structs = [];\n  const updateDecoder = new YDecoder(decoding.createDecoder(update));\n  const lazyDecoder = new LazyStructReader(updateDecoder, false);\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    structs.push(curr);\n  }\n  logging.print('Structs: ', structs);\n  const ds = readDeleteSet(updateDecoder);\n  logging.print('DeleteSet: ', ds);\n};\n\n/**\n * @param {Uint8Array} update\n *\n */\nconst decodeUpdate = (update) => decodeUpdateV2(update, UpdateDecoderV1);\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n *\n */\nconst decodeUpdateV2 = (update, YDecoder = UpdateDecoderV2) => {\n  const structs = [];\n  const updateDecoder = new YDecoder(decoding.createDecoder(update));\n  const lazyDecoder = new LazyStructReader(updateDecoder, false);\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    structs.push(curr);\n  }\n  return {\n    structs,\n    ds: readDeleteSet(updateDecoder)\n  }\n};\n\nclass LazyStructWriter {\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  constructor (encoder) {\n    this.currClient = 0;\n    this.startClock = 0;\n    this.written = 0;\n    this.encoder = encoder;\n    /**\n     * We want to write operations lazily, but also we need to know beforehand how many operations we want to write for each client.\n     *\n     * This kind of meta-information (#clients, #structs-per-client-written) is written to the restEncoder.\n     *\n     * We fragment the restEncoder and store a slice of it per-client until we know how many clients there are.\n     * When we flush (toUint8Array) we write the restEncoder using the fragments and the meta-information.\n     *\n     * @type {Array<{ written: number, restEncoder: Uint8Array }>}\n     */\n    this.clientStructs = [];\n  }\n}\n\n/**\n * @param {Array<Uint8Array>} updates\n * @return {Uint8Array}\n */\nconst mergeUpdates = updates => mergeUpdatesV2(updates, UpdateDecoderV1, UpdateEncoderV1);\n\n/**\n * @param {Uint8Array} update\n * @param {typeof DSEncoderV1 | typeof DSEncoderV2} YEncoder\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} YDecoder\n * @return {Uint8Array}\n */\nconst encodeStateVectorFromUpdateV2 = (update, YEncoder = DSEncoderV2, YDecoder = UpdateDecoderV2) => {\n  const encoder = new YEncoder();\n  const updateDecoder = new LazyStructReader(new YDecoder(decoding.createDecoder(update)), false);\n  let curr = updateDecoder.curr;\n  if (curr !== null) {\n    let size = 0;\n    let currClient = curr.id.client;\n    let stopCounting = curr.id.clock !== 0; // must start at 0\n    let currClock = stopCounting ? 0 : curr.id.clock + curr.length;\n    for (; curr !== null; curr = updateDecoder.next()) {\n      if (currClient !== curr.id.client) {\n        if (currClock !== 0) {\n          size++;\n          // We found a new client\n          // write what we have to the encoder\n          encoding.writeVarUint(encoder.restEncoder, currClient);\n          encoding.writeVarUint(encoder.restEncoder, currClock);\n        }\n        currClient = curr.id.client;\n        currClock = 0;\n        stopCounting = curr.id.clock !== 0;\n      }\n      // we ignore skips\n      if (curr.constructor === Skip) {\n        stopCounting = true;\n      }\n      if (!stopCounting) {\n        currClock = curr.id.clock + curr.length;\n      }\n    }\n    // write what we have\n    if (currClock !== 0) {\n      size++;\n      encoding.writeVarUint(encoder.restEncoder, currClient);\n      encoding.writeVarUint(encoder.restEncoder, currClock);\n    }\n    // prepend the size of the state vector\n    const enc = encoding.createEncoder();\n    encoding.writeVarUint(enc, size);\n    encoding.writeBinaryEncoder(enc, encoder.restEncoder);\n    encoder.restEncoder = enc;\n    return encoder.toUint8Array()\n  } else {\n    encoding.writeVarUint(encoder.restEncoder, 0);\n    return encoder.toUint8Array()\n  }\n};\n\n/**\n * @param {Uint8Array} update\n * @return {Uint8Array}\n */\nconst encodeStateVectorFromUpdate = update => encodeStateVectorFromUpdateV2(update, DSEncoderV1, UpdateDecoderV1);\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} YDecoder\n * @return {{ from: Map<number,number>, to: Map<number,number> }}\n */\nconst parseUpdateMetaV2 = (update, YDecoder = UpdateDecoderV2) => {\n  /**\n   * @type {Map<number, number>}\n   */\n  const from = new Map();\n  /**\n   * @type {Map<number, number>}\n   */\n  const to = new Map();\n  const updateDecoder = new LazyStructReader(new YDecoder(decoding.createDecoder(update)), false);\n  let curr = updateDecoder.curr;\n  if (curr !== null) {\n    let currClient = curr.id.client;\n    let currClock = curr.id.clock;\n    // write the beginning to `from`\n    from.set(currClient, currClock);\n    for (; curr !== null; curr = updateDecoder.next()) {\n      if (currClient !== curr.id.client) {\n        // We found a new client\n        // write the end to `to`\n        to.set(currClient, currClock);\n        // write the beginning to `from`\n        from.set(curr.id.client, curr.id.clock);\n        // update currClient\n        currClient = curr.id.client;\n      }\n      currClock = curr.id.clock + curr.length;\n    }\n    // write the end to `to`\n    to.set(currClient, currClock);\n  }\n  return { from, to }\n};\n\n/**\n * @param {Uint8Array} update\n * @return {{ from: Map<number,number>, to: Map<number,number> }}\n */\nconst parseUpdateMeta = update => parseUpdateMetaV2(update, UpdateDecoderV1);\n\n/**\n * This method is intended to slice any kind of struct and retrieve the right part.\n * It does not handle side-effects, so it should only be used by the lazy-encoder.\n *\n * @param {Item | GC | Skip} left\n * @param {number} diff\n * @return {Item | GC}\n */\nconst sliceStruct = (left, diff) => {\n  if (left.constructor === GC) {\n    const { client, clock } = left.id;\n    return new GC(createID(client, clock + diff), left.length - diff)\n  } else if (left.constructor === Skip) {\n    const { client, clock } = left.id;\n    return new Skip(createID(client, clock + diff), left.length - diff)\n  } else {\n    const leftItem = /** @type {Item} */ (left);\n    const { client, clock } = leftItem.id;\n    return new Item(\n      createID(client, clock + diff),\n      null,\n      createID(client, clock + diff - 1),\n      null,\n      leftItem.rightOrigin,\n      leftItem.parent,\n      leftItem.parentSub,\n      leftItem.content.splice(diff)\n    )\n  }\n};\n\n/**\n *\n * This function works similarly to `readUpdateV2`.\n *\n * @param {Array<Uint8Array>} updates\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n * @param {typeof UpdateEncoderV1 | typeof UpdateEncoderV2} [YEncoder]\n * @return {Uint8Array}\n */\nconst mergeUpdatesV2 = (updates, YDecoder = UpdateDecoderV2, YEncoder = UpdateEncoderV2) => {\n  if (updates.length === 1) {\n    return updates[0]\n  }\n  const updateDecoders = updates.map(update => new YDecoder(decoding.createDecoder(update)));\n  let lazyStructDecoders = updateDecoders.map(decoder => new LazyStructReader(decoder, true));\n\n  /**\n   * @todo we don't need offset because we always slice before\n   * @type {null | { struct: Item | GC | Skip, offset: number }}\n   */\n  let currWrite = null;\n\n  const updateEncoder = new YEncoder();\n  // write structs lazily\n  const lazyStructEncoder = new LazyStructWriter(updateEncoder);\n\n  // Note: We need to ensure that all lazyStructDecoders are fully consumed\n  // Note: Should merge document updates whenever possible - even from different updates\n  // Note: Should handle that some operations cannot be applied yet ()\n\n  while (true) {\n    // Write higher clients first ⇒ sort by clientID & clock and remove decoders without content\n    lazyStructDecoders = lazyStructDecoders.filter(dec => dec.curr !== null);\n    lazyStructDecoders.sort(\n      /** @type {function(any,any):number} */ (dec1, dec2) => {\n        if (dec1.curr.id.client === dec2.curr.id.client) {\n          const clockDiff = dec1.curr.id.clock - dec2.curr.id.clock;\n          if (clockDiff === 0) {\n            // @todo remove references to skip since the structDecoders must filter Skips.\n            return dec1.curr.constructor === dec2.curr.constructor\n              ? 0\n              : dec1.curr.constructor === Skip ? 1 : -1 // we are filtering skips anyway.\n          } else {\n            return clockDiff\n          }\n        } else {\n          return dec2.curr.id.client - dec1.curr.id.client\n        }\n      }\n    );\n    if (lazyStructDecoders.length === 0) {\n      break\n    }\n    const currDecoder = lazyStructDecoders[0];\n    // write from currDecoder until the next operation is from another client or if filler-struct\n    // then we need to reorder the decoders and find the next operation to write\n    const firstClient = /** @type {Item | GC} */ (currDecoder.curr).id.client;\n\n    if (currWrite !== null) {\n      let curr = /** @type {Item | GC | null} */ (currDecoder.curr);\n      let iterated = false;\n\n      // iterate until we find something that we haven't written already\n      // remember: first the high client-ids are written\n      while (curr !== null && curr.id.clock + curr.length <= currWrite.struct.id.clock + currWrite.struct.length && curr.id.client >= currWrite.struct.id.client) {\n        curr = currDecoder.next();\n        iterated = true;\n      }\n      if (\n        curr === null || // current decoder is empty\n        curr.id.client !== firstClient || // check whether there is another decoder that has has updates from `firstClient`\n        (iterated && curr.id.clock > currWrite.struct.id.clock + currWrite.struct.length) // the above while loop was used and we are potentially missing updates\n      ) {\n        continue\n      }\n\n      if (firstClient !== currWrite.struct.id.client) {\n        writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n        currWrite = { struct: curr, offset: 0 };\n        currDecoder.next();\n      } else {\n        if (currWrite.struct.id.clock + currWrite.struct.length < curr.id.clock) {\n          // @todo write currStruct & set currStruct = Skip(clock = currStruct.id.clock + currStruct.length, length = curr.id.clock - self.clock)\n          if (currWrite.struct.constructor === Skip) {\n            // extend existing skip\n            currWrite.struct.length = curr.id.clock + curr.length - currWrite.struct.id.clock;\n          } else {\n            writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n            const diff = curr.id.clock - currWrite.struct.id.clock - currWrite.struct.length;\n            /**\n             * @type {Skip}\n             */\n            const struct = new Skip(createID(firstClient, currWrite.struct.id.clock + currWrite.struct.length), diff);\n            currWrite = { struct, offset: 0 };\n          }\n        } else { // if (currWrite.struct.id.clock + currWrite.struct.length >= curr.id.clock) {\n          const diff = currWrite.struct.id.clock + currWrite.struct.length - curr.id.clock;\n          if (diff > 0) {\n            if (currWrite.struct.constructor === Skip) {\n              // prefer to slice Skip because the other struct might contain more information\n              currWrite.struct.length -= diff;\n            } else {\n              curr = sliceStruct(curr, diff);\n            }\n          }\n          if (!currWrite.struct.mergeWith(/** @type {any} */ (curr))) {\n            writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n            currWrite = { struct: curr, offset: 0 };\n            currDecoder.next();\n          }\n        }\n      }\n    } else {\n      currWrite = { struct: /** @type {Item | GC} */ (currDecoder.curr), offset: 0 };\n      currDecoder.next();\n    }\n    for (\n      let next = currDecoder.curr;\n      next !== null && next.id.client === firstClient && next.id.clock === currWrite.struct.id.clock + currWrite.struct.length && next.constructor !== Skip;\n      next = currDecoder.next()\n    ) {\n      writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n      currWrite = { struct: next, offset: 0 };\n    }\n  }\n  if (currWrite !== null) {\n    writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n    currWrite = null;\n  }\n  finishLazyStructWriting(lazyStructEncoder);\n\n  const dss = updateDecoders.map(decoder => readDeleteSet(decoder));\n  const ds = mergeDeleteSets(dss);\n  writeDeleteSet(updateEncoder, ds);\n  return updateEncoder.toUint8Array()\n};\n\n/**\n * @param {Uint8Array} update\n * @param {Uint8Array} sv\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n * @param {typeof UpdateEncoderV1 | typeof UpdateEncoderV2} [YEncoder]\n */\nconst diffUpdateV2 = (update, sv, YDecoder = UpdateDecoderV2, YEncoder = UpdateEncoderV2) => {\n  const state = decodeStateVector(sv);\n  const encoder = new YEncoder();\n  const lazyStructWriter = new LazyStructWriter(encoder);\n  const decoder = new YDecoder(decoding.createDecoder(update));\n  const reader = new LazyStructReader(decoder, false);\n  while (reader.curr) {\n    const curr = reader.curr;\n    const currClient = curr.id.client;\n    const svClock = state.get(currClient) || 0;\n    if (reader.curr.constructor === Skip) {\n      // the first written struct shouldn't be a skip\n      reader.next();\n      continue\n    }\n    if (curr.id.clock + curr.length > svClock) {\n      writeStructToLazyStructWriter(lazyStructWriter, curr, math.max(svClock - curr.id.clock, 0));\n      reader.next();\n      while (reader.curr && reader.curr.id.client === currClient) {\n        writeStructToLazyStructWriter(lazyStructWriter, reader.curr, 0);\n        reader.next();\n      }\n    } else {\n      // read until something new comes up\n      while (reader.curr && reader.curr.id.client === currClient && reader.curr.id.clock + reader.curr.length <= svClock) {\n        reader.next();\n      }\n    }\n  }\n  finishLazyStructWriting(lazyStructWriter);\n  // write ds\n  const ds = readDeleteSet(decoder);\n  writeDeleteSet(encoder, ds);\n  return encoder.toUint8Array()\n};\n\n/**\n * @param {Uint8Array} update\n * @param {Uint8Array} sv\n */\nconst diffUpdate = (update, sv) => diffUpdateV2(update, sv, UpdateDecoderV1, UpdateEncoderV1);\n\n/**\n * @param {LazyStructWriter} lazyWriter\n */\nconst flushLazyStructWriter = lazyWriter => {\n  if (lazyWriter.written > 0) {\n    lazyWriter.clientStructs.push({ written: lazyWriter.written, restEncoder: encoding.toUint8Array(lazyWriter.encoder.restEncoder) });\n    lazyWriter.encoder.restEncoder = encoding.createEncoder();\n    lazyWriter.written = 0;\n  }\n};\n\n/**\n * @param {LazyStructWriter} lazyWriter\n * @param {Item | GC} struct\n * @param {number} offset\n */\nconst writeStructToLazyStructWriter = (lazyWriter, struct, offset) => {\n  // flush curr if we start another client\n  if (lazyWriter.written > 0 && lazyWriter.currClient !== struct.id.client) {\n    flushLazyStructWriter(lazyWriter);\n  }\n  if (lazyWriter.written === 0) {\n    lazyWriter.currClient = struct.id.client;\n    // write next client\n    lazyWriter.encoder.writeClient(struct.id.client);\n    // write startClock\n    encoding.writeVarUint(lazyWriter.encoder.restEncoder, struct.id.clock + offset);\n  }\n  struct.write(lazyWriter.encoder, offset);\n  lazyWriter.written++;\n};\n/**\n * Call this function when we collected all parts and want to\n * put all the parts together. After calling this method,\n * you can continue using the UpdateEncoder.\n *\n * @param {LazyStructWriter} lazyWriter\n */\nconst finishLazyStructWriting = (lazyWriter) => {\n  flushLazyStructWriter(lazyWriter);\n\n  // this is a fresh encoder because we called flushCurr\n  const restEncoder = lazyWriter.encoder.restEncoder;\n\n  /**\n   * Now we put all the fragments together.\n   * This works similarly to `writeClientsStructs`\n   */\n\n  // write # states that were updated - i.e. the clients\n  encoding.writeVarUint(restEncoder, lazyWriter.clientStructs.length);\n\n  for (let i = 0; i < lazyWriter.clientStructs.length; i++) {\n    const partStructs = lazyWriter.clientStructs[i];\n    /**\n     * Works similarly to `writeStructs`\n     */\n    // write # encoded structs\n    encoding.writeVarUint(restEncoder, partStructs.written);\n    // write the rest of the fragment\n    encoding.writeUint8Array(restEncoder, partStructs.restEncoder);\n  }\n};\n\n/**\n * @param {Uint8Array} update\n * @param {function(Item|GC|Skip):Item|GC|Skip} blockTransformer\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} YDecoder\n * @param {typeof UpdateEncoderV2 | typeof UpdateEncoderV1 } YEncoder\n */\nconst convertUpdateFormat = (update, blockTransformer, YDecoder, YEncoder) => {\n  const updateDecoder = new YDecoder(decoding.createDecoder(update));\n  const lazyDecoder = new LazyStructReader(updateDecoder, false);\n  const updateEncoder = new YEncoder();\n  const lazyWriter = new LazyStructWriter(updateEncoder);\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    writeStructToLazyStructWriter(lazyWriter, blockTransformer(curr), 0);\n  }\n  finishLazyStructWriting(lazyWriter);\n  const ds = readDeleteSet(updateDecoder);\n  writeDeleteSet(updateEncoder, ds);\n  return updateEncoder.toUint8Array()\n};\n\n/**\n * @typedef {Object} ObfuscatorOptions\n * @property {boolean} [ObfuscatorOptions.formatting=true]\n * @property {boolean} [ObfuscatorOptions.subdocs=true]\n * @property {boolean} [ObfuscatorOptions.yxml=true] Whether to obfuscate nodeName / hookName\n */\n\n/**\n * @param {ObfuscatorOptions} obfuscator\n */\nconst createObfuscator = ({ formatting = true, subdocs = true, yxml = true } = {}) => {\n  let i = 0;\n  const mapKeyCache = map.create();\n  const nodeNameCache = map.create();\n  const formattingKeyCache = map.create();\n  const formattingValueCache = map.create();\n  formattingValueCache.set(null, null); // end of a formatting range should always be the end of a formatting range\n  /**\n   * @param {Item|GC|Skip} block\n   * @return {Item|GC|Skip}\n   */\n  return block => {\n    switch (block.constructor) {\n      case GC:\n      case Skip:\n        return block\n      case Item: {\n        const item = /** @type {Item} */ (block);\n        const content = item.content;\n        switch (content.constructor) {\n          case ContentDeleted:\n            break\n          case ContentType: {\n            if (yxml) {\n              const type = /** @type {ContentType} */ (content).type;\n              if (type instanceof YXmlElement) {\n                type.nodeName = map.setIfUndefined(nodeNameCache, type.nodeName, () => 'node-' + i);\n              }\n              if (type instanceof YXmlHook) {\n                type.hookName = map.setIfUndefined(nodeNameCache, type.hookName, () => 'hook-' + i);\n              }\n            }\n            break\n          }\n          case ContentAny: {\n            const c = /** @type {ContentAny} */ (content);\n            c.arr = c.arr.map(() => i);\n            break\n          }\n          case ContentBinary: {\n            const c = /** @type {ContentBinary} */ (content);\n            c.content = new Uint8Array([i]);\n            break\n          }\n          case ContentDoc: {\n            const c = /** @type {ContentDoc} */ (content);\n            if (subdocs) {\n              c.opts = {};\n              c.doc.guid = i + '';\n            }\n            break\n          }\n          case ContentEmbed: {\n            const c = /** @type {ContentEmbed} */ (content);\n            c.embed = {};\n            break\n          }\n          case ContentFormat: {\n            const c = /** @type {ContentFormat} */ (content);\n            if (formatting) {\n              c.key = map.setIfUndefined(formattingKeyCache, c.key, () => i + '');\n              c.value = map.setIfUndefined(formattingValueCache, c.value, () => ({ i }));\n            }\n            break\n          }\n          case ContentJSON: {\n            const c = /** @type {ContentJSON} */ (content);\n            c.arr = c.arr.map(() => i);\n            break\n          }\n          case ContentString: {\n            const c = /** @type {ContentString} */ (content);\n            c.str = string.repeat((i % 10) + '', c.str.length);\n            break\n          }\n          default:\n            // unknown content type\n            error.unexpectedCase();\n        }\n        if (item.parentSub) {\n          item.parentSub = map.setIfUndefined(mapKeyCache, item.parentSub, () => i + '');\n        }\n        i++;\n        return block\n      }\n      default:\n        // unknown block-type\n        error.unexpectedCase();\n    }\n  }\n};\n\n/**\n * This function obfuscates the content of a Yjs update. This is useful to share\n * buggy Yjs documents while significantly limiting the possibility that a\n * developer can on the user. Note that it might still be possible to deduce\n * some information by analyzing the \"structure\" of the document or by analyzing\n * the typing behavior using the CRDT-related metadata that is still kept fully\n * intact.\n *\n * @param {Uint8Array} update\n * @param {ObfuscatorOptions} [opts]\n */\nconst obfuscateUpdate = (update, opts) => convertUpdateFormat(update, createObfuscator(opts), UpdateDecoderV1, UpdateEncoderV1);\n\n/**\n * @param {Uint8Array} update\n * @param {ObfuscatorOptions} [opts]\n */\nconst obfuscateUpdateV2 = (update, opts) => convertUpdateFormat(update, createObfuscator(opts), UpdateDecoderV2, UpdateEncoderV2);\n\n/**\n * @param {Uint8Array} update\n */\nconst convertUpdateFormatV1ToV2 = update => convertUpdateFormat(update, f.id, UpdateDecoderV1, UpdateEncoderV2);\n\n/**\n * @param {Uint8Array} update\n */\nconst convertUpdateFormatV2ToV1 = update => convertUpdateFormat(update, f.id, UpdateDecoderV2, UpdateEncoderV1);\n\nconst errorComputeChanges = 'You must not compute changes after the event-handler fired.';\n\n/**\n * @template {AbstractType<any>} T\n * YEvent describes the changes on a YType.\n */\nclass YEvent {\n  /**\n   * @param {T} target The changed type.\n   * @param {Transaction} transaction\n   */\n  constructor (target, transaction) {\n    /**\n     * The type on which this event was created on.\n     * @type {T}\n     */\n    this.target = target;\n    /**\n     * The current target on which the observe callback is called.\n     * @type {AbstractType<any>}\n     */\n    this.currentTarget = target;\n    /**\n     * The transaction that triggered this event.\n     * @type {Transaction}\n     */\n    this.transaction = transaction;\n    /**\n     * @type {Object|null}\n     */\n    this._changes = null;\n    /**\n     * @type {null | Map<string, { action: 'add' | 'update' | 'delete', oldValue: any, newValue: any }>}\n     */\n    this._keys = null;\n    /**\n     * @type {null | Array<{ insert?: string | Array<any> | object | AbstractType<any>, retain?: number, delete?: number, attributes?: Object<string, any> }>}\n     */\n    this._delta = null;\n    /**\n     * @type {Array<string|number>|null}\n     */\n    this._path = null;\n  }\n\n  /**\n   * Computes the path from `y` to the changed type.\n   *\n   * @todo v14 should standardize on path: Array<{parent, index}> because that is easier to work with.\n   *\n   * The following property holds:\n   * @example\n   *   let type = y\n   *   event.path.forEach(dir => {\n   *     type = type.get(dir)\n   *   })\n   *   type === event.target // => true\n   */\n  get path () {\n    return this._path || (this._path = getPathTo(this.currentTarget, this.target))\n  }\n\n  /**\n   * Check if a struct is deleted by this event.\n   *\n   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\n   *\n   * @param {AbstractStruct} struct\n   * @return {boolean}\n   */\n  deletes (struct) {\n    return isDeleted(this.transaction.deleteSet, struct.id)\n  }\n\n  /**\n   * @type {Map<string, { action: 'add' | 'update' | 'delete', oldValue: any, newValue: any }>}\n   */\n  get keys () {\n    if (this._keys === null) {\n      if (this.transaction.doc._transactionCleanups.length === 0) {\n        throw error.create(errorComputeChanges)\n      }\n      const keys = new Map();\n      const target = this.target;\n      const changed = /** @type Set<string|null> */ (this.transaction.changed.get(target));\n      changed.forEach(key => {\n        if (key !== null) {\n          const item = /** @type {Item} */ (target._map.get(key));\n          /**\n           * @type {'delete' | 'add' | 'update'}\n           */\n          let action;\n          let oldValue;\n          if (this.adds(item)) {\n            let prev = item.left;\n            while (prev !== null && this.adds(prev)) {\n              prev = prev.left;\n            }\n            if (this.deletes(item)) {\n              if (prev !== null && this.deletes(prev)) {\n                action = 'delete';\n                oldValue = array.last(prev.content.getContent());\n              } else {\n                return\n              }\n            } else {\n              if (prev !== null && this.deletes(prev)) {\n                action = 'update';\n                oldValue = array.last(prev.content.getContent());\n              } else {\n                action = 'add';\n                oldValue = undefined;\n              }\n            }\n          } else {\n            if (this.deletes(item)) {\n              action = 'delete';\n              oldValue = array.last(/** @type {Item} */ item.content.getContent());\n            } else {\n              return // nop\n            }\n          }\n          keys.set(key, { action, oldValue });\n        }\n      });\n      this._keys = keys;\n    }\n    return this._keys\n  }\n\n  /**\n   * This is a computed property. Note that this can only be safely computed during the\n   * event call. Computing this property after other changes happened might result in\n   * unexpected behavior (incorrect computation of deltas). A safe way to collect changes\n   * is to store the `changes` or the `delta` object. Avoid storing the `transaction` object.\n   *\n   * @type {Array<{insert?: string | Array<any> | object | AbstractType<any>, retain?: number, delete?: number, attributes?: Object<string, any>}>}\n   */\n  get delta () {\n    return this.changes.delta\n  }\n\n  /**\n   * Check if a struct is added by this event.\n   *\n   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\n   *\n   * @param {AbstractStruct} struct\n   * @return {boolean}\n   */\n  adds (struct) {\n    return struct.id.clock >= (this.transaction.beforeState.get(struct.id.client) || 0)\n  }\n\n  /**\n   * This is a computed property. Note that this can only be safely computed during the\n   * event call. Computing this property after other changes happened might result in\n   * unexpected behavior (incorrect computation of deltas). A safe way to collect changes\n   * is to store the `changes` or the `delta` object. Avoid storing the `transaction` object.\n   *\n   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\n   */\n  get changes () {\n    let changes = this._changes;\n    if (changes === null) {\n      if (this.transaction.doc._transactionCleanups.length === 0) {\n        throw error.create(errorComputeChanges)\n      }\n      const target = this.target;\n      const added = set.create();\n      const deleted = set.create();\n      /**\n       * @type {Array<{insert:Array<any>}|{delete:number}|{retain:number}>}\n       */\n      const delta = [];\n      changes = {\n        added,\n        deleted,\n        delta,\n        keys: this.keys\n      };\n      const changed = /** @type Set<string|null> */ (this.transaction.changed.get(target));\n      if (changed.has(null)) {\n        /**\n         * @type {any}\n         */\n        let lastOp = null;\n        const packOp = () => {\n          if (lastOp) {\n            delta.push(lastOp);\n          }\n        };\n        for (let item = target._start; item !== null; item = item.right) {\n          if (item.deleted) {\n            if (this.deletes(item) && !this.adds(item)) {\n              if (lastOp === null || lastOp.delete === undefined) {\n                packOp();\n                lastOp = { delete: 0 };\n              }\n              lastOp.delete += item.length;\n              deleted.add(item);\n            } // else nop\n          } else {\n            if (this.adds(item)) {\n              if (lastOp === null || lastOp.insert === undefined) {\n                packOp();\n                lastOp = { insert: [] };\n              }\n              lastOp.insert = lastOp.insert.concat(item.content.getContent());\n              added.add(item);\n            } else {\n              if (lastOp === null || lastOp.retain === undefined) {\n                packOp();\n                lastOp = { retain: 0 };\n              }\n              lastOp.retain += item.length;\n            }\n          }\n        }\n        if (lastOp !== null && lastOp.retain === undefined) {\n          packOp();\n        }\n      }\n      this._changes = changes;\n    }\n    return /** @type {any} */ (changes)\n  }\n}\n\n/**\n * Compute the path from this type to the specified target.\n *\n * @example\n *   // `child` should be accessible via `type.get(path[0]).get(path[1])..`\n *   const path = type.getPathTo(child)\n *   // assuming `type instanceof YArray`\n *   console.log(path) // might look like => [2, 'key1']\n *   child === type.get(path[0]).get(path[1])\n *\n * @param {AbstractType<any>} parent\n * @param {AbstractType<any>} child target\n * @return {Array<string|number>} Path to the target\n *\n * @private\n * @function\n */\nconst getPathTo = (parent, child) => {\n  const path = [];\n  while (child._item !== null && child !== parent) {\n    if (child._item.parentSub !== null) {\n      // parent is map-ish\n      path.unshift(child._item.parentSub);\n    } else {\n      // parent is array-ish\n      let i = 0;\n      let c = /** @type {AbstractType<any>} */ (child._item.parent)._start;\n      while (c !== child._item && c !== null) {\n        if (!c.deleted) {\n          i++;\n        }\n        c = c.right;\n      }\n      path.unshift(i);\n    }\n    child = /** @type {AbstractType<any>} */ (child._item.parent);\n  }\n  return path\n};\n\nconst maxSearchMarker = 80;\n\n/**\n * A unique timestamp that identifies each marker.\n *\n * Time is relative,.. this is more like an ever-increasing clock.\n *\n * @type {number}\n */\nlet globalSearchMarkerTimestamp = 0;\n\nclass ArraySearchMarker {\n  /**\n   * @param {Item} p\n   * @param {number} index\n   */\n  constructor (p, index) {\n    p.marker = true;\n    this.p = p;\n    this.index = index;\n    this.timestamp = globalSearchMarkerTimestamp++;\n  }\n}\n\n/**\n * @param {ArraySearchMarker} marker\n */\nconst refreshMarkerTimestamp = marker => { marker.timestamp = globalSearchMarkerTimestamp++; };\n\n/**\n * This is rather complex so this function is the only thing that should overwrite a marker\n *\n * @param {ArraySearchMarker} marker\n * @param {Item} p\n * @param {number} index\n */\nconst overwriteMarker = (marker, p, index) => {\n  marker.p.marker = false;\n  marker.p = p;\n  p.marker = true;\n  marker.index = index;\n  marker.timestamp = globalSearchMarkerTimestamp++;\n};\n\n/**\n * @param {Array<ArraySearchMarker>} searchMarker\n * @param {Item} p\n * @param {number} index\n */\nconst markPosition = (searchMarker, p, index) => {\n  if (searchMarker.length >= maxSearchMarker) {\n    // override oldest marker (we don't want to create more objects)\n    const marker = searchMarker.reduce((a, b) => a.timestamp < b.timestamp ? a : b);\n    overwriteMarker(marker, p, index);\n    return marker\n  } else {\n    // create new marker\n    const pm = new ArraySearchMarker(p, index);\n    searchMarker.push(pm);\n    return pm\n  }\n};\n\n/**\n * Search marker help us to find positions in the associative array faster.\n *\n * They speed up the process of finding a position without much bookkeeping.\n *\n * A maximum of `maxSearchMarker` objects are created.\n *\n * This function always returns a refreshed marker (updated timestamp)\n *\n * @param {AbstractType<any>} yarray\n * @param {number} index\n */\nconst findMarker = (yarray, index) => {\n  if (yarray._start === null || index === 0 || yarray._searchMarker === null) {\n    return null\n  }\n  const marker = yarray._searchMarker.length === 0 ? null : yarray._searchMarker.reduce((a, b) => math.abs(index - a.index) < math.abs(index - b.index) ? a : b);\n  let p = yarray._start;\n  let pindex = 0;\n  if (marker !== null) {\n    p = marker.p;\n    pindex = marker.index;\n    refreshMarkerTimestamp(marker); // we used it, we might need to use it again\n  }\n  // iterate to right if possible\n  while (p.right !== null && pindex < index) {\n    if (!p.deleted && p.countable) {\n      if (index < pindex + p.length) {\n        break\n      }\n      pindex += p.length;\n    }\n    p = p.right;\n  }\n  // iterate to left if necessary (might be that pindex > index)\n  while (p.left !== null && pindex > index) {\n    p = p.left;\n    if (!p.deleted && p.countable) {\n      pindex -= p.length;\n    }\n  }\n  // we want to make sure that p can't be merged with left, because that would screw up everything\n  // in that cas just return what we have (it is most likely the best marker anyway)\n  // iterate to left until p can't be merged with left\n  while (p.left !== null && p.left.id.client === p.id.client && p.left.id.clock + p.left.length === p.id.clock) {\n    p = p.left;\n    if (!p.deleted && p.countable) {\n      pindex -= p.length;\n    }\n  }\n\n  // @todo remove!\n  // assure position\n  // {\n  //   let start = yarray._start\n  //   let pos = 0\n  //   while (start !== p) {\n  //     if (!start.deleted && start.countable) {\n  //       pos += start.length\n  //     }\n  //     start = /** @type {Item} */ (start.right)\n  //   }\n  //   if (pos !== pindex) {\n  //     debugger\n  //     throw new Error('Gotcha position fail!')\n  //   }\n  // }\n  // if (marker) {\n  //   if (window.lengthes == null) {\n  //     window.lengthes = []\n  //     window.getLengthes = () => window.lengthes.sort((a, b) => a - b)\n  //   }\n  //   window.lengthes.push(marker.index - pindex)\n  //   console.log('distance', marker.index - pindex, 'len', p && p.parent.length)\n  // }\n  if (marker !== null && math.abs(marker.index - pindex) < /** @type {YText|YArray<any>} */ (p.parent).length / maxSearchMarker) {\n    // adjust existing marker\n    overwriteMarker(marker, p, pindex);\n    return marker\n  } else {\n    // create new marker\n    return markPosition(yarray._searchMarker, p, pindex)\n  }\n};\n\n/**\n * Update markers when a change happened.\n *\n * This should be called before doing a deletion!\n *\n * @param {Array<ArraySearchMarker>} searchMarker\n * @param {number} index\n * @param {number} len If insertion, len is positive. If deletion, len is negative.\n */\nconst updateMarkerChanges = (searchMarker, index, len) => {\n  for (let i = searchMarker.length - 1; i >= 0; i--) {\n    const m = searchMarker[i];\n    if (len > 0) {\n      /**\n       * @type {Item|null}\n       */\n      let p = m.p;\n      p.marker = false;\n      // Ideally we just want to do a simple position comparison, but this will only work if\n      // search markers don't point to deleted items for formats.\n      // Iterate marker to prev undeleted countable position so we know what to do when updating a position\n      while (p && (p.deleted || !p.countable)) {\n        p = p.left;\n        if (p && !p.deleted && p.countable) {\n          // adjust position. the loop should break now\n          m.index -= p.length;\n        }\n      }\n      if (p === null || p.marker === true) {\n        // remove search marker if updated position is null or if position is already marked\n        searchMarker.splice(i, 1);\n        continue\n      }\n      m.p = p;\n      p.marker = true;\n    }\n    if (index < m.index || (len > 0 && index === m.index)) { // a simple index <= m.index check would actually suffice\n      m.index = math.max(index, m.index + len);\n    }\n  }\n};\n\n/**\n * Accumulate all (list) children of a type and return them as an Array.\n *\n * @param {AbstractType<any>} t\n * @return {Array<Item>}\n */\nconst getTypeChildren = t => {\n  let s = t._start;\n  const arr = [];\n  while (s) {\n    arr.push(s);\n    s = s.right;\n  }\n  return arr\n};\n\n/**\n * Call event listeners with an event. This will also add an event to all\n * parents (for `.observeDeep` handlers).\n *\n * @template EventType\n * @param {AbstractType<EventType>} type\n * @param {Transaction} transaction\n * @param {EventType} event\n */\nconst callTypeObservers = (type, transaction, event) => {\n  const changedType = type;\n  const changedParentTypes = transaction.changedParentTypes;\n  while (true) {\n    // @ts-ignore\n    map.setIfUndefined(changedParentTypes, type, () => []).push(event);\n    if (type._item === null) {\n      break\n    }\n    type = /** @type {AbstractType<any>} */ (type._item.parent);\n  }\n  callEventHandlerListeners(changedType._eH, event, transaction);\n};\n\n/**\n * @template EventType\n * Abstract Yjs Type class\n */\nclass AbstractType {\n  constructor () {\n    /**\n     * @type {Item|null}\n     */\n    this._item = null;\n    /**\n     * @type {Map<string,Item>}\n     */\n    this._map = new Map();\n    /**\n     * @type {Item|null}\n     */\n    this._start = null;\n    /**\n     * @type {Doc|null}\n     */\n    this.doc = null;\n    this._length = 0;\n    /**\n     * Event handlers\n     * @type {EventHandler<EventType,Transaction>}\n     */\n    this._eH = createEventHandler();\n    /**\n     * Deep event handlers\n     * @type {EventHandler<Array<YEvent<any>>,Transaction>}\n     */\n    this._dEH = createEventHandler();\n    /**\n     * @type {null | Array<ArraySearchMarker>}\n     */\n    this._searchMarker = null;\n  }\n\n  /**\n   * @return {AbstractType<any>|null}\n   */\n  get parent () {\n    return this._item ? /** @type {AbstractType<any>} */ (this._item.parent) : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item|null} item\n   */\n  _integrate (y, item) {\n    this.doc = y;\n    this._item = item;\n  }\n\n  /**\n   * @return {AbstractType<EventType>}\n   */\n  _copy () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {AbstractType<EventType>}\n   */\n  clone () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} _encoder\n   */\n  _write (_encoder) { }\n\n  /**\n   * The first non-deleted item\n   */\n  get _first () {\n    let n = this._start;\n    while (n !== null && n.deleted) {\n      n = n.right;\n    }\n    return n\n  }\n\n  /**\n   * Creates YEvent and calls all type observers.\n   * Must be implemented by each type.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} _parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, _parentSubs) {\n    if (!transaction.local && this._searchMarker) {\n      this._searchMarker.length = 0;\n    }\n  }\n\n  /**\n   * Observe all events that are created on this type.\n   *\n   * @param {function(EventType, Transaction):void} f Observer function\n   */\n  observe (f) {\n    addEventHandlerListener(this._eH, f);\n  }\n\n  /**\n   * Observe all events that are created by this type and its children.\n   *\n   * @param {function(Array<YEvent<any>>,Transaction):void} f Observer function\n   */\n  observeDeep (f) {\n    addEventHandlerListener(this._dEH, f);\n  }\n\n  /**\n   * Unregister an observer function.\n   *\n   * @param {function(EventType,Transaction):void} f Observer function\n   */\n  unobserve (f) {\n    removeEventHandlerListener(this._eH, f);\n  }\n\n  /**\n   * Unregister an observer function.\n   *\n   * @param {function(Array<YEvent<any>>,Transaction):void} f Observer function\n   */\n  unobserveDeep (f) {\n    removeEventHandlerListener(this._dEH, f);\n  }\n\n  /**\n   * @abstract\n   * @return {any}\n   */\n  toJSON () {}\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} start\n * @param {number} end\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nconst typeListSlice = (type, start, end) => {\n  if (start < 0) {\n    start = type._length + start;\n  }\n  if (end < 0) {\n    end = type._length + end;\n  }\n  let len = end - start;\n  const cs = [];\n  let n = type._start;\n  while (n !== null && len > 0) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent();\n      if (c.length <= start) {\n        start -= c.length;\n      } else {\n        for (let i = start; i < c.length && len > 0; i++) {\n          cs.push(c[i]);\n          len--;\n        }\n        start = 0;\n      }\n    }\n    n = n.right;\n  }\n  return cs\n};\n\n/**\n * @param {AbstractType<any>} type\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nconst typeListToArray = type => {\n  const cs = [];\n  let n = type._start;\n  while (n !== null) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent();\n      for (let i = 0; i < c.length; i++) {\n        cs.push(c[i]);\n      }\n    }\n    n = n.right;\n  }\n  return cs\n};\n\n/**\n * @param {AbstractType<any>} type\n * @param {Snapshot} snapshot\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nconst typeListToArraySnapshot = (type, snapshot) => {\n  const cs = [];\n  let n = type._start;\n  while (n !== null) {\n    if (n.countable && isVisible(n, snapshot)) {\n      const c = n.content.getContent();\n      for (let i = 0; i < c.length; i++) {\n        cs.push(c[i]);\n      }\n    }\n    n = n.right;\n  }\n  return cs\n};\n\n/**\n * Executes a provided function on once on overy element of this YArray.\n *\n * @param {AbstractType<any>} type\n * @param {function(any,number,any):void} f A function to execute on every element of this YArray.\n *\n * @private\n * @function\n */\nconst typeListForEach = (type, f) => {\n  let index = 0;\n  let n = type._start;\n  while (n !== null) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent();\n      for (let i = 0; i < c.length; i++) {\n        f(c[i], index++, type);\n      }\n    }\n    n = n.right;\n  }\n};\n\n/**\n * @template C,R\n * @param {AbstractType<any>} type\n * @param {function(C,number,AbstractType<any>):R} f\n * @return {Array<R>}\n *\n * @private\n * @function\n */\nconst typeListMap = (type, f) => {\n  /**\n   * @type {Array<any>}\n   */\n  const result = [];\n  typeListForEach(type, (c, i) => {\n    result.push(f(c, i, type));\n  });\n  return result\n};\n\n/**\n * @param {AbstractType<any>} type\n * @return {IterableIterator<any>}\n *\n * @private\n * @function\n */\nconst typeListCreateIterator = type => {\n  let n = type._start;\n  /**\n   * @type {Array<any>|null}\n   */\n  let currentContent = null;\n  let currentContentIndex = 0;\n  return {\n    [Symbol.iterator] () {\n      return this\n    },\n    next: () => {\n      // find some content\n      if (currentContent === null) {\n        while (n !== null && n.deleted) {\n          n = n.right;\n        }\n        // check if we reached the end, no need to check currentContent, because it does not exist\n        if (n === null) {\n          return {\n            done: true,\n            value: undefined\n          }\n        }\n        // we found n, so we can set currentContent\n        currentContent = n.content.getContent();\n        currentContentIndex = 0;\n        n = n.right; // we used the content of n, now iterate to next\n      }\n      const value = currentContent[currentContentIndex++];\n      // check if we need to empty currentContent\n      if (currentContent.length <= currentContentIndex) {\n        currentContent = null;\n      }\n      return {\n        done: false,\n        value\n      }\n    }\n  }\n};\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} index\n * @return {any}\n *\n * @private\n * @function\n */\nconst typeListGet = (type, index) => {\n  const marker = findMarker(type, index);\n  let n = type._start;\n  if (marker !== null) {\n    n = marker.p;\n    index -= marker.index;\n  }\n  for (; n !== null; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index < n.length) {\n        return n.content.getContent()[index]\n      }\n      index -= n.length;\n    }\n  }\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {Item?} referenceItem\n * @param {Array<Object<string,any>|Array<any>|boolean|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nconst typeListInsertGenericsAfter = (transaction, parent, referenceItem, content) => {\n  let left = referenceItem;\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  const store = doc.store;\n  const right = referenceItem === null ? parent._start : referenceItem.right;\n  /**\n   * @type {Array<Object|Array<any>|number|null>}\n   */\n  let jsonContent = [];\n  const packJsonContent = () => {\n    if (jsonContent.length > 0) {\n      left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentAny(jsonContent));\n      left.integrate(transaction, 0);\n      jsonContent = [];\n    }\n  };\n  content.forEach(c => {\n    if (c === null) {\n      jsonContent.push(c);\n    } else {\n      switch (c.constructor) {\n        case Number:\n        case Object:\n        case Boolean:\n        case Array:\n        case String:\n          jsonContent.push(c);\n          break\n        default:\n          packJsonContent();\n          switch (c.constructor) {\n            case Uint8Array:\n            case ArrayBuffer:\n              left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentBinary(new Uint8Array(/** @type {Uint8Array} */ (c))));\n              left.integrate(transaction, 0);\n              break\n            case Doc:\n              left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentDoc(/** @type {Doc} */ (c)));\n              left.integrate(transaction, 0);\n              break\n            default:\n              if (c instanceof AbstractType) {\n                left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentType(c));\n                left.integrate(transaction, 0);\n              } else {\n                throw new Error('Unexpected content type in insert operation')\n              }\n          }\n      }\n    }\n  });\n  packJsonContent();\n};\n\nconst lengthExceeded = () => error.create('Length exceeded!');\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {Array<Object<string,any>|Array<any>|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nconst typeListInsertGenerics = (transaction, parent, index, content) => {\n  if (index > parent._length) {\n    throw lengthExceeded()\n  }\n  if (index === 0) {\n    if (parent._searchMarker) {\n      updateMarkerChanges(parent._searchMarker, index, content.length);\n    }\n    return typeListInsertGenericsAfter(transaction, parent, null, content)\n  }\n  const startIndex = index;\n  const marker = findMarker(parent, index);\n  let n = parent._start;\n  if (marker !== null) {\n    n = marker.p;\n    index -= marker.index;\n    // we need to iterate one to the left so that the algorithm works\n    if (index === 0) {\n      // @todo refactor this as it actually doesn't consider formats\n      n = n.prev; // important! get the left undeleted item so that we can actually decrease index\n      index += (n && n.countable && !n.deleted) ? n.length : 0;\n    }\n  }\n  for (; n !== null; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index <= n.length) {\n        if (index < n.length) {\n          // insert in-between\n          getItemCleanStart(transaction, createID(n.id.client, n.id.clock + index));\n        }\n        break\n      }\n      index -= n.length;\n    }\n  }\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, startIndex, content.length);\n  }\n  return typeListInsertGenericsAfter(transaction, parent, n, content)\n};\n\n/**\n * Pushing content is special as we generally want to push after the last item. So we don't have to update\n * the serach marker.\n *\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {Array<Object<string,any>|Array<any>|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nconst typeListPushGenerics = (transaction, parent, content) => {\n  // Use the marker with the highest index and iterate to the right.\n  const marker = (parent._searchMarker || []).reduce((maxMarker, currMarker) => currMarker.index > maxMarker.index ? currMarker : maxMarker, { index: 0, p: parent._start });\n  let n = marker.p;\n  if (n) {\n    while (n.right) {\n      n = n.right;\n    }\n  }\n  return typeListInsertGenericsAfter(transaction, parent, n, content)\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {number} length\n *\n * @private\n * @function\n */\nconst typeListDelete = (transaction, parent, index, length) => {\n  if (length === 0) { return }\n  const startIndex = index;\n  const startLength = length;\n  const marker = findMarker(parent, index);\n  let n = parent._start;\n  if (marker !== null) {\n    n = marker.p;\n    index -= marker.index;\n  }\n  // compute the first item to be deleted\n  for (; n !== null && index > 0; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index < n.length) {\n        getItemCleanStart(transaction, createID(n.id.client, n.id.clock + index));\n      }\n      index -= n.length;\n    }\n  }\n  // delete all items until done\n  while (length > 0 && n !== null) {\n    if (!n.deleted) {\n      if (length < n.length) {\n        getItemCleanStart(transaction, createID(n.id.client, n.id.clock + length));\n      }\n      n.delete(transaction);\n      length -= n.length;\n    }\n    n = n.right;\n  }\n  if (length > 0) {\n    throw lengthExceeded()\n  }\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, startIndex, -startLength + length /* in case we remove the above exception */);\n  }\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {string} key\n *\n * @private\n * @function\n */\nconst typeMapDelete = (transaction, parent, key) => {\n  const c = parent._map.get(key);\n  if (c !== undefined) {\n    c.delete(transaction);\n  }\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @param {Object|number|null|Array<any>|string|Uint8Array|AbstractType<any>} value\n *\n * @private\n * @function\n */\nconst typeMapSet = (transaction, parent, key, value) => {\n  const left = parent._map.get(key) || null;\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  let content;\n  if (value == null) {\n    content = new ContentAny([value]);\n  } else {\n    switch (value.constructor) {\n      case Number:\n      case Object:\n      case Boolean:\n      case Array:\n      case String:\n        content = new ContentAny([value]);\n        break\n      case Uint8Array:\n        content = new ContentBinary(/** @type {Uint8Array} */ (value));\n        break\n      case Doc:\n        content = new ContentDoc(/** @type {Doc} */ (value));\n        break\n      default:\n        if (value instanceof AbstractType) {\n          content = new ContentType(value);\n        } else {\n          throw new Error('Unexpected content type')\n        }\n    }\n  }\n  new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, null, null, parent, key, content).integrate(transaction, 0);\n};\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @return {Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\n *\n * @private\n * @function\n */\nconst typeMapGet = (parent, key) => {\n  const val = parent._map.get(key);\n  return val !== undefined && !val.deleted ? val.content.getContent()[val.length - 1] : undefined\n};\n\n/**\n * @param {AbstractType<any>} parent\n * @return {Object<string,Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined>}\n *\n * @private\n * @function\n */\nconst typeMapGetAll = (parent) => {\n  /**\n   * @type {Object<string,any>}\n   */\n  const res = {};\n  parent._map.forEach((value, key) => {\n    if (!value.deleted) {\n      res[key] = value.content.getContent()[value.length - 1];\n    }\n  });\n  return res\n};\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @return {boolean}\n *\n * @private\n * @function\n */\nconst typeMapHas = (parent, key) => {\n  const val = parent._map.get(key);\n  return val !== undefined && !val.deleted\n};\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @param {Snapshot} snapshot\n * @return {Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\n *\n * @private\n * @function\n */\nconst typeMapGetSnapshot = (parent, key, snapshot) => {\n  let v = parent._map.get(key) || null;\n  while (v !== null && (!snapshot.sv.has(v.id.client) || v.id.clock >= (snapshot.sv.get(v.id.client) || 0))) {\n    v = v.left;\n  }\n  return v !== null && isVisible(v, snapshot) ? v.content.getContent()[v.length - 1] : undefined\n};\n\n/**\n * @param {AbstractType<any>} parent\n * @param {Snapshot} snapshot\n * @return {Object<string,Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined>}\n *\n * @private\n * @function\n */\nconst typeMapGetAllSnapshot = (parent, snapshot) => {\n  /**\n   * @type {Object<string,any>}\n   */\n  const res = {};\n  parent._map.forEach((value, key) => {\n    /**\n     * @type {Item|null}\n     */\n    let v = value;\n    while (v !== null && (!snapshot.sv.has(v.id.client) || v.id.clock >= (snapshot.sv.get(v.id.client) || 0))) {\n      v = v.left;\n    }\n    if (v !== null && isVisible(v, snapshot)) {\n      res[key] = v.content.getContent()[v.length - 1];\n    }\n  });\n  return res\n};\n\n/**\n * @param {Map<string,Item>} map\n * @return {IterableIterator<Array<any>>}\n *\n * @private\n * @function\n */\nconst createMapIterator = map => iterator.iteratorFilter(map.entries(), /** @param {any} entry */ entry => !entry[1].deleted);\n\n/**\n * @module YArray\n */\n\n/**\n * Event that describes the changes on a YArray\n * @template T\n * @extends YEvent<YArray<T>>\n */\nclass YArrayEvent extends YEvent {\n  /**\n   * @param {YArray<T>} yarray The changed type\n   * @param {Transaction} transaction The transaction object\n   */\n  constructor (yarray, transaction) {\n    super(yarray, transaction);\n    this._transaction = transaction;\n  }\n}\n\n/**\n * A shared Array implementation.\n * @template T\n * @extends AbstractType<YArrayEvent<T>>\n * @implements {Iterable<T>}\n */\nclass YArray extends AbstractType {\n  constructor () {\n    super();\n    /**\n     * @type {Array<any>?}\n     * @private\n     */\n    this._prelimContent = [];\n    /**\n     * @type {Array<ArraySearchMarker>}\n     */\n    this._searchMarker = [];\n  }\n\n  /**\n   * Construct a new YArray containing the specified items.\n   * @template {Object<string,any>|Array<any>|number|null|string|Uint8Array} T\n   * @param {Array<T>} items\n   * @return {YArray<T>}\n   */\n  static from (items) {\n    /**\n     * @type {YArray<T>}\n     */\n    const a = new YArray();\n    a.push(items);\n    return a\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item);\n    this.insert(0, /** @type {Array<any>} */ (this._prelimContent));\n    this._prelimContent = null;\n  }\n\n  /**\n   * @return {YArray<T>}\n   */\n  _copy () {\n    return new YArray()\n  }\n\n  /**\n   * @return {YArray<T>}\n   */\n  clone () {\n    /**\n     * @type {YArray<T>}\n     */\n    const arr = new YArray();\n    arr.insert(0, this.toArray().map(el =>\n      el instanceof AbstractType ? /** @type {typeof el} */ (el.clone()) : el\n    ));\n    return arr\n  }\n\n  get length () {\n    return this._prelimContent === null ? this._length : this._prelimContent.length\n  }\n\n  /**\n   * Creates YArrayEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    super._callObserver(transaction, parentSubs);\n    callTypeObservers(this, transaction, new YArrayEvent(this, transaction));\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * Important: This function expects an array of content. Not just a content\n   * object. The reason for this \"weirdness\" is that inserting several elements\n   * is very efficient when it is done as a single operation.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  yarray.insert(0, ['a'])\n   *  // Insert numbers 1, 2 at position 1\n   *  yarray.insert(1, [1, 2])\n   *\n   * @param {number} index The index to insert content at.\n   * @param {Array<T>} content The array of content\n   */\n  insert (index, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListInsertGenerics(transaction, this, index, /** @type {any} */ (content));\n      });\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).splice(index, 0, ...content);\n    }\n  }\n\n  /**\n   * Appends content to this YArray.\n   *\n   * @param {Array<T>} content Array of content to append.\n   *\n   * @todo Use the following implementation in all types.\n   */\n  push (content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListPushGenerics(transaction, this, /** @type {any} */ (content));\n      });\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).push(...content);\n    }\n  }\n\n  /**\n   * Preppends content to this YArray.\n   *\n   * @param {Array<T>} content Array of content to preppend.\n   */\n  unshift (content) {\n    this.insert(0, content);\n  }\n\n  /**\n   * Deletes elements starting from an index.\n   *\n   * @param {number} index Index at which to start deleting elements\n   * @param {number} length The number of elements to remove. Defaults to 1.\n   */\n  delete (index, length = 1) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListDelete(transaction, this, index, length);\n      });\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).splice(index, length);\n    }\n  }\n\n  /**\n   * Returns the i-th element from a YArray.\n   *\n   * @param {number} index The index of the element to return from the YArray\n   * @return {T}\n   */\n  get (index) {\n    return typeListGet(this, index)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @return {Array<T>}\n   */\n  toArray () {\n    return typeListToArray(this)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @return {Array<T>}\n   */\n  slice (start = 0, end = this.length) {\n    return typeListSlice(this, start, end)\n  }\n\n  /**\n   * Transforms this Shared Type to a JSON object.\n   *\n   * @return {Array<any>}\n   */\n  toJSON () {\n    return this.map(c => c instanceof AbstractType ? c.toJSON() : c)\n  }\n\n  /**\n   * Returns an Array with the result of calling a provided function on every\n   * element of this YArray.\n   *\n   * @template M\n   * @param {function(T,number,YArray<T>):M} f Function that produces an element of the new Array\n   * @return {Array<M>} A new array with each element being the result of the\n   *                 callback function\n   */\n  map (f) {\n    return typeListMap(this, /** @type {any} */ (f))\n  }\n\n  /**\n   * Executes a provided function once on overy element of this YArray.\n   *\n   * @param {function(T,number,YArray<T>):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    typeListForEach(this, f);\n  }\n\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return typeListCreateIterator(this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YArrayRefID);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n *\n * @private\n * @function\n */\nconst readYArray = _decoder => new YArray();\n\n/**\n * @module YMap\n */\n\n/**\n * @template T\n * @extends YEvent<YMap<T>>\n * Event that describes the changes on a YMap.\n */\nclass YMapEvent extends YEvent {\n  /**\n   * @param {YMap<T>} ymap The YArray that changed.\n   * @param {Transaction} transaction\n   * @param {Set<any>} subs The keys that changed.\n   */\n  constructor (ymap, transaction, subs) {\n    super(ymap, transaction);\n    this.keysChanged = subs;\n  }\n}\n\n/**\n * @template MapType\n * A shared Map implementation.\n *\n * @extends AbstractType<YMapEvent<MapType>>\n * @implements {Iterable<[string, MapType]>}\n */\nclass YMap extends AbstractType {\n  /**\n   *\n   * @param {Iterable<readonly [string, any]>=} entries - an optional iterable to initialize the YMap\n   */\n  constructor (entries) {\n    super();\n    /**\n     * @type {Map<string,any>?}\n     * @private\n     */\n    this._prelimContent = null;\n\n    if (entries === undefined) {\n      this._prelimContent = new Map();\n    } else {\n      this._prelimContent = new Map(entries);\n    }\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    ;/** @type {Map<string, any>} */ (this._prelimContent).forEach((value, key) => {\n      this.set(key, value);\n    });\n    this._prelimContent = null;\n  }\n\n  /**\n   * @return {YMap<MapType>}\n   */\n  _copy () {\n    return new YMap()\n  }\n\n  /**\n   * @return {YMap<MapType>}\n   */\n  clone () {\n    /**\n     * @type {YMap<MapType>}\n     */\n    const map = new YMap();\n    this.forEach((value, key) => {\n      map.set(key, value instanceof AbstractType ? /** @type {typeof value} */ (value.clone()) : value);\n    });\n    return map\n  }\n\n  /**\n   * Creates YMapEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YMapEvent(this, transaction, parentSubs));\n  }\n\n  /**\n   * Transforms this Shared Type to a JSON object.\n   *\n   * @return {Object<string,any>}\n   */\n  toJSON () {\n    /**\n     * @type {Object<string,MapType>}\n     */\n    const map = {};\n    this._map.forEach((item, key) => {\n      if (!item.deleted) {\n        const v = item.content.getContent()[item.length - 1];\n        map[key] = v instanceof AbstractType ? v.toJSON() : v;\n      }\n    });\n    return map\n  }\n\n  /**\n   * Returns the size of the YMap (count of key/value pairs)\n   *\n   * @return {number}\n   */\n  get size () {\n    return [...createMapIterator(this._map)].length\n  }\n\n  /**\n   * Returns the keys for each element in the YMap Type.\n   *\n   * @return {IterableIterator<string>}\n   */\n  keys () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => v[0])\n  }\n\n  /**\n   * Returns the values for each element in the YMap Type.\n   *\n   * @return {IterableIterator<MapType>}\n   */\n  values () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => v[1].content.getContent()[v[1].length - 1])\n  }\n\n  /**\n   * Returns an Iterator of [key, value] pairs\n   *\n   * @return {IterableIterator<[string, MapType]>}\n   */\n  entries () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => /** @type {any} */ ([v[0], v[1].content.getContent()[v[1].length - 1]]))\n  }\n\n  /**\n   * Executes a provided function on once on every key-value pair.\n   *\n   * @param {function(MapType,string,YMap<MapType>):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    this._map.forEach((item, key) => {\n      if (!item.deleted) {\n        f(item.content.getContent()[item.length - 1], key, this);\n      }\n    });\n  }\n\n  /**\n   * Returns an Iterator of [key, value] pairs\n   *\n   * @return {IterableIterator<[string, MapType]>}\n   */\n  [Symbol.iterator] () {\n    return this.entries()\n  }\n\n  /**\n   * Remove a specified element from this YMap.\n   *\n   * @param {string} key The key of the element to remove.\n   */\n  delete (key) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, key);\n      });\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).delete(key);\n    }\n  }\n\n  /**\n   * Adds or updates an element with a specified key and value.\n   * @template {MapType} VAL\n   *\n   * @param {string} key The key of the element to add to this YMap\n   * @param {VAL} value The value of the element to add\n   * @return {VAL}\n   */\n  set (key, value) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, key, /** @type {any} */ (value));\n      });\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).set(key, value);\n    }\n    return value\n  }\n\n  /**\n   * Returns a specified element from this YMap.\n   *\n   * @param {string} key\n   * @return {MapType|undefined}\n   */\n  get (key) {\n    return /** @type {any} */ (typeMapGet(this, key))\n  }\n\n  /**\n   * Returns a boolean indicating whether the specified key exists or not.\n   *\n   * @param {string} key The key to test.\n   * @return {boolean}\n   */\n  has (key) {\n    return typeMapHas(this, key)\n  }\n\n  /**\n   * Removes all elements from this YMap.\n   */\n  clear () {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        this.forEach(function (_value, key, map) {\n          typeMapDelete(transaction, map, key);\n        });\n      });\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).clear();\n    }\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YMapRefID);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n *\n * @private\n * @function\n */\nconst readYMap = _decoder => new YMap();\n\n/**\n * @module YText\n */\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nconst equalAttrs = (a, b) => a === b || (typeof a === 'object' && typeof b === 'object' && a && b && object.equalFlat(a, b));\n\nclass ItemTextListPosition {\n  /**\n   * @param {Item|null} left\n   * @param {Item|null} right\n   * @param {number} index\n   * @param {Map<string,any>} currentAttributes\n   */\n  constructor (left, right, index, currentAttributes) {\n    this.left = left;\n    this.right = right;\n    this.index = index;\n    this.currentAttributes = currentAttributes;\n  }\n\n  /**\n   * Only call this if you know that this.right is defined\n   */\n  forward () {\n    if (this.right === null) {\n      error.unexpectedCase();\n    }\n    switch (this.right.content.constructor) {\n      case ContentFormat:\n        if (!this.right.deleted) {\n          updateCurrentAttributes(this.currentAttributes, /** @type {ContentFormat} */ (this.right.content));\n        }\n        break\n      default:\n        if (!this.right.deleted) {\n          this.index += this.right.length;\n        }\n        break\n    }\n    this.left = this.right;\n    this.right = this.right.right;\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {ItemTextListPosition} pos\n * @param {number} count steps to move forward\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst findNextPosition = (transaction, pos, count) => {\n  while (pos.right !== null && count > 0) {\n    switch (pos.right.content.constructor) {\n      case ContentFormat:\n        if (!pos.right.deleted) {\n          updateCurrentAttributes(pos.currentAttributes, /** @type {ContentFormat} */ (pos.right.content));\n        }\n        break\n      default:\n        if (!pos.right.deleted) {\n          if (count < pos.right.length) {\n            // split right\n            getItemCleanStart(transaction, createID(pos.right.id.client, pos.right.id.clock + count));\n          }\n          pos.index += pos.right.length;\n          count -= pos.right.length;\n        }\n        break\n    }\n    pos.left = pos.right;\n    pos.right = pos.right.right;\n    // pos.forward() - we don't forward because that would halve the performance because we already do the checks above\n  }\n  return pos\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {boolean} useSearchMarker\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst findPosition = (transaction, parent, index, useSearchMarker) => {\n  const currentAttributes = new Map();\n  const marker = useSearchMarker ? findMarker(parent, index) : null;\n  if (marker) {\n    const pos = new ItemTextListPosition(marker.p.left, marker.p, marker.index, currentAttributes);\n    return findNextPosition(transaction, pos, index - marker.index)\n  } else {\n    const pos = new ItemTextListPosition(null, parent._start, 0, currentAttributes);\n    return findNextPosition(transaction, pos, index)\n  }\n};\n\n/**\n * Negate applied formats\n *\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {Map<string,any>} negatedAttributes\n *\n * @private\n * @function\n */\nconst insertNegatedAttributes = (transaction, parent, currPos, negatedAttributes) => {\n  // check if we really need to remove attributes\n  while (\n    currPos.right !== null && (\n      currPos.right.deleted === true || (\n        currPos.right.content.constructor === ContentFormat &&\n        equalAttrs(negatedAttributes.get(/** @type {ContentFormat} */ (currPos.right.content).key), /** @type {ContentFormat} */ (currPos.right.content).value)\n      )\n    )\n  ) {\n    if (!currPos.right.deleted) {\n      negatedAttributes.delete(/** @type {ContentFormat} */ (currPos.right.content).key);\n    }\n    currPos.forward();\n  }\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  negatedAttributes.forEach((val, key) => {\n    const left = currPos.left;\n    const right = currPos.right;\n    const nextFormat = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentFormat(key, val));\n    nextFormat.integrate(transaction, 0);\n    currPos.right = nextFormat;\n    currPos.forward();\n  });\n};\n\n/**\n * @param {Map<string,any>} currentAttributes\n * @param {ContentFormat} format\n *\n * @private\n * @function\n */\nconst updateCurrentAttributes = (currentAttributes, format) => {\n  const { key, value } = format;\n  if (value === null) {\n    currentAttributes.delete(key);\n  } else {\n    currentAttributes.set(key, value);\n  }\n};\n\n/**\n * @param {ItemTextListPosition} currPos\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n */\nconst minimizeAttributeChanges = (currPos, attributes) => {\n  // go right while attributes[right.key] === right.value (or right is deleted)\n  while (true) {\n    if (currPos.right === null) {\n      break\n    } else if (currPos.right.deleted || (currPos.right.content.constructor === ContentFormat && equalAttrs(attributes[(/** @type {ContentFormat} */ (currPos.right.content)).key] || null, /** @type {ContentFormat} */ (currPos.right.content).value))) ; else {\n      break\n    }\n    currPos.forward();\n  }\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {Object<string,any>} attributes\n * @return {Map<string,any>}\n *\n * @private\n * @function\n **/\nconst insertAttributes = (transaction, parent, currPos, attributes) => {\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  const negatedAttributes = new Map();\n  // insert format-start items\n  for (const key in attributes) {\n    const val = attributes[key];\n    const currentVal = currPos.currentAttributes.get(key) || null;\n    if (!equalAttrs(currentVal, val)) {\n      // save negated attribute (set null if currentVal undefined)\n      negatedAttributes.set(key, currentVal);\n      const { left, right } = currPos;\n      currPos.right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentFormat(key, val));\n      currPos.right.integrate(transaction, 0);\n      currPos.forward();\n    }\n  }\n  return negatedAttributes\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {string|object|AbstractType<any>} text\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n **/\nconst insertText = (transaction, parent, currPos, text, attributes) => {\n  currPos.currentAttributes.forEach((_val, key) => {\n    if (attributes[key] === undefined) {\n      attributes[key] = null;\n    }\n  });\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  minimizeAttributeChanges(currPos, attributes);\n  const negatedAttributes = insertAttributes(transaction, parent, currPos, attributes);\n  // insert content\n  const content = text.constructor === String ? new ContentString(/** @type {string} */ (text)) : (text instanceof AbstractType ? new ContentType(text) : new ContentEmbed(text));\n  let { left, right, index } = currPos;\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, currPos.index, content.getLength());\n  }\n  right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, content);\n  right.integrate(transaction, 0);\n  currPos.right = right;\n  currPos.index = index;\n  currPos.forward();\n  insertNegatedAttributes(transaction, parent, currPos, negatedAttributes);\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {number} length\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n */\nconst formatText = (transaction, parent, currPos, length, attributes) => {\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  minimizeAttributeChanges(currPos, attributes);\n  const negatedAttributes = insertAttributes(transaction, parent, currPos, attributes);\n  // iterate until first non-format or null is found\n  // delete all formats with attributes[format.key] != null\n  // also check the attributes after the first non-format as we do not want to insert redundant negated attributes there\n  // eslint-disable-next-line no-labels\n  iterationLoop: while (\n    currPos.right !== null &&\n    (length > 0 ||\n      (\n        negatedAttributes.size > 0 &&\n        (currPos.right.deleted || currPos.right.content.constructor === ContentFormat)\n      )\n    )\n  ) {\n    if (!currPos.right.deleted) {\n      switch (currPos.right.content.constructor) {\n        case ContentFormat: {\n          const { key, value } = /** @type {ContentFormat} */ (currPos.right.content);\n          const attr = attributes[key];\n          if (attr !== undefined) {\n            if (equalAttrs(attr, value)) {\n              negatedAttributes.delete(key);\n            } else {\n              if (length === 0) {\n                // no need to further extend negatedAttributes\n                // eslint-disable-next-line no-labels\n                break iterationLoop\n              }\n              negatedAttributes.set(key, value);\n            }\n            currPos.right.delete(transaction);\n          } else {\n            currPos.currentAttributes.set(key, value);\n          }\n          break\n        }\n        default:\n          if (length < currPos.right.length) {\n            getItemCleanStart(transaction, createID(currPos.right.id.client, currPos.right.id.clock + length));\n          }\n          length -= currPos.right.length;\n          break\n      }\n    }\n    currPos.forward();\n  }\n  // Quill just assumes that the editor starts with a newline and that it always\n  // ends with a newline. We only insert that newline when a new newline is\n  // inserted - i.e when length is bigger than type.length\n  if (length > 0) {\n    let newlines = '';\n    for (; length > 0; length--) {\n      newlines += '\\n';\n    }\n    currPos.right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), currPos.left, currPos.left && currPos.left.lastId, currPos.right, currPos.right && currPos.right.id, parent, null, new ContentString(newlines));\n    currPos.right.integrate(transaction, 0);\n    currPos.forward();\n  }\n  insertNegatedAttributes(transaction, parent, currPos, negatedAttributes);\n};\n\n/**\n * Call this function after string content has been deleted in order to\n * clean up formatting Items.\n *\n * @param {Transaction} transaction\n * @param {Item} start\n * @param {Item|null} curr exclusive end, automatically iterates to the next Content Item\n * @param {Map<string,any>} startAttributes\n * @param {Map<string,any>} currAttributes\n * @return {number} The amount of formatting Items deleted.\n *\n * @function\n */\nconst cleanupFormattingGap = (transaction, start, curr, startAttributes, currAttributes) => {\n  /**\n   * @type {Item|null}\n   */\n  let end = start;\n  /**\n   * @type {Map<string,ContentFormat>}\n   */\n  const endFormats = map.create();\n  while (end && (!end.countable || end.deleted)) {\n    if (!end.deleted && end.content.constructor === ContentFormat) {\n      const cf = /** @type {ContentFormat} */ (end.content);\n      endFormats.set(cf.key, cf);\n    }\n    end = end.right;\n  }\n  let cleanups = 0;\n  let reachedCurr = false;\n  while (start !== end) {\n    if (curr === start) {\n      reachedCurr = true;\n    }\n    if (!start.deleted) {\n      const content = start.content;\n      switch (content.constructor) {\n        case ContentFormat: {\n          const { key, value } = /** @type {ContentFormat} */ (content);\n          const startAttrValue = startAttributes.get(key) || null;\n          if (endFormats.get(key) !== content || startAttrValue === value) {\n            // Either this format is overwritten or it is not necessary because the attribute already existed.\n            start.delete(transaction);\n            cleanups++;\n            if (!reachedCurr && (currAttributes.get(key) || null) === value && startAttrValue !== value) {\n              if (startAttrValue === null) {\n                currAttributes.delete(key);\n              } else {\n                currAttributes.set(key, startAttrValue);\n              }\n            }\n          }\n          if (!reachedCurr && !start.deleted) {\n            updateCurrentAttributes(currAttributes, /** @type {ContentFormat} */ (content));\n          }\n          break\n        }\n      }\n    }\n    start = /** @type {Item} */ (start.right);\n  }\n  return cleanups\n};\n\n/**\n * @param {Transaction} transaction\n * @param {Item | null} item\n */\nconst cleanupContextlessFormattingGap = (transaction, item) => {\n  // iterate until item.right is null or content\n  while (item && item.right && (item.right.deleted || !item.right.countable)) {\n    item = item.right;\n  }\n  const attrs = new Set();\n  // iterate back until a content item is found\n  while (item && (item.deleted || !item.countable)) {\n    if (!item.deleted && item.content.constructor === ContentFormat) {\n      const key = /** @type {ContentFormat} */ (item.content).key;\n      if (attrs.has(key)) {\n        item.delete(transaction);\n      } else {\n        attrs.add(key);\n      }\n    }\n    item = item.left;\n  }\n};\n\n/**\n * This function is experimental and subject to change / be removed.\n *\n * Ideally, we don't need this function at all. Formatting attributes should be cleaned up\n * automatically after each change. This function iterates twice over the complete YText type\n * and removes unnecessary formatting attributes. This is also helpful for testing.\n *\n * This function won't be exported anymore as soon as there is confidence that the YText type works as intended.\n *\n * @param {YText} type\n * @return {number} How many formatting attributes have been cleaned up.\n */\nconst cleanupYTextFormatting = type => {\n  let res = 0;\n  transact(/** @type {Doc} */ (type.doc), transaction => {\n    let start = /** @type {Item} */ (type._start);\n    let end = type._start;\n    let startAttributes = map.create();\n    const currentAttributes = map.copy(startAttributes);\n    while (end) {\n      if (end.deleted === false) {\n        switch (end.content.constructor) {\n          case ContentFormat:\n            updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (end.content));\n            break\n          default:\n            res += cleanupFormattingGap(transaction, start, end, startAttributes, currentAttributes);\n            startAttributes = map.copy(currentAttributes);\n            start = end;\n            break\n        }\n      }\n      end = end.right;\n    }\n  });\n  return res\n};\n\n/**\n * This will be called by the transction once the event handlers are called to potentially cleanup\n * formatting attributes.\n *\n * @param {Transaction} transaction\n */\nconst cleanupYTextAfterTransaction = transaction => {\n  /**\n   * @type {Set<YText>}\n   */\n  const needFullCleanup = new Set();\n  // check if another formatting item was inserted\n  const doc = transaction.doc;\n  for (const [client, afterClock] of transaction.afterState.entries()) {\n    const clock = transaction.beforeState.get(client) || 0;\n    if (afterClock === clock) {\n      continue\n    }\n    iterateStructs(transaction, /** @type {Array<Item|GC>} */ (doc.store.clients.get(client)), clock, afterClock, item => {\n      if (\n        !item.deleted && /** @type {Item} */ (item).content.constructor === ContentFormat && item.constructor !== GC\n      ) {\n        needFullCleanup.add(/** @type {any} */ (item).parent);\n      }\n    });\n  }\n  // cleanup in a new transaction\n  transact(doc, (t) => {\n    iterateDeletedStructs(transaction, transaction.deleteSet, item => {\n      if (item instanceof GC || !(/** @type {YText} */ (item.parent)._hasFormatting) || needFullCleanup.has(/** @type {YText} */ (item.parent))) {\n        return\n      }\n      const parent = /** @type {YText} */ (item.parent);\n      if (item.content.constructor === ContentFormat) {\n        needFullCleanup.add(parent);\n      } else {\n        // If no formatting attribute was inserted or deleted, we can make due with contextless\n        // formatting cleanups.\n        // Contextless: it is not necessary to compute currentAttributes for the affected position.\n        cleanupContextlessFormattingGap(t, item);\n      }\n    });\n    // If a formatting item was inserted, we simply clean the whole type.\n    // We need to compute currentAttributes for the current position anyway.\n    for (const yText of needFullCleanup) {\n      cleanupYTextFormatting(yText);\n    }\n  });\n};\n\n/**\n * @param {Transaction} transaction\n * @param {ItemTextListPosition} currPos\n * @param {number} length\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst deleteText = (transaction, currPos, length) => {\n  const startLength = length;\n  const startAttrs = map.copy(currPos.currentAttributes);\n  const start = currPos.right;\n  while (length > 0 && currPos.right !== null) {\n    if (currPos.right.deleted === false) {\n      switch (currPos.right.content.constructor) {\n        case ContentType:\n        case ContentEmbed:\n        case ContentString:\n          if (length < currPos.right.length) {\n            getItemCleanStart(transaction, createID(currPos.right.id.client, currPos.right.id.clock + length));\n          }\n          length -= currPos.right.length;\n          currPos.right.delete(transaction);\n          break\n      }\n    }\n    currPos.forward();\n  }\n  if (start) {\n    cleanupFormattingGap(transaction, start, currPos.right, startAttrs, currPos.currentAttributes);\n  }\n  const parent = /** @type {AbstractType<any>} */ (/** @type {Item} */ (currPos.left || currPos.right).parent);\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, currPos.index, -startLength + length);\n  }\n  return currPos\n};\n\n/**\n * The Quill Delta format represents changes on a text document with\n * formatting information. For mor information visit {@link https://quilljs.com/docs/delta/|Quill Delta}\n *\n * @example\n *   {\n *     ops: [\n *       { insert: 'Gandalf', attributes: { bold: true } },\n *       { insert: ' the ' },\n *       { insert: 'Grey', attributes: { color: '#cccccc' } }\n *     ]\n *   }\n *\n */\n\n/**\n  * Attributes that can be assigned to a selection of text.\n  *\n  * @example\n  *   {\n  *     bold: true,\n  *     font-size: '40px'\n  *   }\n  *\n  * @typedef {Object} TextAttributes\n  */\n\n/**\n * @extends YEvent<YText>\n * Event that describes the changes on a YText type.\n */\nclass YTextEvent extends YEvent {\n  /**\n   * @param {YText} ytext\n   * @param {Transaction} transaction\n   * @param {Set<any>} subs The keys that changed\n   */\n  constructor (ytext, transaction, subs) {\n    super(ytext, transaction);\n    /**\n     * Whether the children changed.\n     * @type {Boolean}\n     * @private\n     */\n    this.childListChanged = false;\n    /**\n     * Set of all changed attributes.\n     * @type {Set<string>}\n     */\n    this.keysChanged = new Set();\n    subs.forEach((sub) => {\n      if (sub === null) {\n        this.childListChanged = true;\n      } else {\n        this.keysChanged.add(sub);\n      }\n    });\n  }\n\n  /**\n   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\n   */\n  get changes () {\n    if (this._changes === null) {\n      /**\n       * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string|AbstractType<any>|object, delete?:number, retain?:number}>}}\n       */\n      const changes = {\n        keys: this.keys,\n        delta: this.delta,\n        added: new Set(),\n        deleted: new Set()\n      };\n      this._changes = changes;\n    }\n    return /** @type {any} */ (this._changes)\n  }\n\n  /**\n   * Compute the changes in the delta format.\n   * A {@link https://quilljs.com/docs/delta/|Quill Delta}) that represents the changes on the document.\n   *\n   * @type {Array<{insert?:string|object|AbstractType<any>, delete?:number, retain?:number, attributes?: Object<string,any>}>}\n   *\n   * @public\n   */\n  get delta () {\n    if (this._delta === null) {\n      const y = /** @type {Doc} */ (this.target.doc);\n      /**\n       * @type {Array<{insert?:string|object|AbstractType<any>, delete?:number, retain?:number, attributes?: Object<string,any>}>}\n       */\n      const delta = [];\n      transact(y, transaction => {\n        const currentAttributes = new Map(); // saves all current attributes for insert\n        const oldAttributes = new Map();\n        let item = this.target._start;\n        /**\n         * @type {string?}\n         */\n        let action = null;\n        /**\n         * @type {Object<string,any>}\n         */\n        const attributes = {}; // counts added or removed new attributes for retain\n        /**\n         * @type {string|object}\n         */\n        let insert = '';\n        let retain = 0;\n        let deleteLen = 0;\n        const addOp = () => {\n          if (action !== null) {\n            /**\n             * @type {any}\n             */\n            let op = null;\n            switch (action) {\n              case 'delete':\n                if (deleteLen > 0) {\n                  op = { delete: deleteLen };\n                }\n                deleteLen = 0;\n                break\n              case 'insert':\n                if (typeof insert === 'object' || insert.length > 0) {\n                  op = { insert };\n                  if (currentAttributes.size > 0) {\n                    op.attributes = {};\n                    currentAttributes.forEach((value, key) => {\n                      if (value !== null) {\n                        op.attributes[key] = value;\n                      }\n                    });\n                  }\n                }\n                insert = '';\n                break\n              case 'retain':\n                if (retain > 0) {\n                  op = { retain };\n                  if (!object.isEmpty(attributes)) {\n                    op.attributes = object.assign({}, attributes);\n                  }\n                }\n                retain = 0;\n                break\n            }\n            if (op) delta.push(op);\n            action = null;\n          }\n        };\n        while (item !== null) {\n          switch (item.content.constructor) {\n            case ContentType:\n            case ContentEmbed:\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  addOp();\n                  action = 'insert';\n                  insert = item.content.getContent()[0];\n                  addOp();\n                }\n              } else if (this.deletes(item)) {\n                if (action !== 'delete') {\n                  addOp();\n                  action = 'delete';\n                }\n                deleteLen += 1;\n              } else if (!item.deleted) {\n                if (action !== 'retain') {\n                  addOp();\n                  action = 'retain';\n                }\n                retain += 1;\n              }\n              break\n            case ContentString:\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  if (action !== 'insert') {\n                    addOp();\n                    action = 'insert';\n                  }\n                  insert += /** @type {ContentString} */ (item.content).str;\n                }\n              } else if (this.deletes(item)) {\n                if (action !== 'delete') {\n                  addOp();\n                  action = 'delete';\n                }\n                deleteLen += item.length;\n              } else if (!item.deleted) {\n                if (action !== 'retain') {\n                  addOp();\n                  action = 'retain';\n                }\n                retain += item.length;\n              }\n              break\n            case ContentFormat: {\n              const { key, value } = /** @type {ContentFormat} */ (item.content);\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  const curVal = currentAttributes.get(key) || null;\n                  if (!equalAttrs(curVal, value)) {\n                    if (action === 'retain') {\n                      addOp();\n                    }\n                    if (equalAttrs(value, (oldAttributes.get(key) || null))) {\n                      delete attributes[key];\n                    } else {\n                      attributes[key] = value;\n                    }\n                  } else if (value !== null) {\n                    item.delete(transaction);\n                  }\n                }\n              } else if (this.deletes(item)) {\n                oldAttributes.set(key, value);\n                const curVal = currentAttributes.get(key) || null;\n                if (!equalAttrs(curVal, value)) {\n                  if (action === 'retain') {\n                    addOp();\n                  }\n                  attributes[key] = curVal;\n                }\n              } else if (!item.deleted) {\n                oldAttributes.set(key, value);\n                const attr = attributes[key];\n                if (attr !== undefined) {\n                  if (!equalAttrs(attr, value)) {\n                    if (action === 'retain') {\n                      addOp();\n                    }\n                    if (value === null) {\n                      delete attributes[key];\n                    } else {\n                      attributes[key] = value;\n                    }\n                  } else if (attr !== null) { // this will be cleaned up automatically by the contextless cleanup function\n                    item.delete(transaction);\n                  }\n                }\n              }\n              if (!item.deleted) {\n                if (action === 'insert') {\n                  addOp();\n                }\n                updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (item.content));\n              }\n              break\n            }\n          }\n          item = item.right;\n        }\n        addOp();\n        while (delta.length > 0) {\n          const lastOp = delta[delta.length - 1];\n          if (lastOp.retain !== undefined && lastOp.attributes === undefined) {\n            // retain delta's if they don't assign attributes\n            delta.pop();\n          } else {\n            break\n          }\n        }\n      });\n      this._delta = delta;\n    }\n    return /** @type {any} */ (this._delta)\n  }\n}\n\n/**\n * Type that represents text with formatting information.\n *\n * This type replaces y-richtext as this implementation is able to handle\n * block formats (format information on a paragraph), embeds (complex elements\n * like pictures and videos), and text formats (**bold**, *italic*).\n *\n * @extends AbstractType<YTextEvent>\n */\nclass YText extends AbstractType {\n  /**\n   * @param {String} [string] The initial value of the YText.\n   */\n  constructor (string) {\n    super();\n    /**\n     * Array of pending operations on this type\n     * @type {Array<function():void>?}\n     */\n    this._pending = string !== undefined ? [() => this.insert(0, string)] : [];\n    /**\n     * @type {Array<ArraySearchMarker>|null}\n     */\n    this._searchMarker = [];\n    /**\n     * Whether this YText contains formatting attributes.\n     * This flag is updated when a formatting item is integrated (see ContentFormat.integrate)\n     */\n    this._hasFormatting = false;\n  }\n\n  /**\n   * Number of characters of this text type.\n   *\n   * @type {number}\n   */\n  get length () {\n    return this._length\n  }\n\n  /**\n   * @param {Doc} y\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item);\n    try {\n      /** @type {Array<function>} */ (this._pending).forEach(f => f());\n    } catch (e) {\n      console.error(e);\n    }\n    this._pending = null;\n  }\n\n  _copy () {\n    return new YText()\n  }\n\n  /**\n   * @return {YText}\n   */\n  clone () {\n    const text = new YText();\n    text.applyDelta(this.toDelta());\n    return text\n  }\n\n  /**\n   * Creates YTextEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    super._callObserver(transaction, parentSubs);\n    const event = new YTextEvent(this, transaction, parentSubs);\n    callTypeObservers(this, transaction, event);\n    // If a remote change happened, we try to cleanup potential formatting duplicates.\n    if (!transaction.local && this._hasFormatting) {\n      transaction._needFormattingCleanup = true;\n    }\n  }\n\n  /**\n   * Returns the unformatted string representation of this YText type.\n   *\n   * @public\n   */\n  toString () {\n    let str = '';\n    /**\n     * @type {Item|null}\n     */\n    let n = this._start;\n    while (n !== null) {\n      if (!n.deleted && n.countable && n.content.constructor === ContentString) {\n        str += /** @type {ContentString} */ (n.content).str;\n      }\n      n = n.right;\n    }\n    return str\n  }\n\n  /**\n   * Returns the unformatted string representation of this YText type.\n   *\n   * @return {string}\n   * @public\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Apply a {@link Delta} on this shared YText type.\n   *\n   * @param {any} delta The changes to apply on this element.\n   * @param {object}  opts\n   * @param {boolean} [opts.sanitize] Sanitize input delta. Removes ending newlines if set to true.\n   *\n   *\n   * @public\n   */\n  applyDelta (delta, { sanitize = true } = {}) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        const currPos = new ItemTextListPosition(null, this._start, 0, new Map());\n        for (let i = 0; i < delta.length; i++) {\n          const op = delta[i];\n          if (op.insert !== undefined) {\n            // Quill assumes that the content starts with an empty paragraph.\n            // Yjs/Y.Text assumes that it starts empty. We always hide that\n            // there is a newline at the end of the content.\n            // If we omit this step, clients will see a different number of\n            // paragraphs, but nothing bad will happen.\n            const ins = (!sanitize && typeof op.insert === 'string' && i === delta.length - 1 && currPos.right === null && op.insert.slice(-1) === '\\n') ? op.insert.slice(0, -1) : op.insert;\n            if (typeof ins !== 'string' || ins.length > 0) {\n              insertText(transaction, this, currPos, ins, op.attributes || {});\n            }\n          } else if (op.retain !== undefined) {\n            formatText(transaction, this, currPos, op.retain, op.attributes || {});\n          } else if (op.delete !== undefined) {\n            deleteText(transaction, currPos, op.delete);\n          }\n        }\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.applyDelta(delta));\n    }\n  }\n\n  /**\n   * Returns the Delta representation of this YText type.\n   *\n   * @param {Snapshot} [snapshot]\n   * @param {Snapshot} [prevSnapshot]\n   * @param {function('removed' | 'added', ID):any} [computeYChange]\n   * @return {any} The Delta representation of this type.\n   *\n   * @public\n   */\n  toDelta (snapshot, prevSnapshot, computeYChange) {\n    /**\n     * @type{Array<any>}\n     */\n    const ops = [];\n    const currentAttributes = new Map();\n    const doc = /** @type {Doc} */ (this.doc);\n    let str = '';\n    let n = this._start;\n    function packStr () {\n      if (str.length > 0) {\n        // pack str with attributes to ops\n        /**\n         * @type {Object<string,any>}\n         */\n        const attributes = {};\n        let addAttributes = false;\n        currentAttributes.forEach((value, key) => {\n          addAttributes = true;\n          attributes[key] = value;\n        });\n        /**\n         * @type {Object<string,any>}\n         */\n        const op = { insert: str };\n        if (addAttributes) {\n          op.attributes = attributes;\n        }\n        ops.push(op);\n        str = '';\n      }\n    }\n    const computeDelta = () => {\n      while (n !== null) {\n        if (isVisible(n, snapshot) || (prevSnapshot !== undefined && isVisible(n, prevSnapshot))) {\n          switch (n.content.constructor) {\n            case ContentString: {\n              const cur = currentAttributes.get('ychange');\n              if (snapshot !== undefined && !isVisible(n, snapshot)) {\n                if (cur === undefined || cur.user !== n.id.client || cur.type !== 'removed') {\n                  packStr();\n                  currentAttributes.set('ychange', computeYChange ? computeYChange('removed', n.id) : { type: 'removed' });\n                }\n              } else if (prevSnapshot !== undefined && !isVisible(n, prevSnapshot)) {\n                if (cur === undefined || cur.user !== n.id.client || cur.type !== 'added') {\n                  packStr();\n                  currentAttributes.set('ychange', computeYChange ? computeYChange('added', n.id) : { type: 'added' });\n                }\n              } else if (cur !== undefined) {\n                packStr();\n                currentAttributes.delete('ychange');\n              }\n              str += /** @type {ContentString} */ (n.content).str;\n              break\n            }\n            case ContentType:\n            case ContentEmbed: {\n              packStr();\n              /**\n               * @type {Object<string,any>}\n               */\n              const op = {\n                insert: n.content.getContent()[0]\n              };\n              if (currentAttributes.size > 0) {\n                const attrs = /** @type {Object<string,any>} */ ({});\n                op.attributes = attrs;\n                currentAttributes.forEach((value, key) => {\n                  attrs[key] = value;\n                });\n              }\n              ops.push(op);\n              break\n            }\n            case ContentFormat:\n              if (isVisible(n, snapshot)) {\n                packStr();\n                updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (n.content));\n              }\n              break\n          }\n        }\n        n = n.right;\n      }\n      packStr();\n    };\n    if (snapshot || prevSnapshot) {\n      // snapshots are merged again after the transaction, so we need to keep the\n      // transaction alive until we are done\n      transact(doc, transaction => {\n        if (snapshot) {\n          splitSnapshotAffectedStructs(transaction, snapshot);\n        }\n        if (prevSnapshot) {\n          splitSnapshotAffectedStructs(transaction, prevSnapshot);\n        }\n        computeDelta();\n      }, 'cleanup');\n    } else {\n      computeDelta();\n    }\n    return ops\n  }\n\n  /**\n   * Insert text at a given index.\n   *\n   * @param {number} index The index at which to start inserting.\n   * @param {String} text The text to insert at the specified position.\n   * @param {TextAttributes} [attributes] Optionally define some formatting\n   *                                    information to apply on the inserted\n   *                                    Text.\n   * @public\n   */\n  insert (index, text, attributes) {\n    if (text.length <= 0) {\n      return\n    }\n    const y = this.doc;\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index, !attributes);\n        if (!attributes) {\n          attributes = {};\n          // @ts-ignore\n          pos.currentAttributes.forEach((v, k) => { attributes[k] = v; });\n        }\n        insertText(transaction, this, pos, text, attributes);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.insert(index, text, attributes));\n    }\n  }\n\n  /**\n   * Inserts an embed at a index.\n   *\n   * @param {number} index The index to insert the embed at.\n   * @param {Object | AbstractType<any>} embed The Object that represents the embed.\n   * @param {TextAttributes} [attributes] Attribute information to apply on the\n   *                                    embed\n   *\n   * @public\n   */\n  insertEmbed (index, embed, attributes) {\n    const y = this.doc;\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index, !attributes);\n        insertText(transaction, this, pos, embed, attributes || {});\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.insertEmbed(index, embed, attributes || {}));\n    }\n  }\n\n  /**\n   * Deletes text starting from an index.\n   *\n   * @param {number} index Index at which to start deleting.\n   * @param {number} length The number of characters to remove. Defaults to 1.\n   *\n   * @public\n   */\n  delete (index, length) {\n    if (length === 0) {\n      return\n    }\n    const y = this.doc;\n    if (y !== null) {\n      transact(y, transaction => {\n        deleteText(transaction, findPosition(transaction, this, index, true), length);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.delete(index, length));\n    }\n  }\n\n  /**\n   * Assigns properties to a range of text.\n   *\n   * @param {number} index The position where to start formatting.\n   * @param {number} length The amount of characters to assign properties to.\n   * @param {TextAttributes} attributes Attribute information to apply on the\n   *                                    text.\n   *\n   * @public\n   */\n  format (index, length, attributes) {\n    if (length === 0) {\n      return\n    }\n    const y = this.doc;\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index, false);\n        if (pos.right === null) {\n          return\n        }\n        formatText(transaction, this, pos, length, attributes);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.format(index, length, attributes));\n    }\n  }\n\n  /**\n   * Removes an attribute.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that is to be removed.\n   *\n   * @public\n   */\n  removeAttribute (attributeName) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, attributeName);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.removeAttribute(attributeName));\n    }\n  }\n\n  /**\n   * Sets or updates an attribute.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that is to be set.\n   * @param {any} attributeValue The attribute value that is to be set.\n   *\n   * @public\n   */\n  setAttribute (attributeName, attributeValue) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, attributeName, attributeValue);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.setAttribute(attributeName, attributeValue));\n    }\n  }\n\n  /**\n   * Returns an attribute value that belongs to the attribute name.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that identifies the\n   *                               queried value.\n   * @return {any} The queried attribute value.\n   *\n   * @public\n   */\n  getAttribute (attributeName) {\n    return /** @type {any} */ (typeMapGet(this, attributeName))\n  }\n\n  /**\n   * Returns all attribute name/value pairs in a JSON Object.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @return {Object<string, any>} A JSON Object that describes the attributes.\n   *\n   * @public\n   */\n  getAttributes () {\n    return typeMapGetAll(this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YTextRefID);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n * @return {YText}\n *\n * @private\n * @function\n */\nconst readYText = _decoder => new YText();\n\n/**\n * @module YXml\n */\n\n/**\n * Define the elements to which a set of CSS queries apply.\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors|CSS_Selectors}\n *\n * @example\n *   query = '.classSelector'\n *   query = 'nodeSelector'\n *   query = '#idSelector'\n *\n * @typedef {string} CSS_Selector\n */\n\n/**\n * Dom filter function.\n *\n * @callback domFilter\n * @param {string} nodeName The nodeName of the element\n * @param {Map} attributes The map of attributes.\n * @return {boolean} Whether to include the Dom node in the YXmlElement.\n */\n\n/**\n * Represents a subset of the nodes of a YXmlElement / YXmlFragment and a\n * position within them.\n *\n * Can be created with {@link YXmlFragment#createTreeWalker}\n *\n * @public\n * @implements {Iterable<YXmlElement|YXmlText|YXmlElement|YXmlHook>}\n */\nclass YXmlTreeWalker {\n  /**\n   * @param {YXmlFragment | YXmlElement} root\n   * @param {function(AbstractType<any>):boolean} [f]\n   */\n  constructor (root, f = () => true) {\n    this._filter = f;\n    this._root = root;\n    /**\n     * @type {Item}\n     */\n    this._currentNode = /** @type {Item} */ (root._start);\n    this._firstCall = true;\n  }\n\n  [Symbol.iterator] () {\n    return this\n  }\n\n  /**\n   * Get the next node.\n   *\n   * @return {IteratorResult<YXmlElement|YXmlText|YXmlHook>} The next node.\n   *\n   * @public\n   */\n  next () {\n    /**\n     * @type {Item|null}\n     */\n    let n = this._currentNode;\n    let type = n && n.content && /** @type {any} */ (n.content).type;\n    if (n !== null && (!this._firstCall || n.deleted || !this._filter(type))) { // if first call, we check if we can use the first item\n      do {\n        type = /** @type {any} */ (n.content).type;\n        if (!n.deleted && (type.constructor === YXmlElement || type.constructor === YXmlFragment) && type._start !== null) {\n          // walk down in the tree\n          n = type._start;\n        } else {\n          // walk right or up in the tree\n          while (n !== null) {\n            if (n.right !== null) {\n              n = n.right;\n              break\n            } else if (n.parent === this._root) {\n              n = null;\n            } else {\n              n = /** @type {AbstractType<any>} */ (n.parent)._item;\n            }\n          }\n        }\n      } while (n !== null && (n.deleted || !this._filter(/** @type {ContentType} */ (n.content).type)))\n    }\n    this._firstCall = false;\n    if (n === null) {\n      // @ts-ignore\n      return { value: undefined, done: true }\n    }\n    this._currentNode = n;\n    return { value: /** @type {any} */ (n.content).type, done: false }\n  }\n}\n\n/**\n * Represents a list of {@link YXmlElement}.and {@link YXmlText} types.\n * A YxmlFragment is similar to a {@link YXmlElement}, but it does not have a\n * nodeName and it does not have attributes. Though it can be bound to a DOM\n * element - in this case the attributes and the nodeName are not shared.\n *\n * @public\n * @extends AbstractType<YXmlEvent>\n */\nclass YXmlFragment extends AbstractType {\n  constructor () {\n    super();\n    /**\n     * @type {Array<any>|null}\n     */\n    this._prelimContent = [];\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get firstChild () {\n    const first = this._first;\n    return first ? first.content.getContent()[0] : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item);\n    this.insert(0, /** @type {Array<any>} */ (this._prelimContent));\n    this._prelimContent = null;\n  }\n\n  _copy () {\n    return new YXmlFragment()\n  }\n\n  /**\n   * @return {YXmlFragment}\n   */\n  clone () {\n    const el = new YXmlFragment();\n    // @ts-ignore\n    el.insert(0, this.toArray().map(item => item instanceof AbstractType ? item.clone() : item));\n    return el\n  }\n\n  get length () {\n    return this._prelimContent === null ? this._length : this._prelimContent.length\n  }\n\n  /**\n   * Create a subtree of childNodes.\n   *\n   * @example\n   * const walker = elem.createTreeWalker(dom => dom.nodeName === 'div')\n   * for (let node in walker) {\n   *   // `node` is a div node\n   *   nop(node)\n   * }\n   *\n   * @param {function(AbstractType<any>):boolean} filter Function that is called on each child element and\n   *                          returns a Boolean indicating whether the child\n   *                          is to be included in the subtree.\n   * @return {YXmlTreeWalker} A subtree and a position within it.\n   *\n   * @public\n   */\n  createTreeWalker (filter) {\n    return new YXmlTreeWalker(this, filter)\n  }\n\n  /**\n   * Returns the first YXmlElement that matches the query.\n   * Similar to DOM's {@link querySelector}.\n   *\n   * Query support:\n   *   - tagname\n   * TODO:\n   *   - id\n   *   - attribute\n   *\n   * @param {CSS_Selector} query The query on the children.\n   * @return {YXmlElement|YXmlText|YXmlHook|null} The first element that matches the query or null.\n   *\n   * @public\n   */\n  querySelector (query) {\n    query = query.toUpperCase();\n    // @ts-ignore\n    const iterator = new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query);\n    const next = iterator.next();\n    if (next.done) {\n      return null\n    } else {\n      return next.value\n    }\n  }\n\n  /**\n   * Returns all YXmlElements that match the query.\n   * Similar to Dom's {@link querySelectorAll}.\n   *\n   * @todo Does not yet support all queries. Currently only query by tagName.\n   *\n   * @param {CSS_Selector} query The query on the children\n   * @return {Array<YXmlElement|YXmlText|YXmlHook|null>} The elements that match this query.\n   *\n   * @public\n   */\n  querySelectorAll (query) {\n    query = query.toUpperCase();\n    // @ts-ignore\n    return array.from(new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query))\n  }\n\n  /**\n   * Creates YXmlEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YXmlEvent(this, parentSubs, transaction));\n  }\n\n  /**\n   * Get the string representation of all the children of this YXmlFragment.\n   *\n   * @return {string} The string representation of all children.\n   */\n  toString () {\n    return typeListMap(this, xml => xml.toString()).join('')\n  }\n\n  /**\n   * @return {string}\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const fragment = _document.createDocumentFragment();\n    if (binding !== undefined) {\n      binding._createAssociation(fragment, this);\n    }\n    typeListForEach(this, xmlType => {\n      fragment.insertBefore(xmlType.toDOM(_document, hooks, binding), null);\n    });\n    return fragment\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  xml.insert(0, [new Y.XmlText('text')])\n   *\n   * @param {number} index The index to insert content at\n   * @param {Array<YXmlElement|YXmlText>} content The array of content\n   */\n  insert (index, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListInsertGenerics(transaction, this, index, content);\n      });\n    } else {\n      // @ts-ignore _prelimContent is defined because this is not yet integrated\n      this._prelimContent.splice(index, 0, ...content);\n    }\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  xml.insert(0, [new Y.XmlText('text')])\n   *\n   * @param {null|Item|YXmlElement|YXmlText} ref The index to insert content at\n   * @param {Array<YXmlElement|YXmlText>} content The array of content\n   */\n  insertAfter (ref, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        const refItem = (ref && ref instanceof AbstractType) ? ref._item : ref;\n        typeListInsertGenericsAfter(transaction, this, refItem, content);\n      });\n    } else {\n      const pc = /** @type {Array<any>} */ (this._prelimContent);\n      const index = ref === null ? 0 : pc.findIndex(el => el === ref) + 1;\n      if (index === 0 && ref !== null) {\n        throw error.create('Reference item not found')\n      }\n      pc.splice(index, 0, ...content);\n    }\n  }\n\n  /**\n   * Deletes elements starting from an index.\n   *\n   * @param {number} index Index at which to start deleting elements\n   * @param {number} [length=1] The number of elements to remove. Defaults to 1.\n   */\n  delete (index, length = 1) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListDelete(transaction, this, index, length);\n      });\n    } else {\n      // @ts-ignore _prelimContent is defined because this is not yet integrated\n      this._prelimContent.splice(index, length);\n    }\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @return {Array<YXmlElement|YXmlText|YXmlHook>}\n   */\n  toArray () {\n    return typeListToArray(this)\n  }\n\n  /**\n   * Appends content to this YArray.\n   *\n   * @param {Array<YXmlElement|YXmlText>} content Array of content to append.\n   */\n  push (content) {\n    this.insert(this.length, content);\n  }\n\n  /**\n   * Preppends content to this YArray.\n   *\n   * @param {Array<YXmlElement|YXmlText>} content Array of content to preppend.\n   */\n  unshift (content) {\n    this.insert(0, content);\n  }\n\n  /**\n   * Returns the i-th element from a YArray.\n   *\n   * @param {number} index The index of the element to return from the YArray\n   * @return {YXmlElement|YXmlText}\n   */\n  get (index) {\n    return typeListGet(this, index)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @return {Array<YXmlElement|YXmlText>}\n   */\n  slice (start = 0, end = this.length) {\n    return typeListSlice(this, start, end)\n  }\n\n  /**\n   * Executes a provided function on once on overy child element.\n   *\n   * @param {function(YXmlElement|YXmlText,number, typeof self):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    typeListForEach(this, f);\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlFragmentRefID);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n * @return {YXmlFragment}\n *\n * @private\n * @function\n */\nconst readYXmlFragment = _decoder => new YXmlFragment();\n\n/**\n * @typedef {Object|number|null|Array<any>|string|Uint8Array|AbstractType<any>} ValueTypes\n */\n\n/**\n * An YXmlElement imitates the behavior of a\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}.\n *\n * * An YXmlElement has attributes (key value pairs)\n * * An YXmlElement has childElements that must inherit from YXmlElement\n *\n * @template {{ [key: string]: ValueTypes }} [KV={ [key: string]: string }]\n */\nclass YXmlElement extends YXmlFragment {\n  constructor (nodeName = 'UNDEFINED') {\n    super();\n    this.nodeName = nodeName;\n    /**\n     * @type {Map<string, any>|null}\n     */\n    this._prelimAttrs = new Map();\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get nextSibling () {\n    const n = this._item ? this._item.next : null;\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get prevSibling () {\n    const n = this._item ? this._item.prev : null;\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    ;(/** @type {Map<string, any>} */ (this._prelimAttrs)).forEach((value, key) => {\n      this.setAttribute(key, value);\n    });\n    this._prelimAttrs = null;\n  }\n\n  /**\n   * Creates an Item with the same effect as this Item (without position effect)\n   *\n   * @return {YXmlElement}\n   */\n  _copy () {\n    return new YXmlElement(this.nodeName)\n  }\n\n  /**\n   * @return {YXmlElement<KV>}\n   */\n  clone () {\n    /**\n     * @type {YXmlElement<KV>}\n     */\n    const el = new YXmlElement(this.nodeName);\n    const attrs = this.getAttributes();\n    object.forEach(attrs, (value, key) => {\n      if (typeof value === 'string') {\n        el.setAttribute(key, value);\n      }\n    });\n    // @ts-ignore\n    el.insert(0, this.toArray().map(item => item instanceof AbstractType ? item.clone() : item));\n    return el\n  }\n\n  /**\n   * Returns the XML serialization of this YXmlElement.\n   * The attributes are ordered by attribute-name, so you can easily use this\n   * method to compare YXmlElements\n   *\n   * @return {string} The string representation of this type.\n   *\n   * @public\n   */\n  toString () {\n    const attrs = this.getAttributes();\n    const stringBuilder = [];\n    const keys = [];\n    for (const key in attrs) {\n      keys.push(key);\n    }\n    keys.sort();\n    const keysLen = keys.length;\n    for (let i = 0; i < keysLen; i++) {\n      const key = keys[i];\n      stringBuilder.push(key + '=\"' + attrs[key] + '\"');\n    }\n    const nodeName = this.nodeName.toLocaleLowerCase();\n    const attrsString = stringBuilder.length > 0 ? ' ' + stringBuilder.join(' ') : '';\n    return `<${nodeName}${attrsString}>${super.toString()}</${nodeName}>`\n  }\n\n  /**\n   * Removes an attribute from this YXmlElement.\n   *\n   * @param {string} attributeName The attribute name that is to be removed.\n   *\n   * @public\n   */\n  removeAttribute (attributeName) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, attributeName);\n      });\n    } else {\n      /** @type {Map<string,any>} */ (this._prelimAttrs).delete(attributeName);\n    }\n  }\n\n  /**\n   * Sets or updates an attribute.\n   *\n   * @template {keyof KV & string} KEY\n   *\n   * @param {KEY} attributeName The attribute name that is to be set.\n   * @param {KV[KEY]} attributeValue The attribute value that is to be set.\n   *\n   * @public\n   */\n  setAttribute (attributeName, attributeValue) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, attributeName, attributeValue);\n      });\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimAttrs).set(attributeName, attributeValue);\n    }\n  }\n\n  /**\n   * Returns an attribute value that belongs to the attribute name.\n   *\n   * @template {keyof KV & string} KEY\n   *\n   * @param {KEY} attributeName The attribute name that identifies the\n   *                               queried value.\n   * @return {KV[KEY]|undefined} The queried attribute value.\n   *\n   * @public\n   */\n  getAttribute (attributeName) {\n    return /** @type {any} */ (typeMapGet(this, attributeName))\n  }\n\n  /**\n   * Returns whether an attribute exists\n   *\n   * @param {string} attributeName The attribute name to check for existence.\n   * @return {boolean} whether the attribute exists.\n   *\n   * @public\n   */\n  hasAttribute (attributeName) {\n    return /** @type {any} */ (typeMapHas(this, attributeName))\n  }\n\n  /**\n   * Returns all attribute name/value pairs in a JSON Object.\n   *\n   * @param {Snapshot} [snapshot]\n   * @return {{ [Key in Extract<keyof KV,string>]?: KV[Key]}} A JSON Object that describes the attributes.\n   *\n   * @public\n   */\n  getAttributes (snapshot) {\n    return /** @type {any} */ (snapshot ? typeMapGetAllSnapshot(this, snapshot) : typeMapGetAll(this))\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const dom = _document.createElement(this.nodeName);\n    const attrs = this.getAttributes();\n    for (const key in attrs) {\n      const value = attrs[key];\n      if (typeof value === 'string') {\n        dom.setAttribute(key, value);\n      }\n    }\n    typeListForEach(this, yxml => {\n      dom.appendChild(yxml.toDOM(_document, hooks, binding));\n    });\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this);\n    }\n    return dom\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlElementRefID);\n    encoder.writeKey(this.nodeName);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlElement}\n *\n * @function\n */\nconst readYXmlElement = decoder => new YXmlElement(decoder.readKey());\n\n/**\n * @extends YEvent<YXmlElement|YXmlText|YXmlFragment>\n * An Event that describes changes on a YXml Element or Yxml Fragment\n */\nclass YXmlEvent extends YEvent {\n  /**\n   * @param {YXmlElement|YXmlText|YXmlFragment} target The target on which the event is created.\n   * @param {Set<string|null>} subs The set of changed attributes. `null` is included if the\n   *                   child list changed.\n   * @param {Transaction} transaction The transaction instance with wich the\n   *                                  change was created.\n   */\n  constructor (target, subs, transaction) {\n    super(target, transaction);\n    /**\n     * Whether the children changed.\n     * @type {Boolean}\n     * @private\n     */\n    this.childListChanged = false;\n    /**\n     * Set of all changed attributes.\n     * @type {Set<string>}\n     */\n    this.attributesChanged = new Set();\n    subs.forEach((sub) => {\n      if (sub === null) {\n        this.childListChanged = true;\n      } else {\n        this.attributesChanged.add(sub);\n      }\n    });\n  }\n}\n\n/**\n * You can manage binding to a custom type with YXmlHook.\n *\n * @extends {YMap<any>}\n */\nclass YXmlHook extends YMap {\n  /**\n   * @param {string} hookName nodeName of the Dom Node.\n   */\n  constructor (hookName) {\n    super();\n    /**\n     * @type {string}\n     */\n    this.hookName = hookName;\n  }\n\n  /**\n   * Creates an Item with the same effect as this Item (without position effect)\n   */\n  _copy () {\n    return new YXmlHook(this.hookName)\n  }\n\n  /**\n   * @return {YXmlHook}\n   */\n  clone () {\n    const el = new YXmlHook(this.hookName);\n    this.forEach((value, key) => {\n      el.set(key, value);\n    });\n    return el\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object.<string, any>} [hooks] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type\n   * @return {Element} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const hook = hooks[this.hookName];\n    let dom;\n    if (hook !== undefined) {\n      dom = hook.createDom(this);\n    } else {\n      dom = document.createElement(this.hookName);\n    }\n    dom.setAttribute('data-yjs-hook', this.hookName);\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this);\n    }\n    return dom\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlHookRefID);\n    encoder.writeKey(this.hookName);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlHook}\n *\n * @private\n * @function\n */\nconst readYXmlHook = decoder =>\n  new YXmlHook(decoder.readKey());\n\n/**\n * Represents text in a Dom Element. In the future this type will also handle\n * simple formatting information like bold and italic.\n */\nclass YXmlText extends YText {\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get nextSibling () {\n    const n = this._item ? this._item.next : null;\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get prevSibling () {\n    const n = this._item ? this._item.prev : null;\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  _copy () {\n    return new YXmlText()\n  }\n\n  /**\n   * @return {YXmlText}\n   */\n  clone () {\n    const text = new YXmlText();\n    text.applyDelta(this.toDelta());\n    return text\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlText.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Text} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks, binding) {\n    const dom = _document.createTextNode(this.toString());\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this);\n    }\n    return dom\n  }\n\n  toString () {\n    // @ts-ignore\n    return this.toDelta().map(delta => {\n      const nestedNodes = [];\n      for (const nodeName in delta.attributes) {\n        const attrs = [];\n        for (const key in delta.attributes[nodeName]) {\n          attrs.push({ key, value: delta.attributes[nodeName][key] });\n        }\n        // sort attributes to get a unique order\n        attrs.sort((a, b) => a.key < b.key ? -1 : 1);\n        nestedNodes.push({ nodeName, attrs });\n      }\n      // sort node order to get a unique order\n      nestedNodes.sort((a, b) => a.nodeName < b.nodeName ? -1 : 1);\n      // now convert to dom string\n      let str = '';\n      for (let i = 0; i < nestedNodes.length; i++) {\n        const node = nestedNodes[i];\n        str += `<${node.nodeName}`;\n        for (let j = 0; j < node.attrs.length; j++) {\n          const attr = node.attrs[j];\n          str += ` ${attr.key}=\"${attr.value}\"`;\n        }\n        str += '>';\n      }\n      str += delta.insert;\n      for (let i = nestedNodes.length - 1; i >= 0; i--) {\n        str += `</${nestedNodes[i].nodeName}>`;\n      }\n      return str\n    }).join('')\n  }\n\n  /**\n   * @return {string}\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlTextRefID);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlText}\n *\n * @private\n * @function\n */\nconst readYXmlText = decoder => new YXmlText();\n\nclass AbstractStruct {\n  /**\n   * @param {ID} id\n   * @param {number} length\n   */\n  constructor (id, length) {\n    this.id = id;\n    this.length = length;\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get deleted () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * Merge this struct with the item to the right.\n   * This method is already assuming that `this.id.clock + this.length === this.id.clock`.\n   * Also this method does *not* remove right from StructStore!\n   * @param {AbstractStruct} right\n   * @return {boolean} wether this merged with right\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   * @param {number} offset\n   * @param {number} encodingRef\n   */\n  write (encoder, offset, encodingRef) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    throw error.methodUnimplemented()\n  }\n}\n\nconst structGCRefNumber = 0;\n\n/**\n * @private\n */\nclass GC extends AbstractStruct {\n  get deleted () {\n    return true\n  }\n\n  delete () {}\n\n  /**\n   * @param {GC} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (this.constructor !== right.constructor) {\n      return false\n    }\n    this.length += right.length;\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    if (offset > 0) {\n      this.id.clock += offset;\n      this.length -= offset;\n    }\n    addStruct(transaction.doc.store, this);\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeInfo(structGCRefNumber);\n    encoder.writeLen(this.length - offset);\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    return null\n  }\n}\n\nclass ContentBinary {\n  /**\n   * @param {Uint8Array} content\n   */\n  constructor (content) {\n    this.content = content;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.content]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentBinary}\n   */\n  copy () {\n    return new ContentBinary(this.content)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentBinary}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentBinary} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeBuf(this.content);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 3\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2 } decoder\n * @return {ContentBinary}\n */\nconst readContentBinary = decoder => new ContentBinary(decoder.readBuf());\n\nclass ContentDeleted {\n  /**\n   * @param {number} len\n   */\n  constructor (len) {\n    this.len = len;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.len\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return []\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return false\n  }\n\n  /**\n   * @return {ContentDeleted}\n   */\n  copy () {\n    return new ContentDeleted(this.len)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentDeleted}\n   */\n  splice (offset) {\n    const right = new ContentDeleted(this.len - offset);\n    this.len = offset;\n    return right\n  }\n\n  /**\n   * @param {ContentDeleted} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.len += right.len;\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    addToDeleteSet(transaction.deleteSet, item.id.client, item.id.clock, this.len);\n    item.markDeleted();\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeLen(this.len - offset);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 1\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2 } decoder\n * @return {ContentDeleted}\n */\nconst readContentDeleted = decoder => new ContentDeleted(decoder.readLen());\n\n/**\n * @param {string} guid\n * @param {Object<string, any>} opts\n */\nconst createDocFromOpts = (guid, opts) => new Doc({ guid, ...opts, shouldLoad: opts.shouldLoad || opts.autoLoad || false });\n\n/**\n * @private\n */\nclass ContentDoc {\n  /**\n   * @param {Doc} doc\n   */\n  constructor (doc) {\n    if (doc._item) {\n      console.error('This document was already integrated as a sub-document. You should create a second instance instead with the same guid.');\n    }\n    /**\n     * @type {Doc}\n     */\n    this.doc = doc;\n    /**\n     * @type {any}\n     */\n    const opts = {};\n    this.opts = opts;\n    if (!doc.gc) {\n      opts.gc = false;\n    }\n    if (doc.autoLoad) {\n      opts.autoLoad = true;\n    }\n    if (doc.meta !== null) {\n      opts.meta = doc.meta;\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.doc]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentDoc}\n   */\n  copy () {\n    return new ContentDoc(createDocFromOpts(this.doc.guid, this.opts))\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentDoc}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentDoc} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    // this needs to be reflected in doc.destroy as well\n    this.doc._item = item;\n    transaction.subdocsAdded.add(this.doc);\n    if (this.doc.shouldLoad) {\n      transaction.subdocsLoaded.add(this.doc);\n    }\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    if (transaction.subdocsAdded.has(this.doc)) {\n      transaction.subdocsAdded.delete(this.doc);\n    } else {\n      transaction.subdocsRemoved.add(this.doc);\n    }\n  }\n\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) { }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeString(this.doc.guid);\n    encoder.writeAny(this.opts);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 9\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentDoc}\n */\nconst readContentDoc = decoder => new ContentDoc(createDocFromOpts(decoder.readString(), decoder.readAny()));\n\n/**\n * @private\n */\nclass ContentEmbed {\n  /**\n   * @param {Object} embed\n   */\n  constructor (embed) {\n    this.embed = embed;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.embed]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentEmbed}\n   */\n  copy () {\n    return new ContentEmbed(this.embed)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentEmbed}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentEmbed} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeJSON(this.embed);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 5\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentEmbed}\n */\nconst readContentEmbed = decoder => new ContentEmbed(decoder.readJSON());\n\n/**\n * @private\n */\nclass ContentFormat {\n  /**\n   * @param {string} key\n   * @param {Object} value\n   */\n  constructor (key, value) {\n    this.key = key;\n    this.value = value;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return []\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return false\n  }\n\n  /**\n   * @return {ContentFormat}\n   */\n  copy () {\n    return new ContentFormat(this.key, this.value)\n  }\n\n  /**\n   * @param {number} _offset\n   * @return {ContentFormat}\n   */\n  splice (_offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentFormat} _right\n   * @return {boolean}\n   */\n  mergeWith (_right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} _transaction\n   * @param {Item} item\n   */\n  integrate (_transaction, item) {\n    // @todo searchmarker are currently unsupported for rich text documents\n    const p = /** @type {YText} */ (item.parent);\n    p._searchMarker = null;\n    p._hasFormatting = true;\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeKey(this.key);\n    encoder.writeJSON(this.value);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 6\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentFormat}\n */\nconst readContentFormat = decoder => new ContentFormat(decoder.readKey(), decoder.readJSON());\n\n/**\n * @private\n */\nclass ContentJSON {\n  /**\n   * @param {Array<any>} arr\n   */\n  constructor (arr) {\n    /**\n     * @type {Array<any>}\n     */\n    this.arr = arr;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.arr.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.arr\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentJSON}\n   */\n  copy () {\n    return new ContentJSON(this.arr)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentJSON}\n   */\n  splice (offset) {\n    const right = new ContentJSON(this.arr.slice(offset));\n    this.arr = this.arr.slice(0, offset);\n    return right\n  }\n\n  /**\n   * @param {ContentJSON} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.arr = this.arr.concat(right.arr);\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const len = this.arr.length;\n    encoder.writeLen(len - offset);\n    for (let i = offset; i < len; i++) {\n      const c = this.arr[i];\n      encoder.writeString(c === undefined ? 'undefined' : JSON.stringify(c));\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 2\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentJSON}\n */\nconst readContentJSON = decoder => {\n  const len = decoder.readLen();\n  const cs = [];\n  for (let i = 0; i < len; i++) {\n    const c = decoder.readString();\n    if (c === 'undefined') {\n      cs.push(undefined);\n    } else {\n      cs.push(JSON.parse(c));\n    }\n  }\n  return new ContentJSON(cs)\n};\n\nclass ContentAny {\n  /**\n   * @param {Array<any>} arr\n   */\n  constructor (arr) {\n    /**\n     * @type {Array<any>}\n     */\n    this.arr = arr;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.arr.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.arr\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentAny}\n   */\n  copy () {\n    return new ContentAny(this.arr)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentAny}\n   */\n  splice (offset) {\n    const right = new ContentAny(this.arr.slice(offset));\n    this.arr = this.arr.slice(0, offset);\n    return right\n  }\n\n  /**\n   * @param {ContentAny} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.arr = this.arr.concat(right.arr);\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const len = this.arr.length;\n    encoder.writeLen(len - offset);\n    for (let i = offset; i < len; i++) {\n      const c = this.arr[i];\n      encoder.writeAny(c);\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 8\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentAny}\n */\nconst readContentAny = decoder => {\n  const len = decoder.readLen();\n  const cs = [];\n  for (let i = 0; i < len; i++) {\n    cs.push(decoder.readAny());\n  }\n  return new ContentAny(cs)\n};\n\n/**\n * @private\n */\nclass ContentString {\n  /**\n   * @param {string} str\n   */\n  constructor (str) {\n    /**\n     * @type {string}\n     */\n    this.str = str;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.str.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.str.split('')\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentString}\n   */\n  copy () {\n    return new ContentString(this.str)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentString}\n   */\n  splice (offset) {\n    const right = new ContentString(this.str.slice(offset));\n    this.str = this.str.slice(0, offset);\n\n    // Prevent encoding invalid documents because of splitting of surrogate pairs: https://github.com/yjs/yjs/issues/248\n    const firstCharCode = this.str.charCodeAt(offset - 1);\n    if (firstCharCode >= 0xD800 && firstCharCode <= 0xDBFF) {\n      // Last character of the left split is the start of a surrogate utf16/ucs2 pair.\n      // We don't support splitting of surrogate pairs because this may lead to invalid documents.\n      // Replace the invalid character with a unicode replacement character (� / U+FFFD)\n      this.str = this.str.slice(0, offset - 1) + '�';\n      // replace right as well\n      right.str = '�' + right.str.slice(1);\n    }\n    return right\n  }\n\n  /**\n   * @param {ContentString} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.str += right.str;\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeString(offset === 0 ? this.str : this.str.slice(offset));\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 4\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentString}\n */\nconst readContentString = decoder => new ContentString(decoder.readString());\n\n/**\n * @type {Array<function(UpdateDecoderV1 | UpdateDecoderV2):AbstractType<any>>}\n * @private\n */\nconst typeRefs = [\n  readYArray,\n  readYMap,\n  readYText,\n  readYXmlElement,\n  readYXmlFragment,\n  readYXmlHook,\n  readYXmlText\n];\n\nconst YArrayRefID = 0;\nconst YMapRefID = 1;\nconst YTextRefID = 2;\nconst YXmlElementRefID = 3;\nconst YXmlFragmentRefID = 4;\nconst YXmlHookRefID = 5;\nconst YXmlTextRefID = 6;\n\n/**\n * @private\n */\nclass ContentType {\n  /**\n   * @param {AbstractType<any>} type\n   */\n  constructor (type) {\n    /**\n     * @type {AbstractType<any>}\n     */\n    this.type = type;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.type]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentType}\n   */\n  copy () {\n    return new ContentType(this.type._copy())\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentType}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentType} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    this.type._integrate(transaction.doc, item);\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    let item = this.type._start;\n    while (item !== null) {\n      if (!item.deleted) {\n        item.delete(transaction);\n      } else if (item.id.clock < (transaction.beforeState.get(item.id.client) || 0)) {\n        // This will be gc'd later and we want to merge it if possible\n        // We try to merge all deleted items after each transaction,\n        // but we have no knowledge about that this needs to be merged\n        // since it is not in transaction.ds. Hence we add it to transaction._mergeStructs\n        transaction._mergeStructs.push(item);\n      }\n      item = item.right;\n    }\n    this.type._map.forEach(item => {\n      if (!item.deleted) {\n        item.delete(transaction);\n      } else if (item.id.clock < (transaction.beforeState.get(item.id.client) || 0)) {\n        // same as above\n        transaction._mergeStructs.push(item);\n      }\n    });\n    transaction.changed.delete(this.type);\n  }\n\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {\n    let item = this.type._start;\n    while (item !== null) {\n      item.gc(store, true);\n      item = item.right;\n    }\n    this.type._start = null;\n    this.type._map.forEach(/** @param {Item | null} item */ (item) => {\n      while (item !== null) {\n        item.gc(store, true);\n        item = item.left;\n      }\n    });\n    this.type._map = new Map();\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    this.type._write(encoder);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 7\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentType}\n */\nconst readContentType = decoder => new ContentType(typeRefs[decoder.readTypeRef()](decoder));\n\n/**\n * @todo This should return several items\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {{item:Item, diff:number}}\n */\nconst followRedone = (store, id) => {\n  /**\n   * @type {ID|null}\n   */\n  let nextID = id;\n  let diff = 0;\n  let item;\n  do {\n    if (diff > 0) {\n      nextID = createID(nextID.client, nextID.clock + diff);\n    }\n    item = getItem(store, nextID);\n    diff = nextID.clock - item.id.clock;\n    nextID = item.redone;\n  } while (nextID !== null && item instanceof Item)\n  return {\n    item, diff\n  }\n};\n\n/**\n * Make sure that neither item nor any of its parents is ever deleted.\n *\n * This property does not persist when storing it into a database or when\n * sending it to other peers\n *\n * @param {Item|null} item\n * @param {boolean} keep\n */\nconst keepItem = (item, keep) => {\n  while (item !== null && item.keep !== keep) {\n    item.keep = keep;\n    item = /** @type {AbstractType<any>} */ (item.parent)._item;\n  }\n};\n\n/**\n * Split leftItem into two items\n * @param {Transaction} transaction\n * @param {Item} leftItem\n * @param {number} diff\n * @return {Item}\n *\n * @function\n * @private\n */\nconst splitItem = (transaction, leftItem, diff) => {\n  // create rightItem\n  const { client, clock } = leftItem.id;\n  const rightItem = new Item(\n    createID(client, clock + diff),\n    leftItem,\n    createID(client, clock + diff - 1),\n    leftItem.right,\n    leftItem.rightOrigin,\n    leftItem.parent,\n    leftItem.parentSub,\n    leftItem.content.splice(diff)\n  );\n  if (leftItem.deleted) {\n    rightItem.markDeleted();\n  }\n  if (leftItem.keep) {\n    rightItem.keep = true;\n  }\n  if (leftItem.redone !== null) {\n    rightItem.redone = createID(leftItem.redone.client, leftItem.redone.clock + diff);\n  }\n  // update left (do not set leftItem.rightOrigin as it will lead to problems when syncing)\n  leftItem.right = rightItem;\n  // update right\n  if (rightItem.right !== null) {\n    rightItem.right.left = rightItem;\n  }\n  // right is more specific.\n  transaction._mergeStructs.push(rightItem);\n  // update parent._map\n  if (rightItem.parentSub !== null && rightItem.right === null) {\n    /** @type {AbstractType<any>} */ (rightItem.parent)._map.set(rightItem.parentSub, rightItem);\n  }\n  leftItem.length = diff;\n  return rightItem\n};\n\n/**\n * @param {Array<StackItem>} stack\n * @param {ID} id\n */\nconst isDeletedByUndoStack = (stack, id) => array.some(stack, /** @param {StackItem} s */ s => isDeleted(s.deletions, id));\n\n/**\n * Redoes the effect of this operation.\n *\n * @param {Transaction} transaction The Yjs instance.\n * @param {Item} item\n * @param {Set<Item>} redoitems\n * @param {DeleteSet} itemsToDelete\n * @param {boolean} ignoreRemoteMapChanges\n * @param {import('../utils/UndoManager.js').UndoManager} um\n *\n * @return {Item|null}\n *\n * @private\n */\nconst redoItem = (transaction, item, redoitems, itemsToDelete, ignoreRemoteMapChanges, um) => {\n  const doc = transaction.doc;\n  const store = doc.store;\n  const ownClientID = doc.clientID;\n  const redone = item.redone;\n  if (redone !== null) {\n    return getItemCleanStart(transaction, redone)\n  }\n  let parentItem = /** @type {AbstractType<any>} */ (item.parent)._item;\n  /**\n   * @type {Item|null}\n   */\n  let left = null;\n  /**\n   * @type {Item|null}\n   */\n  let right;\n  // make sure that parent is redone\n  if (parentItem !== null && parentItem.deleted === true) {\n    // try to undo parent if it will be undone anyway\n    if (parentItem.redone === null && (!redoitems.has(parentItem) || redoItem(transaction, parentItem, redoitems, itemsToDelete, ignoreRemoteMapChanges, um) === null)) {\n      return null\n    }\n    while (parentItem.redone !== null) {\n      parentItem = getItemCleanStart(transaction, parentItem.redone);\n    }\n  }\n  const parentType = parentItem === null ? /** @type {AbstractType<any>} */ (item.parent) : /** @type {ContentType} */ (parentItem.content).type;\n\n  if (item.parentSub === null) {\n    // Is an array item. Insert at the old position\n    left = item.left;\n    right = item;\n    // find next cloned_redo items\n    while (left !== null) {\n      /**\n       * @type {Item|null}\n       */\n      let leftTrace = left;\n      // trace redone until parent matches\n      while (leftTrace !== null && /** @type {AbstractType<any>} */ (leftTrace.parent)._item !== parentItem) {\n        leftTrace = leftTrace.redone === null ? null : getItemCleanStart(transaction, leftTrace.redone);\n      }\n      if (leftTrace !== null && /** @type {AbstractType<any>} */ (leftTrace.parent)._item === parentItem) {\n        left = leftTrace;\n        break\n      }\n      left = left.left;\n    }\n    while (right !== null) {\n      /**\n       * @type {Item|null}\n       */\n      let rightTrace = right;\n      // trace redone until parent matches\n      while (rightTrace !== null && /** @type {AbstractType<any>} */ (rightTrace.parent)._item !== parentItem) {\n        rightTrace = rightTrace.redone === null ? null : getItemCleanStart(transaction, rightTrace.redone);\n      }\n      if (rightTrace !== null && /** @type {AbstractType<any>} */ (rightTrace.parent)._item === parentItem) {\n        right = rightTrace;\n        break\n      }\n      right = right.right;\n    }\n  } else {\n    right = null;\n    if (item.right && !ignoreRemoteMapChanges) {\n      left = item;\n      // Iterate right while right is in itemsToDelete\n      // If it is intended to delete right while item is redone, we can expect that item should replace right.\n      while (left !== null && left.right !== null && (left.right.redone || isDeleted(itemsToDelete, left.right.id) || isDeletedByUndoStack(um.undoStack, left.right.id) || isDeletedByUndoStack(um.redoStack, left.right.id))) {\n        left = left.right;\n        // follow redone\n        while (left.redone) left = getItemCleanStart(transaction, left.redone);\n      }\n      if (left && left.right !== null) {\n        // It is not possible to redo this item because it conflicts with a\n        // change from another client\n        return null\n      }\n    } else {\n      left = parentType._map.get(item.parentSub) || null;\n    }\n  }\n  const nextClock = getState(store, ownClientID);\n  const nextId = createID(ownClientID, nextClock);\n  const redoneItem = new Item(\n    nextId,\n    left, left && left.lastId,\n    right, right && right.id,\n    parentType,\n    item.parentSub,\n    item.content.copy()\n  );\n  item.redone = nextId;\n  keepItem(redoneItem, true);\n  redoneItem.integrate(transaction, 0);\n  return redoneItem\n};\n\n/**\n * Abstract class that represents any content.\n */\nclass Item extends AbstractStruct {\n  /**\n   * @param {ID} id\n   * @param {Item | null} left\n   * @param {ID | null} origin\n   * @param {Item | null} right\n   * @param {ID | null} rightOrigin\n   * @param {AbstractType<any>|ID|null} parent Is a type if integrated, is null if it is possible to copy parent from left or right, is ID before integration to search for it.\n   * @param {string | null} parentSub\n   * @param {AbstractContent} content\n   */\n  constructor (id, left, origin, right, rightOrigin, parent, parentSub, content) {\n    super(id, content.getLength());\n    /**\n     * The item that was originally to the left of this item.\n     * @type {ID | null}\n     */\n    this.origin = origin;\n    /**\n     * The item that is currently to the left of this item.\n     * @type {Item | null}\n     */\n    this.left = left;\n    /**\n     * The item that is currently to the right of this item.\n     * @type {Item | null}\n     */\n    this.right = right;\n    /**\n     * The item that was originally to the right of this item.\n     * @type {ID | null}\n     */\n    this.rightOrigin = rightOrigin;\n    /**\n     * @type {AbstractType<any>|ID|null}\n     */\n    this.parent = parent;\n    /**\n     * If the parent refers to this item with some kind of key (e.g. YMap, the\n     * key is specified here. The key is then used to refer to the list in which\n     * to insert this item. If `parentSub = null` type._start is the list in\n     * which to insert to. Otherwise it is `parent._map`.\n     * @type {String | null}\n     */\n    this.parentSub = parentSub;\n    /**\n     * If this type's effect is redone this type refers to the type that undid\n     * this operation.\n     * @type {ID | null}\n     */\n    this.redone = null;\n    /**\n     * @type {AbstractContent}\n     */\n    this.content = content;\n    /**\n     * bit1: keep\n     * bit2: countable\n     * bit3: deleted\n     * bit4: mark - mark node as fast-search-marker\n     * @type {number} byte\n     */\n    this.info = this.content.isCountable() ? binary.BIT2 : 0;\n  }\n\n  /**\n   * This is used to mark the item as an indexed fast-search marker\n   *\n   * @type {boolean}\n   */\n  set marker (isMarked) {\n    if (((this.info & binary.BIT4) > 0) !== isMarked) {\n      this.info ^= binary.BIT4;\n    }\n  }\n\n  get marker () {\n    return (this.info & binary.BIT4) > 0\n  }\n\n  /**\n   * If true, do not garbage collect this Item.\n   */\n  get keep () {\n    return (this.info & binary.BIT1) > 0\n  }\n\n  set keep (doKeep) {\n    if (this.keep !== doKeep) {\n      this.info ^= binary.BIT1;\n    }\n  }\n\n  get countable () {\n    return (this.info & binary.BIT2) > 0\n  }\n\n  /**\n   * Whether this item was deleted or not.\n   * @type {Boolean}\n   */\n  get deleted () {\n    return (this.info & binary.BIT3) > 0\n  }\n\n  set deleted (doDelete) {\n    if (this.deleted !== doDelete) {\n      this.info ^= binary.BIT3;\n    }\n  }\n\n  markDeleted () {\n    this.info |= binary.BIT3;\n  }\n\n  /**\n   * Return the creator clientID of the missing op or define missing items and return null.\n   *\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    if (this.origin && this.origin.client !== this.id.client && this.origin.clock >= getState(store, this.origin.client)) {\n      return this.origin.client\n    }\n    if (this.rightOrigin && this.rightOrigin.client !== this.id.client && this.rightOrigin.clock >= getState(store, this.rightOrigin.client)) {\n      return this.rightOrigin.client\n    }\n    if (this.parent && this.parent.constructor === ID && this.id.client !== this.parent.client && this.parent.clock >= getState(store, this.parent.client)) {\n      return this.parent.client\n    }\n\n    // We have all missing ids, now find the items\n\n    if (this.origin) {\n      this.left = getItemCleanEnd(transaction, store, this.origin);\n      this.origin = this.left.lastId;\n    }\n    if (this.rightOrigin) {\n      this.right = getItemCleanStart(transaction, this.rightOrigin);\n      this.rightOrigin = this.right.id;\n    }\n    if ((this.left && this.left.constructor === GC) || (this.right && this.right.constructor === GC)) {\n      this.parent = null;\n    } else if (!this.parent) {\n      // only set parent if this shouldn't be garbage collected\n      if (this.left && this.left.constructor === Item) {\n        this.parent = this.left.parent;\n        this.parentSub = this.left.parentSub;\n      }\n      if (this.right && this.right.constructor === Item) {\n        this.parent = this.right.parent;\n        this.parentSub = this.right.parentSub;\n      }\n    } else if (this.parent.constructor === ID) {\n      const parentItem = getItem(store, this.parent);\n      if (parentItem.constructor === GC) {\n        this.parent = null;\n      } else {\n        this.parent = /** @type {ContentType} */ (parentItem.content).type;\n      }\n    }\n    return null\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    if (offset > 0) {\n      this.id.clock += offset;\n      this.left = getItemCleanEnd(transaction, transaction.doc.store, createID(this.id.client, this.id.clock - 1));\n      this.origin = this.left.lastId;\n      this.content = this.content.splice(offset);\n      this.length -= offset;\n    }\n\n    if (this.parent) {\n      if ((!this.left && (!this.right || this.right.left !== null)) || (this.left && this.left.right !== this.right)) {\n        /**\n         * @type {Item|null}\n         */\n        let left = this.left;\n\n        /**\n         * @type {Item|null}\n         */\n        let o;\n        // set o to the first conflicting item\n        if (left !== null) {\n          o = left.right;\n        } else if (this.parentSub !== null) {\n          o = /** @type {AbstractType<any>} */ (this.parent)._map.get(this.parentSub) || null;\n          while (o !== null && o.left !== null) {\n            o = o.left;\n          }\n        } else {\n          o = /** @type {AbstractType<any>} */ (this.parent)._start;\n        }\n        // TODO: use something like DeleteSet here (a tree implementation would be best)\n        // @todo use global set definitions\n        /**\n         * @type {Set<Item>}\n         */\n        const conflictingItems = new Set();\n        /**\n         * @type {Set<Item>}\n         */\n        const itemsBeforeOrigin = new Set();\n        // Let c in conflictingItems, b in itemsBeforeOrigin\n        // ***{origin}bbbb{this}{c,b}{c,b}{o}***\n        // Note that conflictingItems is a subset of itemsBeforeOrigin\n        while (o !== null && o !== this.right) {\n          itemsBeforeOrigin.add(o);\n          conflictingItems.add(o);\n          if (compareIDs(this.origin, o.origin)) {\n            // case 1\n            if (o.id.client < this.id.client) {\n              left = o;\n              conflictingItems.clear();\n            } else if (compareIDs(this.rightOrigin, o.rightOrigin)) {\n              // this and o are conflicting and point to the same integration points. The id decides which item comes first.\n              // Since this is to the left of o, we can break here\n              break\n            } // else, o might be integrated before an item that this conflicts with. If so, we will find it in the next iterations\n          } else if (o.origin !== null && itemsBeforeOrigin.has(getItem(transaction.doc.store, o.origin))) { // use getItem instead of getItemCleanEnd because we don't want / need to split items.\n            // case 2\n            if (!conflictingItems.has(getItem(transaction.doc.store, o.origin))) {\n              left = o;\n              conflictingItems.clear();\n            }\n          } else {\n            break\n          }\n          o = o.right;\n        }\n        this.left = left;\n      }\n      // reconnect left/right + update parent map/start if necessary\n      if (this.left !== null) {\n        const right = this.left.right;\n        this.right = right;\n        this.left.right = this;\n      } else {\n        let r;\n        if (this.parentSub !== null) {\n          r = /** @type {AbstractType<any>} */ (this.parent)._map.get(this.parentSub) || null;\n          while (r !== null && r.left !== null) {\n            r = r.left;\n          }\n        } else {\n          r = /** @type {AbstractType<any>} */ (this.parent)._start\n          ;/** @type {AbstractType<any>} */ (this.parent)._start = this;\n        }\n        this.right = r;\n      }\n      if (this.right !== null) {\n        this.right.left = this;\n      } else if (this.parentSub !== null) {\n        // set as current parent value if right === null and this is parentSub\n        /** @type {AbstractType<any>} */ (this.parent)._map.set(this.parentSub, this);\n        if (this.left !== null) {\n          // this is the current attribute value of parent. delete right\n          this.left.delete(transaction);\n        }\n      }\n      // adjust length of parent\n      if (this.parentSub === null && this.countable && !this.deleted) {\n        /** @type {AbstractType<any>} */ (this.parent)._length += this.length;\n      }\n      addStruct(transaction.doc.store, this);\n      this.content.integrate(transaction, this);\n      // add parent to transaction.changed\n      addChangedTypeToTransaction(transaction, /** @type {AbstractType<any>} */ (this.parent), this.parentSub);\n      if ((/** @type {AbstractType<any>} */ (this.parent)._item !== null && /** @type {AbstractType<any>} */ (this.parent)._item.deleted) || (this.parentSub !== null && this.right !== null)) {\n        // delete if parent is deleted or if this is not the current attribute value of parent\n        this.delete(transaction);\n      }\n    } else {\n      // parent is not defined. Integrate GC struct instead\n      new GC(this.id, this.length).integrate(transaction, 0);\n    }\n  }\n\n  /**\n   * Returns the next non-deleted item\n   */\n  get next () {\n    let n = this.right;\n    while (n !== null && n.deleted) {\n      n = n.right;\n    }\n    return n\n  }\n\n  /**\n   * Returns the previous non-deleted item\n   */\n  get prev () {\n    let n = this.left;\n    while (n !== null && n.deleted) {\n      n = n.left;\n    }\n    return n\n  }\n\n  /**\n   * Computes the last content address of this Item.\n   */\n  get lastId () {\n    // allocating ids is pretty costly because of the amount of ids created, so we try to reuse whenever possible\n    return this.length === 1 ? this.id : createID(this.id.client, this.id.clock + this.length - 1)\n  }\n\n  /**\n   * Try to merge two items\n   *\n   * @param {Item} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (\n      this.constructor === right.constructor &&\n      compareIDs(right.origin, this.lastId) &&\n      this.right === right &&\n      compareIDs(this.rightOrigin, right.rightOrigin) &&\n      this.id.client === right.id.client &&\n      this.id.clock + this.length === right.id.clock &&\n      this.deleted === right.deleted &&\n      this.redone === null &&\n      right.redone === null &&\n      this.content.constructor === right.content.constructor &&\n      this.content.mergeWith(right.content)\n    ) {\n      const searchMarker = /** @type {AbstractType<any>} */ (this.parent)._searchMarker;\n      if (searchMarker) {\n        searchMarker.forEach(marker => {\n          if (marker.p === right) {\n            // right is going to be \"forgotten\" so we need to update the marker\n            marker.p = this;\n            // adjust marker index\n            if (!this.deleted && this.countable) {\n              marker.index -= this.length;\n            }\n          }\n        });\n      }\n      if (right.keep) {\n        this.keep = true;\n      }\n      this.right = right.right;\n      if (this.right !== null) {\n        this.right.left = this;\n      }\n      this.length += right.length;\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Mark this Item as deleted.\n   *\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    if (!this.deleted) {\n      const parent = /** @type {AbstractType<any>} */ (this.parent);\n      // adjust the length of parent\n      if (this.countable && this.parentSub === null) {\n        parent._length -= this.length;\n      }\n      this.markDeleted();\n      addToDeleteSet(transaction.deleteSet, this.id.client, this.id.clock, this.length);\n      addChangedTypeToTransaction(transaction, parent, this.parentSub);\n      this.content.delete(transaction);\n    }\n  }\n\n  /**\n   * @param {StructStore} store\n   * @param {boolean} parentGCd\n   */\n  gc (store, parentGCd) {\n    if (!this.deleted) {\n      throw error.unexpectedCase()\n    }\n    this.content.gc(store);\n    if (parentGCd) {\n      replaceStruct(store, this, new GC(this.id, this.length));\n    } else {\n      this.content = new ContentDeleted(this.length);\n    }\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const origin = offset > 0 ? createID(this.id.client, this.id.clock + offset - 1) : this.origin;\n    const rightOrigin = this.rightOrigin;\n    const parentSub = this.parentSub;\n    const info = (this.content.getRef() & binary.BITS5) |\n      (origin === null ? 0 : binary.BIT8) | // origin is defined\n      (rightOrigin === null ? 0 : binary.BIT7) | // right origin is defined\n      (parentSub === null ? 0 : binary.BIT6); // parentSub is non-null\n    encoder.writeInfo(info);\n    if (origin !== null) {\n      encoder.writeLeftID(origin);\n    }\n    if (rightOrigin !== null) {\n      encoder.writeRightID(rightOrigin);\n    }\n    if (origin === null && rightOrigin === null) {\n      const parent = /** @type {AbstractType<any>} */ (this.parent);\n      if (parent._item !== undefined) {\n        const parentItem = parent._item;\n        if (parentItem === null) {\n          // parent type on y._map\n          // find the correct key\n          const ykey = findRootTypeKey(parent);\n          encoder.writeParentInfo(true); // write parentYKey\n          encoder.writeString(ykey);\n        } else {\n          encoder.writeParentInfo(false); // write parent id\n          encoder.writeLeftID(parentItem.id);\n        }\n      } else if (parent.constructor === String) { // this edge case was added by differential updates\n        encoder.writeParentInfo(true); // write parentYKey\n        encoder.writeString(parent);\n      } else if (parent.constructor === ID) {\n        encoder.writeParentInfo(false); // write parent id\n        encoder.writeLeftID(parent);\n      } else {\n        error.unexpectedCase();\n      }\n      if (parentSub !== null) {\n        encoder.writeString(parentSub);\n      }\n    }\n    this.content.write(encoder, offset);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @param {number} info\n */\nconst readItemContent = (decoder, info) => contentRefs[info & binary.BITS5](decoder);\n\n/**\n * A lookup map for reading Item content.\n *\n * @type {Array<function(UpdateDecoderV1 | UpdateDecoderV2):AbstractContent>}\n */\nconst contentRefs = [\n  () => { error.unexpectedCase(); }, // GC is not ItemContent\n  readContentDeleted, // 1\n  readContentJSON, // 2\n  readContentBinary, // 3\n  readContentString, // 4\n  readContentEmbed, // 5\n  readContentFormat, // 6\n  readContentType, // 7\n  readContentAny, // 8\n  readContentDoc, // 9\n  () => { error.unexpectedCase(); } // 10 - Skip is not ItemContent\n];\n\nconst structSkipRefNumber = 10;\n\n/**\n * @private\n */\nclass Skip extends AbstractStruct {\n  get deleted () {\n    return true\n  }\n\n  delete () {}\n\n  /**\n   * @param {Skip} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (this.constructor !== right.constructor) {\n      return false\n    }\n    this.length += right.length;\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    // skip structs cannot be integrated\n    error.unexpectedCase();\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeInfo(structSkipRefNumber);\n    // write as VarUint because Skips can't make use of predictable length-encoding\n    encoding.writeVarUint(encoder.restEncoder, this.length - offset);\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    return null\n  }\n}\n\n/** eslint-env browser */\n\nconst glo = /** @type {any} */ (typeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof window !== 'undefined'\n    ? window\n    // @ts-ignore\n    : typeof global !== 'undefined' ? global : {});\n\nconst importIdentifier = '__ $YJS$ __';\n\nif (glo[importIdentifier] === true) {\n  /**\n   * Dear reader of this message. Please take this seriously.\n   *\n   * If you see this message, make sure that you only import one version of Yjs. In many cases,\n   * your package manager installs two versions of Yjs that are used by different packages within your project.\n   * Another reason for this message is that some parts of your project use the commonjs version of Yjs\n   * and others use the EcmaScript version of Yjs.\n   *\n   * This often leads to issues that are hard to debug. We often need to perform constructor checks,\n   * e.g. `struct instanceof GC`. If you imported different versions of Yjs, it is impossible for us to\n   * do the constructor checks anymore - which might break the CRDT algorithm.\n   *\n   * https://github.com/yjs/yjs/issues/438\n   */\n  console.error('Yjs was already imported. This breaks constructor checks and will lead to issues! - https://github.com/yjs/yjs/issues/438');\n}\nglo[importIdentifier] = true;\n\nexport { AbsolutePosition, AbstractConnector, AbstractStruct, AbstractType, YArray as Array, ContentAny, ContentBinary, ContentDeleted, ContentDoc, ContentEmbed, ContentFormat, ContentJSON, ContentString, ContentType, Doc, GC, ID, Item, YMap as Map, PermanentUserData, RelativePosition, Skip, Snapshot, YText as Text, Transaction, UndoManager, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, YXmlElement as XmlElement, YXmlFragment as XmlFragment, YXmlHook as XmlHook, YXmlText as XmlText, YArrayEvent, YEvent, YMapEvent, YTextEvent, YXmlEvent, applyUpdate, applyUpdateV2, cleanupYTextFormatting, compareIDs, compareRelativePositions, convertUpdateFormatV1ToV2, convertUpdateFormatV2ToV1, createAbsolutePositionFromRelativePosition, createDeleteSet, createDeleteSetFromStructStore, createDocFromSnapshot, createID, createRelativePositionFromJSON, createRelativePositionFromTypeIndex, createSnapshot, decodeRelativePosition, decodeSnapshot, decodeSnapshotV2, decodeStateVector, decodeUpdate, decodeUpdateV2, diffUpdate, diffUpdateV2, emptySnapshot, encodeRelativePosition, encodeSnapshot, encodeSnapshotV2, encodeStateAsUpdate, encodeStateAsUpdateV2, encodeStateVector, encodeStateVectorFromUpdate, encodeStateVectorFromUpdateV2, equalDeleteSets, equalSnapshots, findIndexSS, findRootTypeKey, getItem, getState, getTypeChildren, isDeleted, isParentOf, iterateDeletedStructs, logType, logUpdate, logUpdateV2, mergeUpdates, mergeUpdatesV2, obfuscateUpdate, obfuscateUpdateV2, parseUpdateMeta, parseUpdateMetaV2, readUpdate, readUpdateV2, relativePositionToJSON, snapshot, snapshotContainsUpdate, transact, tryGc, typeListToArraySnapshot, typeMapGetAllSnapshot, typeMapGetSnapshot };\n//# sourceMappingURL=yjs.mjs.map\n","import { assertExists } from '@blocksuite/global/utils';\nimport * as Y from 'yjs';\n\ninterface IPageMigration {\n  desc: string;\n  condition: (oldPageVersion: number, pageDoc: Y.Doc) => boolean;\n  migrate: (oldPageVersion: number, pageDoc: Y.Doc) => void;\n}\n\nexport const pageMigrations: IPageMigration[] = [\n  {\n    desc: 'frame element --> frame block (page v1 --> v2)',\n    condition: oldPageVersion => {\n      return oldPageVersion < 2;\n    },\n    migrate: (_, pageDoc) => {\n      const blocks = pageDoc.getMap('blocks') as Y.Map<Y.Map<unknown>>;\n      let page!: Y.Map<unknown>, surface!: Y.Map<unknown>;\n      blocks.forEach(block => {\n        const flavour = block.get('sys:flavour');\n        if (flavour === 'affine:page') {\n          page = block;\n        }\n        if (flavour === 'affine:surface') {\n          surface = block;\n        }\n      });\n      assertExists(page);\n      assertExists(surface);\n      // @ts-ignore\n      const elements = surface.get('prop:elements').get('value') as Y.Map<\n        Y.Map<unknown>\n      >;\n      elements.forEach(element => {\n        if (element.get('type') === 'frame') {\n          const frameModel = new Y.Map();\n          const id = element.get('id') as string;\n          frameModel.set('sys:flavour', 'affine:frame');\n          frameModel.set('sys:id', id);\n          frameModel.set('sys:children', new Y.Array());\n          frameModel.set('prop:title', (<Y.Text>element.get('title')).clone());\n          frameModel.set('prop:xywh', element.get('xywh'));\n          frameModel.set('prop:index', element.get('index'));\n          blocks.set(id, frameModel);\n          (<Y.Array<string>>page.get('sys:children')).push([id]);\n          elements.delete(id);\n        }\n      });\n    },\n  },\n];\n","import type * as Y from 'yjs';\n\ninterface IWorkspaceMigration {\n  desc: string;\n  condition: (rootDoc: Y.Doc) => boolean;\n  migrate: (rootDoc: Y.Doc) => void;\n}\n\nexport const workspaceMigrations: IWorkspaceMigration[] = [\n  {\n    desc: 'add pageVersion in meta',\n    condition: (rootDoc: Y.Doc) => {\n      const meta = rootDoc.getMap('meta');\n      const workspaceVersion = meta.get('workspaceVersion') as number;\n      return workspaceVersion < 2;\n    },\n    migrate: (rootDoc: Y.Doc) => {\n      const meta = rootDoc.getMap('meta');\n      meta.set('pageVersion', 1);\n      meta.set('workspaceVersion', 2);\n    },\n  },\n];\n","import type { UseStore } from 'idb-keyval';\n\nimport type { BlobStorage } from './types.js';\n\nexport const createIndexeddbStorage = (database: string): BlobStorage => {\n  let db: UseStore;\n  let mimeTypeDb: UseStore;\n  // async import `idb-keyval` to avoid side effect\n  const idbPromise = import('idb-keyval').then(({ createStore, ...idb }) => {\n    // don't change the db name, it's for backward compatibility\n    db = createStore(`${database}_blob`, 'blob');\n    mimeTypeDb = createStore(`${database}_blob_mime`, 'blob_mime');\n    return idb;\n  });\n  return {\n    crud: {\n      get: async (key: string) => {\n        const get = (await idbPromise).get;\n        const res = await get<ArrayBuffer>(key, db);\n        if (res) {\n          return new Blob([res], { type: await get(key, mimeTypeDb) });\n        }\n        return null;\n      },\n      set: async (key: string, value: Blob) => {\n        const set = (await idbPromise).set;\n        await set(key, await value.arrayBuffer(), db);\n        await set(key, value.type, mimeTypeDb);\n        return key;\n      },\n      delete: async (key: string) => {\n        const del = (await idbPromise).del;\n        await del(key, db);\n        await del(key, mimeTypeDb);\n      },\n      list: async () => {\n        const keys = (await idbPromise).keys;\n        return keys<string>(db);\n      },\n    },\n  };\n};\n","import type { BlobStorage } from './types.js';\n\nexport const createMemoryStorage = (): BlobStorage => {\n  const memoryStorage = new Map<string, Blob>();\n  return {\n    crud: {\n      get: async (key: string) => {\n        return memoryStorage.get(key) ?? null;\n      },\n      set: async (key: string, value: Blob) => {\n        memoryStorage.set(key, value);\n        return key;\n      },\n      delete: async (key: string) => {\n        memoryStorage.delete(key);\n      },\n      list: async () => {\n        return Array.from(memoryStorage.keys());\n      },\n    },\n  };\n};\n","import type { BlobStorage } from './types.js';\n\n/**\n * API: /api/workspace/:id/blob/:key\n * GET: get blob\n * PUT: set blob\n * DELETE: delete blob\n */\nexport function createSimpleServerStorage(id: string): BlobStorage {\n  const localCache = new Map<string, Blob>();\n  return {\n    crud: {\n      get: async (key: string) => {\n        if (localCache.has(key)) {\n          return localCache.get(key) as Blob;\n        } else {\n          const blob = await fetch(`/api/workspace/${id}/blob/${key}`, {\n            method: 'GET',\n          }).then(response => {\n            if (!response.ok) {\n              throw new Error(`Failed to fetch blob ${key}`);\n            }\n            return response.blob();\n          });\n          localCache.set(key, blob);\n          return blob;\n        }\n      },\n      set: async (key: string, value: Blob) => {\n        localCache.set(key, value);\n        await fetch(`/api/workspace/${id}/blob/${key}`, {\n          method: 'PUT',\n          body: await value.arrayBuffer(),\n        });\n        return key;\n      },\n      delete: async (key: string) => {\n        localCache.delete(key);\n        await fetch(`/api/workspace/${id}/blob/${key}`, {\n          method: 'DELETE',\n        });\n      },\n      list: async () => {\n        return Array.from(localCache.keys());\n      },\n    },\n  };\n}\n","export const WORKSPACE_VERSION = 2;\n\nexport const PAGE_VERSION = 2;\n\nexport const SCHEMA_NOT_FOUND_MESSAGE =\n  'Schema not found. The block flavour may not be registered.';\n\nexport const TEXT_UNIQ_IDENTIFIER = '$blocksuite:internal:text$';\nexport const NATIVE_UNIQ_IDENTIFIER = '$blocksuite:internal:native$';\n\nexport const SYS_KEYS = new Set(['id', 'flavour', 'children']);\n","import * as Y from 'yjs';\n\nimport { NATIVE_UNIQ_IDENTIFIER } from '../consts.js';\n\nexport class Boxed<T = unknown> {\n  private readonly _map: Y.Map<T>;\n  static is = (value: unknown): value is Boxed => {\n    return (\n      value instanceof Y.Map && value.get('type') === NATIVE_UNIQ_IDENTIFIER\n    );\n  };\n\n  static from = <T>(map: Y.Map<T>): Boxed<T> => {\n    return new Boxed<T>(map.get('value') as T);\n  };\n\n  constructor(value: T) {\n    if (\n      value instanceof Y.Map &&\n      value.get('type') === NATIVE_UNIQ_IDENTIFIER\n    ) {\n      this._map = value;\n    } else {\n      this._map = new Y.Map();\n      this._map.set('type', NATIVE_UNIQ_IDENTIFIER as T);\n      this._map.set('value', value);\n    }\n  }\n\n  get yMap() {\n    return this._map;\n  }\n\n  setValue(value: T) {\n    return this._map.set('value', value);\n  }\n\n  getValue() {\n    return this._map.get('value');\n  }\n}\n","import type { BaseTextAttributes, DeltaInsert } from '@blocksuite/inline';\nimport * as Y from 'yjs';\n\nexport interface OptionalAttributes {\n  attributes?: {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [key: string]: any;\n  };\n}\nexport type DeltaOperation = {\n  insert?: string;\n  delete?: number;\n  retain?: number;\n} & OptionalAttributes;\n\nexport class Text {\n  private readonly _yText: Y.Text;\n\n  constructor(input?: Y.Text | string | DeltaInsert[]) {\n    if (typeof input === 'string') {\n      const text = input.replaceAll('\\r\\n', '\\n');\n      this._yText = new Y.Text(text);\n    } else if (input instanceof Y.Text) {\n      this._yText = input;\n    } else if (input instanceof Array) {\n      for (const delta of input) {\n        if (delta.insert) {\n          delta.insert = delta.insert.replaceAll('\\r\\n', '\\n');\n        }\n      }\n      const yText = new Y.Text();\n      yText.applyDelta(input);\n      this._yText = yText;\n    } else {\n      this._yText = new Y.Text();\n    }\n  }\n\n  static fromDelta(delta: DeltaOperation[]) {\n    const result = new Y.Text();\n    result.applyDelta(delta);\n    return new Text(result);\n  }\n\n  get length() {\n    return this._yText.length;\n  }\n\n  get yText() {\n    return this._yText;\n  }\n\n  private _transact(callback: () => void) {\n    const doc = this._yText.doc;\n    if (!doc) {\n      throw new Error(\n        'Failed to transact text! yText is not attached to a doc'\n      );\n    }\n    doc.transact(() => {\n      callback();\n    }, doc.clientID);\n  }\n\n  clone() {\n    return new Text(this._yText.clone());\n  }\n\n  /**\n   * NOTE: The string included in [index, index + length) will be deleted.\n   *\n   * Here are three cases for point position(index + length):\n   * [{insert: 'abc', ...}, {insert: 'def', ...}, {insert: 'ghi', ...}]\n   * 1. abc|de|fghi\n   *    left: [{insert: 'abc', ...}]\n   *    right: [{insert: 'f', ...}, {insert: 'ghi', ...}]\n   * 2. abc|def|ghi\n   *    left: [{insert: 'abc', ...}]\n   *    right: [{insert: 'ghi', ...}]\n   * 3. abc|defg|hi\n   *    left: [{insert: 'abc', ...}]\n   *    right: [{insert: 'hi', ...}]\n   */\n  split(index: number, length = 0): Text {\n    if (index < 0 || length < 0 || index + length > this._yText.length) {\n      throw new Error(\n        'Failed to split text! Index or length out of range, index: ' +\n          index +\n          ', length: ' +\n          length +\n          ', text length: ' +\n          this._yText.length\n      );\n    }\n    const deltas = this._yText.toDelta();\n    if (!(deltas instanceof Array)) {\n      throw new Error(\n        'This text cannot be split because we failed to get the deltas of it.'\n      );\n    }\n    let tmpIndex = 0;\n    const rightDeltas: DeltaInsert[] = [];\n    for (let i = 0; i < deltas.length; i++) {\n      const insert = deltas[i].insert;\n      if (typeof insert === 'string') {\n        if (tmpIndex + insert.length >= index + length) {\n          const insertRight = insert.slice(index + length - tmpIndex);\n          rightDeltas.push({\n            insert: insertRight,\n            attributes: deltas[i].attributes,\n          });\n          rightDeltas.push(...deltas.slice(i + 1));\n          break;\n        }\n        tmpIndex += insert.length;\n      } else {\n        throw new Error(\n          'This text cannot be split because it contains non-string insert.'\n        );\n      }\n    }\n\n    this.delete(index, this.length - index);\n    const rightYText = new Y.Text();\n    rightYText.applyDelta(rightDeltas);\n    const rightText = new Text(rightYText);\n\n    return rightText;\n  }\n\n  insert(content: string, index: number, attributes?: Record<string, unknown>) {\n    if (!content.length) {\n      return;\n    }\n    if (index < 0 || index > this._yText.length) {\n      throw new Error(\n        'Failed to insert text! Index or length out of range, index: ' +\n          index +\n          ', length: ' +\n          length +\n          ', text length: ' +\n          this._yText.length\n      );\n    }\n    this._transact(() => {\n      this._yText.insert(index, content, attributes);\n    });\n  }\n\n  join(other: Text) {\n    if (!other.toDelta().length) {\n      return;\n    }\n    this._transact(() => {\n      const yOther = other._yText;\n      const delta: DeltaOperation[] = yOther.toDelta();\n      delta.unshift({ retain: this._yText.length });\n      this._yText.applyDelta(delta);\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  format(index: number, length: number, format: any) {\n    if (length === 0) {\n      return;\n    }\n    if (index < 0 || length < 0 || index + length > this._yText.length) {\n      throw new Error(\n        'Failed to format text! Index or length out of range, index: ' +\n          index +\n          ', length: ' +\n          length +\n          ', text length: ' +\n          this._yText.length\n      );\n    }\n    this._transact(() => {\n      this._yText.format(index, length, format);\n    });\n  }\n\n  delete(index: number, length: number) {\n    if (length === 0) {\n      return;\n    }\n    if (index < 0 || length < 0 || index + length > this._yText.length) {\n      throw new Error(\n        'Failed to delete text! Index or length out of range, index: ' +\n          index +\n          ', length: ' +\n          length +\n          ', text length: ' +\n          this._yText.length\n      );\n    }\n    this._transact(() => {\n      this._yText.delete(index, length);\n    });\n  }\n\n  replace(\n    index: number,\n    length: number,\n    content: string,\n    attributes?: BaseTextAttributes\n  ) {\n    if (index < 0 || length < 0 || index + length > this._yText.length) {\n      throw new Error(\n        'Failed to replace text! The length of the text is' +\n          this._yText.length +\n          ', but you are trying to replace from' +\n          index +\n          'to' +\n          index +\n          length\n      );\n    }\n    this._transact(() => {\n      this._yText.delete(index, length);\n      this._yText.insert(index, content, attributes);\n    });\n  }\n\n  clear() {\n    if (!this._yText.length) {\n      return;\n    }\n    this._transact(() => {\n      this._yText.delete(0, this._yText.length);\n    });\n  }\n\n  applyDelta(delta: DeltaOperation[]) {\n    this._transact(() => {\n      this._yText?.applyDelta(delta);\n    });\n  }\n\n  toDelta(): DeltaOperation[] {\n    return this._yText?.toDelta() || [];\n  }\n\n  sliceToDelta(begin: number, end?: number): DeltaOperation[] {\n    const result: DeltaOperation[] = [];\n    if (end && begin >= end) {\n      return result;\n    }\n\n    if (begin === 0 && end === 0) {\n      return [];\n    }\n\n    const delta = this.toDelta();\n    if (begin < 1 && !end) {\n      return delta;\n    }\n\n    if (delta && delta instanceof Array) {\n      let charNum = 0;\n      for (let i = 0; i < delta.length; i++) {\n        const content = delta[i];\n        let contentText: string = content.insert || '';\n        const contentLen = contentText.length;\n\n        const isLastOp = end && charNum + contentLen > end;\n        const isFirstOp = charNum + contentLen > begin && result.length === 0;\n        if (isFirstOp && isLastOp) {\n          contentText = contentText.slice(begin - charNum, end - charNum);\n          result.push({\n            ...content,\n            insert: contentText,\n          });\n          break;\n        } else if (isFirstOp || isLastOp) {\n          contentText = isLastOp\n            ? contentText.slice(0, end - charNum)\n            : contentText.slice(begin - charNum);\n\n          result.push({\n            ...content,\n            insert: contentText,\n          });\n        } else {\n          result.length > 0 && result.push(content);\n        }\n\n        if (end && charNum + contentLen > end) {\n          break;\n        }\n\n        charNum = charNum + contentLen;\n      }\n    }\n    return result;\n  }\n\n  toString() {\n    return this._yText?.toString() || '';\n  }\n}\n","import type { Doc as YDoc, YEvent } from 'yjs';\nimport { Array as YArray, Map as YMap, Text as YText, UndoManager } from 'yjs';\n\nimport { Boxed } from './boxed.js';\nimport type { ProxyOptions } from './proxy.js';\nimport { Text } from './text.js';\n\nexport type Native2Y<T> =\n  T extends Record<string, infer U>\n    ? YMap<U>\n    : T extends Array<infer U>\n      ? YArray<U>\n      : T;\n\nexport function isPureObject(value: unknown): value is object {\n  return (\n    value !== null &&\n    typeof value === 'object' &&\n    Object.prototype.toString.call(value) === '[object Object]' &&\n    [Object, undefined, null].some(x => x === value.constructor)\n  );\n}\n\ntype TransformOptions = {\n  deep?: boolean;\n  transform?: (value: unknown, origin: unknown) => unknown;\n};\n\nexport function native2Y<T>(\n  value: T,\n  { deep = true, transform = x => x }: TransformOptions = {}\n): Native2Y<T> {\n  if (value instanceof Boxed) {\n    return value.yMap as Native2Y<T>;\n  }\n  if (value instanceof Text) {\n    if (value.yText.doc) {\n      return value.yText.clone() as Native2Y<T>;\n    }\n    return value.yText as Native2Y<T>;\n  }\n  if (Array.isArray(value)) {\n    const yArray: YArray<unknown> = new YArray<unknown>();\n    const result = value.map(item => {\n      return deep ? native2Y(item, { deep, transform }) : item;\n    });\n    yArray.insert(0, result);\n\n    return yArray as Native2Y<T>;\n  }\n  if (isPureObject(value)) {\n    const yMap = new YMap<unknown>();\n    Object.entries(value).forEach(([key, value]) => {\n      yMap.set(key, deep ? native2Y(value, { deep, transform }) : value);\n    });\n\n    return yMap as Native2Y<T>;\n  }\n\n  return value as Native2Y<T>;\n}\n\nexport function y2Native(\n  yAbstract: unknown,\n  { deep = true, transform = x => x }: TransformOptions = {}\n) {\n  if (Boxed.is(yAbstract)) {\n    const data = new Boxed(yAbstract);\n    return transform(data, yAbstract);\n  }\n  if (yAbstract instanceof YText) {\n    const data = new Text(yAbstract);\n    return transform(data, yAbstract);\n  }\n  if (yAbstract instanceof YArray) {\n    const data: unknown[] = yAbstract\n      .toArray()\n      .map(item => (deep ? y2Native(item, { deep, transform }) : item));\n\n    return transform(data, yAbstract);\n  }\n  if (yAbstract instanceof YMap) {\n    const data: Record<string, unknown> = Object.fromEntries(\n      Array.from(yAbstract.entries()).map(([key, value]) => {\n        return [key, deep ? y2Native(value, { deep, transform }) : value] as [\n          string,\n          unknown,\n        ];\n      })\n    );\n    return transform(data, yAbstract);\n  }\n\n  return transform(yAbstract, yAbstract);\n}\n\nexport type UnRecord = Record<string, unknown>;\n\nexport abstract class BaseReactiveYData<T, Y> {\n  protected abstract readonly _proxy: T;\n  protected abstract readonly _source: T;\n  protected abstract readonly _ySource: Y;\n  protected abstract readonly _options: ProxyOptions<T>;\n  protected _skipNext = false;\n  protected abstract _getProxy(): T;\n  protected readonly _stashed: Set<string | number> = new Set();\n\n  abstract stash(prop: string | number): void;\n  abstract pop(prop: string | number): void;\n\n  get proxy() {\n    return this._proxy;\n  }\n\n  protected _getOrigin = (\n    doc: YDoc\n  ): {\n    doc: YDoc;\n    proxy: true;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    target: BaseReactiveYData<any, any>;\n  } => {\n    return {\n      doc,\n      proxy: true,\n      target: this,\n    };\n  };\n\n  protected _updateWithSkip = (fn: () => void) => {\n    this._skipNext = true;\n    fn();\n    this._skipNext = false;\n  };\n\n  protected _transact = (doc: YDoc, fn: () => void) => {\n    doc.transact(fn, this._getOrigin(doc));\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  protected _onObserve = (event: YEvent<any>, handler: () => void) => {\n    if (\n      event.transaction.origin?.proxy !== true &&\n      (!event.transaction.local ||\n        event.transaction.origin instanceof UndoManager)\n    ) {\n      handler();\n    }\n\n    this._options.onChange?.(this._proxy);\n  };\n}\n","import { assertExists } from '@blocksuite/global/utils';\nimport type { YArrayEvent, YMapEvent } from 'yjs';\nimport { Array as YArray, Map as YMap } from 'yjs';\n\nimport { Boxed } from './boxed.js';\nimport type { UnRecord } from './utils.js';\nimport { BaseReactiveYData, native2Y, y2Native } from './utils.js';\n\nexport type ProxyOptions<T> = {\n  onChange?: (data: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst proxies = new WeakMap<any, BaseReactiveYData<any, any>>();\n\nexport class ReactiveYArray extends BaseReactiveYData<\n  unknown[],\n  YArray<unknown>\n> {\n  protected readonly _proxy: unknown[];\n  constructor(\n    protected readonly _source: unknown[],\n    protected readonly _ySource: YArray<unknown>,\n    protected readonly _options: ProxyOptions<unknown[]>\n  ) {\n    super();\n    this._proxy = this._getProxy();\n    proxies.set(_ySource, this);\n    _ySource.observe(this._observer);\n  }\n\n  stash(prop: number) {\n    this._stashed.add(prop);\n  }\n\n  pop(prop: number) {\n    const value = this._source[prop];\n    this._stashed.delete(prop);\n    this._proxy[prop] = value;\n  }\n\n  protected _getProxy = () => {\n    return new Proxy(this._source, {\n      has: (target, p) => {\n        return Reflect.has(target, p);\n      },\n      set: (target, p, value, receiver) => {\n        if (typeof p !== 'string') {\n          throw new Error('key cannot be a symbol');\n        }\n\n        const index = Number(p);\n        if (this._skipNext || Number.isNaN(index)) {\n          return Reflect.set(target, p, value, receiver);\n        }\n\n        if (this._stashed.has(index)) {\n          const result = Reflect.set(target, p, value, receiver);\n          this._options.onChange?.(this._proxy);\n          return result;\n        }\n\n        const reactive = proxies.get(this._ySource);\n        assertExists(reactive, 'YData is not subscribed before changes');\n        const doc = this._ySource.doc;\n        assertExists(doc, 'YData is not bound to a Y.Doc');\n\n        const yData = native2Y(value);\n        this._transact(doc, () => {\n          if (index < this._ySource.length) {\n            this._ySource.delete(index, 1);\n          }\n          this._ySource.insert(index, [yData]);\n        });\n        const data = createYProxy(yData, this._options);\n        return Reflect.set(target, p, data, receiver);\n      },\n      get: (target, p, receiver) => {\n        return Reflect.get(target, p, receiver);\n      },\n      deleteProperty: (target, p): boolean => {\n        if (typeof p !== 'string') {\n          throw new Error('key cannot be a symbol');\n        }\n\n        const proxied = proxies.get(this._ySource);\n        assertExists(proxied, 'YData is not subscribed before changes');\n        const doc = this._ySource.doc;\n        assertExists(doc, 'YData is not bound to a Y.Doc');\n\n        const index = Number(p);\n        if (this._skipNext || Number.isNaN(index)) {\n          return Reflect.deleteProperty(target, p);\n        }\n\n        this._transact(doc, () => {\n          this._ySource.delete(index, 1);\n        });\n        return Reflect.deleteProperty(target, p);\n      },\n    });\n  };\n\n  private _observer = (event: YArrayEvent<unknown>) => {\n    this._onObserve(event, () => {\n      let retain = 0;\n      event.changes.delta.forEach(change => {\n        if (change.retain) {\n          retain += change.retain;\n          return;\n        }\n        if (change.delete) {\n          this._updateWithSkip(() => {\n            this._source.splice(retain, change.delete);\n          });\n          return;\n        }\n        if (change.insert) {\n          const _arr = [change.insert].flat();\n\n          const proxyList = _arr.map(value => createYProxy(value));\n\n          this._updateWithSkip(() => {\n            this._source.splice(retain, 0, ...proxyList);\n          });\n\n          retain += change.insert.length;\n        }\n      });\n    });\n  };\n}\n\nexport class ReactiveYMap extends BaseReactiveYData<UnRecord, YMap<unknown>> {\n  protected readonly _proxy: UnRecord;\n  constructor(\n    protected readonly _source: UnRecord,\n    protected readonly _ySource: YMap<unknown>,\n    protected readonly _options: ProxyOptions<UnRecord>\n  ) {\n    super();\n    this._proxy = this._getProxy();\n    proxies.set(_ySource, this);\n    _ySource.observe(this._observer);\n  }\n\n  stash(prop: string) {\n    this._stashed.add(prop);\n  }\n\n  pop(prop: string) {\n    const value = this._source[prop];\n    this._stashed.delete(prop);\n    this._proxy[prop] = value;\n  }\n\n  protected _getProxy = () => {\n    return new Proxy(this._source, {\n      has: (target, p) => {\n        return Reflect.has(target, p);\n      },\n      set: (target, p, value, receiver) => {\n        if (typeof p !== 'string') {\n          throw new Error('key cannot be a symbol');\n        }\n        if (this._skipNext) {\n          return Reflect.set(target, p, value, receiver);\n        }\n\n        if (this._stashed.has(p)) {\n          const result = Reflect.set(target, p, value, receiver);\n          this._options.onChange?.(this._proxy);\n          return result;\n        }\n\n        const reactive = proxies.get(this._ySource);\n        assertExists(reactive, 'YData is not subscribed before changes');\n        const doc = this._ySource.doc;\n        assertExists(doc, 'YData is not bound to a Y.Doc');\n\n        const yData = native2Y(value);\n        this._transact(doc, () => {\n          this._ySource.set(p, yData);\n        });\n        const data = createYProxy(yData, this._options);\n        return Reflect.set(target, p, data, receiver);\n      },\n      get: (target, p, receiver) => {\n        return Reflect.get(target, p, receiver);\n      },\n      deleteProperty: (target, p) => {\n        if (typeof p !== 'string') {\n          throw new Error('key cannot be a symbol');\n        }\n        if (this._skipNext) {\n          return Reflect.deleteProperty(target, p);\n        }\n\n        const proxied = proxies.get(this._ySource);\n        assertExists(proxied, 'YData is not subscribed before changes');\n        const doc = this._ySource.doc;\n        assertExists(doc, 'YData is not bound to a Y.Doc');\n\n        this._transact(doc, () => {\n          this._ySource.delete(p);\n        });\n\n        return Reflect.deleteProperty(target, p);\n      },\n    });\n  };\n\n  private _observer = (event: YMapEvent<unknown>) => {\n    this._onObserve(event, () => {\n      event.keysChanged.forEach(key => {\n        const type = event.changes.keys.get(key);\n        if (!type) {\n          return;\n        }\n        if (type.action === 'delete') {\n          this._updateWithSkip(() => {\n            delete this._source[key];\n          });\n        } else if (type.action === 'add' || type.action === 'update') {\n          const current = this._ySource.get(key);\n          this._updateWithSkip(() => {\n            this._source[key] = proxies.has(current)\n              ? proxies.get(current)\n              : createYProxy(current, this._options);\n          });\n        }\n      });\n    });\n  };\n}\n\nexport function createYProxy<Data>(\n  yAbstract: unknown,\n  options: ProxyOptions<Data> = {}\n): Data {\n  if (proxies.has(yAbstract)) {\n    return proxies.get(yAbstract)!.proxy as Data;\n  }\n\n  return y2Native(yAbstract, {\n    transform: (value, origin) => {\n      if (Boxed.is(origin)) {\n        return value;\n      }\n      if (origin instanceof YArray) {\n        const data = new ReactiveYArray(\n          value as unknown[],\n          origin,\n          options as ProxyOptions<unknown[]>\n        );\n        return data.proxy;\n      }\n      if (origin instanceof YMap) {\n        const data = new ReactiveYMap(\n          value as UnRecord,\n          origin,\n          options as ProxyOptions<UnRecord>\n        );\n        return data.proxy;\n      }\n\n      return value;\n    },\n  }) as Data;\n}\n\nexport function stashProp(yMap: YMap<unknown>, prop: string): void;\nexport function stashProp(yMap: YArray<unknown>, prop: number): void;\nexport function stashProp(yAbstract: unknown, prop: string | number) {\n  const proxy = proxies.get(yAbstract);\n  assertExists(proxy, 'YData is not subscribed before changes');\n  proxy.stash(prop);\n}\n\nexport function popProp(yMap: YMap<unknown>, prop: string): void;\nexport function popProp(yMap: YArray<unknown>, prop: number): void;\nexport function popProp(yAbstract: unknown, prop: string | number) {\n  const proxy = proxies.get(yAbstract);\n  assertExists(proxy, 'YData is not subscribed before changes');\n  proxy.pop(prop);\n}\n","var util;\n(function (util) {\n    util.assertEqual = (val) => val;\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array\n            .map((val) => (typeof val === \"string\" ? `'${val}'` : val))\n            .join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (util = {}));\nvar objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nconst ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nconst getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"symbol\":\n            return ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then &&\n                typeof data.then === \"function\" &&\n                data.catch &&\n                typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n\nconst ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nconst quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nclass ZodError extends Error {\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    get errors() {\n        return this.issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n            break;\n        case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n        case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `smaller than or equal to`\n                        : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n    }\n    return { message };\n};\n\nlet overrideErrorMap = errorMap;\nfunction setErrorMap(map) {\n    overrideErrorMap = map;\n}\nfunction getErrorMap() {\n    return overrideErrorMap;\n}\n\nconst makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: issueData.message || errorMessage,\n    };\n};\nconst EMPTY_PATH = [];\nfunction addIssueToContext(ctx, issueData) {\n    const issue = makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap,\n            ctx.schemaErrorMap,\n            getErrorMap(),\n            errorMap, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nclass ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            syncPairs.push({\n                key: await pair.key,\n                value: await pair.value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return INVALID;\n            if (value.status === \"aborted\")\n                return INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (key.value !== \"__proto__\" &&\n                (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nconst INVALID = Object.freeze({\n    status: \"aborted\",\n});\nconst DIRTY = (value) => ({ status: \"dirty\", value });\nconst OK = (value) => ({ status: \"valid\", value });\nconst isAborted = (x) => x.status === \"aborted\";\nconst isDirty = (x) => x.status === \"dirty\";\nconst isValid = (x) => x.status === \"valid\";\nconst isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\n\nvar errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message === null || message === void 0 ? void 0 : message.message;\n})(errorUtil || (errorUtil = {}));\n\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (this._key instanceof Array) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        if (typeof ctx.data === \"undefined\") {\n            return { message: required_error !== null && required_error !== void 0 ? required_error : ctx.defaultError };\n        }\n        return { message: invalid_type_error !== null && invalid_type_error !== void 0 ? invalid_type_error : ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nclass ZodType {\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.readonly = this.readonly.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n    }\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        var _a;\n        const ctx = {\n            common: {\n                issues: [],\n                async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n                async: true,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await (isAsync(maybeAsyncResult)\n            ? maybeAsyncResult\n            : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\"\n                    ? refinementData(val, ctx)\n                    : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this, this._def);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    readonly() {\n        return ZodReadonly.create(this);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[a-z][a-z0-9]*$/;\nconst ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/;\n// const uuidRegex =\n//   /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\n// const emailRegex =\n//   /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// const emailRegex =\n//   /^[a-zA-Z0-9\\.\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// const emailRegex =\n//   /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nconst emailRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_+-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\n// const emailRegex =\n//   /^[a-z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\\.[a-z0-9\\-]+)*$/i;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emojiRegex = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nlet emojiRegex;\nconst ipv4Regex = /^(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))$/;\nconst ipv6Regex = /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\n// Adapted from https://stackoverflow.com/a/3143231\nconst datetimeRegex = (args) => {\n    if (args.precision) {\n        if (args.offset) {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{${args.precision}}(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`);\n        }\n        else {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{${args.precision}}Z$`);\n        }\n    }\n    else if (args.precision === 0) {\n        if (args.offset) {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`);\n        }\n        else {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}Z$`);\n        }\n    }\n    else {\n        if (args.offset) {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(\\\\.\\\\d+)?(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`);\n        }\n        else {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(\\\\.\\\\d+)?Z$`);\n        }\n    }\n};\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nclass ZodString extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            }\n            //\n            );\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex) {\n                    emojiRegex = new RegExp(_emojiRegex, \"u\");\n                }\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"emoji\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ulid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch (_a) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ip\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _regex(regex, validation, message) {\n        return this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil.errToObj(message) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        var _a;\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            offset: (_a = options === null || options === void 0 ? void 0 : options.offset) !== null && _a !== void 0 ? _a : false,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options === null || options === void 0 ? void 0 : options.position,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    /**\n     * @deprecated Use z.string().min(1) instead.\n     * @see {@link ZodString.min}\n     */\n    nonempty(message) {\n        return this.min(1, errorUtil.errToObj(message));\n    }\n    trim() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    toLowerCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n    }\n    toUpperCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodString.create = (params) => {\n    var _a;\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / Math.pow(10, decCount);\n}\nclass ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" ||\n            (ch.kind === \"multipleOf\" && util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null, min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" ||\n                ch.kind === \"int\" ||\n                ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = BigInt(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.bigint,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodBigInt.create = (params) => {\n    var _a;\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nclass ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nclass ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nclass ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                addIssueToContext(ctx, {\n                    code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nclass ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        return (this._cached = { shape, keys });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever &&\n            this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") ;\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    syncPairs.push({\n                        key,\n                        value: await pair.value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        var _a, _b, _c, _d;\n                        const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: (_d = errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        util.objectKeys(mask).forEach((key) => {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util.objectKeys(this.shape));\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return Object.keys(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else {\n        return null;\n    }\n};\nclass ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util\n            .objectKeys(a)\n            .filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date &&\n        bType === ZodParsedType.date &&\n        +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nclass ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\nclass ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nclass ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nclass ZodMap extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nclass ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(async function (...args) {\n                const error = new ZodError([]);\n                const parsedArgs = await me._def.args\n                    .parseAsync(args, params)\n                    .catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await Reflect.apply(fn, this, parsedArgs);\n                const parsedReturns = await me._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(function (...args) {\n                const parsedArgs = me._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = Reflect.apply(fn, this, parsedArgs.data);\n                const parsedReturns = me._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args\n                ? args\n                : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nclass ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nclass ZodEnum extends ZodType {\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (this._def.values.indexOf(input.data) === -1) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values) {\n        return ZodEnum.create(values);\n    }\n    exclude(values) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)));\n    }\n}\nZodEnum.create = createZodEnum;\nclass ZodNativeEnum extends ZodType {\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string &&\n            ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (nativeEnumValues.indexOf(input.data) === -1) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nclass ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise &&\n            ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise\n            ? ctx.data\n            : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nclass ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data, checkCtx);\n            if (ctx.common.issues.length) {\n                return {\n                    status: \"dirty\",\n                    value: ctx.data,\n                };\n            }\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then((processed) => {\n                    return this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                });\n            }\n            else {\n                return this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc\n            // effect: RefinementEffect<any>\n            ) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!isValid(base))\n                    return base;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((base) => {\n                    if (!isValid(base))\n                        return base;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({ status: status.value, value: result }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nclass ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\"\n            ? params.default\n            : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nclass ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if (isAsync(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nconst BRAND = Symbol(\"zod_brand\");\nclass ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nclass ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return DIRTY(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nclass ZodReadonly extends ZodType {\n    _parse(input) {\n        const result = this._def.innerType._parse(input);\n        if (isValid(result)) {\n            result.value = Object.freeze(result.value);\n        }\n        return result;\n    }\n}\nZodReadonly.create = (type, params) => {\n    return new ZodReadonly({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodReadonly,\n        ...processCreateParams(params),\n    });\n};\nconst custom = (check, params = {}, \n/**\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) => {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            var _a, _b;\n            if (!check(data)) {\n                const p = typeof params === \"function\"\n                    ? params(data)\n                    : typeof params === \"string\"\n                        ? { message: params }\n                        : params;\n                const _fatal = (_b = (_a = p.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;\n                const p2 = typeof p === \"string\" ? { message: p } : p;\n                ctx.addIssue({ code: \"custom\", ...p2, fatal: _fatal });\n            }\n        });\n    return ZodAny.create();\n};\nconst late = {\n    object: ZodObject.lazycreate,\n};\nvar ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n    ZodFirstPartyTypeKind[\"ZodReadonly\"] = \"ZodReadonly\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst symbolType = ZodSymbol.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst pipelineType = ZodPipeline.create;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\nconst coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nconst NEVER = INVALID;\n\nvar z = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    defaultErrorMap: errorMap,\n    setErrorMap: setErrorMap,\n    getErrorMap: getErrorMap,\n    makeIssue: makeIssue,\n    EMPTY_PATH: EMPTY_PATH,\n    addIssueToContext: addIssueToContext,\n    ParseStatus: ParseStatus,\n    INVALID: INVALID,\n    DIRTY: DIRTY,\n    OK: OK,\n    isAborted: isAborted,\n    isDirty: isDirty,\n    isValid: isValid,\n    isAsync: isAsync,\n    get util () { return util; },\n    get objectUtil () { return objectUtil; },\n    ZodParsedType: ZodParsedType,\n    getParsedType: getParsedType,\n    ZodType: ZodType,\n    ZodString: ZodString,\n    ZodNumber: ZodNumber,\n    ZodBigInt: ZodBigInt,\n    ZodBoolean: ZodBoolean,\n    ZodDate: ZodDate,\n    ZodSymbol: ZodSymbol,\n    ZodUndefined: ZodUndefined,\n    ZodNull: ZodNull,\n    ZodAny: ZodAny,\n    ZodUnknown: ZodUnknown,\n    ZodNever: ZodNever,\n    ZodVoid: ZodVoid,\n    ZodArray: ZodArray,\n    ZodObject: ZodObject,\n    ZodUnion: ZodUnion,\n    ZodDiscriminatedUnion: ZodDiscriminatedUnion,\n    ZodIntersection: ZodIntersection,\n    ZodTuple: ZodTuple,\n    ZodRecord: ZodRecord,\n    ZodMap: ZodMap,\n    ZodSet: ZodSet,\n    ZodFunction: ZodFunction,\n    ZodLazy: ZodLazy,\n    ZodLiteral: ZodLiteral,\n    ZodEnum: ZodEnum,\n    ZodNativeEnum: ZodNativeEnum,\n    ZodPromise: ZodPromise,\n    ZodEffects: ZodEffects,\n    ZodTransformer: ZodEffects,\n    ZodOptional: ZodOptional,\n    ZodNullable: ZodNullable,\n    ZodDefault: ZodDefault,\n    ZodCatch: ZodCatch,\n    ZodNaN: ZodNaN,\n    BRAND: BRAND,\n    ZodBranded: ZodBranded,\n    ZodPipeline: ZodPipeline,\n    ZodReadonly: ZodReadonly,\n    custom: custom,\n    Schema: ZodType,\n    ZodSchema: ZodType,\n    late: late,\n    get ZodFirstPartyTypeKind () { return ZodFirstPartyTypeKind; },\n    coerce: coerce,\n    any: anyType,\n    array: arrayType,\n    bigint: bigIntType,\n    boolean: booleanType,\n    date: dateType,\n    discriminatedUnion: discriminatedUnionType,\n    effect: effectsType,\n    'enum': enumType,\n    'function': functionType,\n    'instanceof': instanceOfType,\n    intersection: intersectionType,\n    lazy: lazyType,\n    literal: literalType,\n    map: mapType,\n    nan: nanType,\n    nativeEnum: nativeEnumType,\n    never: neverType,\n    'null': nullType,\n    nullable: nullableType,\n    number: numberType,\n    object: objectType,\n    oboolean: oboolean,\n    onumber: onumber,\n    optional: optionalType,\n    ostring: ostring,\n    pipeline: pipelineType,\n    preprocess: preprocessType,\n    promise: promiseType,\n    record: recordType,\n    set: setType,\n    strictObject: strictObjectType,\n    string: stringType,\n    symbol: symbolType,\n    transformer: effectsType,\n    tuple: tupleType,\n    'undefined': undefinedType,\n    union: unionType,\n    unknown: unknownType,\n    'void': voidType,\n    NEVER: NEVER,\n    ZodIssueCode: ZodIssueCode,\n    quotelessJson: quotelessJson,\n    ZodError: ZodError\n});\n\nexport { BRAND, DIRTY, EMPTY_PATH, INVALID, NEVER, OK, ParseStatus, ZodType as Schema, ZodAny, ZodArray, ZodBigInt, ZodBoolean, ZodBranded, ZodCatch, ZodDate, ZodDefault, ZodDiscriminatedUnion, ZodEffects, ZodEnum, ZodError, ZodFirstPartyTypeKind, ZodFunction, ZodIntersection, ZodIssueCode, ZodLazy, ZodLiteral, ZodMap, ZodNaN, ZodNativeEnum, ZodNever, ZodNull, ZodNullable, ZodNumber, ZodObject, ZodOptional, ZodParsedType, ZodPipeline, ZodPromise, ZodReadonly, ZodRecord, ZodType as ZodSchema, ZodSet, ZodString, ZodSymbol, ZodEffects as ZodTransformer, ZodTuple, ZodType, ZodUndefined, ZodUnion, ZodUnknown, ZodVoid, addIssueToContext, anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, coerce, custom, dateType as date, z as default, errorMap as defaultErrorMap, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, getErrorMap, getParsedType, instanceOfType as instanceof, intersectionType as intersection, isAborted, isAsync, isDirty, isValid, late, lazyType as lazy, literalType as literal, makeIssue, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, objectUtil, oboolean, onumber, optionalType as optional, ostring, pipelineType as pipeline, preprocessType as preprocess, promiseType as promise, quotelessJson, recordType as record, setType as set, setErrorMap, strictObjectType as strictObject, stringType as string, symbolType as symbol, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, util, voidType as void, z };\n","import { Slot } from '@blocksuite/global/utils';\nimport type * as Y from 'yjs';\nimport { z } from 'zod';\n\nimport { Boxed } from '../reactive/boxed.js';\nimport { Text } from '../reactive/text.js';\nimport type { BaseBlockTransformer } from '../transformer/base.js';\nimport type { YBlock } from '../workspace/block/block.js';\nimport type { Page } from '../workspace/index.js';\n\nconst FlavourSchema = z.string();\nconst ParentSchema = z.array(z.string()).optional();\nconst ContentSchema = z.array(z.string()).optional();\nconst role = ['root', 'hub', 'content'] as const;\nconst RoleSchema = z.enum(role);\n\nexport type RoleType = (typeof role)[number];\n\nexport interface InternalPrimitives {\n  Text: (input?: Y.Text | string) => Text;\n  Boxed: <T>(input: T) => Boxed<T>;\n}\n\nexport const internalPrimitives: InternalPrimitives = Object.freeze({\n  Text: (input: Y.Text | string = '') => new Text(input),\n  Boxed: <T>(input: T) => new Boxed(input),\n});\n\nexport const BlockSchema = z.object({\n  version: z.number(),\n  model: z.object({\n    role: RoleSchema,\n    flavour: FlavourSchema,\n    parent: ParentSchema,\n    children: ContentSchema,\n    props: z\n      .function()\n      .args(z.custom<InternalPrimitives>())\n      .returns(z.record(z.any()))\n      .optional(),\n    toModel: z.function().args().returns(z.custom<BlockModel>()).optional(),\n  }),\n  transformer: z\n    .function()\n    .args()\n    .returns(z.custom<BaseBlockTransformer>())\n    .optional(),\n  onUpgrade: z\n    .function()\n    .args(z.any(), z.number(), z.number())\n    .returns(z.void())\n    .optional(),\n});\n\nexport type BlockSchemaType = z.infer<typeof BlockSchema>;\n\nexport type PropsGetter<Props> = (\n  internalPrimitives: InternalPrimitives\n) => Props;\nexport type PropsFromGetter<T> =\n  T extends PropsGetter<infer Props> ? Props : never;\n\nexport type SchemaToModel<\n  Schema extends {\n    model: {\n      props: PropsGetter<object>;\n      flavour: string;\n    };\n  },\n> = BlockModel<PropsFromGetter<Schema['model']['props']>> &\n  ReturnType<Schema['model']['props']> & {\n    flavour: Schema['model']['flavour'];\n  };\n\nexport function defineBlockSchema<\n  Flavour extends string,\n  Role extends RoleType,\n  Props extends object,\n  Metadata extends Readonly<{\n    version: number;\n    role: Role;\n    parent?: string[];\n    children?: string[];\n  }>,\n  Model extends BlockModel<Props>,\n  Transformer extends BaseBlockTransformer<Props>,\n>(options: {\n  flavour: Flavour;\n  metadata: Metadata;\n  props?: (internalPrimitives: InternalPrimitives) => Props;\n  onUpgrade?: (\n    data: Props,\n    previousVersion: number,\n    latestVersion: number\n  ) => void;\n  toModel?: () => Model;\n  transformer?: () => Transformer;\n}): {\n  version: number;\n  model: {\n    role: Role;\n    props: PropsGetter<Props>;\n    flavour: Flavour;\n  } & Metadata;\n  onUpgrade?: (\n    data: Props,\n    previousVersion: number,\n    latestVersion: number\n  ) => void;\n  transformer?: () => Transformer;\n};\n\nexport function defineBlockSchema({\n  flavour,\n  props,\n  metadata,\n  onUpgrade,\n  toModel,\n  transformer,\n}: {\n  flavour: string;\n  metadata: {\n    version: number;\n    role: RoleType;\n    parent?: string[];\n    children?: string[];\n  };\n  props?: (internalPrimitives: InternalPrimitives) => Record<string, unknown>;\n  onUpgrade?: (\n    data: Record<string, unknown>,\n    previousVersion: number,\n    latestVersion: number\n  ) => void;\n  toModel?: () => BlockModel;\n  transformer?: () => BaseBlockTransformer;\n}): BlockSchemaType {\n  const schema = {\n    version: metadata.version,\n    model: {\n      role: metadata.role,\n      parent: metadata.parent,\n      children: metadata.children,\n      flavour,\n      props,\n      toModel,\n    },\n    onUpgrade,\n    transformer,\n  } satisfies z.infer<typeof BlockSchema>;\n  BlockSchema.parse(schema);\n  return schema;\n}\n\n/**\n * The MagicProps function is used to append the props to the class.\n * For example:\n *\n * ```ts\n * class MyBlock extends MagicProps()<{ foo: string }> {}\n * const myBlock = new MyBlock();\n * // You'll get type checking for the foo prop\n * myBlock.foo = 'bar';\n * ```\n */\nfunction MagicProps(): {\n  new <Props>(): Props;\n} {\n  // @ts-ignore\n  return class {};\n}\n\n// @ts-ignore\nexport class BlockModel<\n  Props extends object = object,\n> extends MagicProps()<Props> {\n  version!: number;\n  flavour!: string;\n  role!: RoleType;\n  page!: Page;\n  id!: string;\n  yBlock!: YBlock;\n  keys!: string[];\n\n  stash!: (prop: keyof Props & string) => void;\n  pop!: (prop: keyof Props & string) => void;\n\n  // text is optional\n  text?: Text;\n\n  created = new Slot();\n  deleted = new Slot();\n  propsUpdated = new Slot<{ key: string }>();\n  childrenUpdated = new Slot();\n\n  get childMap() {\n    return this.children.reduce((map, child, index) => {\n      map.set(child.id, index);\n      return map;\n    }, new Map<string, number>());\n  }\n\n  get children() {\n    const block = this.yBlock.get('sys:children') as Y.Array<string>;\n    if (!block) {\n      return [];\n    }\n\n    const children: BlockModel[] = [];\n    block.forEach(id => {\n      const child = this.page.getBlockById(id);\n      if (!child) {\n        return;\n      }\n      children.push(child);\n    });\n\n    return children;\n  }\n\n  isEmpty() {\n    return this.children.length === 0;\n  }\n\n  firstChild(): BlockModel | null {\n    return this.children[0] || null;\n  }\n\n  lastChild(): BlockModel | null {\n    if (!this.children.length) {\n      return this;\n    }\n    return this.children[this.children.length - 1].lastChild();\n  }\n\n  lastItem(): BlockModel | null {\n    if (!this.children.length) {\n      return this;\n    }\n    return this.children[this.children.length - 1];\n  }\n\n  dispose() {\n    this.created.dispose();\n    this.deleted.dispose();\n    this.propsUpdated.dispose();\n    this.childrenUpdated.dispose();\n  }\n\n  clone(): this {\n    return Object.assign(Object.create(Object.getPrototypeOf(this)), this);\n  }\n}\n","'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    if(a===b) {\n      return [ai, bi];\n    }\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n","var balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m) return [str];\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  if (/\\$$/.test(m.pre)) {    \n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre+ '{' + m.body + '}' + post[k];\n      expansions.push(expansion);\n    }\n  } else {\n    var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n    var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n    var isSequence = isNumericSequence || isAlphaSequence;\n    var isOptions = m.body.indexOf(',') >= 0;\n    if (!isSequence && !isOptions) {\n      // {a},b}\n      if (m.post.match(/,.*\\}/)) {\n        str = m.pre + '{' + m.body + escClose + m.post;\n        return expand(str);\n      }\n      return [str];\n    }\n\n    var n;\n    if (isSequence) {\n      n = m.body.split(/\\.\\./);\n    } else {\n      n = parseCommaParts(m.body);\n      if (n.length === 1) {\n        // x{{a,b}}y ==> x{a}y x{b}y\n        n = expand(n[0], false).map(embrace);\n        if (n.length === 1) {\n          return post.map(function(p) {\n            return m.pre + n[0] + p;\n          });\n        }\n      }\n    }\n\n    // at this point, n is the parts, and we know it's not a comma set\n    // with a single entry.\n    var N;\n\n    if (isSequence) {\n      var x = numeric(n[0]);\n      var y = numeric(n[1]);\n      var width = Math.max(n[0].length, n[1].length)\n      var incr = n.length == 3\n        ? Math.abs(numeric(n[2]))\n        : 1;\n      var test = lte;\n      var reverse = y < x;\n      if (reverse) {\n        incr *= -1;\n        test = gte;\n      }\n      var pad = n.some(isPadded);\n\n      N = [];\n\n      for (var i = x; test(i, y); i += incr) {\n        var c;\n        if (isAlphaSequence) {\n          c = String.fromCharCode(i);\n          if (c === '\\\\')\n            c = '';\n        } else {\n          c = String(i);\n          if (pad) {\n            var need = width - c.length;\n            if (need > 0) {\n              var z = new Array(need + 1).join('0');\n              if (i < 0)\n                c = '-' + z + c.slice(1);\n              else\n                c = z + c;\n            }\n          }\n        }\n        N.push(c);\n      }\n    } else {\n      N = [];\n\n      for (var j = 0; j < n.length; j++) {\n        N.push.apply(N, expand(n[j], false));\n      }\n    }\n\n    for (var j = 0; j < N.length; j++) {\n      for (var k = 0; k < post.length; k++) {\n        var expansion = pre + N[j] + post[k];\n        if (!isTop || isSequence || expansion)\n          expansions.push(expansion);\n      }\n    }\n  }\n\n  return expansions;\n}\n\n","const MAX_PATTERN_LENGTH = 1024 * 64;\nexport const assertValidPattern = (pattern) => {\n    if (typeof pattern !== 'string') {\n        throw new TypeError('invalid pattern');\n    }\n    if (pattern.length > MAX_PATTERN_LENGTH) {\n        throw new TypeError('pattern is too long');\n    }\n};\n//# sourceMappingURL=assert-valid-pattern.js.map","// translate the various posix character classes into unicode properties\n// this works across all unicode locales\n// { <posix class>: [<translation>, /u flag required, negated]\nconst posixClasses = {\n    '[:alnum:]': ['\\\\p{L}\\\\p{Nl}\\\\p{Nd}', true],\n    '[:alpha:]': ['\\\\p{L}\\\\p{Nl}', true],\n    '[:ascii:]': ['\\\\x' + '00-\\\\x' + '7f', false],\n    '[:blank:]': ['\\\\p{Zs}\\\\t', true],\n    '[:cntrl:]': ['\\\\p{Cc}', true],\n    '[:digit:]': ['\\\\p{Nd}', true],\n    '[:graph:]': ['\\\\p{Z}\\\\p{C}', true, true],\n    '[:lower:]': ['\\\\p{Ll}', true],\n    '[:print:]': ['\\\\p{C}', true],\n    '[:punct:]': ['\\\\p{P}', true],\n    '[:space:]': ['\\\\p{Z}\\\\t\\\\r\\\\n\\\\v\\\\f', true],\n    '[:upper:]': ['\\\\p{Lu}', true],\n    '[:word:]': ['\\\\p{L}\\\\p{Nl}\\\\p{Nd}\\\\p{Pc}', true],\n    '[:xdigit:]': ['A-Fa-f0-9', false],\n};\n// only need to escape a few things inside of brace expressions\n// escapes: [ \\ ] -\nconst braceEscape = (s) => s.replace(/[[\\]\\\\-]/g, '\\\\$&');\n// escape all regexp magic characters\nconst regexpEscape = (s) => s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n// everything has already been escaped, we just have to join\nconst rangesToString = (ranges) => ranges.join('');\n// takes a glob string at a posix brace expression, and returns\n// an equivalent regular expression source, and boolean indicating\n// whether the /u flag needs to be applied, and the number of chars\n// consumed to parse the character class.\n// This also removes out of order ranges, and returns ($.) if the\n// entire class just no good.\nexport const parseClass = (glob, position) => {\n    const pos = position;\n    /* c8 ignore start */\n    if (glob.charAt(pos) !== '[') {\n        throw new Error('not in a brace expression');\n    }\n    /* c8 ignore stop */\n    const ranges = [];\n    const negs = [];\n    let i = pos + 1;\n    let sawStart = false;\n    let uflag = false;\n    let escaping = false;\n    let negate = false;\n    let endPos = pos;\n    let rangeStart = '';\n    WHILE: while (i < glob.length) {\n        const c = glob.charAt(i);\n        if ((c === '!' || c === '^') && i === pos + 1) {\n            negate = true;\n            i++;\n            continue;\n        }\n        if (c === ']' && sawStart && !escaping) {\n            endPos = i + 1;\n            break;\n        }\n        sawStart = true;\n        if (c === '\\\\') {\n            if (!escaping) {\n                escaping = true;\n                i++;\n                continue;\n            }\n            // escaped \\ char, fall through and treat like normal char\n        }\n        if (c === '[' && !escaping) {\n            // either a posix class, a collation equivalent, or just a [\n            for (const [cls, [unip, u, neg]] of Object.entries(posixClasses)) {\n                if (glob.startsWith(cls, i)) {\n                    // invalid, [a-[] is fine, but not [a-[:alpha]]\n                    if (rangeStart) {\n                        return ['$.', false, glob.length - pos, true];\n                    }\n                    i += cls.length;\n                    if (neg)\n                        negs.push(unip);\n                    else\n                        ranges.push(unip);\n                    uflag = uflag || u;\n                    continue WHILE;\n                }\n            }\n        }\n        // now it's just a normal character, effectively\n        escaping = false;\n        if (rangeStart) {\n            // throw this range away if it's not valid, but others\n            // can still match.\n            if (c > rangeStart) {\n                ranges.push(braceEscape(rangeStart) + '-' + braceEscape(c));\n            }\n            else if (c === rangeStart) {\n                ranges.push(braceEscape(c));\n            }\n            rangeStart = '';\n            i++;\n            continue;\n        }\n        // now might be the start of a range.\n        // can be either c-d or c-] or c<more...>] or c] at this point\n        if (glob.startsWith('-]', i + 1)) {\n            ranges.push(braceEscape(c + '-'));\n            i += 2;\n            continue;\n        }\n        if (glob.startsWith('-', i + 1)) {\n            rangeStart = c;\n            i += 2;\n            continue;\n        }\n        // not the start of a range, just a single character\n        ranges.push(braceEscape(c));\n        i++;\n    }\n    if (endPos < i) {\n        // didn't see the end of the class, not a valid class,\n        // but might still be valid as a literal match.\n        return ['', false, 0, false];\n    }\n    // if we got no ranges and no negates, then we have a range that\n    // cannot possibly match anything, and that poisons the whole glob\n    if (!ranges.length && !negs.length) {\n        return ['$.', false, glob.length - pos, true];\n    }\n    // if we got one positive range, and it's a single character, then that's\n    // not actually a magic pattern, it's just that one literal character.\n    // we should not treat that as \"magic\", we should just return the literal\n    // character. [_] is a perfectly valid way to escape glob magic chars.\n    if (negs.length === 0 &&\n        ranges.length === 1 &&\n        /^\\\\?.$/.test(ranges[0]) &&\n        !negate) {\n        const r = ranges[0].length === 2 ? ranges[0].slice(-1) : ranges[0];\n        return [regexpEscape(r), false, endPos - pos, false];\n    }\n    const sranges = '[' + (negate ? '^' : '') + rangesToString(ranges) + ']';\n    const snegs = '[' + (negate ? '' : '^') + rangesToString(negs) + ']';\n    const comb = ranges.length && negs.length\n        ? '(' + sranges + '|' + snegs + ')'\n        : ranges.length\n            ? sranges\n            : snegs;\n    return [comb, uflag, endPos - pos, true];\n};\n//# sourceMappingURL=brace-expressions.js.map","/**\n * Un-escape a string that has been escaped with {@link escape}.\n *\n * If the {@link windowsPathsNoEscape} option is used, then square-brace\n * escapes are removed, but not backslash escapes.  For example, it will turn\n * the string `'[*]'` into `*`, but it will not turn `'\\\\*'` into `'*'`,\n * becuase `\\` is a path separator in `windowsPathsNoEscape` mode.\n *\n * When `windowsPathsNoEscape` is not set, then both brace escapes and\n * backslash escapes are removed.\n *\n * Slashes (and backslashes in `windowsPathsNoEscape` mode) cannot be escaped\n * or unescaped.\n */\nexport const unescape = (s, { windowsPathsNoEscape = false, } = {}) => {\n    return windowsPathsNoEscape\n        ? s.replace(/\\[([^\\/\\\\])\\]/g, '$1')\n        : s.replace(/((?!\\\\).|^)\\[([^\\/\\\\])\\]/g, '$1$2').replace(/\\\\([^\\/])/g, '$1');\n};\n//# sourceMappingURL=unescape.js.map","// parse a single path portion\nimport { parseClass } from './brace-expressions.js';\nimport { unescape } from './unescape.js';\nconst types = new Set(['!', '?', '+', '*', '@']);\nconst isExtglobType = (c) => types.has(c);\n// Patterns that get prepended to bind to the start of either the\n// entire string, or just a single path portion, to prevent dots\n// and/or traversal patterns, when needed.\n// Exts don't need the ^ or / bit, because the root binds that already.\nconst startNoTraversal = '(?!(?:^|/)\\\\.\\\\.?(?:$|/))';\nconst startNoDot = '(?!\\\\.)';\n// characters that indicate a start of pattern needs the \"no dots\" bit,\n// because a dot *might* be matched. ( is not in the list, because in\n// the case of a child extglob, it will handle the prevention itself.\nconst addPatternStart = new Set(['[', '.']);\n// cases where traversal is A-OK, no dot prevention needed\nconst justDots = new Set(['..', '.']);\nconst reSpecials = new Set('().*{}+?[]^$\\\\!');\nconst regExpEscape = (s) => s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n// any single thing other than /\nconst qmark = '[^/]';\n// * => any number of characters\nconst star = qmark + '*?';\n// use + when we need to ensure that *something* matches, because the * is\n// the only thing in the path portion.\nconst starNoEmpty = qmark + '+?';\n// remove the \\ chars that we added if we end up doing a nonmagic compare\n// const deslash = (s: string) => s.replace(/\\\\(.)/g, '$1')\nexport class AST {\n    type;\n    #root;\n    #hasMagic;\n    #uflag = false;\n    #parts = [];\n    #parent;\n    #parentIndex;\n    #negs;\n    #filledNegs = false;\n    #options;\n    #toString;\n    // set to true if it's an extglob with no children\n    // (which really means one child of '')\n    #emptyExt = false;\n    constructor(type, parent, options = {}) {\n        this.type = type;\n        // extglobs are inherently magical\n        if (type)\n            this.#hasMagic = true;\n        this.#parent = parent;\n        this.#root = this.#parent ? this.#parent.#root : this;\n        this.#options = this.#root === this ? options : this.#root.#options;\n        this.#negs = this.#root === this ? [] : this.#root.#negs;\n        if (type === '!' && !this.#root.#filledNegs)\n            this.#negs.push(this);\n        this.#parentIndex = this.#parent ? this.#parent.#parts.length : 0;\n    }\n    get hasMagic() {\n        /* c8 ignore start */\n        if (this.#hasMagic !== undefined)\n            return this.#hasMagic;\n        /* c8 ignore stop */\n        for (const p of this.#parts) {\n            if (typeof p === 'string')\n                continue;\n            if (p.type || p.hasMagic)\n                return (this.#hasMagic = true);\n        }\n        // note: will be undefined until we generate the regexp src and find out\n        return this.#hasMagic;\n    }\n    // reconstructs the pattern\n    toString() {\n        if (this.#toString !== undefined)\n            return this.#toString;\n        if (!this.type) {\n            return (this.#toString = this.#parts.map(p => String(p)).join(''));\n        }\n        else {\n            return (this.#toString =\n                this.type + '(' + this.#parts.map(p => String(p)).join('|') + ')');\n        }\n    }\n    #fillNegs() {\n        /* c8 ignore start */\n        if (this !== this.#root)\n            throw new Error('should only call on root');\n        if (this.#filledNegs)\n            return this;\n        /* c8 ignore stop */\n        // call toString() once to fill this out\n        this.toString();\n        this.#filledNegs = true;\n        let n;\n        while ((n = this.#negs.pop())) {\n            if (n.type !== '!')\n                continue;\n            // walk up the tree, appending everthing that comes AFTER parentIndex\n            let p = n;\n            let pp = p.#parent;\n            while (pp) {\n                for (let i = p.#parentIndex + 1; !pp.type && i < pp.#parts.length; i++) {\n                    for (const part of n.#parts) {\n                        /* c8 ignore start */\n                        if (typeof part === 'string') {\n                            throw new Error('string part in extglob AST??');\n                        }\n                        /* c8 ignore stop */\n                        part.copyIn(pp.#parts[i]);\n                    }\n                }\n                p = pp;\n                pp = p.#parent;\n            }\n        }\n        return this;\n    }\n    push(...parts) {\n        for (const p of parts) {\n            if (p === '')\n                continue;\n            /* c8 ignore start */\n            if (typeof p !== 'string' && !(p instanceof AST && p.#parent === this)) {\n                throw new Error('invalid part: ' + p);\n            }\n            /* c8 ignore stop */\n            this.#parts.push(p);\n        }\n    }\n    toJSON() {\n        const ret = this.type === null\n            ? this.#parts.slice().map(p => (typeof p === 'string' ? p : p.toJSON()))\n            : [this.type, ...this.#parts.map(p => p.toJSON())];\n        if (this.isStart() && !this.type)\n            ret.unshift([]);\n        if (this.isEnd() &&\n            (this === this.#root ||\n                (this.#root.#filledNegs && this.#parent?.type === '!'))) {\n            ret.push({});\n        }\n        return ret;\n    }\n    isStart() {\n        if (this.#root === this)\n            return true;\n        // if (this.type) return !!this.#parent?.isStart()\n        if (!this.#parent?.isStart())\n            return false;\n        if (this.#parentIndex === 0)\n            return true;\n        // if everything AHEAD of this is a negation, then it's still the \"start\"\n        const p = this.#parent;\n        for (let i = 0; i < this.#parentIndex; i++) {\n            const pp = p.#parts[i];\n            if (!(pp instanceof AST && pp.type === '!')) {\n                return false;\n            }\n        }\n        return true;\n    }\n    isEnd() {\n        if (this.#root === this)\n            return true;\n        if (this.#parent?.type === '!')\n            return true;\n        if (!this.#parent?.isEnd())\n            return false;\n        if (!this.type)\n            return this.#parent?.isEnd();\n        // if not root, it'll always have a parent\n        /* c8 ignore start */\n        const pl = this.#parent ? this.#parent.#parts.length : 0;\n        /* c8 ignore stop */\n        return this.#parentIndex === pl - 1;\n    }\n    copyIn(part) {\n        if (typeof part === 'string')\n            this.push(part);\n        else\n            this.push(part.clone(this));\n    }\n    clone(parent) {\n        const c = new AST(this.type, parent);\n        for (const p of this.#parts) {\n            c.copyIn(p);\n        }\n        return c;\n    }\n    static #parseAST(str, ast, pos, opt) {\n        let escaping = false;\n        let inBrace = false;\n        let braceStart = -1;\n        let braceNeg = false;\n        if (ast.type === null) {\n            // outside of a extglob, append until we find a start\n            let i = pos;\n            let acc = '';\n            while (i < str.length) {\n                const c = str.charAt(i++);\n                // still accumulate escapes at this point, but we do ignore\n                // starts that are escaped\n                if (escaping || c === '\\\\') {\n                    escaping = !escaping;\n                    acc += c;\n                    continue;\n                }\n                if (inBrace) {\n                    if (i === braceStart + 1) {\n                        if (c === '^' || c === '!') {\n                            braceNeg = true;\n                        }\n                    }\n                    else if (c === ']' && !(i === braceStart + 2 && braceNeg)) {\n                        inBrace = false;\n                    }\n                    acc += c;\n                    continue;\n                }\n                else if (c === '[') {\n                    inBrace = true;\n                    braceStart = i;\n                    braceNeg = false;\n                    acc += c;\n                    continue;\n                }\n                if (!opt.noext && isExtglobType(c) && str.charAt(i) === '(') {\n                    ast.push(acc);\n                    acc = '';\n                    const ext = new AST(c, ast);\n                    i = AST.#parseAST(str, ext, i, opt);\n                    ast.push(ext);\n                    continue;\n                }\n                acc += c;\n            }\n            ast.push(acc);\n            return i;\n        }\n        // some kind of extglob, pos is at the (\n        // find the next | or )\n        let i = pos + 1;\n        let part = new AST(null, ast);\n        const parts = [];\n        let acc = '';\n        while (i < str.length) {\n            const c = str.charAt(i++);\n            // still accumulate escapes at this point, but we do ignore\n            // starts that are escaped\n            if (escaping || c === '\\\\') {\n                escaping = !escaping;\n                acc += c;\n                continue;\n            }\n            if (inBrace) {\n                if (i === braceStart + 1) {\n                    if (c === '^' || c === '!') {\n                        braceNeg = true;\n                    }\n                }\n                else if (c === ']' && !(i === braceStart + 2 && braceNeg)) {\n                    inBrace = false;\n                }\n                acc += c;\n                continue;\n            }\n            else if (c === '[') {\n                inBrace = true;\n                braceStart = i;\n                braceNeg = false;\n                acc += c;\n                continue;\n            }\n            if (isExtglobType(c) && str.charAt(i) === '(') {\n                part.push(acc);\n                acc = '';\n                const ext = new AST(c, part);\n                part.push(ext);\n                i = AST.#parseAST(str, ext, i, opt);\n                continue;\n            }\n            if (c === '|') {\n                part.push(acc);\n                acc = '';\n                parts.push(part);\n                part = new AST(null, ast);\n                continue;\n            }\n            if (c === ')') {\n                if (acc === '' && ast.#parts.length === 0) {\n                    ast.#emptyExt = true;\n                }\n                part.push(acc);\n                acc = '';\n                ast.push(...parts, part);\n                return i;\n            }\n            acc += c;\n        }\n        // unfinished extglob\n        // if we got here, it was a malformed extglob! not an extglob, but\n        // maybe something else in there.\n        ast.type = null;\n        ast.#hasMagic = undefined;\n        ast.#parts = [str.substring(pos - 1)];\n        return i;\n    }\n    static fromGlob(pattern, options = {}) {\n        const ast = new AST(null, undefined, options);\n        AST.#parseAST(pattern, ast, 0, options);\n        return ast;\n    }\n    // returns the regular expression if there's magic, or the unescaped\n    // string if not.\n    toMMPattern() {\n        // should only be called on root\n        /* c8 ignore start */\n        if (this !== this.#root)\n            return this.#root.toMMPattern();\n        /* c8 ignore stop */\n        const glob = this.toString();\n        const [re, body, hasMagic, uflag] = this.toRegExpSource();\n        // if we're in nocase mode, and not nocaseMagicOnly, then we do\n        // still need a regular expression if we have to case-insensitively\n        // match capital/lowercase characters.\n        const anyMagic = hasMagic ||\n            this.#hasMagic ||\n            (this.#options.nocase &&\n                !this.#options.nocaseMagicOnly &&\n                glob.toUpperCase() !== glob.toLowerCase());\n        if (!anyMagic) {\n            return body;\n        }\n        const flags = (this.#options.nocase ? 'i' : '') + (uflag ? 'u' : '');\n        return Object.assign(new RegExp(`^${re}$`, flags), {\n            _src: re,\n            _glob: glob,\n        });\n    }\n    // returns the string match, the regexp source, whether there's magic\n    // in the regexp (so a regular expression is required) and whether or\n    // not the uflag is needed for the regular expression (for posix classes)\n    // TODO: instead of injecting the start/end at this point, just return\n    // the BODY of the regexp, along with the start/end portions suitable\n    // for binding the start/end in either a joined full-path makeRe context\n    // (where we bind to (^|/), or a standalone matchPart context (where\n    // we bind to ^, and not /).  Otherwise slashes get duped!\n    //\n    // In part-matching mode, the start is:\n    // - if not isStart: nothing\n    // - if traversal possible, but not allowed: ^(?!\\.\\.?$)\n    // - if dots allowed or not possible: ^\n    // - if dots possible and not allowed: ^(?!\\.)\n    // end is:\n    // - if not isEnd(): nothing\n    // - else: $\n    //\n    // In full-path matching mode, we put the slash at the START of the\n    // pattern, so start is:\n    // - if first pattern: same as part-matching mode\n    // - if not isStart(): nothing\n    // - if traversal possible, but not allowed: /(?!\\.\\.?(?:$|/))\n    // - if dots allowed or not possible: /\n    // - if dots possible and not allowed: /(?!\\.)\n    // end is:\n    // - if last pattern, same as part-matching mode\n    // - else nothing\n    //\n    // Always put the (?:$|/) on negated tails, though, because that has to be\n    // there to bind the end of the negated pattern portion, and it's easier to\n    // just stick it in now rather than try to inject it later in the middle of\n    // the pattern.\n    //\n    // We can just always return the same end, and leave it up to the caller\n    // to know whether it's going to be used joined or in parts.\n    // And, if the start is adjusted slightly, can do the same there:\n    // - if not isStart: nothing\n    // - if traversal possible, but not allowed: (?:/|^)(?!\\.\\.?$)\n    // - if dots allowed or not possible: (?:/|^)\n    // - if dots possible and not allowed: (?:/|^)(?!\\.)\n    //\n    // But it's better to have a simpler binding without a conditional, for\n    // performance, so probably better to return both start options.\n    //\n    // Then the caller just ignores the end if it's not the first pattern,\n    // and the start always gets applied.\n    //\n    // But that's always going to be $ if it's the ending pattern, or nothing,\n    // so the caller can just attach $ at the end of the pattern when building.\n    //\n    // So the todo is:\n    // - better detect what kind of start is needed\n    // - return both flavors of starting pattern\n    // - attach $ at the end of the pattern when creating the actual RegExp\n    //\n    // Ah, but wait, no, that all only applies to the root when the first pattern\n    // is not an extglob. If the first pattern IS an extglob, then we need all\n    // that dot prevention biz to live in the extglob portions, because eg\n    // +(*|.x*) can match .xy but not .yx.\n    //\n    // So, return the two flavors if it's #root and the first child is not an\n    // AST, otherwise leave it to the child AST to handle it, and there,\n    // use the (?:^|/) style of start binding.\n    //\n    // Even simplified further:\n    // - Since the start for a join is eg /(?!\\.) and the start for a part\n    // is ^(?!\\.), we can just prepend (?!\\.) to the pattern (either root\n    // or start or whatever) and prepend ^ or / at the Regexp construction.\n    toRegExpSource(allowDot) {\n        const dot = allowDot ?? !!this.#options.dot;\n        if (this.#root === this)\n            this.#fillNegs();\n        if (!this.type) {\n            const noEmpty = this.isStart() && this.isEnd();\n            const src = this.#parts\n                .map(p => {\n                const [re, _, hasMagic, uflag] = typeof p === 'string'\n                    ? AST.#parseGlob(p, this.#hasMagic, noEmpty)\n                    : p.toRegExpSource(allowDot);\n                this.#hasMagic = this.#hasMagic || hasMagic;\n                this.#uflag = this.#uflag || uflag;\n                return re;\n            })\n                .join('');\n            let start = '';\n            if (this.isStart()) {\n                if (typeof this.#parts[0] === 'string') {\n                    // this is the string that will match the start of the pattern,\n                    // so we need to protect against dots and such.\n                    // '.' and '..' cannot match unless the pattern is that exactly,\n                    // even if it starts with . or dot:true is set.\n                    const dotTravAllowed = this.#parts.length === 1 && justDots.has(this.#parts[0]);\n                    if (!dotTravAllowed) {\n                        const aps = addPatternStart;\n                        // check if we have a possibility of matching . or ..,\n                        // and prevent that.\n                        const needNoTrav = \n                        // dots are allowed, and the pattern starts with [ or .\n                        (dot && aps.has(src.charAt(0))) ||\n                            // the pattern starts with \\., and then [ or .\n                            (src.startsWith('\\\\.') && aps.has(src.charAt(2))) ||\n                            // the pattern starts with \\.\\., and then [ or .\n                            (src.startsWith('\\\\.\\\\.') && aps.has(src.charAt(4)));\n                        // no need to prevent dots if it can't match a dot, or if a\n                        // sub-pattern will be preventing it anyway.\n                        const needNoDot = !dot && !allowDot && aps.has(src.charAt(0));\n                        start = needNoTrav ? startNoTraversal : needNoDot ? startNoDot : '';\n                    }\n                }\n            }\n            // append the \"end of path portion\" pattern to negation tails\n            let end = '';\n            if (this.isEnd() &&\n                this.#root.#filledNegs &&\n                this.#parent?.type === '!') {\n                end = '(?:$|\\\\/)';\n            }\n            const final = start + src + end;\n            return [\n                final,\n                unescape(src),\n                (this.#hasMagic = !!this.#hasMagic),\n                this.#uflag,\n            ];\n        }\n        // We need to calculate the body *twice* if it's a repeat pattern\n        // at the start, once in nodot mode, then again in dot mode, so a\n        // pattern like *(?) can match 'x.y'\n        const repeated = this.type === '*' || this.type === '+';\n        // some kind of extglob\n        const start = this.type === '!' ? '(?:(?!(?:' : '(?:';\n        let body = this.#partsToRegExp(dot);\n        if (this.isStart() && this.isEnd() && !body && this.type !== '!') {\n            // invalid extglob, has to at least be *something* present, if it's\n            // the entire path portion.\n            const s = this.toString();\n            this.#parts = [s];\n            this.type = null;\n            this.#hasMagic = undefined;\n            return [s, unescape(this.toString()), false, false];\n        }\n        // XXX abstract out this map method\n        let bodyDotAllowed = !repeated || allowDot || dot || !startNoDot\n            ? ''\n            : this.#partsToRegExp(true);\n        if (bodyDotAllowed === body) {\n            bodyDotAllowed = '';\n        }\n        if (bodyDotAllowed) {\n            body = `(?:${body})(?:${bodyDotAllowed})*?`;\n        }\n        // an empty !() is exactly equivalent to a starNoEmpty\n        let final = '';\n        if (this.type === '!' && this.#emptyExt) {\n            final = (this.isStart() && !dot ? startNoDot : '') + starNoEmpty;\n        }\n        else {\n            const close = this.type === '!'\n                ? // !() must match something,but !(x) can match ''\n                    '))' +\n                        (this.isStart() && !dot && !allowDot ? startNoDot : '') +\n                        star +\n                        ')'\n                : this.type === '@'\n                    ? ')'\n                    : this.type === '?'\n                        ? ')?'\n                        : this.type === '+' && bodyDotAllowed\n                            ? ')'\n                            : this.type === '*' && bodyDotAllowed\n                                ? `)?`\n                                : `)${this.type}`;\n            final = start + body + close;\n        }\n        return [\n            final,\n            unescape(body),\n            (this.#hasMagic = !!this.#hasMagic),\n            this.#uflag,\n        ];\n    }\n    #partsToRegExp(dot) {\n        return this.#parts\n            .map(p => {\n            // extglob ASTs should only contain parent ASTs\n            /* c8 ignore start */\n            if (typeof p === 'string') {\n                throw new Error('string type in extglob ast??');\n            }\n            /* c8 ignore stop */\n            // can ignore hasMagic, because extglobs are already always magic\n            const [re, _, _hasMagic, uflag] = p.toRegExpSource(dot);\n            this.#uflag = this.#uflag || uflag;\n            return re;\n        })\n            .filter(p => !(this.isStart() && this.isEnd()) || !!p)\n            .join('|');\n    }\n    static #parseGlob(glob, hasMagic, noEmpty = false) {\n        let escaping = false;\n        let re = '';\n        let uflag = false;\n        for (let i = 0; i < glob.length; i++) {\n            const c = glob.charAt(i);\n            if (escaping) {\n                escaping = false;\n                re += (reSpecials.has(c) ? '\\\\' : '') + c;\n                continue;\n            }\n            if (c === '\\\\') {\n                if (i === glob.length - 1) {\n                    re += '\\\\\\\\';\n                }\n                else {\n                    escaping = true;\n                }\n                continue;\n            }\n            if (c === '[') {\n                const [src, needUflag, consumed, magic] = parseClass(glob, i);\n                if (consumed) {\n                    re += src;\n                    uflag = uflag || needUflag;\n                    i += consumed - 1;\n                    hasMagic = hasMagic || magic;\n                    continue;\n                }\n            }\n            if (c === '*') {\n                if (noEmpty && glob === '*')\n                    re += starNoEmpty;\n                else\n                    re += star;\n                hasMagic = true;\n                continue;\n            }\n            if (c === '?') {\n                re += qmark;\n                hasMagic = true;\n                continue;\n            }\n            re += regExpEscape(c);\n        }\n        return [re, unescape(glob), !!hasMagic, uflag];\n    }\n}\n//# sourceMappingURL=ast.js.map","/**\n * Escape all magic characters in a glob pattern.\n *\n * If the {@link windowsPathsNoEscape | GlobOptions.windowsPathsNoEscape}\n * option is used, then characters are escaped by wrapping in `[]`, because\n * a magic character wrapped in a character class can only be satisfied by\n * that exact character.  In this mode, `\\` is _not_ escaped, because it is\n * not interpreted as a magic character, but instead as a path separator.\n */\nexport const escape = (s, { windowsPathsNoEscape = false, } = {}) => {\n    // don't need to escape +@! because we escape the parens\n    // that make those magic, and escaping ! as [!] isn't valid,\n    // because [!]] is a valid glob class meaning not ']'.\n    return windowsPathsNoEscape\n        ? s.replace(/[?*()[\\]]/g, '[$&]')\n        : s.replace(/[?*()[\\]\\\\]/g, '\\\\$&');\n};\n//# sourceMappingURL=escape.js.map","import expand from 'brace-expansion';\nimport { assertValidPattern } from './assert-valid-pattern.js';\nimport { AST } from './ast.js';\nimport { escape } from './escape.js';\nimport { unescape } from './unescape.js';\nexport const minimatch = (p, pattern, options = {}) => {\n    assertValidPattern(pattern);\n    // shortcut: comments match nothing.\n    if (!options.nocomment && pattern.charAt(0) === '#') {\n        return false;\n    }\n    return new Minimatch(pattern, options).match(p);\n};\n// Optimized checking for the most common glob patterns.\nconst starDotExtRE = /^\\*+([^+@!?\\*\\[\\(]*)$/;\nconst starDotExtTest = (ext) => (f) => !f.startsWith('.') && f.endsWith(ext);\nconst starDotExtTestDot = (ext) => (f) => f.endsWith(ext);\nconst starDotExtTestNocase = (ext) => {\n    ext = ext.toLowerCase();\n    return (f) => !f.startsWith('.') && f.toLowerCase().endsWith(ext);\n};\nconst starDotExtTestNocaseDot = (ext) => {\n    ext = ext.toLowerCase();\n    return (f) => f.toLowerCase().endsWith(ext);\n};\nconst starDotStarRE = /^\\*+\\.\\*+$/;\nconst starDotStarTest = (f) => !f.startsWith('.') && f.includes('.');\nconst starDotStarTestDot = (f) => f !== '.' && f !== '..' && f.includes('.');\nconst dotStarRE = /^\\.\\*+$/;\nconst dotStarTest = (f) => f !== '.' && f !== '..' && f.startsWith('.');\nconst starRE = /^\\*+$/;\nconst starTest = (f) => f.length !== 0 && !f.startsWith('.');\nconst starTestDot = (f) => f.length !== 0 && f !== '.' && f !== '..';\nconst qmarksRE = /^\\?+([^+@!?\\*\\[\\(]*)?$/;\nconst qmarksTestNocase = ([$0, ext = '']) => {\n    const noext = qmarksTestNoExt([$0]);\n    if (!ext)\n        return noext;\n    ext = ext.toLowerCase();\n    return (f) => noext(f) && f.toLowerCase().endsWith(ext);\n};\nconst qmarksTestNocaseDot = ([$0, ext = '']) => {\n    const noext = qmarksTestNoExtDot([$0]);\n    if (!ext)\n        return noext;\n    ext = ext.toLowerCase();\n    return (f) => noext(f) && f.toLowerCase().endsWith(ext);\n};\nconst qmarksTestDot = ([$0, ext = '']) => {\n    const noext = qmarksTestNoExtDot([$0]);\n    return !ext ? noext : (f) => noext(f) && f.endsWith(ext);\n};\nconst qmarksTest = ([$0, ext = '']) => {\n    const noext = qmarksTestNoExt([$0]);\n    return !ext ? noext : (f) => noext(f) && f.endsWith(ext);\n};\nconst qmarksTestNoExt = ([$0]) => {\n    const len = $0.length;\n    return (f) => f.length === len && !f.startsWith('.');\n};\nconst qmarksTestNoExtDot = ([$0]) => {\n    const len = $0.length;\n    return (f) => f.length === len && f !== '.' && f !== '..';\n};\n/* c8 ignore start */\nconst defaultPlatform = (typeof process === 'object' && process\n    ? (typeof process.env === 'object' &&\n        process.env &&\n        process.env.__MINIMATCH_TESTING_PLATFORM__) ||\n        process.platform\n    : 'posix');\nconst path = {\n    win32: { sep: '\\\\' },\n    posix: { sep: '/' },\n};\n/* c8 ignore stop */\nexport const sep = defaultPlatform === 'win32' ? path.win32.sep : path.posix.sep;\nminimatch.sep = sep;\nexport const GLOBSTAR = Symbol('globstar **');\nminimatch.GLOBSTAR = GLOBSTAR;\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nconst qmark = '[^/]';\n// * => any number of characters\nconst star = qmark + '*?';\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nconst twoStarDot = '(?:(?!(?:\\\\/|^)(?:\\\\.{1,2})($|\\\\/)).)*?';\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nconst twoStarNoDot = '(?:(?!(?:\\\\/|^)\\\\.).)*?';\nexport const filter = (pattern, options = {}) => (p) => minimatch(p, pattern, options);\nminimatch.filter = filter;\nconst ext = (a, b = {}) => Object.assign({}, a, b);\nexport const defaults = (def) => {\n    if (!def || typeof def !== 'object' || !Object.keys(def).length) {\n        return minimatch;\n    }\n    const orig = minimatch;\n    const m = (p, pattern, options = {}) => orig(p, pattern, ext(def, options));\n    return Object.assign(m, {\n        Minimatch: class Minimatch extends orig.Minimatch {\n            constructor(pattern, options = {}) {\n                super(pattern, ext(def, options));\n            }\n            static defaults(options) {\n                return orig.defaults(ext(def, options)).Minimatch;\n            }\n        },\n        AST: class AST extends orig.AST {\n            /* c8 ignore start */\n            constructor(type, parent, options = {}) {\n                super(type, parent, ext(def, options));\n            }\n            /* c8 ignore stop */\n            static fromGlob(pattern, options = {}) {\n                return orig.AST.fromGlob(pattern, ext(def, options));\n            }\n        },\n        unescape: (s, options = {}) => orig.unescape(s, ext(def, options)),\n        escape: (s, options = {}) => orig.escape(s, ext(def, options)),\n        filter: (pattern, options = {}) => orig.filter(pattern, ext(def, options)),\n        defaults: (options) => orig.defaults(ext(def, options)),\n        makeRe: (pattern, options = {}) => orig.makeRe(pattern, ext(def, options)),\n        braceExpand: (pattern, options = {}) => orig.braceExpand(pattern, ext(def, options)),\n        match: (list, pattern, options = {}) => orig.match(list, pattern, ext(def, options)),\n        sep: orig.sep,\n        GLOBSTAR: GLOBSTAR,\n    });\n};\nminimatch.defaults = defaults;\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nexport const braceExpand = (pattern, options = {}) => {\n    assertValidPattern(pattern);\n    // Thanks to Yeting Li <https://github.com/yetingli> for\n    // improving this regexp to avoid a ReDOS vulnerability.\n    if (options.nobrace || !/\\{(?:(?!\\{).)*\\}/.test(pattern)) {\n        // shortcut. no need to expand.\n        return [pattern];\n    }\n    return expand(pattern);\n};\nminimatch.braceExpand = braceExpand;\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nexport const makeRe = (pattern, options = {}) => new Minimatch(pattern, options).makeRe();\nminimatch.makeRe = makeRe;\nexport const match = (list, pattern, options = {}) => {\n    const mm = new Minimatch(pattern, options);\n    list = list.filter(f => mm.match(f));\n    if (mm.options.nonull && !list.length) {\n        list.push(pattern);\n    }\n    return list;\n};\nminimatch.match = match;\n// replace stuff like \\* with *\nconst globMagic = /[?*]|[+@!]\\(.*?\\)|\\[|\\]/;\nconst regExpEscape = (s) => s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\nexport class Minimatch {\n    options;\n    set;\n    pattern;\n    windowsPathsNoEscape;\n    nonegate;\n    negate;\n    comment;\n    empty;\n    preserveMultipleSlashes;\n    partial;\n    globSet;\n    globParts;\n    nocase;\n    isWindows;\n    platform;\n    windowsNoMagicRoot;\n    regexp;\n    constructor(pattern, options = {}) {\n        assertValidPattern(pattern);\n        options = options || {};\n        this.options = options;\n        this.pattern = pattern;\n        this.platform = options.platform || defaultPlatform;\n        this.isWindows = this.platform === 'win32';\n        this.windowsPathsNoEscape =\n            !!options.windowsPathsNoEscape || options.allowWindowsEscape === false;\n        if (this.windowsPathsNoEscape) {\n            this.pattern = this.pattern.replace(/\\\\/g, '/');\n        }\n        this.preserveMultipleSlashes = !!options.preserveMultipleSlashes;\n        this.regexp = null;\n        this.negate = false;\n        this.nonegate = !!options.nonegate;\n        this.comment = false;\n        this.empty = false;\n        this.partial = !!options.partial;\n        this.nocase = !!this.options.nocase;\n        this.windowsNoMagicRoot =\n            options.windowsNoMagicRoot !== undefined\n                ? options.windowsNoMagicRoot\n                : !!(this.isWindows && this.nocase);\n        this.globSet = [];\n        this.globParts = [];\n        this.set = [];\n        // make the set of regexps etc.\n        this.make();\n    }\n    hasMagic() {\n        if (this.options.magicalBraces && this.set.length > 1) {\n            return true;\n        }\n        for (const pattern of this.set) {\n            for (const part of pattern) {\n                if (typeof part !== 'string')\n                    return true;\n            }\n        }\n        return false;\n    }\n    debug(..._) { }\n    make() {\n        const pattern = this.pattern;\n        const options = this.options;\n        // empty patterns and comments match nothing.\n        if (!options.nocomment && pattern.charAt(0) === '#') {\n            this.comment = true;\n            return;\n        }\n        if (!pattern) {\n            this.empty = true;\n            return;\n        }\n        // step 1: figure out negation, etc.\n        this.parseNegate();\n        // step 2: expand braces\n        this.globSet = [...new Set(this.braceExpand())];\n        if (options.debug) {\n            this.debug = (...args) => console.error(...args);\n        }\n        this.debug(this.pattern, this.globSet);\n        // step 3: now we have a set, so turn each one into a series of\n        // path-portion matching patterns.\n        // These will be regexps, except in the case of \"**\", which is\n        // set to the GLOBSTAR object for globstar behavior,\n        // and will not contain any / characters\n        //\n        // First, we preprocess to make the glob pattern sets a bit simpler\n        // and deduped.  There are some perf-killing patterns that can cause\n        // problems with a glob walk, but we can simplify them down a bit.\n        const rawGlobParts = this.globSet.map(s => this.slashSplit(s));\n        this.globParts = this.preprocess(rawGlobParts);\n        this.debug(this.pattern, this.globParts);\n        // glob --> regexps\n        let set = this.globParts.map((s, _, __) => {\n            if (this.isWindows && this.windowsNoMagicRoot) {\n                // check if it's a drive or unc path.\n                const isUNC = s[0] === '' &&\n                    s[1] === '' &&\n                    (s[2] === '?' || !globMagic.test(s[2])) &&\n                    !globMagic.test(s[3]);\n                const isDrive = /^[a-z]:/i.test(s[0]);\n                if (isUNC) {\n                    return [...s.slice(0, 4), ...s.slice(4).map(ss => this.parse(ss))];\n                }\n                else if (isDrive) {\n                    return [s[0], ...s.slice(1).map(ss => this.parse(ss))];\n                }\n            }\n            return s.map(ss => this.parse(ss));\n        });\n        this.debug(this.pattern, set);\n        // filter out everything that didn't compile properly.\n        this.set = set.filter(s => s.indexOf(false) === -1);\n        // do not treat the ? in UNC paths as magic\n        if (this.isWindows) {\n            for (let i = 0; i < this.set.length; i++) {\n                const p = this.set[i];\n                if (p[0] === '' &&\n                    p[1] === '' &&\n                    this.globParts[i][2] === '?' &&\n                    typeof p[3] === 'string' &&\n                    /^[a-z]:$/i.test(p[3])) {\n                    p[2] = '?';\n                }\n            }\n        }\n        this.debug(this.pattern, this.set);\n    }\n    // various transforms to equivalent pattern sets that are\n    // faster to process in a filesystem walk.  The goal is to\n    // eliminate what we can, and push all ** patterns as far\n    // to the right as possible, even if it increases the number\n    // of patterns that we have to process.\n    preprocess(globParts) {\n        // if we're not in globstar mode, then turn all ** into *\n        if (this.options.noglobstar) {\n            for (let i = 0; i < globParts.length; i++) {\n                for (let j = 0; j < globParts[i].length; j++) {\n                    if (globParts[i][j] === '**') {\n                        globParts[i][j] = '*';\n                    }\n                }\n            }\n        }\n        const { optimizationLevel = 1 } = this.options;\n        if (optimizationLevel >= 2) {\n            // aggressive optimization for the purpose of fs walking\n            globParts = this.firstPhasePreProcess(globParts);\n            globParts = this.secondPhasePreProcess(globParts);\n        }\n        else if (optimizationLevel >= 1) {\n            // just basic optimizations to remove some .. parts\n            globParts = this.levelOneOptimize(globParts);\n        }\n        else {\n            globParts = this.adjascentGlobstarOptimize(globParts);\n        }\n        return globParts;\n    }\n    // just get rid of adjascent ** portions\n    adjascentGlobstarOptimize(globParts) {\n        return globParts.map(parts => {\n            let gs = -1;\n            while (-1 !== (gs = parts.indexOf('**', gs + 1))) {\n                let i = gs;\n                while (parts[i + 1] === '**') {\n                    i++;\n                }\n                if (i !== gs) {\n                    parts.splice(gs, i - gs);\n                }\n            }\n            return parts;\n        });\n    }\n    // get rid of adjascent ** and resolve .. portions\n    levelOneOptimize(globParts) {\n        return globParts.map(parts => {\n            parts = parts.reduce((set, part) => {\n                const prev = set[set.length - 1];\n                if (part === '**' && prev === '**') {\n                    return set;\n                }\n                if (part === '..') {\n                    if (prev && prev !== '..' && prev !== '.' && prev !== '**') {\n                        set.pop();\n                        return set;\n                    }\n                }\n                set.push(part);\n                return set;\n            }, []);\n            return parts.length === 0 ? [''] : parts;\n        });\n    }\n    levelTwoFileOptimize(parts) {\n        if (!Array.isArray(parts)) {\n            parts = this.slashSplit(parts);\n        }\n        let didSomething = false;\n        do {\n            didSomething = false;\n            // <pre>/<e>/<rest> -> <pre>/<rest>\n            if (!this.preserveMultipleSlashes) {\n                for (let i = 1; i < parts.length - 1; i++) {\n                    const p = parts[i];\n                    // don't squeeze out UNC patterns\n                    if (i === 1 && p === '' && parts[0] === '')\n                        continue;\n                    if (p === '.' || p === '') {\n                        didSomething = true;\n                        parts.splice(i, 1);\n                        i--;\n                    }\n                }\n                if (parts[0] === '.' &&\n                    parts.length === 2 &&\n                    (parts[1] === '.' || parts[1] === '')) {\n                    didSomething = true;\n                    parts.pop();\n                }\n            }\n            // <pre>/<p>/../<rest> -> <pre>/<rest>\n            let dd = 0;\n            while (-1 !== (dd = parts.indexOf('..', dd + 1))) {\n                const p = parts[dd - 1];\n                if (p && p !== '.' && p !== '..' && p !== '**') {\n                    didSomething = true;\n                    parts.splice(dd - 1, 2);\n                    dd -= 2;\n                }\n            }\n        } while (didSomething);\n        return parts.length === 0 ? [''] : parts;\n    }\n    // First phase: single-pattern processing\n    // <pre> is 1 or more portions\n    // <rest> is 1 or more portions\n    // <p> is any portion other than ., .., '', or **\n    // <e> is . or ''\n    //\n    // **/.. is *brutal* for filesystem walking performance, because\n    // it effectively resets the recursive walk each time it occurs,\n    // and ** cannot be reduced out by a .. pattern part like a regexp\n    // or most strings (other than .., ., and '') can be.\n    //\n    // <pre>/**/../<p>/<p>/<rest> -> {<pre>/../<p>/<p>/<rest>,<pre>/**/<p>/<p>/<rest>}\n    // <pre>/<e>/<rest> -> <pre>/<rest>\n    // <pre>/<p>/../<rest> -> <pre>/<rest>\n    // **/**/<rest> -> **/<rest>\n    //\n    // **/*/<rest> -> */**/<rest> <== not valid because ** doesn't follow\n    // this WOULD be allowed if ** did follow symlinks, or * didn't\n    firstPhasePreProcess(globParts) {\n        let didSomething = false;\n        do {\n            didSomething = false;\n            // <pre>/**/../<p>/<p>/<rest> -> {<pre>/../<p>/<p>/<rest>,<pre>/**/<p>/<p>/<rest>}\n            for (let parts of globParts) {\n                let gs = -1;\n                while (-1 !== (gs = parts.indexOf('**', gs + 1))) {\n                    let gss = gs;\n                    while (parts[gss + 1] === '**') {\n                        // <pre>/**/**/<rest> -> <pre>/**/<rest>\n                        gss++;\n                    }\n                    // eg, if gs is 2 and gss is 4, that means we have 3 **\n                    // parts, and can remove 2 of them.\n                    if (gss > gs) {\n                        parts.splice(gs + 1, gss - gs);\n                    }\n                    let next = parts[gs + 1];\n                    const p = parts[gs + 2];\n                    const p2 = parts[gs + 3];\n                    if (next !== '..')\n                        continue;\n                    if (!p ||\n                        p === '.' ||\n                        p === '..' ||\n                        !p2 ||\n                        p2 === '.' ||\n                        p2 === '..') {\n                        continue;\n                    }\n                    didSomething = true;\n                    // edit parts in place, and push the new one\n                    parts.splice(gs, 1);\n                    const other = parts.slice(0);\n                    other[gs] = '**';\n                    globParts.push(other);\n                    gs--;\n                }\n                // <pre>/<e>/<rest> -> <pre>/<rest>\n                if (!this.preserveMultipleSlashes) {\n                    for (let i = 1; i < parts.length - 1; i++) {\n                        const p = parts[i];\n                        // don't squeeze out UNC patterns\n                        if (i === 1 && p === '' && parts[0] === '')\n                            continue;\n                        if (p === '.' || p === '') {\n                            didSomething = true;\n                            parts.splice(i, 1);\n                            i--;\n                        }\n                    }\n                    if (parts[0] === '.' &&\n                        parts.length === 2 &&\n                        (parts[1] === '.' || parts[1] === '')) {\n                        didSomething = true;\n                        parts.pop();\n                    }\n                }\n                // <pre>/<p>/../<rest> -> <pre>/<rest>\n                let dd = 0;\n                while (-1 !== (dd = parts.indexOf('..', dd + 1))) {\n                    const p = parts[dd - 1];\n                    if (p && p !== '.' && p !== '..' && p !== '**') {\n                        didSomething = true;\n                        const needDot = dd === 1 && parts[dd + 1] === '**';\n                        const splin = needDot ? ['.'] : [];\n                        parts.splice(dd - 1, 2, ...splin);\n                        if (parts.length === 0)\n                            parts.push('');\n                        dd -= 2;\n                    }\n                }\n            }\n        } while (didSomething);\n        return globParts;\n    }\n    // second phase: multi-pattern dedupes\n    // {<pre>/*/<rest>,<pre>/<p>/<rest>} -> <pre>/*/<rest>\n    // {<pre>/<rest>,<pre>/<rest>} -> <pre>/<rest>\n    // {<pre>/**/<rest>,<pre>/<rest>} -> <pre>/**/<rest>\n    //\n    // {<pre>/**/<rest>,<pre>/**/<p>/<rest>} -> <pre>/**/<rest>\n    // ^-- not valid because ** doens't follow symlinks\n    secondPhasePreProcess(globParts) {\n        for (let i = 0; i < globParts.length - 1; i++) {\n            for (let j = i + 1; j < globParts.length; j++) {\n                const matched = this.partsMatch(globParts[i], globParts[j], !this.preserveMultipleSlashes);\n                if (!matched)\n                    continue;\n                globParts[i] = matched;\n                globParts[j] = [];\n            }\n        }\n        return globParts.filter(gs => gs.length);\n    }\n    partsMatch(a, b, emptyGSMatch = false) {\n        let ai = 0;\n        let bi = 0;\n        let result = [];\n        let which = '';\n        while (ai < a.length && bi < b.length) {\n            if (a[ai] === b[bi]) {\n                result.push(which === 'b' ? b[bi] : a[ai]);\n                ai++;\n                bi++;\n            }\n            else if (emptyGSMatch && a[ai] === '**' && b[bi] === a[ai + 1]) {\n                result.push(a[ai]);\n                ai++;\n            }\n            else if (emptyGSMatch && b[bi] === '**' && a[ai] === b[bi + 1]) {\n                result.push(b[bi]);\n                bi++;\n            }\n            else if (a[ai] === '*' &&\n                b[bi] &&\n                (this.options.dot || !b[bi].startsWith('.')) &&\n                b[bi] !== '**') {\n                if (which === 'b')\n                    return false;\n                which = 'a';\n                result.push(a[ai]);\n                ai++;\n                bi++;\n            }\n            else if (b[bi] === '*' &&\n                a[ai] &&\n                (this.options.dot || !a[ai].startsWith('.')) &&\n                a[ai] !== '**') {\n                if (which === 'a')\n                    return false;\n                which = 'b';\n                result.push(b[bi]);\n                ai++;\n                bi++;\n            }\n            else {\n                return false;\n            }\n        }\n        // if we fall out of the loop, it means they two are identical\n        // as long as their lengths match\n        return a.length === b.length && result;\n    }\n    parseNegate() {\n        if (this.nonegate)\n            return;\n        const pattern = this.pattern;\n        let negate = false;\n        let negateOffset = 0;\n        for (let i = 0; i < pattern.length && pattern.charAt(i) === '!'; i++) {\n            negate = !negate;\n            negateOffset++;\n        }\n        if (negateOffset)\n            this.pattern = pattern.slice(negateOffset);\n        this.negate = negate;\n    }\n    // set partial to true to test if, for example,\n    // \"/a/b\" matches the start of \"/*/b/*/d\"\n    // Partial means, if you run out of file before you run\n    // out of pattern, then that's fine, as long as all\n    // the parts match.\n    matchOne(file, pattern, partial = false) {\n        const options = this.options;\n        // UNC paths like //?/X:/... can match X:/... and vice versa\n        // Drive letters in absolute drive or unc paths are always compared\n        // case-insensitively.\n        if (this.isWindows) {\n            const fileDrive = typeof file[0] === 'string' && /^[a-z]:$/i.test(file[0]);\n            const fileUNC = !fileDrive &&\n                file[0] === '' &&\n                file[1] === '' &&\n                file[2] === '?' &&\n                /^[a-z]:$/i.test(file[3]);\n            const patternDrive = typeof pattern[0] === 'string' && /^[a-z]:$/i.test(pattern[0]);\n            const patternUNC = !patternDrive &&\n                pattern[0] === '' &&\n                pattern[1] === '' &&\n                pattern[2] === '?' &&\n                typeof pattern[3] === 'string' &&\n                /^[a-z]:$/i.test(pattern[3]);\n            const fdi = fileUNC ? 3 : fileDrive ? 0 : undefined;\n            const pdi = patternUNC ? 3 : patternDrive ? 0 : undefined;\n            if (typeof fdi === 'number' && typeof pdi === 'number') {\n                const [fd, pd] = [file[fdi], pattern[pdi]];\n                if (fd.toLowerCase() === pd.toLowerCase()) {\n                    pattern[pdi] = fd;\n                    if (pdi > fdi) {\n                        pattern = pattern.slice(pdi);\n                    }\n                    else if (fdi > pdi) {\n                        file = file.slice(fdi);\n                    }\n                }\n            }\n        }\n        // resolve and reduce . and .. portions in the file as well.\n        // dont' need to do the second phase, because it's only one string[]\n        const { optimizationLevel = 1 } = this.options;\n        if (optimizationLevel >= 2) {\n            file = this.levelTwoFileOptimize(file);\n        }\n        this.debug('matchOne', this, { file, pattern });\n        this.debug('matchOne', file.length, pattern.length);\n        for (var fi = 0, pi = 0, fl = file.length, pl = pattern.length; fi < fl && pi < pl; fi++, pi++) {\n            this.debug('matchOne loop');\n            var p = pattern[pi];\n            var f = file[fi];\n            this.debug(pattern, p, f);\n            // should be impossible.\n            // some invalid regexp stuff in the set.\n            /* c8 ignore start */\n            if (p === false) {\n                return false;\n            }\n            /* c8 ignore stop */\n            if (p === GLOBSTAR) {\n                this.debug('GLOBSTAR', [pattern, p, f]);\n                // \"**\"\n                // a/**/b/**/c would match the following:\n                // a/b/x/y/z/c\n                // a/x/y/z/b/c\n                // a/b/x/b/x/c\n                // a/b/c\n                // To do this, take the rest of the pattern after\n                // the **, and see if it would match the file remainder.\n                // If so, return success.\n                // If not, the ** \"swallows\" a segment, and try again.\n                // This is recursively awful.\n                //\n                // a/**/b/**/c matching a/b/x/y/z/c\n                // - a matches a\n                // - doublestar\n                //   - matchOne(b/x/y/z/c, b/**/c)\n                //     - b matches b\n                //     - doublestar\n                //       - matchOne(x/y/z/c, c) -> no\n                //       - matchOne(y/z/c, c) -> no\n                //       - matchOne(z/c, c) -> no\n                //       - matchOne(c, c) yes, hit\n                var fr = fi;\n                var pr = pi + 1;\n                if (pr === pl) {\n                    this.debug('** at the end');\n                    // a ** at the end will just swallow the rest.\n                    // We have found a match.\n                    // however, it will not swallow /.x, unless\n                    // options.dot is set.\n                    // . and .. are *never* matched by **, for explosively\n                    // exponential reasons.\n                    for (; fi < fl; fi++) {\n                        if (file[fi] === '.' ||\n                            file[fi] === '..' ||\n                            (!options.dot && file[fi].charAt(0) === '.'))\n                            return false;\n                    }\n                    return true;\n                }\n                // ok, let's see if we can swallow whatever we can.\n                while (fr < fl) {\n                    var swallowee = file[fr];\n                    this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee);\n                    // XXX remove this slice.  Just pass the start index.\n                    if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n                        this.debug('globstar found match!', fr, fl, swallowee);\n                        // found a match.\n                        return true;\n                    }\n                    else {\n                        // can't swallow \".\" or \"..\" ever.\n                        // can only swallow \".foo\" when explicitly asked.\n                        if (swallowee === '.' ||\n                            swallowee === '..' ||\n                            (!options.dot && swallowee.charAt(0) === '.')) {\n                            this.debug('dot detected!', file, fr, pattern, pr);\n                            break;\n                        }\n                        // ** swallows a segment, and continue.\n                        this.debug('globstar swallow a segment, and continue');\n                        fr++;\n                    }\n                }\n                // no match was found.\n                // However, in partial mode, we can't say this is necessarily over.\n                /* c8 ignore start */\n                if (partial) {\n                    // ran out of file\n                    this.debug('\\n>>> no match, partial?', file, fr, pattern, pr);\n                    if (fr === fl) {\n                        return true;\n                    }\n                }\n                /* c8 ignore stop */\n                return false;\n            }\n            // something other than **\n            // non-magic patterns just have to match exactly\n            // patterns with magic have been turned into regexps.\n            let hit;\n            if (typeof p === 'string') {\n                hit = f === p;\n                this.debug('string match', p, f, hit);\n            }\n            else {\n                hit = p.test(f);\n                this.debug('pattern match', p, f, hit);\n            }\n            if (!hit)\n                return false;\n        }\n        // Note: ending in / means that we'll get a final \"\"\n        // at the end of the pattern.  This can only match a\n        // corresponding \"\" at the end of the file.\n        // If the file ends in /, then it can only match a\n        // a pattern that ends in /, unless the pattern just\n        // doesn't have any more for it. But, a/b/ should *not*\n        // match \"a/b/*\", even though \"\" matches against the\n        // [^/]*? pattern, except in partial mode, where it might\n        // simply not be reached yet.\n        // However, a/b/ should still satisfy a/*\n        // now either we fell off the end of the pattern, or we're done.\n        if (fi === fl && pi === pl) {\n            // ran out of pattern and filename at the same time.\n            // an exact hit!\n            return true;\n        }\n        else if (fi === fl) {\n            // ran out of file, but still had pattern left.\n            // this is ok if we're doing the match as part of\n            // a glob fs traversal.\n            return partial;\n        }\n        else if (pi === pl) {\n            // ran out of pattern, still have file left.\n            // this is only acceptable if we're on the very last\n            // empty segment of a file with a trailing slash.\n            // a/* should match a/b/\n            return fi === fl - 1 && file[fi] === '';\n            /* c8 ignore start */\n        }\n        else {\n            // should be unreachable.\n            throw new Error('wtf?');\n        }\n        /* c8 ignore stop */\n    }\n    braceExpand() {\n        return braceExpand(this.pattern, this.options);\n    }\n    parse(pattern) {\n        assertValidPattern(pattern);\n        const options = this.options;\n        // shortcuts\n        if (pattern === '**')\n            return GLOBSTAR;\n        if (pattern === '')\n            return '';\n        // far and away, the most common glob pattern parts are\n        // *, *.*, and *.<ext>  Add a fast check method for those.\n        let m;\n        let fastTest = null;\n        if ((m = pattern.match(starRE))) {\n            fastTest = options.dot ? starTestDot : starTest;\n        }\n        else if ((m = pattern.match(starDotExtRE))) {\n            fastTest = (options.nocase\n                ? options.dot\n                    ? starDotExtTestNocaseDot\n                    : starDotExtTestNocase\n                : options.dot\n                    ? starDotExtTestDot\n                    : starDotExtTest)(m[1]);\n        }\n        else if ((m = pattern.match(qmarksRE))) {\n            fastTest = (options.nocase\n                ? options.dot\n                    ? qmarksTestNocaseDot\n                    : qmarksTestNocase\n                : options.dot\n                    ? qmarksTestDot\n                    : qmarksTest)(m);\n        }\n        else if ((m = pattern.match(starDotStarRE))) {\n            fastTest = options.dot ? starDotStarTestDot : starDotStarTest;\n        }\n        else if ((m = pattern.match(dotStarRE))) {\n            fastTest = dotStarTest;\n        }\n        const re = AST.fromGlob(pattern, this.options).toMMPattern();\n        return fastTest ? Object.assign(re, { test: fastTest }) : re;\n    }\n    makeRe() {\n        if (this.regexp || this.regexp === false)\n            return this.regexp;\n        // at this point, this.set is a 2d array of partial\n        // pattern strings, or \"**\".\n        //\n        // It's better to use .match().  This function shouldn't\n        // be used, really, but it's pretty convenient sometimes,\n        // when you just want to work with a regex.\n        const set = this.set;\n        if (!set.length) {\n            this.regexp = false;\n            return this.regexp;\n        }\n        const options = this.options;\n        const twoStar = options.noglobstar\n            ? star\n            : options.dot\n                ? twoStarDot\n                : twoStarNoDot;\n        const flags = new Set(options.nocase ? ['i'] : []);\n        // regexpify non-globstar patterns\n        // if ** is only item, then we just do one twoStar\n        // if ** is first, and there are more, prepend (\\/|twoStar\\/)? to next\n        // if ** is last, append (\\/twoStar|) to previous\n        // if ** is in the middle, append (\\/|\\/twoStar\\/) to previous\n        // then filter out GLOBSTAR symbols\n        let re = set\n            .map(pattern => {\n            const pp = pattern.map(p => {\n                if (p instanceof RegExp) {\n                    for (const f of p.flags.split(''))\n                        flags.add(f);\n                }\n                return typeof p === 'string'\n                    ? regExpEscape(p)\n                    : p === GLOBSTAR\n                        ? GLOBSTAR\n                        : p._src;\n            });\n            pp.forEach((p, i) => {\n                const next = pp[i + 1];\n                const prev = pp[i - 1];\n                if (p !== GLOBSTAR || prev === GLOBSTAR) {\n                    return;\n                }\n                if (prev === undefined) {\n                    if (next !== undefined && next !== GLOBSTAR) {\n                        pp[i + 1] = '(?:\\\\/|' + twoStar + '\\\\/)?' + next;\n                    }\n                    else {\n                        pp[i] = twoStar;\n                    }\n                }\n                else if (next === undefined) {\n                    pp[i - 1] = prev + '(?:\\\\/|' + twoStar + ')?';\n                }\n                else if (next !== GLOBSTAR) {\n                    pp[i - 1] = prev + '(?:\\\\/|\\\\/' + twoStar + '\\\\/)' + next;\n                    pp[i + 1] = GLOBSTAR;\n                }\n            });\n            return pp.filter(p => p !== GLOBSTAR).join('/');\n        })\n            .join('|');\n        // need to wrap in parens if we had more than one thing with |,\n        // otherwise only the first will be anchored to ^ and the last to $\n        const [open, close] = set.length > 1 ? ['(?:', ')'] : ['', ''];\n        // must match entire pattern\n        // ending in a * or ** will make it less strict.\n        re = '^' + open + re + close + '$';\n        // can match anything, as long as it's not this.\n        if (this.negate)\n            re = '^(?!' + re + ').+$';\n        try {\n            this.regexp = new RegExp(re, [...flags].join(''));\n            /* c8 ignore start */\n        }\n        catch (ex) {\n            // should be impossible\n            this.regexp = false;\n        }\n        /* c8 ignore stop */\n        return this.regexp;\n    }\n    slashSplit(p) {\n        // if p starts with // on windows, we preserve that\n        // so that UNC paths aren't broken.  Otherwise, any number of\n        // / characters are coalesced into one, unless\n        // preserveMultipleSlashes is set to true.\n        if (this.preserveMultipleSlashes) {\n            return p.split('/');\n        }\n        else if (this.isWindows && /^\\/\\/[^\\/]+/.test(p)) {\n            // add an extra '' for the one we lose\n            return ['', ...p.split(/\\/+/)];\n        }\n        else {\n            return p.split(/\\/+/);\n        }\n    }\n    match(f, partial = this.partial) {\n        this.debug('match', f, this.pattern);\n        // short-circuit in the case of busted things.\n        // comments, etc.\n        if (this.comment) {\n            return false;\n        }\n        if (this.empty) {\n            return f === '';\n        }\n        if (f === '/' && partial) {\n            return true;\n        }\n        const options = this.options;\n        // windows: need to use /, not \\\n        if (this.isWindows) {\n            f = f.split('\\\\').join('/');\n        }\n        // treat the test path as a set of pathparts.\n        const ff = this.slashSplit(f);\n        this.debug(this.pattern, 'split', ff);\n        // just ONE of the pattern sets in this.set needs to match\n        // in order for it to be valid.  If negating, then just one\n        // match means that we have failed.\n        // Either way, return on the first hit.\n        const set = this.set;\n        this.debug(this.pattern, 'set', set);\n        // Find the basename of the path by looking for the last non-empty segment\n        let filename = ff[ff.length - 1];\n        if (!filename) {\n            for (let i = ff.length - 2; !filename && i >= 0; i--) {\n                filename = ff[i];\n            }\n        }\n        for (let i = 0; i < set.length; i++) {\n            const pattern = set[i];\n            let file = ff;\n            if (options.matchBase && pattern.length === 1) {\n                file = [filename];\n            }\n            const hit = this.matchOne(file, pattern, partial);\n            if (hit) {\n                if (options.flipNegate) {\n                    return true;\n                }\n                return !this.negate;\n            }\n        }\n        // didn't get any hits.  this is success if it's a negative\n        // pattern, failure otherwise.\n        if (options.flipNegate) {\n            return false;\n        }\n        return this.negate;\n    }\n    static defaults(def) {\n        return minimatch.defaults(def).Minimatch;\n    }\n}\n/* c8 ignore start */\nexport { AST } from './ast.js';\nexport { escape } from './escape.js';\nexport { unescape } from './unescape.js';\n/* c8 ignore stop */\nminimatch.AST = AST;\nminimatch.Minimatch = Minimatch;\nminimatch.escape = escape;\nminimatch.unescape = unescape;\n//# sourceMappingURL=index.js.map","import { assertExists } from '@blocksuite/global/utils';\nimport * as Y from 'yjs';\n\nimport { Boxed, type UnRecord, y2Native } from '../../reactive/index.js';\nimport { createYProxy, native2Y } from '../../reactive/index.js';\nimport { BlockModel, internalPrimitives } from '../../schema/base.js';\nimport type { Schema } from '../../schema/index.js';\n\nexport type YBlock = Y.Map<unknown>;\n\nexport type BlockOptions = Partial<{\n  onChange: (block: Block, key: string, value: unknown) => void;\n}>;\n\nexport class Block {\n  readonly model: BlockModel;\n  readonly id: string;\n  readonly flavour: string;\n  readonly version: number;\n  readonly yChildren: Y.Array<string[]>;\n  private _byPassProxy: boolean = false;\n  private readonly _stashed: Set<string | number> = new Set();\n\n  constructor(\n    readonly schema: Schema,\n    readonly yBlock: YBlock,\n    readonly options: BlockOptions = {}\n  ) {\n    const { id, flavour, version, yChildren, props } = this._parseYBlock();\n\n    this.id = id;\n    this.flavour = flavour;\n    this.yChildren = yChildren;\n    this.version = version;\n\n    this.model = this._createModel(props);\n\n    this.yChildren.observe(() => {\n      this.model.childrenUpdated.emit();\n    });\n\n    this.yBlock.observe(event => {\n      event.keysChanged.forEach(key => {\n        const type = event.changes.keys.get(key);\n        if (!type) {\n          return;\n        }\n        if (type.action === 'update' || type.action === 'add') {\n          const value = this.yBlock.get(key);\n          const keyName = key.replace('prop:', '');\n          const proxy = this._getPropsProxy(keyName, value);\n          this._byPassUpdate(() => {\n            // @ts-ignore\n            this.model[keyName] = proxy;\n          });\n          this.options.onChange?.(this, keyName, value);\n          return;\n        }\n        if (type.action === 'delete') {\n          const keyName = key.replace('prop:', '');\n          this._byPassUpdate(() => {\n            // @ts-ignore\n            delete this.model[keyName];\n          });\n          this.options.onChange?.(this, keyName, undefined);\n          return;\n        }\n      });\n    });\n\n    this.yBlock.observeDeep(evtArr => {\n      const evt = evtArr[0];\n      // filter out events from itself\n      // as this event is triggered in observe function\n      if (!evt || evt.currentTarget === evt.target) return;\n\n      this.options.onChange?.(this, '', undefined);\n    });\n  }\n\n  stash = (prop: string) => {\n    if (this._stashed.has(prop)) return;\n\n    this._stashed.add(prop);\n    // @ts-ignore\n    this.model[prop] = y2Native(this.yBlock.get(`prop:${prop}`), {\n      transform: (value, origin) => {\n        if (Boxed.is(origin)) {\n          return value;\n        }\n        if (origin instanceof Y.Map) {\n          return new Proxy(value as UnRecord, {\n            get: (target, p, receiver) => {\n              return Reflect.get(target, p, receiver);\n            },\n            set: (target, p, value, receiver) => {\n              const result = Reflect.set(target, p, value, receiver);\n              this.options.onChange?.(this, prop, value);\n              return result;\n            },\n            deleteProperty: (target, p) => {\n              const result = Reflect.deleteProperty(target, p);\n              this.options.onChange?.(this, prop, undefined);\n              return result;\n            },\n          });\n        }\n        if (origin instanceof Y.Array) {\n          return new Proxy(value as unknown[], {\n            get: (target, p, receiver) => {\n              return Reflect.get(target, p, receiver);\n            },\n            set: (target, p, value, receiver) => {\n              const index = Number(p);\n              if (Number.isNaN(index)) {\n                return Reflect.set(target, p, value, receiver);\n              }\n              const result = Reflect.set(target, p, value, receiver);\n              this.options.onChange?.(this, prop, value);\n              return result;\n            },\n            deleteProperty: (target, p) => {\n              const result = Reflect.deleteProperty(target, p);\n              this.options.onChange?.(this, p as string, undefined);\n              return result;\n            },\n          });\n        }\n\n        return value;\n      },\n    });\n  };\n\n  pop = (prop: string) => {\n    if (!this._stashed.has(prop)) return;\n\n    // @ts-ignore\n    const value = this.model[prop];\n\n    this._stashed.delete(prop);\n\n    // @ts-ignore\n    this.model[prop] = value;\n  };\n\n  private _byPassUpdate = (fn: () => void) => {\n    this._byPassProxy = true;\n    fn();\n    this._byPassProxy = false;\n  };\n\n  private _getPropsProxy = (name: string, value: unknown) => {\n    return createYProxy(value, {\n      onChange: () => {\n        this.options.onChange?.(this, name, value);\n      },\n    });\n  };\n\n  private _parseYBlock() {\n    let id: string | undefined;\n    let flavour: string | undefined;\n    let version: number | undefined;\n    let yChildren: Y.Array<string[]> | undefined;\n    const props: Record<string, unknown> = {};\n\n    this.yBlock.forEach((value, key) => {\n      if (key.startsWith('prop:')) {\n        const keyName = key.replace('prop:', '');\n        props[keyName] = this._getPropsProxy(keyName, value);\n        return;\n      }\n      if (key === 'sys:id' && typeof value === 'string') {\n        id = value;\n        return;\n      }\n      if (key === 'sys:flavour' && typeof value === 'string') {\n        flavour = value;\n        return;\n      }\n      if (key === 'sys:children' && value instanceof Y.Array) {\n        yChildren = value;\n        return;\n      }\n      if (key === 'sys:version' && typeof value === 'number') {\n        version = value;\n        return;\n      }\n    });\n\n    assertExists(id, 'Block id is not found');\n    assertExists(flavour, 'Block flavour is not found');\n    assertExists(yChildren, 'Block children is not found');\n\n    const schema = this.schema.flavourSchemaMap.get(flavour);\n    assertExists(schema, `Cannot find schema for flavour ${flavour}`);\n    const defaultProps = schema.model.props?.(internalPrimitives);\n\n    if (typeof version !== 'number') {\n      // no version found in data, set to schema version\n      version = schema.version;\n    }\n\n    // Set default props if not exists\n    if (defaultProps) {\n      Object.entries(defaultProps).forEach(([key, value]) => {\n        if (props[key] !== undefined) return;\n\n        const yValue = native2Y(value);\n        this.yBlock.set(`prop:${key}`, yValue);\n        props[key] = this._getPropsProxy(key, yValue);\n      });\n    }\n\n    return {\n      id,\n      flavour,\n      version,\n      props,\n      yChildren,\n    };\n  }\n\n  private _createModel(props: UnRecord) {\n    const schema = this.schema.flavourSchemaMap.get(this.flavour);\n    assertExists(schema, `Cannot find schema for flavour ${this.flavour}`);\n\n    const model = schema.model.toModel?.() ?? new BlockModel<object>();\n    Object.assign(model, props);\n\n    model.id = this.id;\n    model.version = this.version;\n    model.keys = Object.keys(props);\n    model.flavour = schema.model.flavour;\n    model.role = schema.model.role;\n    model.yBlock = this.yBlock;\n    model.stash = this.stash;\n    model.pop = this.pop;\n\n    return new Proxy(model, {\n      has: (target, p) => {\n        return Reflect.has(target, p);\n      },\n      set: (target, p, value, receiver) => {\n        if (\n          !this._byPassProxy &&\n          typeof p === 'string' &&\n          model.keys.includes(p)\n        ) {\n          if (this._stashed.has(p)) {\n            const result = Reflect.set(target, p, value, receiver);\n            this.options.onChange?.(this, p, value);\n            return result;\n          }\n\n          const yValue = native2Y(value);\n          this.yBlock.set(`prop:${p}`, yValue);\n          const proxy = this._getPropsProxy(p, yValue);\n          return Reflect.set(target, p, proxy, receiver);\n        }\n\n        return Reflect.set(target, p, value, receiver);\n      },\n      get: (target, p, receiver) => {\n        return Reflect.get(target, p, receiver);\n      },\n      deleteProperty: (target, p) => {\n        if (\n          !this._byPassProxy &&\n          typeof p === 'string' &&\n          model.keys.includes(p)\n        ) {\n          this.yBlock.delete(`prop:${p}`);\n        }\n\n        return Reflect.deleteProperty(target, p);\n      },\n    });\n  }\n}\n","enum ErrorCode {\n  MIGRATION_ERROR = 100,\n  SCHEMA_VALIDATE_ERROR,\n}\n\nexport const kInternalError = Symbol('internal_error');\n\nexport abstract class BlockSuiteError extends Error {\n  [kInternalError] = true;\n\n  code: ErrorCode;\n\n  constructor(code: ErrorCode, message: string) {\n    super(message);\n    this.code = code;\n  }\n}\n\nexport class MigrationError extends BlockSuiteError {\n  constructor(description: string) {\n    super(\n      ErrorCode.MIGRATION_ERROR,\n      `Migration failed. Please report to https://github.com/toeverything/blocksuite/issues\n          ${description}`\n    );\n  }\n}\n\nexport class SchemaValidateError extends BlockSuiteError {\n  constructor(flavour: string, message: string) {\n    super(\n      ErrorCode.SCHEMA_VALIDATE_ERROR,\n      `Invalid schema for ${flavour}: ${message}`\n    );\n  }\n}\n","import { assertExists } from '@blocksuite/global/utils';\nimport { minimatch } from 'minimatch';\nimport type * as Y from 'yjs';\n\nimport { SCHEMA_NOT_FOUND_MESSAGE } from '../consts.js';\nimport { pageMigrations, workspaceMigrations } from '../migration/index.js';\nimport { Block } from '../workspace/block/block.js';\nimport type { BlockSchemaType } from './base.js';\nimport { BlockSchema } from './base.js';\nimport { MigrationError, SchemaValidateError } from './error.js';\n\nexport class Schema {\n  readonly flavourSchemaMap = new Map<string, BlockSchemaType>();\n\n  get versions() {\n    return Object.fromEntries(\n      Array.from(this.flavourSchemaMap.values()).map(\n        (schema): [string, number] => [schema.model.flavour, schema.version]\n      )\n    );\n  }\n\n  toJSON() {\n    return Object.fromEntries(\n      Array.from(this.flavourSchemaMap.values()).map(\n        (schema): [string, Record<string, unknown>] => [\n          schema.model.flavour,\n          {\n            role: schema.model.role,\n            parent: schema.model.parent,\n            children: schema.model.children,\n          },\n        ]\n      )\n    );\n  }\n\n  register(blockSchema: BlockSchemaType[]) {\n    blockSchema.forEach(schema => {\n      BlockSchema.parse(schema);\n      this.flavourSchemaMap.set(schema.model.flavour, schema);\n    });\n    return this;\n  }\n\n  validate = (\n    flavour: string,\n    parentFlavour?: string,\n    childFlavours?: string[]\n  ): void => {\n    const schema = this.flavourSchemaMap.get(flavour);\n    assertExists(\n      schema,\n      new SchemaValidateError(flavour, SCHEMA_NOT_FOUND_MESSAGE)\n    );\n\n    const validateChildren = () => {\n      childFlavours?.forEach(childFlavour => {\n        const childSchema = this.flavourSchemaMap.get(childFlavour);\n        assertExists(\n          childSchema,\n          new SchemaValidateError(childFlavour, SCHEMA_NOT_FOUND_MESSAGE)\n        );\n        this.validateSchema(childSchema, schema);\n      });\n    };\n\n    if (schema.model.role === 'root') {\n      if (parentFlavour) {\n        throw new SchemaValidateError(\n          schema.model.flavour,\n          'Root block cannot have parent.'\n        );\n      }\n\n      validateChildren();\n      return;\n    }\n\n    if (!parentFlavour) {\n      throw new SchemaValidateError(\n        schema.model.flavour,\n        'Hub/Content must have parent.'\n      );\n    }\n\n    const parentSchema = this.flavourSchemaMap.get(parentFlavour);\n    assertExists(\n      parentSchema,\n      new SchemaValidateError(parentFlavour, SCHEMA_NOT_FOUND_MESSAGE)\n    );\n    this.validateSchema(schema, parentSchema);\n    validateChildren();\n  };\n\n  validateSchema(child: BlockSchemaType, parent: BlockSchemaType) {\n    this._validateRole(child, parent);\n\n    const relationCheckSuccess = this._validateParent(child, parent);\n\n    if (!relationCheckSuccess) {\n      throw new SchemaValidateError(\n        child.model.flavour,\n        `Block cannot have parent: ${parent.model.flavour}.`\n      );\n    }\n  }\n\n  upgradeWorkspace = (rootData: Y.Doc) => {\n    this._upgradeBlockVersions(rootData);\n    workspaceMigrations.forEach(migration => {\n      try {\n        if (migration.condition(rootData)) {\n          migration.migrate(rootData);\n        }\n      } catch (err) {\n        console.error(err);\n        throw new MigrationError(migration.desc);\n      }\n    });\n  };\n\n  upgradePage = (\n    oldPageVersion: number,\n    oldBlockVersions: Record<string, number>,\n    pageData: Y.Doc\n  ) => {\n    // block migrations\n    const blocks = pageData.getMap('blocks') as Y.Map<Y.Map<unknown>>;\n    Array.from(blocks.values()).forEach(block => {\n      const flavour = block.get('sys:flavour') as string;\n      const currentVersion = oldBlockVersions[flavour] ?? 0;\n      assertExists(\n        currentVersion,\n        `previous version for flavour ${flavour} not found`\n      );\n      this.upgradeBlock(flavour, currentVersion, block);\n    });\n\n    // page migrations\n    pageMigrations.forEach(migration => {\n      try {\n        if (migration.condition(oldPageVersion, pageData)) {\n          migration.migrate(oldPageVersion, pageData);\n        }\n      } catch (err) {\n        throw new MigrationError(`${migration.desc}\n            ${err}`);\n      }\n    });\n  };\n\n  upgradeBlock = (\n    flavour: string,\n    oldVersion: number,\n    blockData: Y.Map<unknown>\n  ) => {\n    try {\n      const currentSchema = this.flavourSchemaMap.get(flavour);\n      assertExists(currentSchema);\n      const { onUpgrade, version } = currentSchema;\n      if (!onUpgrade) {\n        return;\n      }\n\n      const block = new Block(this, blockData);\n\n      return onUpgrade(block.model, oldVersion, version);\n    } catch (err) {\n      throw new MigrationError(`upgrade block ${flavour} failed.\n          ${err}`);\n    }\n  };\n\n  private _upgradeBlockVersions = (rootData: Y.Doc) => {\n    const meta = rootData.getMap('meta');\n    const blockVersions = meta.get('blockVersions') as Y.Map<number>;\n    if (!blockVersions) {\n      return;\n    }\n    blockVersions.forEach((version, flavour) => {\n      const currentSchema = this.flavourSchemaMap.get(flavour);\n      if (currentSchema && version !== currentSchema.version) {\n        blockVersions.set(flavour, currentSchema.version);\n      }\n    });\n  };\n\n  private _validateRole(child: BlockSchemaType, parent: BlockSchemaType) {\n    const childRole = child.model.role;\n    const parentRole = parent.model.role;\n    const childFlavour = child.model.flavour;\n    const parentFlavour = parent.model.flavour;\n\n    if (childRole === 'root') {\n      throw new SchemaValidateError(\n        childFlavour,\n        `Root block cannot have parent: ${parentFlavour}.`\n      );\n    }\n\n    if (childRole === 'hub' && parentRole === 'content') {\n      throw new SchemaValidateError(\n        childFlavour,\n        `Hub block cannot be child of content block: ${parentFlavour}.`\n      );\n    }\n\n    if (childRole === 'content' && parentRole === 'root') {\n      throw new SchemaValidateError(\n        childFlavour,\n        `Content block can only be child of hub block or itself. But get: ${parentFlavour}.`\n      );\n    }\n  }\n\n  private _matchFlavour(childFlavour: string, parentFlavour: string) {\n    return (\n      minimatch(childFlavour, parentFlavour) ||\n      minimatch(parentFlavour, childFlavour)\n    );\n  }\n\n  private _validateParent(\n    child: BlockSchemaType,\n    parent: BlockSchemaType\n  ): boolean {\n    const _childFlavour = child.model.flavour;\n    const _parentFlavour = parent.model.flavour;\n\n    const childValidFlavours = child.model.parent || ['*'];\n    const parentValidFlavours = parent.model.children || ['*'];\n\n    return parentValidFlavours.some(parentValidFlavour => {\n      return childValidFlavours.some(childValidFlavour => {\n        if (parentValidFlavour === '*' && childValidFlavour === '*') {\n          return true;\n        }\n\n        if (parentValidFlavour === '*') {\n          return this._matchFlavour(childValidFlavour, _parentFlavour);\n        }\n\n        if (childValidFlavour === '*') {\n          return this._matchFlavour(_childFlavour, parentValidFlavour);\n        }\n\n        return (\n          this._matchFlavour(_childFlavour, parentValidFlavour) &&\n          this._matchFlavour(childValidFlavour, _parentFlavour)\n        );\n      });\n    });\n  }\n}\n","import { assertExists } from '@blocksuite/global/utils';\n\nimport type { BlobManager } from '../persistence/blob/types.js';\n\ntype AssetsManagerConfig = {\n  blob: BlobManager;\n};\n\nexport class AssetsManager {\n  private readonly _assetsMap = new Map<string, Blob>();\n  private readonly _blob: BlobManager;\n\n  constructor(options: AssetsManagerConfig) {\n    this._blob = options.blob;\n  }\n\n  getAssets() {\n    return this._assetsMap;\n  }\n\n  cleanup() {\n    this._assetsMap.clear();\n  }\n\n  async readFromBlob(blobId: string) {\n    const blob = await this._blob.get(blobId);\n    assertExists(blob, `Blob ${blobId} not found in blob manager`);\n\n    this._assetsMap.set(blobId, blob);\n  }\n\n  async writeToBlob(blobId: string) {\n    const blob = this._assetsMap.get(blobId);\n    assertExists(blob);\n\n    const exists = (await this._blob.get(blobId)) !== null;\n    if (exists) {\n      return;\n    }\n\n    await this._blob.set(blob, blobId);\n  }\n}\n","import { NATIVE_UNIQ_IDENTIFIER, TEXT_UNIQ_IDENTIFIER } from '../consts.js';\nimport { Boxed } from '../reactive/boxed.js';\nimport { isPureObject } from '../reactive/index.js';\nimport { Text } from '../reactive/text.js';\n\nexport function toJSON(value: unknown): unknown {\n  if (value instanceof Boxed) {\n    return {\n      [NATIVE_UNIQ_IDENTIFIER]: true,\n      value: value.getValue(),\n    };\n  }\n  if (value instanceof Text) {\n    return {\n      [TEXT_UNIQ_IDENTIFIER]: true,\n      delta: value.yText.toDelta(),\n    };\n  }\n  if (Array.isArray(value)) {\n    return value.map(toJSON);\n  }\n  if (isPureObject(value)) {\n    return Object.fromEntries(\n      Object.entries(value).map(([key, value]) => {\n        return [key, toJSON(value)];\n      })\n    );\n  }\n  return value;\n}\n\nexport function fromJSON(value: unknown): unknown {\n  if (Array.isArray(value)) {\n    return value.map(fromJSON);\n  }\n  if (value instanceof Object) {\n    if (Reflect.has(value, NATIVE_UNIQ_IDENTIFIER)) {\n      return new Boxed(Reflect.get(value, 'value'));\n    }\n    if (Reflect.has(value, TEXT_UNIQ_IDENTIFIER)) {\n      return new Text(Reflect.get(value, 'delta'));\n    }\n    return Object.fromEntries(\n      Object.entries(value).map(([key, value]) => {\n        return [key, fromJSON(value)];\n      })\n    );\n  }\n\n  return value;\n}\n","import type { BlockModel, InternalPrimitives } from '../schema/index.js';\nimport { internalPrimitives } from '../schema/index.js';\nimport type { AssetsManager } from './assets.js';\nimport { fromJSON, toJSON } from './json.js';\nimport type { BlockSnapshot } from './type.js';\n\ntype BlockSnapshotLeaf = Pick<\n  BlockSnapshot,\n  'id' | 'flavour' | 'props' | 'version'\n>;\n\nexport type FromSnapshotPayload = {\n  json: BlockSnapshotLeaf;\n  assets: AssetsManager;\n  children: BlockSnapshot[];\n};\n\nexport type ToSnapshotPayload<Props extends object> = {\n  model: BlockModel<Props>;\n  assets: AssetsManager;\n};\n\nexport type SnapshotReturn<Props extends object> = {\n  id: string;\n  flavour: string;\n  version: number;\n  props: Props;\n};\n\nexport class BaseBlockTransformer<Props extends object = object> {\n  protected _internal: InternalPrimitives = internalPrimitives;\n\n  protected _propsFromSnapshot(propsJson: Record<string, unknown>) {\n    return Object.fromEntries(\n      Object.entries(propsJson).map(([key, value]) => {\n        return [key, fromJSON(value)];\n      })\n    ) as Props;\n  }\n\n  protected _propsToSnapshot(model: BlockModel) {\n    return Object.fromEntries(\n      model.keys.map(key => {\n        const value = model[key as keyof typeof model];\n        return [key, toJSON(value)];\n      })\n    );\n  }\n\n  async fromSnapshot({\n    json,\n  }: FromSnapshotPayload): Promise<SnapshotReturn<Props>> {\n    const { flavour, id, version, props: _props } = json;\n\n    const props = this._propsFromSnapshot(_props);\n\n    return {\n      id,\n      flavour,\n      version: version ?? -1,\n      props,\n    };\n  }\n\n  async toSnapshot({\n    model,\n  }: ToSnapshotPayload<Props>): Promise<BlockSnapshotLeaf> {\n    const { id, flavour, version } = model;\n\n    const props = this._propsToSnapshot(model);\n\n    return {\n      id,\n      flavour,\n      version,\n      props,\n    };\n  }\n}\n","import { assertExists } from '@blocksuite/global/utils';\n\nimport type { BlockModel } from '../schema/index.js';\nimport type { Page } from '../workspace/index.js';\n\ntype SliceData = {\n  content: BlockModel[];\n  workspaceId: string;\n  pageId: string;\n  pageVersion: number;\n  workspaceVersion: number;\n};\n\nexport class Slice {\n  static fromModels(page: Page, models: BlockModel[]) {\n    const meta = page.workspace.meta;\n    const { pageVersion, workspaceVersion } = meta;\n    assertExists(pageVersion);\n    assertExists(workspaceVersion);\n    return new Slice({\n      content: models,\n      workspaceId: page.workspace.id,\n      pageId: page.id,\n      pageVersion,\n      workspaceVersion,\n    });\n  }\n\n  constructor(public readonly data: SliceData) {}\n\n  get content() {\n    return this.data.content;\n  }\n\n  get pageVersion() {\n    return this.data.pageVersion;\n  }\n\n  get workspaceVersion() {\n    return this.data.workspaceVersion;\n  }\n\n  get workspaceId() {\n    return this.data.workspaceId;\n  }\n\n  get pageId() {\n    return this.data.pageId;\n  }\n}\n","import { z } from 'zod';\n\nimport type { PageMeta, PagesPropertiesMeta } from '../workspace/meta.js';\n\nexport type BlockSnapshot = {\n  type: 'block';\n  id: string;\n  flavour: string;\n  version?: number;\n  props: Record<string, unknown>;\n  children: BlockSnapshot[];\n};\n\nexport const BlockSnapshotSchema: z.ZodType<BlockSnapshot> = z.object({\n  type: z.literal('block'),\n  id: z.string(),\n  flavour: z.string(),\n  version: z.number().optional(),\n  props: z.record(z.unknown()),\n  children: z.lazy(() => BlockSnapshotSchema.array()),\n});\n\nexport type SliceSnapshot = {\n  type: 'slice';\n  content: BlockSnapshot[];\n  pageVersion: number;\n  workspaceVersion: number;\n  workspaceId: string;\n  pageId: string;\n};\n\nexport const SliceSnapshotSchema: z.ZodType<SliceSnapshot> = z.object({\n  type: z.literal('slice'),\n  content: BlockSnapshotSchema.array(),\n  pageVersion: z.number(),\n  workspaceVersion: z.number(),\n  workspaceId: z.string(),\n  pageId: z.string(),\n});\n\nexport type WorkspaceInfoSnapshot = {\n  id: string;\n  type: 'info';\n  pageVersion: number;\n  workspaceVersion: number;\n  properties: PagesPropertiesMeta;\n};\n\nexport const WorkspaceInfoSnapshotSchema: z.ZodType<WorkspaceInfoSnapshot> =\n  z.object({\n    id: z.string(),\n    type: z.literal('info'),\n    pageVersion: z.number(),\n    workspaceVersion: z.number(),\n    properties: z.record(z.any()),\n  });\n\nexport type PageSnapshot = {\n  type: 'page';\n  meta: PageMeta;\n  blocks: BlockSnapshot;\n};\n\nconst PageMetaSchema = z.object({\n  id: z.string(),\n  title: z.string(),\n  createDate: z.number(),\n  tags: z.array(z.string()),\n});\n\nexport const PageSnapshotSchema: z.ZodType<PageSnapshot> = z.object({\n  type: z.literal('page'),\n  meta: PageMetaSchema,\n  blocks: BlockSnapshotSchema,\n});\n","import { Slot } from '@blocksuite/global/utils';\nimport { assertExists } from '@blocksuite/global/utils';\n\nimport type { BlockModel, BlockSchemaType } from '../schema/index.js';\nimport type { PageMeta, Workspace } from '../workspace/index.js';\nimport type { Page } from '../workspace/index.js';\nimport type { PagesPropertiesMeta } from '../workspace/meta.js';\nimport { AssetsManager } from './assets.js';\nimport { BaseBlockTransformer } from './base.js';\nimport type {\n  BeforeExportPayload,\n  BeforeImportPayload,\n  FinalPayload,\n  JobMiddleware,\n  JobSlots,\n} from './middleware.js';\nimport { Slice } from './slice.js';\nimport type {\n  BlockSnapshot,\n  PageSnapshot,\n  SliceSnapshot,\n  WorkspaceInfoSnapshot,\n} from './type.js';\nimport {\n  BlockSnapshotSchema,\n  PageSnapshotSchema,\n  SliceSnapshotSchema,\n  WorkspaceInfoSnapshotSchema,\n} from './type.js';\n\nexport type JobConfig = {\n  workspace: Workspace;\n  middlewares?: JobMiddleware[];\n};\n\nexport class Job {\n  private readonly _workspace: Workspace;\n  private readonly _assetsManager: AssetsManager;\n  private readonly _adapterConfigs: Map<string, string> = new Map();\n\n  private readonly _slots: JobSlots = {\n    beforeImport: new Slot<BeforeImportPayload>(),\n    afterImport: new Slot<FinalPayload>(),\n    beforeExport: new Slot<BeforeExportPayload>(),\n    afterExport: new Slot<FinalPayload>(),\n  };\n\n  constructor({ workspace, middlewares = [] }: JobConfig) {\n    this._workspace = workspace;\n    this._assetsManager = new AssetsManager({ blob: workspace.blob });\n\n    middlewares.forEach(middleware => {\n      middleware({\n        slots: this._slots,\n        assetsManager: this._assetsManager,\n        workspace: this._workspace,\n        adapterConfigs: this._adapterConfigs,\n      });\n    });\n  }\n\n  get assetsManager() {\n    return this._assetsManager;\n  }\n\n  get assets() {\n    return this._assetsManager.getAssets();\n  }\n\n  get adapterConfigs() {\n    return this._adapterConfigs;\n  }\n\n  reset() {\n    this._assetsManager.cleanup();\n  }\n\n  private _getSchema(flavour: string) {\n    const schema = this._workspace.schema.flavourSchemaMap.get(flavour);\n    assertExists(schema, `Flavour schema not found for ${flavour}`);\n    return schema;\n  }\n\n  private _getTransformer(schema: BlockSchemaType) {\n    return schema.transformer?.() ?? new BaseBlockTransformer();\n  }\n\n  private _getWorkspaceMeta() {\n    const { meta } = this._workspace;\n    const { pageVersion, workspaceVersion, properties, pages } = meta;\n    assertExists(pageVersion);\n    assertExists(workspaceVersion);\n    assertExists(properties);\n    assertExists(pages);\n    return {\n      pageVersion,\n      workspaceVersion,\n      properties: JSON.parse(JSON.stringify(properties)) as PagesPropertiesMeta,\n      pages: JSON.parse(JSON.stringify(pages)) as PageMeta[],\n    };\n  }\n\n  private _exportPageMeta(page: Page): PageSnapshot['meta'] {\n    const pageMeta = page.meta;\n\n    assertExists(pageMeta);\n    return {\n      id: pageMeta.id,\n      title: pageMeta.title,\n      createDate: pageMeta.createDate,\n      tags: [...pageMeta.tags],\n    };\n  }\n\n  private _importPageMeta(page: Page, meta: PageSnapshot['meta']) {\n    const pageMeta = page.meta;\n\n    const workspaceTags = this._workspace.meta.properties.tags?.options;\n    assertExists(workspaceTags);\n    meta.tags.forEach(tag => {\n      const exists = workspaceTags.some(t => t.id === tag);\n      if (!exists) {\n        throw new Error(`Tag ${tag} is not in workspace options`);\n      }\n      pageMeta.tags.push(tag);\n    });\n  }\n\n  private async _blockToSnapshot(model: BlockModel): Promise<BlockSnapshot> {\n    this._slots.beforeExport.emit({\n      type: 'block',\n      model,\n    });\n    const schema = this._getSchema(model.flavour);\n    const transformer = this._getTransformer(schema);\n    const snapshotLeaf = await transformer.toSnapshot({\n      model,\n      assets: this._assetsManager,\n    });\n    const children = await Promise.all(\n      model.children.map(child => {\n        return this._blockToSnapshot(child);\n      })\n    );\n    const snapshot: BlockSnapshot = {\n      type: 'block',\n      ...snapshotLeaf,\n      children,\n    };\n    this._slots.afterExport.emit({\n      type: 'block',\n      model,\n      snapshot,\n    });\n\n    return snapshot;\n  }\n\n  blockToSnapshot = async (model: BlockModel): Promise<BlockSnapshot> => {\n    const snapshot = await this._blockToSnapshot(model);\n    BlockSnapshotSchema.parse(snapshot);\n\n    return snapshot;\n  };\n\n  private async _snapshotToBlock(\n    snapshot: BlockSnapshot,\n    page: Page,\n    parent?: string,\n    index?: number\n  ) {\n    this._slots.beforeImport.emit({\n      type: 'block',\n      snapshot,\n      parent,\n      index,\n    });\n    const { children, flavour, props, id } = snapshot;\n\n    const schema = this._getSchema(flavour);\n    const snapshotLeaf = {\n      id,\n      flavour,\n      props,\n    };\n    const transformer = this._getTransformer(schema);\n    const modelData = await transformer.fromSnapshot({\n      json: snapshotLeaf,\n      assets: this._assetsManager,\n      children,\n    });\n\n    page.addBlock(\n      modelData.flavour,\n      { ...modelData.props, id: modelData.id },\n      parent,\n      index\n    );\n\n    for (const [index, child] of children.entries()) {\n      await this._snapshotToBlock(child, page, id, index);\n    }\n\n    const model = page.getBlockById(id);\n    assertExists(model);\n    this._slots.afterImport.emit({\n      type: 'block',\n      snapshot,\n      model,\n      parent,\n      index,\n    });\n\n    return model;\n  }\n\n  snapshotToModelData = async (snapshot: BlockSnapshot) => {\n    const { children, flavour, props, id } = snapshot;\n\n    const schema = this._getSchema(flavour);\n    const snapshotLeaf = {\n      id,\n      flavour,\n      props,\n    };\n    const transformer = this._getTransformer(schema);\n    const modelData = await transformer.fromSnapshot({\n      json: snapshotLeaf,\n      assets: this._assetsManager,\n      children,\n    });\n\n    return modelData;\n  };\n\n  snapshotToBlock = async (\n    snapshot: BlockSnapshot,\n    page: Page,\n    parent?: string,\n    index?: number\n  ): Promise<BlockModel> => {\n    BlockSnapshotSchema.parse(snapshot);\n    const model = await this._snapshotToBlock(snapshot, page, parent, index);\n\n    return model;\n  };\n\n  pageToSnapshot = async (page: Page): Promise<PageSnapshot> => {\n    this._slots.beforeExport.emit({\n      type: 'page',\n      page,\n    });\n    const root = page.root;\n    const meta = this._exportPageMeta(page);\n    assertExists(root, 'Root block not found in page');\n    const blocks = await this.blockToSnapshot(root);\n    const pageSnapshot: PageSnapshot = {\n      type: 'page',\n      meta,\n      blocks,\n    };\n    this._slots.afterExport.emit({\n      type: 'page',\n      page,\n      snapshot: pageSnapshot,\n    });\n    PageSnapshotSchema.parse(pageSnapshot);\n\n    return pageSnapshot;\n  };\n\n  snapshotToPage = async (snapshot: PageSnapshot): Promise<Page> => {\n    this._slots.beforeImport.emit({\n      type: 'page',\n      snapshot,\n    });\n    PageSnapshotSchema.parse(snapshot);\n    const { meta, blocks } = snapshot;\n    const page = this._workspace.createPage({ id: meta.id });\n    await page.load();\n    this._importPageMeta(page, meta);\n    await this.snapshotToBlock(blocks, page);\n    this._slots.afterImport.emit({\n      type: 'page',\n      snapshot,\n      page,\n    });\n\n    return page;\n  };\n\n  workspaceInfoToSnapshot = (): WorkspaceInfoSnapshot => {\n    this._slots.beforeExport.emit({\n      type: 'info',\n    });\n    const workspaceMeta = this._getWorkspaceMeta();\n    const snapshot: WorkspaceInfoSnapshot = {\n      type: 'info',\n      id: this._workspace.id,\n      ...workspaceMeta,\n    };\n    this._slots.afterExport.emit({\n      type: 'info',\n      snapshot,\n    });\n    WorkspaceInfoSnapshotSchema.parse(snapshot);\n\n    return snapshot;\n  };\n\n  snapshotToWorkspaceInfo = (snapshot: WorkspaceInfoSnapshot): void => {\n    this._slots.beforeImport.emit({\n      type: 'info',\n      snapshot,\n    });\n    WorkspaceInfoSnapshotSchema.parse(snapshot);\n    const { properties } = snapshot;\n    const currentProperties = this._workspace.meta.properties;\n    const newOptions = properties.tags?.options ?? [];\n    const currentOptions = currentProperties.tags?.options ?? [];\n    const options = new Set([...newOptions, ...currentOptions]);\n    this._workspace.meta.setProperties({\n      tags: {\n        options: Array.from(options),\n      },\n    });\n    this._slots.afterImport.emit({\n      type: 'info',\n      snapshot,\n    });\n  };\n\n  sliceToSnapshot = async (slice: Slice): Promise<SliceSnapshot> => {\n    this._slots.beforeExport.emit({\n      type: 'slice',\n      slice,\n    });\n    const { content, pageVersion, workspaceVersion, pageId, workspaceId } =\n      slice.data;\n    const contentSnapshot = [];\n    for (const block of content) {\n      contentSnapshot.push(await this.blockToSnapshot(block));\n    }\n    const snapshot: SliceSnapshot = {\n      type: 'slice',\n      workspaceId,\n      pageId,\n      pageVersion,\n      workspaceVersion,\n      content: contentSnapshot,\n    };\n    this._slots.afterExport.emit({\n      type: 'slice',\n      slice,\n      snapshot,\n    });\n    SliceSnapshotSchema.parse(snapshot);\n\n    return snapshot;\n  };\n\n  snapshotToSlice = async (\n    snapshot: SliceSnapshot,\n    page: Page,\n    parent?: string,\n    index?: number\n  ): Promise<Slice> => {\n    this._slots.beforeImport.emit({\n      type: 'slice',\n      snapshot,\n    });\n    SliceSnapshotSchema.parse(snapshot);\n    const { content, pageVersion, workspaceVersion, workspaceId, pageId } =\n      snapshot;\n    const contentBlocks = [];\n    for (const [i, block] of content.entries()) {\n      contentBlocks.push(\n        await this._snapshotToBlock(block, page, parent, (index ?? 0) + i)\n      );\n    }\n    const slice = new Slice({\n      content: contentBlocks,\n      pageVersion,\n      workspaceVersion,\n      workspaceId,\n      pageId,\n    });\n    this._slots.afterImport.emit({\n      type: 'slice',\n      snapshot,\n      slice,\n    });\n\n    return slice;\n  };\n}\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { uuidv4 as uuidv4IdGenerator } from 'lib0/random.js';\nimport { nanoid as nanoidGenerator } from 'nanoid';\n\nexport type IdGenerator = () => string;\n\nexport function createAutoIncrementIdGenerator(): IdGenerator {\n  let i = 0;\n  return () => (i++).toString();\n}\n\nexport function createAutoIncrementIdGeneratorByClientId(\n  clientId: number\n): IdGenerator {\n  let i = 0;\n  return () => `${clientId}:${i++}`;\n}\n\nexport const uuidv4: IdGenerator = () => {\n  return uuidv4IdGenerator();\n};\n\nexport const nanoid: IdGenerator = () => {\n  return nanoidGenerator(10);\n};\n","import { toBase64 } from 'lib0/buffer.js';\nimport * as Y from 'yjs';\nimport type { z } from 'zod';\n\nimport { SYS_KEYS } from '../consts.js';\nimport { native2Y } from '../reactive/index.js';\nimport type { BlockModel } from '../schema/base.js';\nimport { type BlockSchema } from '../schema/base.js';\nimport { internalPrimitives } from '../schema/base.js';\nimport type { YBlock } from '../workspace/block/block.js';\nimport type { Workspace } from '../workspace/index.js';\nimport type { BlockProps, YBlocks } from '../workspace/page.js';\n\nexport function assertValidChildren(\n  yBlocks: YBlocks,\n  props: Partial<BlockProps>\n) {\n  if (!Array.isArray(props.children)) return;\n\n  props.children.forEach(child => {\n    if (!yBlocks.has(child.id)) {\n      throw new Error('Invalid child id: ' + child.id);\n    }\n  });\n}\n\nexport function syncBlockProps(\n  schema: z.infer<typeof BlockSchema>,\n  model: BlockModel,\n  yBlock: YBlock,\n  props: Partial<BlockProps>\n) {\n  const defaultProps = schema.model.props?.(internalPrimitives) ?? {};\n\n  Object.entries(props).forEach(([key, value]) => {\n    if (SYS_KEYS.has(key)) return;\n    if (value === undefined) return;\n\n    // @ts-ignore\n    model[key] = value;\n  });\n\n  // set default value\n  Object.entries(defaultProps).forEach(([key, value]) => {\n    const notExists =\n      !yBlock.has(`prop:${key}`) || yBlock.get(`prop:${key}`) === undefined;\n    if (!notExists) {\n      return;\n    }\n\n    // @ts-ignore\n    model[key] = native2Y(value);\n  });\n}\n\nexport function encodeWorkspaceAsYjsUpdateV2(workspace: Workspace): string {\n  return toBase64(Y.encodeStateAsUpdateV2(workspace.doc));\n}\n","import { assertExists } from '@blocksuite/global/utils';\nimport * as Y from 'yjs';\n\nimport { native2Y } from '../../reactive/index.js';\nimport type { BlockModel, Schema } from '../../schema/index.js';\nimport { internalPrimitives } from '../../schema/index.js';\nimport type { Page } from '../page.js';\nimport type { BlockOptions, YBlock } from './block.js';\nimport { Block } from './block.js';\n\ntype BlockTreeOptions = {\n  yBlocks: Y.Map<YBlock>;\n  schema: Schema;\n};\n\nexport class BlockTree {\n  protected readonly _schema: Schema;\n  protected readonly _yBlocks: Y.Map<YBlock>;\n  protected readonly _blocks: Map<string, Block> = new Map();\n\n  getBlock(id: string) {\n    return this._blocks.get(id);\n  }\n\n  get blocks() {\n    return this._blocks;\n  }\n\n  constructor({ schema, yBlocks }: BlockTreeOptions) {\n    this._yBlocks = yBlocks;\n    this._schema = schema;\n  }\n\n  onBlockAdded(id: string, page: Page, options: BlockOptions = {}) {\n    if (this._blocks.has(id)) {\n      return;\n    }\n    const yBlock = this._yBlocks.get(id);\n    if (!yBlock) {\n      console.warn(`Could not find block with id ${id}`);\n      return;\n    }\n\n    const block = new Block(this._schema, yBlock, options);\n    this._blocks.set(id, block);\n    block.model.page = page;\n    block.model.created.emit();\n  }\n\n  onBlockRemoved(id: string) {\n    if (!this._blocks.has(id)) {\n      return;\n    }\n\n    const block = this._blocks.get(id)!;\n    block.model.dispose();\n    this._blocks.delete(id);\n    block.model.deleted.emit();\n  }\n\n  addBlock(id: string, flavour: string, initialProps: Record<string, unknown>) {\n    const schema = this._schema.flavourSchemaMap.get(flavour);\n    assertExists(schema, `Could not find schema for flavour ${flavour}`);\n\n    const yBlock = new Y.Map();\n    this._yBlocks.set(id, yBlock);\n\n    const version = schema.version;\n    yBlock.set('sys:id', id);\n    yBlock.set('sys:flavour', flavour);\n    yBlock.set('sys:version', version);\n\n    const defaultProps = schema.model.props?.(internalPrimitives) ?? {};\n    const props = {\n      ...defaultProps,\n      ...initialProps,\n    };\n\n    const yChildren = Y.Array.from(\n      (props.children ?? []).map((child: BlockModel) => child.id)\n    );\n    yBlock.set('sys:children', yChildren);\n\n    delete props.children;\n    delete props.id;\n    delete props.flavour;\n\n    Object.entries(props).forEach(([key, value]) => {\n      if (value === undefined) return;\n\n      yBlock.set(`prop:${key}`, native2Y(value));\n    });\n\n    return yBlock;\n  }\n\n  removeBlock(id: string) {\n    this._yBlocks.delete(id);\n  }\n}\n","import { Slot } from '@blocksuite/global/utils';\nimport * as Y from 'yjs';\n\nimport type { AwarenessStore } from '../yjs/awareness.js';\nimport type { BlockSuiteDoc } from '../yjs/index.js';\n\nexport interface StackItem {\n  meta: Map<'cursor-location' | 'selection-state', unknown>;\n  type: 'undo' | 'redo';\n}\n\nexport class Space<\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  State extends Record<string, unknown> = Record<string, any>,\n> {\n  readonly id: string;\n  readonly rootDoc: BlockSuiteDoc;\n  readonly awarenessStore: AwarenessStore;\n\n  private _loaded!: boolean;\n\n  private _onLoadSlot = new Slot();\n\n  /**\n   * @internal Used for convenient access to the underlying Yjs map,\n   * can be used interchangeably with ySpace\n   */\n  protected readonly _ySpaceDoc: Y.Doc;\n  protected readonly _yBlocks: Y.Map<State[keyof State]>;\n\n  constructor(\n    id: string,\n    rootDoc: BlockSuiteDoc,\n    awarenessStore: AwarenessStore\n  ) {\n    this.id = id;\n    this.rootDoc = rootDoc;\n    this.awarenessStore = awarenessStore;\n\n    this._ySpaceDoc = this._initSubDoc();\n\n    this._yBlocks = this._ySpaceDoc.getMap('blocks');\n  }\n\n  get yBlocks() {\n    return this._yBlocks;\n  }\n\n  get loaded() {\n    return this._loaded;\n  }\n\n  get spaceDoc() {\n    return this._ySpaceDoc;\n  }\n\n  async load() {\n    if (this.loaded) {\n      return this;\n    }\n\n    const promise = new Promise(resolve => {\n      this._onLoadSlot.once(() => {\n        resolve(undefined);\n      });\n    });\n\n    this._ySpaceDoc.load();\n\n    await promise;\n\n    return this;\n  }\n\n  remove() {\n    this.destroy();\n    this.rootDoc.spaces.delete(this.id);\n  }\n\n  destroy() {\n    this._ySpaceDoc.destroy();\n    this._onLoadSlot.dispose();\n    this._loaded = false;\n  }\n\n  clear() {\n    this._yBlocks.clear();\n  }\n\n  private _initSubDoc = () => {\n    let subDoc = this.rootDoc.spaces.get(this.id);\n    if (!subDoc) {\n      subDoc = new Y.Doc({\n        guid: this.id,\n      });\n      this.rootDoc.spaces.set(this.id, subDoc);\n      this._loaded = true;\n      this._onLoadSlot.emit();\n    } else {\n      this._loaded = false;\n      this.rootDoc.on('subdocs', this._onSubdocEvent);\n    }\n\n    return subDoc;\n  };\n\n  private _onSubdocEvent = ({ loaded }: { loaded: Set<Y.Doc> }): void => {\n    const result = Array.from(loaded).find(\n      doc => doc.guid === this._ySpaceDoc.guid\n    );\n    if (!result) {\n      return;\n    }\n    this.rootDoc.off('subdocs', this._onSubdocEvent);\n    this._loaded = true;\n    this._onLoadSlot.emit();\n  };\n\n  /**\n   * If `shouldTransact` is `false`, the transaction will not be push to the history stack.\n   */\n  transact(fn: () => void, shouldTransact = true) {\n    this._ySpaceDoc.transact(fn, shouldTransact ? this.rootDoc.clientID : null);\n  }\n}\n","import { assertExists, Slot } from '@blocksuite/global/utils';\nimport { uuidv4 } from 'lib0/random.js';\nimport * as Y from 'yjs';\n\nimport { Text } from '../reactive/text.js';\nimport type { BlockModel } from '../schema/base.js';\nimport { internalPrimitives } from '../schema/base.js';\nimport type { IdGenerator } from '../utils/id-generator.js';\nimport { assertValidChildren, syncBlockProps } from '../utils/utils.js';\nimport type { AwarenessStore, BlockSuiteDoc } from '../yjs/index.js';\nimport type { YBlock } from './block/index.js';\nimport { BlockTree } from './block/index.js';\nimport type { PageMeta } from './meta.js';\nimport { Space } from './space.js';\nimport type { Workspace } from './workspace.js';\n\nexport type YBlocks = Y.Map<YBlock>;\ntype FlatBlockMap = Record<string, YBlock>;\n\n/** JSON-serializable properties of a block */\nexport type BlockSysProps = {\n  id: string;\n  flavour: string;\n  children?: BlockModel[];\n};\nexport type BlockProps = BlockSysProps & {\n  [index: string]: unknown;\n};\n\ntype PageOptions = {\n  id: string;\n  workspace: Workspace;\n  doc: BlockSuiteDoc;\n  awarenessStore: AwarenessStore;\n  idGenerator?: IdGenerator;\n};\n\nexport class Page extends Space<FlatBlockMap> {\n  private readonly _workspace: Workspace;\n  private readonly _idGenerator: IdGenerator;\n  private readonly _blockTree: BlockTree;\n  private _history!: Y.UndoManager;\n  private _root: BlockModel | null = null;\n  /** Indicate whether the underlying subdoc has been loaded. */\n  private _docLoaded = false;\n  /** Indicate whether the block tree is ready */\n  private _ready = false;\n  private _shouldTransact = true;\n\n  readonly slots = {\n    /**\n     * This fires when the block tree is initialized via API call or underlying existing ydoc binary.\n     * Note that this is different with the `doc.loaded` field,\n     * since `loaded` only indicates that the ydoc is loaded, not the block tree.\n     */\n    ready: new Slot(),\n    historyUpdated: new Slot(),\n    /**\n     * This fires when the root block is added via API call or has just been initialized from existing ydoc.\n     * useful for internal block UI components to start subscribing following up events.\n     * Note that at this moment, the whole block tree may not be fully initialized yet.\n     */\n    rootAdded: new Slot<BlockModel>(),\n    rootDeleted: new Slot<string>(),\n    blockUpdated: new Slot<\n      | {\n          type: 'add';\n          id: string;\n          flavour: string;\n        }\n      | {\n          type: 'delete';\n          id: string;\n          flavour: string;\n          parent: string;\n          model: BlockModel;\n        }\n      | {\n          type: 'update';\n          id: string;\n          flavour: string;\n          props: { key: string };\n        }\n    >(),\n  };\n\n  constructor({\n    id,\n    workspace,\n    doc,\n    awarenessStore,\n    idGenerator = uuidv4,\n  }: PageOptions) {\n    super(id, doc, awarenessStore);\n    this._workspace = workspace;\n    this._idGenerator = idGenerator;\n    this._blockTree = new BlockTree({\n      schema: workspace.schema,\n      yBlocks: this.yBlocks,\n    });\n  }\n\n  get readonly() {\n    return this.awarenessStore.isReadonly(this);\n  }\n\n  get ready() {\n    return this._ready;\n  }\n\n  get history() {\n    return this._history;\n  }\n\n  get workspace() {\n    return this._workspace;\n  }\n\n  get schema() {\n    return this.workspace.schema;\n  }\n\n  get meta() {\n    return this.workspace.meta.getPageMeta(this.id) as PageMeta;\n  }\n\n  get blob() {\n    return this.workspace.blob;\n  }\n\n  get root() {\n    return this._root;\n  }\n\n  get isEmpty() {\n    return this._yBlocks.size === 0;\n  }\n\n  get canUndo() {\n    if (this.readonly) {\n      return false;\n    }\n    return this._history.canUndo();\n  }\n\n  get canRedo() {\n    if (this.readonly) {\n      return false;\n    }\n    return this._history.canRedo();\n  }\n\n  get Text() {\n    return Text;\n  }\n\n  withoutTransact(callback: () => void) {\n    this._shouldTransact = false;\n    callback();\n    this._shouldTransact = true;\n  }\n\n  override transact(\n    fn: () => void,\n    shouldTransact: boolean = this._shouldTransact\n  ) {\n    super.transact(fn, shouldTransact);\n  }\n\n  undo() {\n    if (this.readonly) {\n      console.error('cannot modify data in readonly mode');\n      return;\n    }\n    this._history.undo();\n  }\n\n  redo() {\n    if (this.readonly) {\n      console.error('cannot modify data in readonly mode');\n      return;\n    }\n    this._history.redo();\n  }\n\n  /** Capture current operations to undo stack synchronously. */\n  captureSync() {\n    this._history.stopCapturing();\n  }\n\n  resetHistory() {\n    this._history.clear();\n  }\n\n  generateBlockId() {\n    return this._idGenerator();\n  }\n\n  getBlockById<Model extends BlockModel = BlockModel>(\n    id: string\n  ): Model | null {\n    return (this._blockTree.getBlock(id)?.model as Model) ?? null;\n  }\n\n  getBlockByFlavour(blockFlavour: string | string[]) {\n    const flavours =\n      typeof blockFlavour === 'string' ? [blockFlavour] : blockFlavour;\n\n    return Array.from(this._blockTree.blocks.values())\n      .filter(({ flavour }) => flavours.includes(flavour))\n      .map(x => x.model);\n  }\n\n  getParent(target: BlockModel | string): BlockModel | null {\n    const root = this._root;\n    const targetId = typeof target === 'string' ? target : target.id;\n    if (!root || root.id === targetId) return null;\n\n    const findParent = (parentId: string): BlockModel | null => {\n      const parentModel = this.getBlockById(parentId);\n      if (!parentModel) return null;\n\n      for (const [childId] of parentModel.childMap) {\n        if (childId === targetId) return parentModel;\n\n        const parent = findParent(childId);\n        if (parent !== null) return parent;\n      }\n\n      return null;\n    };\n\n    const parent = findParent(root.id);\n    if (parent !== null) return parent;\n\n    return null;\n  }\n\n  getPreviousSibling(block: BlockModel) {\n    const parent = this.getParent(block);\n    if (!parent) {\n      return null;\n    }\n    const index = parent.children.indexOf(block);\n    if (index === -1) {\n      throw new Error(\n        \"Failed to getPreviousSiblings! Block not found in parent's children\"\n      );\n    }\n    return parent.children[index - 1] ?? null;\n  }\n\n  getPreviousSiblings(block: BlockModel) {\n    const parent = this.getParent(block);\n    if (!parent) {\n      return [];\n    }\n    const index = parent.children.indexOf(block);\n    if (index === -1) {\n      throw new Error(\n        \"Failed to getPreviousSiblings! Block not found in parent's children\"\n      );\n    }\n    return parent.children.slice(0, index);\n  }\n\n  getNextSibling(block: BlockModel) {\n    const parent = this.getParent(block);\n    if (!parent) {\n      return null;\n    }\n    const index = parent.children.indexOf(block);\n    if (index === -1) {\n      throw new Error(\n        \"Failed to getPreviousSiblings! Block not found in parent's children\"\n      );\n    }\n    return parent.children[index + 1] ?? null;\n  }\n\n  getNextSiblings(block: BlockModel) {\n    const parent = this.getParent(block);\n    if (!parent) {\n      return [];\n    }\n    const index = parent.children.indexOf(block);\n    if (index === -1) {\n      throw new Error(\n        \"Failed to getNextSiblings! Block not found in parent's children\"\n      );\n    }\n    return parent.children.slice(index + 1);\n  }\n\n  getSchemaByFlavour(flavour: string) {\n    return this.schema.flavourSchemaMap.get(flavour);\n  }\n\n  getInitialPropsByFlavour(flavour: string) {\n    const schema = this.schema.flavourSchemaMap.get(flavour);\n    assertExists(schema);\n    return schema.model.props?.(internalPrimitives) ?? {};\n  }\n\n  getBlocks() {\n    const blocks: BlockModel[] = [];\n    const allBlocks = this._blockTree.blocks;\n\n    allBlocks.forEach(({ model }) => {\n      blocks.push(model);\n    });\n\n    return blocks;\n  }\n\n  addBlocks(\n    blocks: Array<{\n      flavour: string;\n      blockProps?: Partial<BlockProps & Omit<BlockProps, 'flavour' | 'id'>>;\n    }>,\n    parent?: BlockModel | string | null,\n    parentIndex?: number\n  ): string[] {\n    const ids: string[] = [];\n    blocks.forEach(block => {\n      const id = this.addBlock(\n        block.flavour,\n        block.blockProps ?? {},\n        parent,\n        parentIndex\n      );\n      ids.push(id);\n      typeof parentIndex === 'number' && parentIndex++;\n    });\n\n    return ids;\n  }\n\n  addBlock(\n    flavour: string,\n    blockProps: Partial<BlockProps & Omit<BlockProps, 'flavour'>> = {},\n    parent?: BlockModel | string | null,\n    parentIndex?: number\n  ): string {\n    if (this.readonly) {\n      throw new Error('cannot modify data in readonly mode');\n    }\n    if (!flavour) {\n      throw new Error('Block props must contain flavour');\n    }\n    const parentModel =\n      typeof parent === 'string' ? this.getBlockById(parent) : parent;\n\n    this.schema.validate(\n      flavour,\n      parentModel?.flavour,\n      blockProps.children?.map(child => child.flavour)\n    );\n\n    const id = blockProps.id ?? this._idGenerator();\n    const clonedProps: BlockSysProps & Partial<BlockProps> = {\n      id,\n      flavour,\n      ...blockProps,\n    };\n\n    this.transact(() => {\n      this._blockTree.addBlock(id, flavour, { ...blockProps });\n      // set the yBlock at the very beginning, otherwise yBlock will be always empty\n\n      assertValidChildren(this._yBlocks, clonedProps);\n      const schema = this.getSchemaByFlavour(flavour);\n      assertExists(schema);\n\n      const parentId =\n        parentModel?.id ??\n        (schema.model.role === 'root' ? undefined : this._root?.id);\n\n      if (parentId) {\n        const yParent = this._yBlocks.get(parentId) as YBlock;\n        const yChildren = yParent.get('sys:children') as Y.Array<string>;\n        const index = parentIndex ?? yChildren.length;\n        yChildren.insert(index, [id]);\n      }\n    });\n\n    return id;\n  }\n\n  moveBlocks(\n    blocksToMove: BlockModel[],\n    newParent: BlockModel,\n    targetSibling: BlockModel | null = null,\n    shouldInsertBeforeSibling = true\n  ) {\n    if (this.readonly) {\n      console.error('Cannot modify data in read-only mode');\n      return;\n    }\n\n    if (!newParent) {\n      throw new Error(\"Can't find new parent block\");\n    }\n\n    // A map to store parent block and their respective child blocks\n    const childBlocksPerParent = new Map<BlockModel, BlockModel[]>();\n    blocksToMove.forEach(block => {\n      const parentBlock = this.getParent(block);\n      if (!parentBlock) {\n        throw new Error(\"Can't find parent block for the current block\");\n      }\n\n      this.schema.validate(block.flavour, newParent.flavour);\n\n      const childrenBlocksOfCurrentParent =\n        childBlocksPerParent.get(parentBlock);\n      if (childrenBlocksOfCurrentParent) {\n        if (\n          this.getNextSibling(\n            childrenBlocksOfCurrentParent[\n              childrenBlocksOfCurrentParent.length - 1\n            ]\n          ) !== block\n        ) {\n          throw new Error(\n            'The blocks to move are not contiguous under their parent'\n          );\n        }\n        childrenBlocksOfCurrentParent.push(block);\n      } else {\n        childBlocksPerParent.set(parentBlock, [block]);\n      }\n    });\n\n    this.transact(() => {\n      let insertIndex = 0;\n      let first = true;\n      for (const [parentBlock, blocksToMove] of childBlocksPerParent) {\n        const targetParentBlock = this._yBlocks.get(newParent.id) as YBlock;\n        const targetParentChildren = targetParentBlock.get(\n          'sys:children'\n        ) as Y.Array<string>;\n        const sourceParentBlock = this._yBlocks.get(parentBlock.id) as YBlock;\n        const sourceParentChildren = sourceParentBlock.get(\n          'sys:children'\n        ) as Y.Array<string>;\n\n        // Get the IDs of blocks to move\n        const idsOfBlocksToMove = blocksToMove.map(({ id }) => id);\n\n        // Remove the blocks from their current parent\n        const startIndex = sourceParentChildren\n          .toArray()\n          .findIndex(id => id === idsOfBlocksToMove[0]);\n        sourceParentChildren.delete(startIndex, idsOfBlocksToMove.length);\n\n        if (first) {\n          if (targetSibling) {\n            const targetIndex = targetParentChildren\n              .toArray()\n              .findIndex(id => id === targetSibling.id);\n            if (targetIndex === -1) {\n              throw new Error('Target sibling not found');\n            }\n            insertIndex = shouldInsertBeforeSibling\n              ? targetIndex\n              : targetIndex + 1;\n          } else {\n            insertIndex = targetParentChildren.length;\n          }\n          first = false;\n        } else {\n          insertIndex++;\n        }\n\n        targetParentChildren.insert(insertIndex, idsOfBlocksToMove);\n      }\n    });\n  }\n\n  updateBlock<T extends Partial<BlockProps>>(model: BlockModel, props: T): void;\n  updateBlock(model: BlockModel, callback: () => void): void;\n  updateBlock(\n    model: BlockModel,\n    callBackOrProps: (() => void) | Partial<BlockProps>\n  ): void {\n    if (this.readonly) {\n      console.error('cannot modify data in readonly mode');\n      return;\n    }\n\n    const isCallback = typeof callBackOrProps === 'function';\n\n    if (!isCallback) {\n      const parent = this.getParent(model);\n      this.schema.validate(\n        model.flavour,\n        parent?.flavour,\n        callBackOrProps.children?.map(child => child.flavour)\n      );\n    }\n\n    const yBlock = this._yBlocks.get(model.id);\n    assertExists(yBlock);\n\n    this.transact(() => {\n      if (!isCallback) {\n        // TODO diff children changes\n        // All child nodes will be deleted in the current behavior, then added again.\n        // Through diff children changes, the experience can be improved.\n        if (callBackOrProps.children) {\n          const yChildren = new Y.Array<string>();\n          yChildren.insert(\n            0,\n            callBackOrProps.children.map(child => child.id)\n          );\n          yBlock.set('sys:children', yChildren);\n        }\n\n        const schema = this.schema.flavourSchemaMap.get(model.flavour);\n        assertExists(schema);\n        syncBlockProps(schema, model, yBlock, callBackOrProps);\n        return;\n      }\n\n      callBackOrProps();\n    });\n  }\n\n  addSiblingBlocks(\n    targetModel: BlockModel,\n    props: Array<Partial<BlockProps>>,\n    place: 'after' | 'before' = 'after'\n  ): string[] {\n    if (!props.length) return [];\n    const parent = this.getParent(targetModel);\n    assertExists(parent);\n\n    const targetIndex =\n      parent.children.findIndex(({ id }) => id === targetModel.id) ?? 0;\n    const insertIndex = place === 'before' ? targetIndex : targetIndex + 1;\n\n    if (props.length > 1) {\n      const blocks: Array<{\n        flavour: string;\n        blockProps: Partial<BlockProps>;\n      }> = [];\n      props.forEach(prop => {\n        const { flavour, ...blockProps } = prop;\n        assertExists(flavour);\n        blocks.push({ flavour, blockProps });\n      });\n      return this.addBlocks(blocks, parent.id, insertIndex);\n    } else {\n      assertExists(props[0].flavour);\n      const { flavour, ...blockProps } = props[0];\n      const id = this.addBlock(flavour, blockProps, parent.id, insertIndex);\n      return [id];\n    }\n  }\n\n  deleteBlock(\n    model: BlockModel,\n    options: {\n      bringChildrenTo?: BlockModel;\n      deleteChildren?: boolean;\n    } = {\n      deleteChildren: true,\n    }\n  ) {\n    if (this.readonly) {\n      console.error('cannot modify data in readonly mode');\n      return;\n    }\n\n    const { bringChildrenTo, deleteChildren } = options;\n    if (bringChildrenTo && deleteChildren) {\n      console.error(\n        'Cannot bring children to another block and delete them at the same time'\n      );\n      return;\n    }\n\n    const yModel = this._yBlocks.get(model.id) as YBlock;\n    const yModelChildren = yModel.get('sys:children') as Y.Array<string>;\n\n    const parent = this.getParent(model);\n    assertExists(parent);\n    const yParent = this._yBlocks.get(parent.id) as YBlock;\n    const yParentChildren = yParent.get('sys:children') as Y.Array<string>;\n    const modelIndex = yParentChildren.toArray().indexOf(model.id);\n\n    this.transact(() => {\n      if (modelIndex > -1) {\n        yParentChildren.delete(modelIndex, 1);\n      }\n\n      if (bringChildrenTo) {\n        // validate children flavour\n        model.children.forEach(child => {\n          this.schema.validate(child.flavour, bringChildrenTo.flavour);\n        });\n\n        if (bringChildrenTo.id === parent.id) {\n          // When bring children to parent, insert children to the original position of model\n          yParentChildren.insert(modelIndex, yModelChildren.toArray());\n        } else {\n          const yBringChildrenTo = this._yBlocks.get(\n            bringChildrenTo.id\n          ) as YBlock;\n          const yBringChildrenToChildren = yBringChildrenTo.get(\n            'sys:children'\n          ) as Y.Array<string>;\n          yBringChildrenToChildren.push(yModelChildren.toArray());\n        }\n      } else {\n        if (deleteChildren) {\n          // delete children recursively\n          const dl = (id: string) => {\n            const yBlock = this._yBlocks.get(id) as YBlock;\n\n            const yChildren = yBlock.get('sys:children') as Y.Array<string>;\n            yChildren.forEach(id => {\n              dl(id);\n            });\n\n            this._blockTree.removeBlock(id);\n          };\n\n          yModelChildren.forEach(id => {\n            dl(id);\n          });\n        }\n      }\n\n      this._blockTree.removeBlock(model.id);\n    });\n  }\n\n  trySyncFromExistingDoc() {\n    if (this._docLoaded) {\n      throw new Error('Cannot sync from existing doc more than once');\n    }\n\n    if ((this.workspace.meta.pages?.length ?? 0) <= 1) {\n      this._handleVersion();\n    }\n\n    this._initYBlocks();\n\n    this._yBlocks.forEach((_, id) => {\n      this._handleYBlockAdd(id);\n    });\n\n    this._docLoaded = true;\n\n    if (this._yBlocks.size > 0) {\n      this._ready = true;\n      this.slots.ready.emit();\n    }\n  }\n\n  dispose() {\n    this.slots.historyUpdated.dispose();\n    this.slots.rootAdded.dispose();\n    this.slots.rootDeleted.dispose();\n    this.slots.blockUpdated.dispose();\n\n    if (this._docLoaded) {\n      this._yBlocks.unobserveDeep(this._handleYEvents);\n      this._yBlocks.clear();\n    }\n  }\n\n  private _initYBlocks() {\n    const { _yBlocks } = this;\n    _yBlocks.observeDeep(this._handleYEvents);\n    this._history = new Y.UndoManager([_yBlocks], {\n      trackedOrigins: new Set([this._ySpaceDoc.clientID]),\n    });\n\n    this._history.on('stack-cleared', this._historyObserver);\n    this._history.on('stack-item-added', this._historyObserver);\n    this._history.on('stack-item-popped', this._historyObserver);\n    this._history.on('stack-item-updated', this._historyObserver);\n  }\n\n  private _getYBlock(id: string): YBlock | null {\n    const yBlock = this._yBlocks.get(id) as YBlock | undefined;\n    if (!yBlock) return null;\n    return yBlock;\n  }\n\n  private _historyObserver = () => {\n    this.slots.historyUpdated.emit();\n  };\n\n  private _handleYBlockAdd(id: string) {\n    const yBlock = this._getYBlock(id);\n    if (!yBlock) {\n      console.warn(\n        `Failed to handle yBlock add, yBlock with id-${id} not found`\n      );\n      return;\n    }\n\n    this._blockTree.onBlockAdded(id, this, {\n      onChange: (block, key) => {\n        if (key) {\n          block.model.propsUpdated.emit({ key });\n        }\n\n        this.slots.blockUpdated.emit({\n          type: 'update',\n          id,\n          flavour: block.flavour,\n          props: { key },\n        });\n      },\n    });\n    const block = this._blockTree.getBlock(id);\n    assertExists(block);\n    const model = block.model;\n\n    const yChildren = yBlock.get('sys:children');\n    if (yChildren instanceof Y.Array) {\n      yChildren.forEach((id: string, index) => {\n        const hasChild = this._blockTree.blocks.has(id);\n\n        if (!hasChild) {\n          this._handleYBlockAdd(id);\n        }\n\n        model.children[index as number] = this.getBlockById(id) as BlockModel;\n      });\n    }\n\n    if (model.role === 'root') {\n      this._root = model;\n      this.slots.rootAdded.emit(this._root);\n      return;\n    }\n\n    this.slots.blockUpdated.emit({ type: 'add', id, flavour: model.flavour });\n  }\n\n  private _handleYBlockDelete(id: string) {\n    const model = this.getBlockById(id);\n\n    if (model === this._root) {\n      this.slots.rootDeleted.emit(id);\n    }\n    assertExists(model);\n    this._blockTree.onBlockRemoved(id);\n    this.slots.blockUpdated.emit({\n      type: 'delete',\n      id,\n      flavour: model.flavour,\n      parent: this.getParent(model)?.id ?? '',\n      model,\n    });\n  }\n\n  private _handleYEvent(event: Y.YEvent<YBlock | Y.Text | Y.Array<unknown>>) {\n    // event on top-level block store\n    if (event.target === this._yBlocks) {\n      event.keys.forEach((value, id) => {\n        if (value.action === 'add') {\n          this._handleYBlockAdd(id);\n        } else if (value.action === 'delete') {\n          this._handleYBlockDelete(id);\n        } else {\n          // fires when undoing delete-and-add operation on a block\n          // console.warn('update action on top-level block store', event);\n        }\n      });\n    }\n  }\n\n  // Handle all the events that happen at _any_ level (potentially deep inside the structure).\n  // So, we apply a listener at the top level for the flat structure of the current\n  // page/space container.\n  private _handleYEvents = (events: Y.YEvent<YBlock | Y.Text>[]) => {\n    for (const event of events) {\n      this._handleYEvent(event);\n    }\n  };\n\n  private _handleVersion() {\n    // Initialization from empty yDoc, indicating that the document is new.\n    if (!this.workspace.meta.hasVersion) {\n      this.workspace.meta.writeVersion(this.workspace);\n    } else {\n      // Initialization from existing yDoc, indicating that the document is loaded from storage.\n      if (this.awarenessStore.getFlag('enable_legacy_validation')) {\n        this.workspace.meta.validateVersion(this.workspace);\n      }\n    }\n  }\n\n  override async load(initFn?: () => Promise<void> | void) {\n    await super.load();\n    if (!this._docLoaded) {\n      this.trySyncFromExistingDoc();\n    }\n\n    if (initFn) {\n      await initFn();\n      this._ready = true;\n      this.slots.ready.emit();\n    }\n\n    return this;\n  }\n\n  /** @deprecated use page.load() instead */\n  async waitForLoaded() {\n    await this.load();\n  }\n}\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.isPlainObject = exports.clone = exports.recursive = exports.merge = exports.main = void 0;\r\nmodule.exports = exports = main;\r\nexports.default = main;\r\nfunction main() {\r\n    var items = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        items[_i] = arguments[_i];\r\n    }\r\n    return merge.apply(void 0, items);\r\n}\r\nexports.main = main;\r\nmain.clone = clone;\r\nmain.isPlainObject = isPlainObject;\r\nmain.recursive = recursive;\r\nfunction merge() {\r\n    var items = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        items[_i] = arguments[_i];\r\n    }\r\n    return _merge(items[0] === true, false, items);\r\n}\r\nexports.merge = merge;\r\nfunction recursive() {\r\n    var items = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        items[_i] = arguments[_i];\r\n    }\r\n    return _merge(items[0] === true, true, items);\r\n}\r\nexports.recursive = recursive;\r\nfunction clone(input) {\r\n    if (Array.isArray(input)) {\r\n        var output = [];\r\n        for (var index = 0; index < input.length; ++index)\r\n            output.push(clone(input[index]));\r\n        return output;\r\n    }\r\n    else if (isPlainObject(input)) {\r\n        var output = {};\r\n        for (var index in input)\r\n            output[index] = clone(input[index]);\r\n        return output;\r\n    }\r\n    else {\r\n        return input;\r\n    }\r\n}\r\nexports.clone = clone;\r\nfunction isPlainObject(input) {\r\n    return input && typeof input === 'object' && !Array.isArray(input);\r\n}\r\nexports.isPlainObject = isPlainObject;\r\nfunction _recursiveMerge(base, extend) {\r\n    if (!isPlainObject(base))\r\n        return extend;\r\n    for (var key in extend) {\r\n        if (key === '__proto__' || key === 'constructor' || key === 'prototype')\r\n            continue;\r\n        base[key] = (isPlainObject(base[key]) && isPlainObject(extend[key])) ?\r\n            _recursiveMerge(base[key], extend[key]) :\r\n            extend[key];\r\n    }\r\n    return base;\r\n}\r\nfunction _merge(isClone, isRecursive, items) {\r\n    var result;\r\n    if (isClone || !isPlainObject(result = items.shift()))\r\n        result = {};\r\n    for (var index = 0; index < items.length; ++index) {\r\n        var item = items[index];\r\n        if (!isPlainObject(item))\r\n            continue;\r\n        for (var key in item) {\r\n            if (key === '__proto__' || key === 'constructor' || key === 'prototype')\r\n                continue;\r\n            var value = isClone ? clone(item[key]) : item[key];\r\n            result[key] = isRecursive ? _recursiveMerge(result[key], value) : value;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n","/**\n * @module awareness-protocol\n */\n\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as time from 'lib0/time'\nimport * as math from 'lib0/math'\nimport { Observable } from 'lib0/observable'\nimport * as f from 'lib0/function'\nimport * as Y from 'yjs' // eslint-disable-line\n\nexport const outdatedTimeout = 30000\n\n/**\n * @typedef {Object} MetaClientState\n * @property {number} MetaClientState.clock\n * @property {number} MetaClientState.lastUpdated unix timestamp\n */\n\n/**\n * The Awareness class implements a simple shared state protocol that can be used for non-persistent data like awareness information\n * (cursor, username, status, ..). Each client can update its own local state and listen to state changes of\n * remote clients. Every client may set a state of a remote peer to `null` to mark the client as offline.\n *\n * Each client is identified by a unique client id (something we borrow from `doc.clientID`). A client can override\n * its own state by propagating a message with an increasing timestamp (`clock`). If such a message is received, it is\n * applied if the known state of that client is older than the new state (`clock < newClock`). If a client thinks that\n * a remote client is offline, it may propagate a message with\n * `{ clock: currentClientClock, state: null, client: remoteClient }`. If such a\n * message is received, and the known clock of that client equals the received clock, it will override the state with `null`.\n *\n * Before a client disconnects, it should propagate a `null` state with an updated clock.\n *\n * Awareness states must be updated every 30 seconds. Otherwise the Awareness instance will delete the client state.\n *\n * @extends {Observable<string>}\n */\nexport class Awareness extends Observable {\n  /**\n   * @param {Y.Doc} doc\n   */\n  constructor (doc) {\n    super()\n    this.doc = doc\n    /**\n     * @type {number}\n     */\n    this.clientID = doc.clientID\n    /**\n     * Maps from client id to client state\n     * @type {Map<number, Object<string, any>>}\n     */\n    this.states = new Map()\n    /**\n     * @type {Map<number, MetaClientState>}\n     */\n    this.meta = new Map()\n    this._checkInterval = /** @type {any} */ (setInterval(() => {\n      const now = time.getUnixTime()\n      if (this.getLocalState() !== null && (outdatedTimeout / 2 <= now - /** @type {{lastUpdated:number}} */ (this.meta.get(this.clientID)).lastUpdated)) {\n        // renew local clock\n        this.setLocalState(this.getLocalState())\n      }\n      /**\n       * @type {Array<number>}\n       */\n      const remove = []\n      this.meta.forEach((meta, clientid) => {\n        if (clientid !== this.clientID && outdatedTimeout <= now - meta.lastUpdated && this.states.has(clientid)) {\n          remove.push(clientid)\n        }\n      })\n      if (remove.length > 0) {\n        removeAwarenessStates(this, remove, 'timeout')\n      }\n    }, math.floor(outdatedTimeout / 10)))\n    doc.on('destroy', () => {\n      this.destroy()\n    })\n    this.setLocalState({})\n  }\n\n  destroy () {\n    this.emit('destroy', [this])\n    this.setLocalState(null)\n    super.destroy()\n    clearInterval(this._checkInterval)\n  }\n\n  /**\n   * @return {Object<string,any>|null}\n   */\n  getLocalState () {\n    return this.states.get(this.clientID) || null\n  }\n\n  /**\n   * @param {Object<string,any>|null} state\n   */\n  setLocalState (state) {\n    const clientID = this.clientID\n    const currLocalMeta = this.meta.get(clientID)\n    const clock = currLocalMeta === undefined ? 0 : currLocalMeta.clock + 1\n    const prevState = this.states.get(clientID)\n    if (state === null) {\n      this.states.delete(clientID)\n    } else {\n      this.states.set(clientID, state)\n    }\n    this.meta.set(clientID, {\n      clock,\n      lastUpdated: time.getUnixTime()\n    })\n    const added = []\n    const updated = []\n    const filteredUpdated = []\n    const removed = []\n    if (state === null) {\n      removed.push(clientID)\n    } else if (prevState == null) {\n      if (state != null) {\n        added.push(clientID)\n      }\n    } else {\n      updated.push(clientID)\n      if (!f.equalityDeep(prevState, state)) {\n        filteredUpdated.push(clientID)\n      }\n    }\n    if (added.length > 0 || filteredUpdated.length > 0 || removed.length > 0) {\n      this.emit('change', [{ added, updated: filteredUpdated, removed }, 'local'])\n    }\n    this.emit('update', [{ added, updated, removed }, 'local'])\n  }\n\n  /**\n   * @param {string} field\n   * @param {any} value\n   */\n  setLocalStateField (field, value) {\n    const state = this.getLocalState()\n    if (state !== null) {\n      this.setLocalState({\n        ...state,\n        [field]: value\n      })\n    }\n  }\n\n  /**\n   * @return {Map<number,Object<string,any>>}\n   */\n  getStates () {\n    return this.states\n  }\n}\n\n/**\n * Mark (remote) clients as inactive and remove them from the list of active peers.\n * This change will be propagated to remote clients.\n *\n * @param {Awareness} awareness\n * @param {Array<number>} clients\n * @param {any} origin\n */\nexport const removeAwarenessStates = (awareness, clients, origin) => {\n  const removed = []\n  for (let i = 0; i < clients.length; i++) {\n    const clientID = clients[i]\n    if (awareness.states.has(clientID)) {\n      awareness.states.delete(clientID)\n      if (clientID === awareness.clientID) {\n        const curMeta = /** @type {MetaClientState} */ (awareness.meta.get(clientID))\n        awareness.meta.set(clientID, {\n          clock: curMeta.clock + 1,\n          lastUpdated: time.getUnixTime()\n        })\n      }\n      removed.push(clientID)\n    }\n  }\n  if (removed.length > 0) {\n    awareness.emit('change', [{ added: [], updated: [], removed }, origin])\n    awareness.emit('update', [{ added: [], updated: [], removed }, origin])\n  }\n}\n\n/**\n * @param {Awareness} awareness\n * @param {Array<number>} clients\n * @return {Uint8Array}\n */\nexport const encodeAwarenessUpdate = (awareness, clients, states = awareness.states) => {\n  const len = clients.length\n  const encoder = encoding.createEncoder()\n  encoding.writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    const clientID = clients[i]\n    const state = states.get(clientID) || null\n    const clock = /** @type {MetaClientState} */ (awareness.meta.get(clientID)).clock\n    encoding.writeVarUint(encoder, clientID)\n    encoding.writeVarUint(encoder, clock)\n    encoding.writeVarString(encoder, JSON.stringify(state))\n  }\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * Modify the content of an awareness update before re-encoding it to an awareness update.\n *\n * This might be useful when you have a central server that wants to ensure that clients\n * cant hijack somebody elses identity.\n *\n * @param {Uint8Array} update\n * @param {function(any):any} modify\n * @return {Uint8Array}\n */\nexport const modifyAwarenessUpdate = (update, modify) => {\n  const decoder = decoding.createDecoder(update)\n  const encoder = encoding.createEncoder()\n  const len = decoding.readVarUint(decoder)\n  encoding.writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    const clientID = decoding.readVarUint(decoder)\n    const clock = decoding.readVarUint(decoder)\n    const state = JSON.parse(decoding.readVarString(decoder))\n    const modifiedState = modify(state)\n    encoding.writeVarUint(encoder, clientID)\n    encoding.writeVarUint(encoder, clock)\n    encoding.writeVarString(encoder, JSON.stringify(modifiedState))\n  }\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * @param {Awareness} awareness\n * @param {Uint8Array} update\n * @param {any} origin This will be added to the emitted change event\n */\nexport const applyAwarenessUpdate = (awareness, update, origin) => {\n  const decoder = decoding.createDecoder(update)\n  const timestamp = time.getUnixTime()\n  const added = []\n  const updated = []\n  const filteredUpdated = []\n  const removed = []\n  const len = decoding.readVarUint(decoder)\n  for (let i = 0; i < len; i++) {\n    const clientID = decoding.readVarUint(decoder)\n    let clock = decoding.readVarUint(decoder)\n    const state = JSON.parse(decoding.readVarString(decoder))\n    const clientMeta = awareness.meta.get(clientID)\n    const prevState = awareness.states.get(clientID)\n    const currClock = clientMeta === undefined ? 0 : clientMeta.clock\n    if (currClock < clock || (currClock === clock && state === null && awareness.states.has(clientID))) {\n      if (state === null) {\n        // never let a remote client remove this local state\n        if (clientID === awareness.clientID && awareness.getLocalState() != null) {\n          // remote client removed the local state. Do not remote state. Broadcast a message indicating\n          // that this client still exists by increasing the clock\n          clock++\n        } else {\n          awareness.states.delete(clientID)\n        }\n      } else {\n        awareness.states.set(clientID, state)\n      }\n      awareness.meta.set(clientID, {\n        clock,\n        lastUpdated: timestamp\n      })\n      if (clientMeta === undefined && state !== null) {\n        added.push(clientID)\n      } else if (clientMeta !== undefined && state === null) {\n        removed.push(clientID)\n      } else if (state !== null) {\n        if (!f.equalityDeep(state, prevState)) {\n          filteredUpdated.push(clientID)\n        }\n        updated.push(clientID)\n      }\n    }\n  }\n  if (added.length > 0 || filteredUpdated.length > 0 || removed.length > 0) {\n    awareness.emit('change', [{\n      added, updated: filteredUpdated, removed\n    }, origin])\n  }\n  if (added.length > 0 || updated.length > 0 || removed.length > 0) {\n    awareness.emit('update', [{\n      added, updated, removed\n    }, origin])\n  }\n}\n","import { Slot } from '@blocksuite/global/utils';\nimport { merge } from 'merge';\nimport type { Awareness as YAwareness } from 'y-protocols/awareness.js';\n\nimport type { Space } from '../workspace/space.js';\nimport type { Store } from '../workspace/store.js';\n\nexport interface UserInfo {\n  name: string;\n}\n\n// Raw JSON state in awareness CRDT\nexport type RawAwarenessState<\n  Flags extends Record<string, unknown> = BlockSuiteFlags,\n> = {\n  user?: UserInfo;\n  color?: string;\n  flags: Flags;\n  selection: Array<Record<string, unknown>>;\n};\n\nexport interface AwarenessEvent<\n  Flags extends Record<string, unknown> = BlockSuiteFlags,\n> {\n  id: number;\n  type: 'add' | 'update' | 'remove';\n  state?: RawAwarenessState<Flags>;\n}\n\nexport class AwarenessStore<\n  Flags extends Record<string, unknown> = BlockSuiteFlags,\n> {\n  readonly awareness: YAwareness<RawAwarenessState<Flags>>;\n  readonly store: Store;\n\n  readonly slots = {\n    update: new Slot<AwarenessEvent<Flags>>(),\n  };\n\n  constructor(\n    store: Store,\n    awareness: YAwareness<RawAwarenessState<Flags>>,\n    defaultFlags: Flags\n  ) {\n    this.store = store;\n    this.awareness = awareness;\n    this.awareness.on('change', this._onAwarenessChange);\n    this.awareness.setLocalStateField('selection', []);\n    this._initFlags(defaultFlags);\n  }\n\n  private _initFlags(defaultFlags: Flags) {\n    const upstreamFlags = this.awareness.getLocalState()?.flags;\n    const flags = upstreamFlags\n      ? merge(true, defaultFlags, upstreamFlags)\n      : { ...defaultFlags };\n    this.awareness.setLocalStateField('flags', flags);\n  }\n\n  setFlag<Key extends keyof Flags>(field: Key, value: Flags[Key]) {\n    const oldFlags = this.awareness.getLocalState()?.flags ?? {};\n    this.awareness.setLocalStateField('flags', { ...oldFlags, [field]: value });\n  }\n\n  getFlag<Key extends keyof Flags>(field: Key): Flags[Key] | undefined {\n    const flags = this.awareness.getLocalState()?.flags ?? {};\n    return flags[field];\n  }\n\n  setReadonly(space: Space, value: boolean): void {\n    const flags = this.getFlag('readonly') ?? {};\n    this.setFlag('readonly', {\n      ...flags,\n      [space.id]: value,\n    } as Flags['readonly']);\n  }\n\n  isReadonly(space: Space): boolean {\n    const rd = this.getFlag('readonly');\n    if (rd && typeof rd === 'object') {\n      return Boolean((rd as Record<string, boolean>)[space.id]);\n    } else {\n      return false;\n    }\n  }\n\n  setLocalSelection(selection: Array<Record<string, unknown>>) {\n    this.awareness.setLocalStateField('selection', selection);\n  }\n\n  getLocalSelection(): ReadonlyArray<Record<string, unknown>> {\n    return this.awareness.getLocalState()?.selection || [];\n  }\n\n  getStates(): Map<number, RawAwarenessState<Flags>> {\n    return this.awareness.getStates();\n  }\n\n  private _onAwarenessChange = (diff: {\n    added: number[];\n    removed: number[];\n    updated: number[];\n  }) => {\n    const { added, removed, updated } = diff;\n\n    const states = this.awareness.getStates();\n    added.forEach(id => {\n      this.slots.update.emit({\n        id,\n        type: 'add',\n        state: states.get(id),\n      });\n    });\n    updated.forEach(id => {\n      this.slots.update.emit({\n        id,\n        type: 'update',\n        state: states.get(id),\n      });\n    });\n    removed.forEach(id => {\n      this.slots.update.emit({\n        id,\n        type: 'remove',\n      });\n    });\n  };\n\n  destroy() {\n    if (this.awareness) {\n      this.awareness.off('change', this._onAwarenessChange);\n      this.slots.update.dispose();\n    }\n  }\n}\n","import type { Transaction } from 'yjs';\nimport * as Y from 'yjs';\n\nimport { createYProxy } from '../reactive/proxy.js';\n\nexport type BlockSuiteDocAllowedValue =\n  | Record<string, unknown>\n  | unknown[]\n  | Y.Text;\nexport type BlockSuiteDocData = Record<string, BlockSuiteDocAllowedValue>;\n\nexport class BlockSuiteDoc extends Y.Doc {\n  private _spaces: Y.Map<Y.Doc> = this.getMap('spaces');\n\n  get spaces() {\n    return this._spaces;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  override toJSON(): Record<string, any> {\n    const json = super.toJSON();\n    delete json.spaces;\n    const spaces: Record<string, unknown> = {};\n    this.spaces.forEach((doc, key) => {\n      spaces[key] = doc.toJSON();\n    });\n    return {\n      ...json,\n      spaces,\n    };\n  }\n\n  getMapProxy<\n    Key extends keyof BlockSuiteDocData & string,\n    Value extends Record<\n      string,\n      unknown\n    > = BlockSuiteDocData[Key] extends Record<string, unknown>\n      ? BlockSuiteDocData[Key]\n      : never,\n  >(key: Key): Value {\n    const map = super.getMap(key);\n    return createYProxy(map);\n  }\n\n  getArrayProxy<\n    Key extends keyof BlockSuiteDocData & string,\n    Value extends unknown[] = BlockSuiteDocData[Key] extends unknown[]\n      ? BlockSuiteDocData[Key]\n      : never,\n  >(key: Key): Value {\n    const array = super.getArray(key);\n    return createYProxy(array) as Value;\n  }\n\n  override transact<T>(f: (arg0: Transaction) => T, origin?: number | string) {\n    return super.transact(f, origin);\n  }\n}\n","import { merge } from 'merge';\nimport { Awareness } from 'y-protocols/awareness.js';\n\nimport type { BlobStorage } from '../persistence/blob/types.js';\nimport type { DocProvider, DocProviderCreator } from '../providers/type.js';\nimport type { IdGenerator } from '../utils/id-generator.js';\nimport {\n  createAutoIncrementIdGenerator,\n  createAutoIncrementIdGeneratorByClientId,\n  nanoid,\n  uuidv4,\n} from '../utils/id-generator.js';\nimport { AwarenessStore, type RawAwarenessState } from '../yjs/awareness.js';\nimport { BlockSuiteDoc } from '../yjs/index.js';\nimport type { Space } from './space.js';\n\nexport interface SerializedStore {\n  [key: string]: {\n    [key: string]: unknown;\n  };\n}\n\nexport enum Generator {\n  /**\n   * Default mode, generator for the unpredictable id\n   */\n  NanoID = 'nanoID',\n\n  UUIDv4 = 'uuidV4',\n  /**\n   * This generator is trying to fix the real-time collaboration on debug mode.\n   * This will make generator predictable and won't make conflict\n   * @link https://docs.yjs.dev/api/faq#i-get-a-new-clientid-for-every-session-is-there-a-way-to-make-it-static-for-a-peer-accessing-the-doc\n   */\n  AutoIncrementByClientId = 'autoIncrementByClientId',\n  /**\n   * **Warning**: This generator mode will crash the collaborative feature\n   *  if multiple clients are adding new blocks.\n   * Use this mode only if you know what you're doing.\n   */\n  AutoIncrement = 'autoIncrement',\n}\n\nexport interface StoreOptions<\n  Flags extends Record<string, unknown> = BlockSuiteFlags,\n> {\n  id?: string;\n  providerCreators?: DocProviderCreator[];\n  awareness?: Awareness<RawAwarenessState<Flags>>;\n  idGenerator?: Generator | IdGenerator;\n  defaultFlags?: Partial<Flags>;\n  blobStorages?: ((id: string) => BlobStorage)[];\n}\n\nconst FLAGS_PRESET = {\n  enable_legacy_validation: true,\n  enable_expand_database_block: false,\n  enable_bultin_ledits: false,\n  readonly: {},\n} satisfies BlockSuiteFlags;\n\nexport class Store {\n  readonly id: string;\n  readonly doc: BlockSuiteDoc;\n  readonly providers: DocProvider[] = [];\n  readonly spaces = new Map<string, Space>();\n  readonly awarenessStore: AwarenessStore;\n  readonly idGenerator: IdGenerator;\n\n  constructor(\n    {\n      id,\n      providerCreators = [],\n      awareness,\n      idGenerator,\n      defaultFlags,\n    }: StoreOptions = { id: nanoid() }\n  ) {\n    this.id = id || '';\n    this.doc = new BlockSuiteDoc({ guid: id });\n    this.awarenessStore = new AwarenessStore(\n      this,\n      awareness ?? new Awareness<RawAwarenessState>(this.doc),\n      merge(true, FLAGS_PRESET, defaultFlags)\n    );\n\n    if (typeof idGenerator === 'function') {\n      this.idGenerator = idGenerator;\n    } else {\n      switch (idGenerator) {\n        case Generator.AutoIncrement: {\n          this.idGenerator = createAutoIncrementIdGenerator();\n          break;\n        }\n        case Generator.AutoIncrementByClientId: {\n          this.idGenerator = createAutoIncrementIdGeneratorByClientId(\n            this.doc.clientID\n          );\n          break;\n        }\n        case Generator.UUIDv4: {\n          this.idGenerator = uuidv4;\n          break;\n        }\n        case Generator.NanoID:\n        default: {\n          this.idGenerator = nanoid;\n          break;\n        }\n      }\n    }\n\n    this.providers = providerCreators.map(creator =>\n      creator(this.id, this.doc, {\n        awareness: this.awarenessStore.awareness,\n      })\n    );\n  }\n\n  registerProvider(providerCreator: DocProviderCreator, id?: string) {\n    const provider = providerCreator(id ?? this.id, this.doc, {\n      awareness: this.awarenessStore.awareness,\n    });\n\n    this.providers.push(provider);\n    return provider;\n  }\n\n  addSpace(space: Space) {\n    this.spaces.set(space.id, space);\n  }\n\n  removeSpace(space: Space) {\n    this.spaces.delete(space.id);\n  }\n}\n","import { createMemoryStorage } from '../../persistence/blob/memory-storage.js';\nimport type { BlobManager, BlobStorage } from '../../persistence/blob/types.js';\nimport { sha } from '../../persistence/blob/utils.js';\nimport type { WorkspaceOptions } from '../workspace.js';\nimport { addOnFactory } from './shared.js';\n\nexport interface BlobAddon {\n  get blob(): BlobManager;\n}\n\nexport const blob = addOnFactory<keyof BlobAddon>(\n  originalClass =>\n    class extends originalClass {\n      private readonly _storages: BlobStorage[] = [];\n      private readonly _blobsRef = new Map<string, number>();\n\n      readonly blob: BlobManager;\n\n      constructor(storeOptions: WorkspaceOptions) {\n        super(storeOptions);\n\n        this._storages = (\n          storeOptions.blobStorages ?? [createMemoryStorage]\n        ).map(fn => fn(storeOptions.id || ''));\n\n        this.blob = {\n          get: async id => {\n            let found = false;\n            let count = 0;\n            return new Promise(res => {\n              this._storages.forEach(storage => {\n                storage.crud\n                  .get(id)\n                  .then(result => {\n                    if (result && !found) {\n                      found = true;\n                      res(result);\n                    }\n                    if (++count === this._storages.length && !found) {\n                      res(null);\n                    }\n                  })\n                  .catch(e => {\n                    console.error(e);\n                    if (++count === this._storages.length && !found) {\n                      res(null);\n                    }\n                  });\n              });\n            });\n          },\n          set: async (value, key) => {\n            const _key = key || (await sha(await value.arrayBuffer()));\n            await Promise.all(this._storages.map(s => s.crud.set(_key, value)));\n            return _key;\n          },\n          delete: async key => {\n            await Promise.all(this._storages.map(s => s.crud.delete(key)));\n          },\n          list: async () => {\n            const keys = new Set<string>();\n            await Promise.all(\n              this._storages.map(async s => {\n                const list = await s.crud.list();\n                list.forEach(key => keys.add(key));\n              })\n            );\n            return Array.from(keys);\n          },\n          gc: async () => {\n            const blobs = await this.blob.list();\n            blobs.forEach(blobId => {\n              const ref = this._blobsRef.get(blobId);\n              if (!ref || ref <= 0) {\n                this.blob.delete(blobId).catch(console.error);\n                this._blobsRef.delete(blobId);\n              }\n            });\n          },\n          increaseRef: blobId => {\n            const ref = this._blobsRef.get(blobId) ?? 0;\n            this._blobsRef.set(blobId, ref + 1);\n          },\n          decreaseRef: blobId => {\n            const ref = this._blobsRef.get(blobId) ?? 0;\n            this._blobsRef.set(blobId, Math.max(ref - 1, 0));\n          },\n        };\n\n        //FIXME: Each page might be lazy-loaded and could clear away blobs used by other pages.\n        // if (\n        //   typeof window !== 'undefined' &&\n        //   typeof window.addEventListener === 'function'\n        // ) {\n        //   window.addEventListener('beforeunload', () => {\n        //     this.blob.gc();\n        //   });\n        // }\n        // if (typeof process !== 'undefined') {\n        //   process.on('exit', () => {\n        //     this.blob.gc();\n        //   });\n        // }\n      }\n    }\n);\n","import { DisposableGroup, Slot } from '@blocksuite/global/utils';\nimport type { BaseTextAttributes, DeltaInsert } from '@blocksuite/inline';\nimport { Text } from 'yjs';\n\nimport type { BlockIndexer, IndexBlockEvent } from './base.js';\n\ntype PageId = string;\ntype BlockId = string;\ntype LinkedNode = {\n  type: 'LinkedPage' | 'Subpage';\n  pageId: PageId;\n  blockId: BlockId;\n};\n/**\n * Please sync type with {@link AffineTextAttributes} manually\n */\ntype TextDelta = DeltaInsert<\n  BaseTextAttributes & { reference: Omit<LinkedNode, 'blockId'> }\n>;\n\nexport type IndexUpdatedEvent =\n  | {\n      action: 'delete';\n      pageId: PageId;\n      blockId?: BlockId;\n    }\n  | {\n      action: 'add' | 'update';\n      pageId: PageId;\n      blockId: BlockId;\n    };\n\n/**\n * Returns an object with four arrays: add, remove and unchanged.\n *\n * add: elements in after that are not in before\n * remove: elements in before that are not in after\n * unchanged: elements in both before and after\n */\nfunction diffArray<T>(\n  before: T[],\n  after: T[],\n  compare = (a: T, b: T) => a === b\n) {\n  const add: T[] = [];\n  const remove: T[] = [];\n  const unchanged: T[] = [];\n\n  // Find elements in before that are not in after\n  for (const elem of before) {\n    if (!after.some(afterElem => compare(afterElem, elem))) {\n      remove.push(elem);\n    } else {\n      unchanged.push(elem);\n    }\n  }\n  // Find elements in after that are not in before\n  for (const elem of after) {\n    if (!before.some(beforeElem => compare(beforeElem, elem))) {\n      add.push(elem);\n    }\n  }\n\n  return { changed: add.length || remove.length, add, remove, unchanged };\n}\n\nexport class BacklinkIndexer {\n  private _disposables = new DisposableGroup();\n\n  private _linkIndexMap: Record<PageId, Record<BlockId, LinkedNode[]>> = {};\n  get linkIndexMap() {\n    return this._linkIndexMap;\n  }\n\n  public slots = {\n    /**\n     * Note: sys:children update will not trigger event\n     */\n    indexUpdated: new Slot<IndexUpdatedEvent>(),\n  };\n\n  constructor(blockIndexer: BlockIndexer) {\n    this._disposables.add(\n      blockIndexer.slots.refreshIndex.on(() => this._onRefreshIndex())\n    );\n\n    this._disposables.add(\n      blockIndexer.slots.pageRemoved.on(pageId => this._onPageRemoved(pageId))\n    );\n\n    this._disposables.add(\n      blockIndexer.slots.blockUpdated.on(e => this._onBlockUpdated(e))\n    );\n\n    this.slots.indexUpdated.on(() => {\n      this._backlinkIndexMapCache = null;\n    });\n  }\n\n  // TODO use inverted index\n  private _backlinkIndexMapCache: Record<PageId, LinkedNode[]> | null = null;\n  /**\n   * Get the list of backlinks for a given page\n   */\n  public getBacklink(targetPageId: PageId) {\n    if (this._backlinkIndexMapCache) {\n      return this._backlinkIndexMapCache[targetPageId] ?? [];\n    }\n    const backlinkIndexMapCache: Record<PageId, LinkedNode[]> = {};\n    for (const [fromPageId, blockMap] of Object.entries(this._linkIndexMap)) {\n      for (const [fromBlockId, links] of Object.entries(blockMap)) {\n        links.forEach(({ pageId, type }) => {\n          if (!(pageId in backlinkIndexMapCache)) {\n            backlinkIndexMapCache[pageId] = [];\n          }\n          backlinkIndexMapCache[pageId].push({\n            pageId: fromPageId,\n            blockId: fromBlockId,\n            type,\n          });\n        });\n      }\n    }\n    this._backlinkIndexMapCache = backlinkIndexMapCache;\n    return this._backlinkIndexMapCache[targetPageId] ?? [];\n  }\n\n  private _onRefreshIndex() {\n    this._linkIndexMap = {};\n  }\n\n  private _onPageRemoved(pageId: PageId) {\n    if (!this._linkIndexMap[pageId]) {\n      return;\n    }\n    this._linkIndexMap[pageId] = {};\n    this.slots.indexUpdated.emit({ action: 'delete', pageId });\n  }\n\n  private _onBlockUpdated({ action, pageId, block, blockId }: IndexBlockEvent) {\n    switch (action) {\n      case 'add':\n      case 'update': {\n        let links: LinkedNode[] = [];\n\n        const text = block.get('prop:text');\n        if (text) {\n          if (text instanceof Text) {\n            const deltas: TextDelta[] = text.toDelta();\n            links = [\n              ...links,\n              ...deltas\n                .filter(delta => delta.attributes && delta.attributes.reference)\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                .map(delta => ({ ...delta.attributes!.reference!, blockId })),\n            ];\n          } else {\n            console.warn('Unexpected prop:text type', text);\n          }\n        }\n\n        const flavour = block.get('sys:flavour');\n        if (flavour === 'affine:embed-linked-doc') {\n          const pageId = block.get('prop:pageId');\n          if (typeof pageId === 'string') {\n            links = [...links, { pageId, blockId, type: 'LinkedPage' }];\n          } else {\n            console.warn('Unexpected prop:pageId type', pageId);\n          }\n        }\n\n        this._indexDelta({ action, pageId, blockId, links });\n        return;\n      }\n      case 'delete': {\n        this._removeIndex(pageId, blockId);\n        break;\n      }\n    }\n  }\n\n  private _indexDelta({\n    action,\n    pageId,\n    blockId,\n    links,\n  }: {\n    action: IndexBlockEvent['action'];\n    pageId: PageId;\n    blockId: BlockId;\n    links: LinkedNode[];\n  }) {\n    const before = this._linkIndexMap[pageId]?.[blockId] ?? [];\n    const diff = diffArray(before, links);\n    if (!diff.changed) return;\n\n    this._linkIndexMap[pageId] = {\n      ...this._linkIndexMap[pageId],\n      [blockId]: links,\n    };\n    this.slots.indexUpdated.emit({ action, pageId, blockId });\n  }\n\n  private _removeIndex(pageId: PageId, blockId: BlockId) {\n    if (!this._linkIndexMap[pageId] || !this._linkIndexMap[pageId][blockId]) {\n      return;\n    }\n    const previousLink = this._linkIndexMap[pageId][blockId];\n    delete this._linkIndexMap[pageId][blockId];\n    if (previousLink.length) {\n      this.slots.indexUpdated.emit({\n        action: 'delete',\n        pageId,\n        blockId,\n      });\n    }\n  }\n\n  dispose() {\n    this._disposables.dispose();\n  }\n}\n","import { assertExists, DisposableGroup, Slot } from '@blocksuite/global/utils';\nimport type * as Y from 'yjs';\nimport { YArrayEvent, YMapEvent, YTextEvent } from 'yjs';\n\nimport type { YBlock } from '../workspace/block/block.js';\nimport type { BlockSuiteDoc } from '../yjs/index.js';\n\ntype PageId = string;\n\nexport type IndexBlockEvent =\n  | {\n      pageId: PageId;\n      blockId: string;\n      action: 'add' | 'update';\n      block: YBlock;\n    }\n  | {\n      pageId: PageId;\n      blockId: string;\n      action: 'delete';\n      block?: undefined;\n    };\n\nexport class BlockIndexer {\n  private readonly _doc: BlockSuiteDoc;\n  private readonly _workspaceSlots: {\n    pageAdded: Slot<string>;\n    pageRemoved: Slot<string>;\n  };\n  private _disposables = new DisposableGroup();\n\n  public slots = {\n    pageRemoved: new Slot<PageId>(),\n    /**\n     * Note: sys:children update will not trigger event\n     */\n    blockUpdated: new Slot<IndexBlockEvent>(),\n    refreshIndex: new Slot(),\n  };\n\n  constructor(\n    doc: BlockSuiteDoc,\n    {\n      immediately = false,\n      slots,\n    }: {\n      readonly slots: {\n        pageAdded: Slot<string>;\n        pageRemoved: Slot<string>;\n      };\n      immediately?: boolean;\n    }\n  ) {\n    this._doc = doc;\n    this._workspaceSlots = slots;\n\n    if (immediately) {\n      this._initIndex();\n      return;\n    }\n    // lazy init\n    setTimeout(() => {\n      this._initIndex();\n    }, 0);\n  }\n\n  private _initIndex() {\n    const doc = this._doc;\n    const share = doc.share;\n    if (!share.has('meta')) {\n      throw new Error('Failed to initialize indexer: workspace meta not found');\n    }\n\n    let disposeMap: Record<string, (() => void) | null> = {};\n    this._disposables.add(() => {\n      Object.values(disposeMap).forEach(fn => fn?.());\n      disposeMap = {};\n    });\n\n    Array.from(doc.spaces.keys())\n      .map(pageId => ({ pageId, page: this._getPage(pageId) }))\n      .forEach(({ pageId, page }) => {\n        assertExists(page, `Failed to find page '${pageId}'`);\n        if (disposeMap[pageId]) {\n          console.warn(\n            `Duplicated pageAdded event! ${pageId} already observed`,\n            disposeMap\n          );\n          return;\n        }\n        const dispose = this._indexPage(pageId, page);\n        disposeMap[pageId] = dispose;\n      });\n\n    this._workspaceSlots.pageAdded.on(pageId => {\n      const page = this._getPage(pageId);\n      assertExists(page, `Failed to find page '${pageId}'`);\n      if (disposeMap[pageId]) {\n        // It's possible because the `pageAdded` event is emitted once a new block is added to the page\n        return;\n      }\n      const dispose = this._indexPage(pageId, page);\n      disposeMap[pageId] = dispose;\n    });\n    this._workspaceSlots.pageRemoved.on(pageId => {\n      disposeMap[pageId]?.();\n      disposeMap[pageId] = null;\n      this.slots.pageRemoved.emit(pageId);\n    });\n  }\n\n  private _indexPage(pageId: string, yPage: Y.Doc) {\n    const yBlocks = yPage.getMap<YBlock>('blocks');\n    yBlocks.forEach((block, blockId) => {\n      this._indexBlock({ action: 'add', pageId, blockId, block });\n    });\n\n    const observer = (\n      events: Y.YEvent<Y.AbstractType<unknown>>[],\n      transaction: Y.Transaction\n    ) => this._yPageObserver(events, transaction, { pageId, yPage: yBlocks });\n\n    yBlocks.observeDeep(observer);\n    return () => {\n      yBlocks.unobserveDeep(observer);\n    };\n  }\n\n  private _indexBlock(indexEvent: IndexBlockEvent) {\n    this.slots.blockUpdated.emit(indexEvent);\n  }\n\n  private _yPageObserver = (\n    events: Y.YEvent<Y.AbstractType<unknown>>[],\n    _transaction: Y.Transaction,\n    { pageId, yPage }: { pageId: PageId; yPage: Y.Map<YBlock> }\n  ) => {\n    events.forEach(e => {\n      if (e instanceof YArrayEvent) {\n        // sys:children\n        return;\n      }\n\n      if (e instanceof YMapEvent) {\n        if (e.target !== e.currentTarget) {\n          // add 'elements' to 'affine:surface' or add 'prop:xywh' to 'affine:note'\n          if (e.keysChanged.has('prop:text')) {\n            // update block text by `page.updateBlock(paragraph, { text: new page.Text() })` API\n            const blockId = e.path[0] as string;\n            const block = yPage.get(blockId);\n            assertExists(block);\n            this._indexBlock({\n              action: 'update',\n              pageId,\n              blockId,\n              block,\n            });\n          }\n          return;\n        }\n\n        Array.from(e.changes.keys.entries()).forEach(\n          ([blockId, { action }]) => {\n            if (action === 'delete') {\n              this._indexBlock({\n                action,\n                pageId,\n                blockId,\n              });\n              return;\n            }\n            // add or update\n            const block = yPage.get(blockId);\n            assertExists(block);\n            this._indexBlock({\n              action,\n              pageId,\n              blockId,\n              block,\n            });\n          }\n        );\n        return;\n      }\n      if (e instanceof YTextEvent) {\n        const blockId = e.path[0];\n        if (!blockId || typeof blockId !== 'string') {\n          throw new Error('Failed to update index! Unexpected YText Event!');\n        }\n        const block = yPage.get(blockId);\n        assertExists(block);\n        this._indexBlock({\n          action: 'update',\n          pageId,\n          blockId,\n          block,\n        });\n        return;\n      }\n    });\n  };\n\n  private _getPage(pageId: PageId): Y.Doc | undefined {\n    return this._doc.spaces.get(pageId) as Y.Doc | undefined;\n  }\n\n  refreshIndex() {\n    this.slots.refreshIndex.emit();\n    this._initIndex();\n  }\n\n  dispose() {\n    this._disposables.dispose();\n  }\n}\n","const agent = globalThis.navigator?.userAgent ?? '';\nconst platform = globalThis.navigator?.platform;\n\nexport const IS_WEB =\n  typeof window !== 'undefined' && typeof document !== 'undefined';\n\nexport const IS_NODE = typeof process !== 'undefined' && !IS_WEB;\n\nexport const IS_SAFARI = /Apple Computer/.test(globalThis.navigator?.vendor);\n\nexport const IS_FIREFOX =\n  IS_WEB && navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n\nexport const IS_ANDROID = /Android \\d/.test(agent);\n\nexport const IS_IOS =\n  IS_SAFARI &&\n  (/Mobile\\/\\w+/.test(agent) || globalThis.navigator?.maxTouchPoints > 2);\n\nexport const IS_MAC = /Mac/i.test(platform);\n\nexport const IS_WINDOWS = /Win/.test(platform);\n","/**!\r\n * FlexSearch.js v0.7.41 (Bundle.module)\r\n * Author and Copyright: Thomas Wilkerling\r\n * Licence: Apache-2.0\r\n * Hosted by Nextapps GmbH\r\n * https://github.com/nextapps-de/flexsearch\r\n */\nvar t;function u(a){return\"undefined\"!==typeof a?a:!0}function v(a){const b=Array(a);for(let c=0;c<a;c++)b[c]=x();return b}function x(){return Object.create(null)}function aa(a,b){return b.length-a.length}function C(a){return\"string\"===typeof a}function D(a){return\"object\"===typeof a}function E(a){return\"function\"===typeof a};function F(a,b){var c=ba;if(a&&(b&&(a=G(a,b)),this.H&&(a=G(a,this.H)),this.J&&1<a.length&&(a=G(a,this.J)),c||\"\"===c)){b=a.split(c);if(this.filter){a=this.filter;c=b.length;const d=[];for(let e=0,f=0;e<c;e++){const h=b[e];h&&!a[h]&&(d[f++]=h)}a=d}else a=b;return a}return a}const ba=/[\\p{Z}\\p{S}\\p{P}\\p{C}]+/u,ca=/[\\u0300-\\u036f]/g;\nfunction I(a,b){const c=Object.keys(a),d=c.length,e=[];let f=\"\",h=0;for(let g=0,k,m;g<d;g++)k=c[g],(m=a[k])?(e[h++]=J(b?\"(?!\\\\b)\"+k+\"(\\\\b|_)\":k),e[h++]=m):f+=(f?\"|\":\"\")+k;f&&(e[h++]=J(b?\"(?!\\\\b)(\"+f+\")(\\\\b|_)\":\"(\"+f+\")\"),e[h]=\"\");return e}function G(a,b){for(let c=0,d=b.length;c<d&&(a=a.replace(b[c],b[c+1]),a);c+=2);return a}function J(a){return new RegExp(a,\"g\")}function da(a){let b=\"\",c=\"\";for(let d=0,e=a.length,f;d<e;d++)(f=a[d])!==c&&(b+=c=f);return b};var fa={encode:ea,F:!1,G:\"\"};function ea(a){return F.call(this,(\"\"+a).toLowerCase(),!1)};const ha={},K={};function ia(a){L(a,\"add\");L(a,\"append\");L(a,\"search\");L(a,\"update\");L(a,\"remove\")}function L(a,b){a[b+\"Async\"]=function(){const c=this,d=arguments;var e=d[d.length-1];let f;E(e)&&(f=e,delete d[d.length-1]);e=new Promise(function(h){setTimeout(function(){c.async=!0;const g=c[b].apply(c,d);c.async=!1;h(g)})});return f?(e.then(f),this):e}};function ja(a,b,c,d){const e=a.length;let f=[],h,g,k=0;d&&(d=[]);for(let m=e-1;0<=m;m--){const n=a[m],w=n.length,q=x();let r=!h;for(let l=0;l<w;l++){const p=n[l],A=p.length;if(A)for(let B=0,z,y;B<A;B++)if(y=p[B],h){if(h[y]){if(!m)if(c)c--;else if(f[k++]=y,k===b)return f;if(m||d)q[y]=1;r=!0}if(d&&(z=(g[y]||0)+1,g[y]=z,z<e)){const H=d[z-2]||(d[z-2]=[]);H[H.length]=y}}else q[y]=1}if(d)h||(g=q);else if(!r)return[];h=q}if(d)for(let m=d.length-1,n,w;0<=m;m--){n=d[m];w=n.length;for(let q=0,r;q<w;q++)if(r=\nn[q],!h[r]){if(c)c--;else if(f[k++]=r,k===b)return f;h[r]=1}}return f}function ka(a,b){const c=x(),d=x(),e=[];for(let f=0;f<a.length;f++)c[a[f]]=1;for(let f=0,h;f<b.length;f++){h=b[f];for(let g=0,k;g<h.length;g++)k=h[g],c[k]&&!d[k]&&(d[k]=1,e[e.length]=k)}return e};function M(a){this.l=!0!==a&&a;this.cache=x();this.h=[]}function la(a,b,c){D(a)&&(a=a.query);let d=this.cache.get(a);d||(d=this.search(a,b,c),this.cache.set(a,d));return d}M.prototype.set=function(a,b){if(!this.cache[a]){var c=this.h.length;c===this.l?delete this.cache[this.h[c-1]]:c++;for(--c;0<c;c--)this.h[c]=this.h[c-1];this.h[0]=a}this.cache[a]=b};M.prototype.get=function(a){const b=this.cache[a];if(this.l&&b&&(a=this.h.indexOf(a))){const c=this.h[a-1];this.h[a-1]=this.h[a];this.h[a]=c}return b};const na={memory:{charset:\"latin:extra\",D:3,B:4,m:!1},performance:{D:3,B:3,s:!1,context:{depth:2,D:1}},match:{charset:\"latin:extra\",G:\"reverse\"},score:{charset:\"latin:advanced\",D:20,B:3,context:{depth:3,D:9}},\"default\":{}};function oa(a,b,c,d,e,f,h,g){setTimeout(function(){const k=a(c?c+\".\"+d:d,JSON.stringify(h));k&&k.then?k.then(function(){b.export(a,b,c,e,f+1,g)}):b.export(a,b,c,e,f+1,g)})};function N(a,b){if(!(this instanceof N))return new N(a);var c;if(a){C(a)?a=na[a]:(c=a.preset)&&(a=Object.assign({},c[c],a));c=a.charset;var d=a.lang;C(c)&&(-1===c.indexOf(\":\")&&(c+=\":default\"),c=K[c]);C(d)&&(d=ha[d])}else a={};let e,f,h=a.context||{};this.encode=a.encode||c&&c.encode||ea;this.register=b||x();this.D=e=a.resolution||9;this.G=b=c&&c.G||a.tokenize||\"strict\";this.depth=\"strict\"===b&&h.depth;this.l=u(h.bidirectional);this.s=f=u(a.optimize);this.m=u(a.fastupdate);this.B=a.minlength||1;this.C=\na.boost;this.map=f?v(e):x();this.A=e=h.resolution||1;this.h=f?v(e):x();this.F=c&&c.F||a.rtl;this.H=(b=a.matcher||d&&d.H)&&I(b,!1);this.J=(b=a.stemmer||d&&d.J)&&I(b,!0);if(c=b=a.filter||d&&d.filter){c=b;d=x();for(let g=0,k=c.length;g<k;g++)d[c[g]]=1;c=d}this.filter=c;this.cache=(b=a.cache)&&new M(b)}t=N.prototype;t.append=function(a,b){return this.add(a,b,!0)};\nt.add=function(a,b,c,d){if(b&&(a||0===a)){if(!d&&!c&&this.register[a])return this.update(a,b);b=this.encode(b);if(d=b.length){const m=x(),n=x(),w=this.depth,q=this.D;for(let r=0;r<d;r++){let l=b[this.F?d-1-r:r];var e=l.length;if(l&&e>=this.B&&(w||!n[l])){var f=O(q,d,r),h=\"\";switch(this.G){case \"full\":if(2<e){for(f=0;f<e;f++)for(var g=e;g>f;g--)if(g-f>=this.B){var k=O(q,d,r,e,f);h=l.substring(f,g);P(this,n,h,k,a,c)}break}case \"reverse\":if(1<e){for(g=e-1;0<g;g--)h=l[g]+h,h.length>=this.B&&P(this,n,\nh,O(q,d,r,e,g),a,c);h=\"\"}case \"forward\":if(1<e){for(g=0;g<e;g++)h+=l[g],h.length>=this.B&&P(this,n,h,f,a,c);break}default:if(this.C&&(f=Math.min(f/this.C(b,l,r)|0,q-1)),P(this,n,l,f,a,c),w&&1<d&&r<d-1)for(e=x(),h=this.A,f=l,g=Math.min(w+1,d-r),e[f]=1,k=1;k<g;k++)if((l=b[this.F?d-1-r-k:r+k])&&l.length>=this.B&&!e[l]){e[l]=1;const p=this.l&&l>f;P(this,m,p?f:l,O(h+(d/2>h?0:1),d,r,g-1,k-1),a,c,p?l:f)}}}}this.m||(this.register[a]=1)}}return this};\nfunction O(a,b,c,d,e){return c&&1<a?b+(d||0)<=a?c+(e||0):(a-1)/(b+(d||0))*(c+(e||0))+1|0:0}function P(a,b,c,d,e,f,h){let g=h?a.h:a.map;if(!b[c]||h&&!b[c][h])a.s&&(g=g[d]),h?(b=b[c]||(b[c]=x()),b[h]=1,g=g[h]||(g[h]=x())):b[c]=1,g=g[c]||(g[c]=[]),a.s||(g=g[d]||(g[d]=[])),f&&g.includes(e)||(g[g.length]=e,a.m&&(a=a.register[e]||(a.register[e]=[]),a[a.length]=g))}\nt.search=function(a,b,c){c||(!b&&D(a)?(c=a,a=c.query):D(b)&&(c=b));let d=[],e;let f,h=0;if(c){a=c.query||a;b=c.limit;h=c.offset||0;var g=c.context;f=c.suggest}if(a&&(a=this.encode(\"\"+a),e=a.length,1<e)){c=x();var k=[];for(let n=0,w=0,q;n<e;n++)if((q=a[n])&&q.length>=this.B&&!c[q])if(this.s||f||this.map[q])k[w++]=q,c[q]=1;else return d;a=k;e=a.length}if(!e)return d;b||(b=100);g=this.depth&&1<e&&!1!==g;c=0;let m;g?(m=a[0],c=1):1<e&&a.sort(aa);for(let n,w;c<e;c++){w=a[c];g?(n=pa(this,d,f,b,h,2===e,w,\nm),f&&!1===n&&d.length||(m=w)):n=pa(this,d,f,b,h,1===e,w);if(n)return n;if(f&&c===e-1){k=d.length;if(!k){if(g){g=0;c=-1;continue}return d}if(1===k)return qa(d[0],b,h)}}return ja(d,b,h,f)};\nfunction pa(a,b,c,d,e,f,h,g){let k=[],m=g?a.h:a.map;a.s||(m=ra(m,h,g,a.l));if(m){let n=0;const w=Math.min(m.length,g?a.A:a.D);for(let q=0,r=0,l,p;q<w;q++)if(l=m[q])if(a.s&&(l=ra(l,h,g,a.l)),e&&l&&f&&(p=l.length,p<=e?(e-=p,l=null):(l=l.slice(e),e=0)),l&&(k[n++]=l,f&&(r+=l.length,r>=d)))break;if(n){if(f)return qa(k,d,0);b[b.length]=k;return}}return!c&&k}function qa(a,b,c){a=1===a.length?a[0]:[].concat.apply([],a);return c||a.length>b?a.slice(c,c+b):a}\nfunction ra(a,b,c,d){c?(d=d&&b>c,a=(a=a[d?b:c])&&a[d?c:b]):a=a[b];return a}t.contain=function(a){return!!this.register[a]};t.update=function(a,b){return this.remove(a).add(a,b)};\nt.remove=function(a,b){const c=this.register[a];if(c){if(this.m)for(let d=0,e;d<c.length;d++)e=c[d],e.splice(e.indexOf(a),1);else Q(this.map,a,this.D,this.s),this.depth&&Q(this.h,a,this.A,this.s);b||delete this.register[a];if(this.cache){b=this.cache;for(let d=0,e,f;d<b.h.length;d++)f=b.h[d],e=b.cache[f],e.includes(a)&&(b.h.splice(d--,1),delete b.cache[f])}}return this};\nfunction Q(a,b,c,d,e){let f=0;if(a.constructor===Array)if(e)b=a.indexOf(b),-1!==b?1<a.length&&(a.splice(b,1),f++):f++;else{e=Math.min(a.length,c);for(let h=0,g;h<e;h++)if(g=a[h])f=Q(g,b,c,d,e),d||f||delete a[h]}else for(let h in a)(f=Q(a[h],b,c,d,e))||delete a[h];return f}t.searchCache=la;\nt.export=function(a,b,c,d,e,f){let h=!0;\"undefined\"===typeof f&&(h=new Promise(m=>{f=m}));let g,k;switch(e||(e=0)){case 0:g=\"reg\";if(this.m){k=x();for(let m in this.register)k[m]=1}else k=this.register;break;case 1:g=\"cfg\";k={doc:0,opt:this.s?1:0};break;case 2:g=\"map\";k=this.map;break;case 3:g=\"ctx\";k=this.h;break;default:\"undefined\"===typeof c&&f&&f();return}oa(a,b||this,c,g,d,e,k,f);return h};\nt.import=function(a,b){if(b)switch(C(b)&&(b=JSON.parse(b)),a){case \"cfg\":this.s=!!b.opt;break;case \"reg\":this.m=!1;this.register=b;break;case \"map\":this.map=b;break;case \"ctx\":this.h=b}};ia(N.prototype);function sa(a){a=a.data;var b=self._index;const c=a.args;var d=a.task;switch(d){case \"init\":d=a.options||{};a=a.factory;b=d.encode;d.cache=!1;b&&0===b.indexOf(\"function\")&&(d.encode=Function(\"return \"+b)());a?(Function(\"return \"+a)()(self),self._index=new self.FlexSearch.Index(d),delete self.FlexSearch):self._index=new N(d);break;default:a=a.id,b=b[d].apply(b,c),postMessage(\"search\"===d?{id:a,msg:b}:{id:a})}};let ta=0;function S(a){if(!(this instanceof S))return new S(a);var b;a?E(b=a.encode)&&(a.encode=b.toString()):a={};(b=(self||window)._factory)&&(b=b.toString());const c=\"undefined\"===typeof window&&self.exports,d=this;this.o=ua(b,c,a.worker);this.h=x();if(this.o){if(c)this.o.on(\"message\",function(e){d.h[e.id](e.msg);delete d.h[e.id]});else this.o.onmessage=function(e){e=e.data;d.h[e.id](e.msg);delete d.h[e.id]};this.o.postMessage({task:\"init\",factory:b,options:a})}}T(\"add\");T(\"append\");T(\"search\");\nT(\"update\");T(\"remove\");function T(a){S.prototype[a]=S.prototype[a+\"Async\"]=function(){const b=this,c=[].slice.call(arguments);var d=c[c.length-1];let e;E(d)&&(e=d,c.splice(c.length-1,1));d=new Promise(function(f){setTimeout(function(){b.h[++ta]=f;b.o.postMessage({task:a,id:ta,args:c})})});return e?(d.then(e),this):d}}\nfunction ua(a,b,c){let d;try{d=b?new (require(\"worker_threads\")[\"Worker\"])(__dirname + \"/node/node.js\"):a?new Worker(URL.createObjectURL(new Blob([\"onmessage=\"+sa.toString()],{type:\"text/javascript\"}))):new Worker(C(c)?c:\"worker/worker.js\",{type:\"module\"})}catch(e){}return d};function U(a){if(!(this instanceof U))return new U(a);var b=a.document||a.doc||a,c;this.K=[];this.h=[];this.A=[];this.register=x();this.key=(c=b.key||b.id)&&V(c,this.A)||\"id\";this.m=u(a.fastupdate);this.C=(c=b.store)&&!0!==c&&[];this.store=c&&x();this.I=(c=b.tag)&&V(c,this.A);this.l=c&&x();this.cache=(c=a.cache)&&new M(c);a.cache=!1;this.o=a.worker;this.async=!1;c=x();let d=b.index||b.field||b;C(d)&&(d=[d]);for(let e=0,f,h;e<d.length;e++)f=d[e],C(f)||(h=f,f=f.field),h=D(h)?Object.assign({},a,h):a,\nthis.o&&(c[f]=new S(h),c[f].o||(this.o=!1)),this.o||(c[f]=new N(h,this.register)),this.K[e]=V(f,this.A),this.h[e]=f;if(this.C)for(a=b.store,C(a)&&(a=[a]),b=0;b<a.length;b++)this.C[b]=V(a[b],this.A);this.index=c}function V(a,b){const c=a.split(\":\");let d=0;for(let e=0;e<c.length;e++)a=c[e],0<=a.indexOf(\"[]\")&&(a=a.substring(0,a.length-2))&&(b[d]=!0),a&&(c[d++]=a);d<c.length&&(c.length=d);return 1<d?c:c[0]}function X(a,b){if(C(b))a=a[b];else for(let c=0;a&&c<b.length;c++)a=a[b[c]];return a}\nfunction Y(a,b,c,d,e){a=a[e];if(d===c.length-1)b[e]=a;else if(a)if(a.constructor===Array)for(b=b[e]=Array(a.length),e=0;e<a.length;e++)Y(a,b,c,d,e);else b=b[e]||(b[e]=x()),e=c[++d],Y(a,b,c,d,e)}function Z(a,b,c,d,e,f,h,g){if(a=a[h])if(d===b.length-1){if(a.constructor===Array){if(c[d]){for(b=0;b<a.length;b++)e.add(f,a[b],!0,!0);return}a=a.join(\" \")}e.add(f,a,g,!0)}else if(a.constructor===Array)for(h=0;h<a.length;h++)Z(a,b,c,d,e,f,h,g);else h=b[++d],Z(a,b,c,d,e,f,h,g)}t=U.prototype;\nt.add=function(a,b,c){D(a)&&(b=a,a=X(b,this.key));if(b&&(a||0===a)){if(!c&&this.register[a])return this.update(a,b);for(let d=0,e,f;d<this.h.length;d++)f=this.h[d],e=this.K[d],C(e)&&(e=[e]),Z(b,e,this.A,0,this.index[f],a,e[0],c);if(this.I){let d=X(b,this.I),e=x();C(d)&&(d=[d]);for(let f=0,h,g;f<d.length;f++)if(h=d[f],!e[h]&&(e[h]=1,g=this.l[h]||(this.l[h]=[]),!c||!g.includes(a)))if(g[g.length]=a,this.m){const k=this.register[a]||(this.register[a]=[]);k[k.length]=g}}if(this.store&&(!c||!this.store[a])){let d;\nif(this.C){d=x();for(let e=0,f;e<this.C.length;e++)f=this.C[e],C(f)?d[f]=b[f]:Y(b,d,f,0,f[0])}this.store[a]=d||b}}return this};t.append=function(a,b){return this.add(a,b,!0)};t.update=function(a,b){return this.remove(a).add(a,b)};\nt.remove=function(a){D(a)&&(a=X(a,this.key));if(this.register[a]){for(var b=0;b<this.h.length&&(this.index[this.h[b]].remove(a,!this.o),!this.m);b++);if(this.I&&!this.m)for(let c in this.l){b=this.l[c];const d=b.indexOf(a);-1!==d&&(1<b.length?b.splice(d,1):delete this.l[c])}this.store&&delete this.store[a];delete this.register[a]}return this};\nt.search=function(a,b,c,d){c||(!b&&D(a)?(c=a,a=\"\"):D(b)&&(c=b,b=0));let e=[],f=[],h,g,k,m,n,w,q=0;if(c)if(c.constructor===Array)k=c,c=null;else{a=c.query||a;k=(h=c.pluck)||c.index||c.field;m=c.tag;g=this.store&&c.enrich;n=\"and\"===c.bool;b=c.limit||b||100;w=c.offset||0;if(m&&(C(m)&&(m=[m]),!a)){for(let l=0,p;l<m.length;l++)if(p=va.call(this,m[l],b,w,g))e[e.length]=p,q++;return q?e:[]}C(k)&&(k=[k])}k||(k=this.h);n=n&&(1<k.length||m&&1<m.length);const r=!d&&(this.o||this.async)&&[];for(let l=0,p,A,B;l<\nk.length;l++){let z;A=k[l];C(A)||(z=A,A=z.field,a=z.query||a,b=z.limit||b,g=z.enrich||g);if(r)r[l]=this.index[A].searchAsync(a,b,z||c);else{d?p=d[l]:p=this.index[A].search(a,b,z||c);B=p&&p.length;if(m&&B){const y=[];let H=0;n&&(y[0]=[p]);for(let W=0,ma,R;W<m.length;W++)if(ma=m[W],B=(R=this.l[ma])&&R.length)H++,y[y.length]=n?[R]:R;H&&(p=n?ja(y,b||100,w||0):ka(p,y),B=p.length)}if(B)f[q]=A,e[q++]=p;else if(n)return[]}}if(r){const l=this;return new Promise(function(p){Promise.all(r).then(function(A){p(l.search(a,\nb,c,A))})})}if(!q)return[];if(h&&(!g||!this.store))return e[0];for(let l=0,p;l<f.length;l++){p=e[l];p.length&&g&&(p=wa.call(this,p));if(h)return p;e[l]={field:f[l],result:p}}return e};function va(a,b,c,d){let e=this.l[a],f=e&&e.length-c;if(f&&0<f){if(f>b||c)e=e.slice(c,c+b);d&&(e=wa.call(this,e));return{tag:a,result:e}}}function wa(a){const b=Array(a.length);for(let c=0,d;c<a.length;c++)d=a[c],b[c]={id:d,doc:this.store[d]};return b}t.contain=function(a){return!!this.register[a]};t.get=function(a){return this.store[a]};\nt.set=function(a,b){this.store[a]=b;return this};t.searchCache=la;t.export=function(a,b,c,d,e,f){let h;\"undefined\"===typeof f&&(h=new Promise(g=>{f=g}));e||(e=0);d||(d=0);if(d<this.h.length){const g=this.h[d],k=this.index[g];b=this;setTimeout(function(){k.export(a,b,e?g:\"\",d,e++,f)||(d++,e=1,b.export(a,b,g,d,e,f))})}else{let g,k;switch(e){case 1:g=\"tag\";k=this.l;c=null;break;case 2:g=\"store\";k=this.store;c=null;break;default:f();return}oa(a,this,c,g,d,e,k,f)}return h};\nt.import=function(a,b){if(b)switch(C(b)&&(b=JSON.parse(b)),a){case \"tag\":this.l=b;break;case \"reg\":this.m=!1;this.register=b;for(let d=0,e;d<this.h.length;d++)e=this.index[this.h[d]],e.register=b,e.m=!1;break;case \"store\":this.store=b;break;default:a=a.split(\".\");const c=a[0];a=a[1];c&&a&&this.index[c].import(a,b)}};ia(U.prototype);var ya={encode:xa,F:!1,G:\"\"};const za=[J(\"[\\u00e0\\u00e1\\u00e2\\u00e3\\u00e4\\u00e5]\"),\"a\",J(\"[\\u00e8\\u00e9\\u00ea\\u00eb]\"),\"e\",J(\"[\\u00ec\\u00ed\\u00ee\\u00ef]\"),\"i\",J(\"[\\u00f2\\u00f3\\u00f4\\u00f5\\u00f6\\u0151]\"),\"o\",J(\"[\\u00f9\\u00fa\\u00fb\\u00fc\\u0171]\"),\"u\",J(\"[\\u00fd\\u0177\\u00ff]\"),\"y\",J(\"\\u00f1\"),\"n\",J(\"[\\u00e7c]\"),\"k\",J(\"\\u00df\"),\"s\",J(\" & \"),\" and \"];function xa(a){var b=a=\"\"+a;b.normalize&&(b=b.normalize(\"NFD\").replace(ca,\"\"));return F.call(this,b.toLowerCase(),!a.normalize&&za)};var Ba={encode:Aa,F:!1,G:\"strict\"};const Ca=/[^a-z0-9]+/,Da={b:\"p\",v:\"f\",w:\"f\",z:\"s\",x:\"s\",\"\\u00df\":\"s\",d:\"t\",n:\"m\",c:\"k\",g:\"k\",j:\"k\",q:\"k\",i:\"e\",y:\"e\",u:\"o\"};function Aa(a){a=xa.call(this,a).join(\" \");const b=[];if(a){const c=a.split(Ca),d=c.length;for(let e=0,f,h=0;e<d;e++)if((a=c[e])&&(!this.filter||!this.filter[a])){f=a[0];let g=Da[f]||f,k=g;for(let m=1;m<a.length;m++){f=a[m];const n=Da[f]||f;n&&n!==k&&(g+=n,k=n)}b[h++]=g}}return b};var Fa={encode:Ea,F:!1,G:\"\"};const Ga=[J(\"ae\"),\"a\",J(\"oe\"),\"o\",J(\"sh\"),\"s\",J(\"th\"),\"t\",J(\"ph\"),\"f\",J(\"pf\"),\"f\",J(\"(?![aeo])h(?![aeo])\"),\"\",J(\"(?!^[aeo])h(?!^[aeo])\"),\"\"];function Ea(a,b){a&&(a=Aa.call(this,a).join(\" \"),2<a.length&&(a=G(a,Ga)),b||(1<a.length&&(a=da(a)),a&&(a=a.split(\" \"))));return a||[]};var Ia={encode:Ha,F:!1,G:\"\"};const Ja=J(\"(?!\\\\b)[aeo]\");function Ha(a){a&&(a=Ea.call(this,a,!0),1<a.length&&(a=a.replace(Ja,\"\")),1<a.length&&(a=da(a)),a&&(a=a.split(\" \")));return a||[]};K[\"latin:default\"]=fa;K[\"latin:simple\"]=ya;K[\"latin:balance\"]=Ba;K[\"latin:advanced\"]=Fa;K[\"latin:extra\"]=Ia;export default {Index:N,Document:U,Worker:S,registerCharset:function(a,b){K[a]=b},registerLanguage:function(a,b){ha[a]=b}};\n","import { IS_NODE, IS_WEB } from '@blocksuite/global/env';\nimport type { DocumentSearchOptions } from 'flexsearch';\nimport FlexSearch from 'flexsearch';\nimport type { Doc } from 'yjs';\nimport { Text as YText } from 'yjs';\n\nimport type { YBlock } from '../workspace/block/block.js';\nimport type { YBlocks } from '../workspace/page.js';\nimport type { BlockSuiteDoc } from '../yjs/index.js';\n\nconst DocumentIndexer = FlexSearch.Document;\nconst Index = FlexSearch.Index;\n\nexport type QueryContent = string | Partial<DocumentSearchOptions<boolean>>;\n\ntype SearchResult = { id: string; doc: { space: string; content: string } };\ntype SearchResults = { field: string; result: SearchResult[] };\n\nfunction tokenize(locale: string) {\n  const tokenizer = Intl.Segmenter;\n  if (tokenizer) {\n    // extract the latin encoder inside flexsearch\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const latinIndexer: any = new Index({ charset: 'latin:advanced' });\n    const latinEncoder = latinIndexer.encode.bind(latinIndexer);\n    // check latin characters\n    const latinChecker = /^[\\p{Script=Latin}\\p{Mark}\\d]+$/u;\n\n    const segmenter = new tokenizer([locale], { granularity: 'word' });\n    return (text: string) => {\n      const latinChars: string[] = [];\n      const cjkChars = Array.from(segmenter.segment(text))\n        .filter(s => {\n          if (s.isWordLike) {\n            if (!latinChecker.test(s.segment)) {\n              return true;\n            }\n            latinChars.push(s.segment);\n          }\n          return false;\n        })\n        .map(s => s.segment);\n\n      return [...cjkChars, ...latinEncoder(latinChars.join(' '))];\n    };\n  }\n  return (text: string) => {\n    // eslint-disable-next-line no-control-regex\n    return text.replace(/[\\x00-\\x7F]/g, '').split('');\n  };\n}\n\ntype IndexMeta = Readonly<{\n  content: string;\n  reference?: string;\n  space: string;\n  tags: string[];\n}>;\n\nconst REINDEX_TIMEOUT = 200;\n\nexport class SearchIndexer {\n  private readonly _doc: BlockSuiteDoc;\n  private readonly _indexer: FlexSearch.Document<IndexMeta, string[]>;\n  private _reindexMap: Map<string, IndexMeta> | null = null;\n\n  constructor(\n    doc: BlockSuiteDoc,\n    // locale string based on https://www.w3.org/International/articles/bcp47/\n    locale = 'en-US'\n  ) {\n    this._doc = doc;\n    this._indexer = new DocumentIndexer<IndexMeta, string[]>({\n      document: {\n        id: 'id',\n        index: ['content', 'reference', 'space'],\n        tag: 'tags',\n        store: ['space', 'content'],\n      },\n      encode: tokenize(locale),\n      tokenize: 'forward',\n      context: true,\n    });\n    this._reindexMap = new Map();\n    this._reindex();\n\n    // fixme(Mirone): use better way to listen to page changes\n    doc.spaces.observe(event => {\n      event.keysChanged.forEach(pageId => {\n        const page = this._getPage(pageId);\n        if (page != null) {\n          this._handlePageIndexing(pageId, page);\n        }\n      });\n    });\n\n    if (IS_WEB) {\n      window.addEventListener('beforeunload', () => {\n        this._reindexMap = null;\n      });\n    }\n    if (IS_NODE) {\n      process.on('exit', () => {\n        this._reindexMap = null;\n      });\n    }\n  }\n\n  private _reindex = () => {\n    if (!this._reindexMap) return;\n\n    for (const id of this._reindexMap.keys()) {\n      const meta = this._reindexMap.get(id);\n      if (meta) {\n        this._reindexMap.delete(id);\n        this._indexer.add(id, meta);\n      }\n    }\n\n    setTimeout(() => {\n      if (!this._reindexMap) return;\n      requestIdleCallback(this._reindex, { timeout: 1000 });\n    }, REINDEX_TIMEOUT);\n  };\n\n  search(query: QueryContent) {\n    return new Map(\n      this._search(query).flatMap(({ result }) =>\n        result.map(r => [r.id, { space: r.doc.space, content: r.doc.content }])\n      )\n    );\n  }\n\n  private _search(query: QueryContent): SearchResults[] {\n    if (typeof query === 'object') {\n      return this._indexer.search({\n        ...query,\n        enrich: true,\n      }) as unknown as SearchResults[];\n    } else {\n      return this._indexer.search(query, {\n        enrich: true,\n      }) as unknown as SearchResults[];\n    }\n  }\n\n  public refreshPageIndex(pageId: string, page: Doc) {\n    const yBlocks = page.getMap('blocks') as YBlocks;\n    yBlocks.forEach((_, key) => {\n      this._refreshIndex(pageId, key, 'add', yBlocks.get(key));\n    });\n  }\n\n  private _handlePageIndexing(pageId: string, page: Doc) {\n    if (!page) {\n      return;\n    }\n    const yBlocks = page.getMap('blocks') as YBlocks;\n    this.refreshPageIndex(pageId, page);\n    yBlocks.observeDeep(events => {\n      const keys = events.flatMap(e => {\n        // eslint-disable-next-line no-bitwise\n        if ((e.path?.length | 0) > 0) {\n          return [[e.path[0], 'update'] as [string, 'update']];\n        }\n        return Array.from(e.changes.keys.entries()).map(\n          ([k, { action }]) => [k, action] as [string, typeof action]\n        );\n      });\n\n      if (keys.length) {\n        keys.forEach(([key, action]) => {\n          this._refreshIndex(pageId, key, action, yBlocks.get(key));\n        });\n      }\n    });\n  }\n\n  private _refreshIndex(\n    page: string,\n    id: string,\n    action: 'add' | 'update' | 'delete',\n    block?: YBlock\n  ) {\n    switch (action) {\n      case 'add':\n      case 'update': {\n        if (block) {\n          const content = this._toContent(\n            block.get('prop:title') || block.get('prop:text')\n          );\n          if (content) {\n            this._reindexMap?.set(id, {\n              content,\n              space: page,\n              tags: [page],\n            });\n          }\n        }\n        break;\n      }\n      case 'delete': {\n        this._reindexMap?.delete(id);\n        this._indexer.remove(id);\n        break;\n      }\n    }\n  }\n\n  private _toContent(obj: unknown) {\n    if (obj) {\n      if (typeof obj === 'string') {\n        return obj;\n      } else if (obj instanceof YText) {\n        return obj.toJSON();\n      }\n    }\n    return undefined;\n  }\n\n  private _getPage(key: string): Doc | undefined {\n    try {\n      return this._doc.spaces.get(key);\n    } catch (_) {\n      return undefined;\n    }\n  }\n}\n","import type { QueryContent } from '../../indexer/index.js';\nimport {\n  BacklinkIndexer,\n  BlockIndexer,\n  SearchIndexer,\n} from '../../indexer/index.js';\nimport type { WorkspaceOptions } from '../workspace.js';\nimport { addOnFactory } from './shared.js';\n\ntype Indexer = {\n  search: SearchIndexer;\n  backlink: BacklinkIndexer;\n};\n\nexport interface IndexerAddon {\n  indexer: Indexer;\n  search: (query: QueryContent) => Map<string, string>;\n}\n\nexport const indexer = addOnFactory<keyof IndexerAddon>(\n  originalClass =>\n    class extends originalClass {\n      indexer: Indexer;\n\n      search(query: QueryContent) {\n        return this.indexer.search.search(query);\n      }\n\n      constructor(storeOptions: WorkspaceOptions) {\n        super(storeOptions);\n        const blockIndexer = new BlockIndexer(this.doc, { slots: this.slots });\n        this.indexer = {\n          search: new SearchIndexer(this.doc),\n          backlink: new BacklinkIndexer(blockIndexer),\n        };\n      }\n    }\n);\n","import * as Y from 'yjs';\n\ntype DocRecord = Record<\n  string,\n  {\n    'sys:id': string;\n    'sys:flavour': string;\n    'sys:children': string[];\n    [id: string]: unknown;\n  }\n>;\n\nexport interface JSXElement {\n  // Ad-hoc for `ReactTestComponent` identify.\n  // Use ReactTestComponent serializer prevent snapshot be be wrapped in a string, which cases \" to be escaped.\n  // See https://github.com/facebook/jest/blob/f1263368cc85c3f8b70eaba534ddf593392c44f3/packages/pretty-format/src/plugins/ReactTestComponent.ts#L78-L79\n  $$typeof: symbol | 0xea71357;\n  type: string;\n  props: { 'prop:text'?: string | JSXElement } & Record<string, unknown>;\n  children?: null | (JSXElement | string | number)[];\n}\n\n// Ad-hoc for `ReactTestComponent` identify.\n// See https://github.com/facebook/jest/blob/f1263368cc85c3f8b70eaba534ddf593392c44f3/packages/pretty-format/src/plugins/ReactTestComponent.ts#L26-L29\nconst testSymbol = Symbol.for('react.test.json');\n\nfunction isValidRecord(data: unknown): data is DocRecord {\n  if (typeof data !== 'object' || data === null) {\n    return false;\n  }\n  // TODO enhance this check\n  return true;\n}\n\nconst IGNORED_PROPS = [\n  'sys:id',\n  'sys:version',\n  'sys:flavour',\n  'sys:children',\n  'prop:xywh',\n  'prop:cells',\n  'prop:elements',\n];\n\nexport function yDocToJSXNode(\n  serializedDoc: Record<string, unknown>,\n  nodeId: string\n): JSXElement {\n  if (!isValidRecord(serializedDoc)) {\n    throw new Error('Failed to parse doc record! Invalid data.');\n  }\n  const node = serializedDoc[nodeId];\n  if (!node) {\n    throw new Error(\n      `Failed to parse doc record! Node not found! id: ${nodeId}.`\n    );\n  }\n  // TODO maybe need set PascalCase\n  const flavour = node['sys:flavour'];\n  // TODO maybe need check children recursively nested\n  const children = node['sys:children'];\n  const props = Object.fromEntries(\n    Object.entries(node).filter(([key]) => !IGNORED_PROPS.includes(key))\n  );\n\n  if ('prop:text' in props && props['prop:text'] instanceof Array) {\n    props['prop:text'] = parseDelta(props['prop:text'] as DeltaText);\n  }\n\n  if ('prop:title' in props && props['prop:title'] instanceof Array) {\n    props['prop:title'] = parseDelta(props['prop:title'] as DeltaText);\n  }\n\n  if ('prop:columns' in props && props['prop:columns'] instanceof Array) {\n    props['prop:columns'] = `Array [${props['prop:columns'].length}]`;\n  }\n\n  if ('prop:views' in props && props['prop:views'] instanceof Array) {\n    props['prop:views'] = `Array [${props['prop:views'].length}]`;\n  }\n\n  return {\n    $$typeof: testSymbol,\n    type: flavour,\n    props,\n    children: children?.map(id => yDocToJSXNode(serializedDoc, id)) ?? [],\n  };\n}\n\nexport function serializeYDoc(doc: Y.Doc) {\n  const json: Record<string, unknown> = {};\n  doc.share.forEach((value, key) => {\n    if (value instanceof Y.Map) {\n      json[key] = serializeYMap(value);\n    } else {\n      json[key] = value.toJSON();\n    }\n  });\n  return json;\n}\n\nfunction serializeY(value: unknown): unknown {\n  if (value instanceof Y.Doc) {\n    return serializeYDoc(value);\n  }\n  if (value instanceof Y.Map) {\n    return serializeYMap(value);\n  }\n  if (value instanceof Y.Text) {\n    return serializeYText(value);\n  }\n  if (value instanceof Y.Array) {\n    return value.toArray().map(x => serializeY(x));\n  }\n  if (value instanceof Y.AbstractType) {\n    return value.toJSON();\n  }\n  return value;\n}\n\nfunction serializeYMap(map: Y.Map<unknown>) {\n  const json: Record<string, unknown> = {};\n  map.forEach((value, key) => {\n    json[key] = serializeY(value);\n  });\n  return json;\n}\n\ntype DeltaText = {\n  insert: string;\n  attributes?: { [format: string]: unknown };\n}[];\n\nfunction serializeYText(text: Y.Text): DeltaText {\n  const delta = text.toDelta();\n  return delta;\n}\n\nfunction parseDelta(text: DeltaText) {\n  if (!text.length) {\n    return undefined;\n  }\n  if (text.length === 1 && !text[0].attributes) {\n    // just plain text\n    return text[0].insert;\n  }\n  return {\n    // The `Symbol.for('react.fragment')` will render as `<React.Fragment>`\n    // so we use a empty string to render it as `<>`.\n    // But it will empty children ad `< />`\n    // so we return `undefined` directly if not delta text.\n    $$typeof: testSymbol, // Symbol.for('react.element'),\n    type: '', // Symbol.for('react.fragment'),\n    props: {},\n    children: text?.map(({ insert, attributes }) => ({\n      $$typeof: testSymbol,\n      type: 'text',\n      props: {\n        // Not place at `children` to avoid the trailing whitespace be trim by formatter.\n        insert,\n        ...attributes,\n      },\n    })),\n  };\n}\n","import { assertExists } from '@blocksuite/global/utils';\n\nimport type { JSXElement } from '../../utils/jsx.js';\nimport { serializeYDoc, yDocToJSXNode } from '../../utils/jsx.js';\nimport { addOnFactory } from './shared.js';\n\nexport interface TestAddon {\n  importPageSnapshot: (json: unknown, pageId: string) => Promise<void>;\n  exportJSX: (blockId?: string, pageId?: string) => JSXElement;\n}\n\nexport const test = addOnFactory<keyof TestAddon>(\n  originalClass =>\n    class extends originalClass {\n      /** @internal Only for testing */\n      exportJSX(blockId?: string, pageId = this.meta.pageMetas.at(0)?.id) {\n        assertExists(pageId);\n        const doc = this.doc.spaces.get(pageId);\n        assertExists(doc);\n        const pageJson = serializeYDoc(doc);\n        if (!pageJson) {\n          throw new Error(`Page ${pageId} doesn't exist`);\n        }\n        const blockJson = pageJson.blocks as Record<string, unknown>;\n        if (!blockId) {\n          const pageBlockId = Object.keys(blockJson).at(0);\n          if (!pageBlockId) {\n            return null;\n          }\n          blockId = pageBlockId;\n        }\n        if (!blockJson[blockId]) {\n          return null;\n        }\n        return yDocToJSXNode(blockJson, blockId);\n      }\n    }\n);\n","import type { BlobAddon } from './blob.js';\nimport type { IndexerAddon } from './indexer.js';\nimport type { TestAddon } from './test.js';\n\nexport class WorkspaceAddonType implements BlobAddon, IndexerAddon, TestAddon {\n  blob!: BlobAddon['blob'];\n\n  indexer!: IndexerAddon['indexer'];\n  search!: IndexerAddon['search'];\n\n  importPageSnapshot!: TestAddon['importPageSnapshot'];\n  exportJSX!: TestAddon['exportJSX'];\n}\n","import { assertExists, Slot } from '@blocksuite/global/utils';\nimport type * as Y from 'yjs';\n\nimport { PAGE_VERSION, WORKSPACE_VERSION } from '../consts.js';\nimport type { BlockSuiteDoc } from '../yjs/index.js';\nimport type { Workspace } from './workspace.js';\n\n// please use `declare module '@blocksuite/store'` to extend this interface\nexport interface PageMeta {\n  id: string;\n  title: string;\n  tags: string[];\n  createDate: number;\n}\n\nexport type Tag = {\n  id: string;\n  value: string;\n  color: string;\n};\nexport type PagesPropertiesMeta = {\n  tags?: {\n    options: Tag[];\n  };\n};\nexport type WorkspaceMetaState = {\n  pages?: unknown[];\n  properties?: PagesPropertiesMeta;\n  workspaceVersion?: number;\n  pageVersion?: number;\n  blockVersions?: Record<string, number>;\n  name?: string;\n  avatar?: string;\n};\n\nexport class WorkspaceMeta {\n  readonly id: string = 'meta';\n  readonly doc: BlockSuiteDoc;\n\n  private _prevPages = new Set<string>();\n\n  pageMetaAdded = new Slot<string>();\n  pageMetaRemoved = new Slot<string>();\n  pageMetasUpdated = new Slot();\n  commonFieldsUpdated = new Slot();\n\n  protected readonly _yMap: Y.Map<WorkspaceMetaState[keyof WorkspaceMetaState]>;\n  protected readonly _proxy: WorkspaceMetaState;\n\n  constructor(doc: BlockSuiteDoc) {\n    this.doc = doc;\n    this._yMap = doc.getMap(this.id);\n    this._proxy = doc.getMapProxy<string, WorkspaceMetaState>(this.id);\n    this._yMap.observeDeep(this._handleWorkspaceMetaEvents);\n  }\n\n  get yPages() {\n    return this._yMap.get('pages') as unknown as Y.Array<unknown>;\n  }\n\n  get pages() {\n    return this._proxy.pages;\n  }\n\n  get name() {\n    return this._proxy.name;\n  }\n\n  get avatar() {\n    return this._proxy.avatar;\n  }\n\n  get blockVersions() {\n    return this._proxy.blockVersions;\n  }\n\n  get workspaceVersion() {\n    return this._proxy.workspaceVersion;\n  }\n\n  get pageVersion() {\n    return this._proxy.pageVersion;\n  }\n\n  setName(name: string) {\n    this.doc.transact(() => {\n      this._proxy.name = name;\n    }, this.doc.clientID);\n  }\n\n  setAvatar(avatar: string) {\n    this.doc.transact(() => {\n      this._proxy.avatar = avatar;\n    }, this.doc.clientID);\n  }\n\n  get pageMetas() {\n    if (!this._proxy.pages) {\n      return [] as PageMeta[];\n    }\n    return [...(this._proxy.pages as PageMeta[])];\n  }\n\n  getPageMeta(id: string) {\n    return this.pageMetas.find(page => page.id === id);\n  }\n\n  addPageMeta(page: PageMeta, index?: number) {\n    this.doc.transact(() => {\n      if (!this.pages) {\n        this._proxy.pages = [];\n      }\n      const pages = this.pages as unknown[];\n      if (index === undefined) {\n        pages.push(page);\n      } else {\n        pages.splice(index, 0, page);\n      }\n    }, this.doc.clientID);\n  }\n\n  /**\n   * @internal Use {@link Workspace.setPageMeta} instead\n   */\n  setPageMeta(id: string, props: Partial<PageMeta>) {\n    const pages = (this.pages as PageMeta[]) ?? [];\n    const index = pages.findIndex((page: PageMeta) => id === page.id);\n\n    this.doc.transact(() => {\n      if (!this.pages) {\n        this._proxy.pages = [];\n      }\n      if (index === -1) return;\n      assertExists(this.pages);\n\n      const page = this.pages[index] as Record<string, unknown>;\n      Object.entries(props).forEach(([key, value]) => {\n        page[key] = value;\n      });\n    }, this.doc.clientID);\n  }\n\n  removePageMeta(id: string) {\n    // you cannot delete a page if there's no page\n    assertExists(this.pages);\n    const pageMetas = this.pageMetas as PageMeta[];\n    const index = pageMetas.findIndex((page: PageMeta) => id === page.id);\n    if (index === -1) {\n      return;\n    }\n    this.doc.transact(() => {\n      assertExists(this.pages);\n      this.pages.splice(index, 1);\n    }, this.doc.clientID);\n  }\n\n  get hasVersion() {\n    if (!this.blockVersions || !this.pageVersion || !this.workspaceVersion) {\n      return false;\n    }\n    return Object.keys(this.blockVersions).length > 0;\n  }\n\n  /**\n   * @internal Only for page initialization\n   */\n  writeVersion(workspace: Workspace) {\n    const { blockVersions, pageVersion, workspaceVersion } = this._proxy;\n\n    if (!workspaceVersion) {\n      this._proxy.workspaceVersion = WORKSPACE_VERSION;\n    } else {\n      console.error('Workspace version is already set');\n    }\n\n    if (!pageVersion) {\n      this._proxy.pageVersion = PAGE_VERSION;\n    } else {\n      console.error('Page version is already set');\n    }\n\n    if (!blockVersions) {\n      const _versions: Record<string, number> = {};\n      workspace.schema.flavourSchemaMap.forEach((schema, flavour) => {\n        _versions[flavour] = schema.version;\n      });\n      this._proxy.blockVersions = _versions;\n    } else {\n      console.error('Block versions is already set');\n    }\n  }\n\n  updateVersion(workspace: Workspace) {\n    this._proxy.workspaceVersion = WORKSPACE_VERSION;\n\n    this._proxy.pageVersion = PAGE_VERSION;\n\n    const _versions: Record<string, number> = {};\n    workspace.schema.flavourSchemaMap.forEach((schema, flavour) => {\n      _versions[flavour] = schema.version;\n    });\n    this._proxy.blockVersions = _versions;\n  }\n\n  /**\n   * @deprecated Only used for legacy page version validation\n   */\n  validateVersion(workspace: Workspace) {\n    const workspaceVersion = this._proxy.workspaceVersion;\n    if (!workspaceVersion) {\n      throw new Error(\n        'Invalid workspace data, workspace version is missing. Please make sure the data is valid.'\n      );\n    }\n    if (workspaceVersion < WORKSPACE_VERSION) {\n      throw new Error(\n        `Workspace version ${workspaceVersion} is outdated. Please upgrade the editor.`\n      );\n    }\n\n    const pageVersion = this._proxy.pageVersion;\n    if (!pageVersion) {\n      throw new Error(\n        'Invalid workspace data, page version is missing. Please make sure the data is valid.'\n      );\n    }\n    if (pageVersion < PAGE_VERSION) {\n      throw new Error(\n        `Page version ${pageVersion} is outdated. Please upgrade the editor.`\n      );\n    }\n\n    const blockVersions = { ...this._proxy.blockVersions };\n    if (!blockVersions) {\n      throw new Error(\n        'Invalid workspace data, versions data is missing. Please make sure the data is valid'\n      );\n    }\n    const dataFlavours = Object.keys(blockVersions);\n    if (dataFlavours.length === 0) {\n      throw new Error(\n        'Invalid workspace data, missing versions field. Please make sure the data is valid.'\n      );\n    }\n\n    dataFlavours.forEach(dataFlavour => {\n      const dataVersion = blockVersions[dataFlavour] as number;\n      const editorVersion =\n        workspace.schema.flavourSchemaMap.get(dataFlavour)?.version;\n      if (!editorVersion) {\n        throw new Error(\n          `Editor missing ${dataFlavour} flavour. Please make sure this block flavour is registered.`\n        );\n      } else if (dataVersion > editorVersion) {\n        throw new Error(\n          `Editor doesn't support ${dataFlavour}@${dataVersion}. Please upgrade the editor.`\n        );\n      } else if (dataVersion < editorVersion) {\n        throw new Error(\n          `In workspace data, the block flavour ${dataFlavour}@${dataVersion} is outdated. Please downgrade the editor or try data migration.`\n        );\n      }\n    });\n  }\n\n  private _handlePageMetaEvent() {\n    const { pageMetas, _prevPages } = this;\n\n    pageMetas.forEach(pageMeta => {\n      if (!_prevPages.has(pageMeta.id)) {\n        this.pageMetaAdded.emit(pageMeta.id);\n      }\n    });\n\n    _prevPages.forEach(prevPageId => {\n      const isRemoved = !pageMetas.find(p => p.id === prevPageId);\n      if (isRemoved) {\n        this.pageMetaRemoved.emit(prevPageId);\n      }\n    });\n\n    _prevPages.clear();\n    pageMetas.forEach(page => _prevPages.add(page.id));\n\n    this.pageMetasUpdated.emit();\n  }\n\n  private _handleCommonFieldsEvent() {\n    this.commonFieldsUpdated.emit();\n  }\n\n  private _handleWorkspaceMetaEvents = (\n    events: Y.YEvent<Y.Array<unknown> | Y.Text | Y.Map<unknown>>[]\n  ) => {\n    events.forEach(e => {\n      const hasKey = (k: string) =>\n        e.target === this._yMap && e.changes.keys.has(k);\n\n      if (\n        e.target === this.yPages ||\n        e.target.parent === this.yPages ||\n        hasKey('pages')\n      ) {\n        this._handlePageMetaEvent();\n      }\n\n      if (hasKey('name') || hasKey('avatar')) {\n        this._handleCommonFieldsEvent();\n      }\n    });\n  };\n\n  get properties(): PagesPropertiesMeta {\n    const meta = this._proxy.properties;\n    if (!meta) {\n      return {\n        tags: {\n          options: [],\n        },\n      };\n    }\n    return meta;\n  }\n\n  setProperties(meta: PagesPropertiesMeta) {\n    this._proxy.properties = meta;\n    this.pageMetasUpdated.emit();\n  }\n}\n","import { assertExists, Slot } from '@blocksuite/global/utils';\nimport * as Y from 'yjs';\n\nimport type { DocProviderCreator } from '../providers/type.js';\nimport type { Schema } from '../schema/index.js';\nimport type { AwarenessStore } from '../yjs/index.js';\nimport { blob, indexer, test, WorkspaceAddonType } from './addon/index.js';\nimport { type PageMeta, WorkspaceMeta } from './meta.js';\nimport { Page } from './page.js';\nimport { Store, type StoreOptions } from './store.js';\n\nexport type WorkspaceOptions = StoreOptions & {\n  schema: Schema;\n};\n\n@blob\n@indexer\n@test\nexport class Workspace extends WorkspaceAddonType {\n  static Y = Y;\n  protected _store: Store;\n\n  protected readonly _schema: Schema;\n\n  meta: WorkspaceMeta;\n\n  slots = {\n    pagesUpdated: new Slot(),\n    pageAdded: new Slot<string>(),\n    pageRemoved: new Slot<string>(),\n  };\n\n  constructor(storeOptions: WorkspaceOptions) {\n    super();\n    this._schema = storeOptions.schema;\n\n    this._store = new Store(storeOptions);\n\n    this.meta = new WorkspaceMeta(this.doc);\n    this._bindPageMetaEvents();\n  }\n\n  get id() {\n    return this._store.id;\n  }\n\n  get isEmpty() {\n    if (this.doc.store.clients.size === 0) return true;\n\n    let flag = false;\n    if (this.doc.store.clients.size === 1) {\n      const items = Array.from(this.doc.store.clients.values())[0];\n      // workspaceVersion and pageVersion were set when the workspace is initialized\n      if (items.length <= 2) {\n        flag = true;\n      }\n    }\n    return flag;\n  }\n\n  get awarenessStore(): AwarenessStore {\n    return this._store.awarenessStore;\n  }\n\n  get providers() {\n    return this._store.providers;\n  }\n\n  get pages() {\n    return this._store.spaces as Map<string, Page>;\n  }\n\n  get doc() {\n    return this._store.doc;\n  }\n\n  get idGenerator() {\n    return this._store.idGenerator;\n  }\n\n  get schema() {\n    return this._schema;\n  }\n\n  registerProvider(providerCreator: DocProviderCreator, id?: string) {\n    return this._store.registerProvider(providerCreator, id);\n  }\n\n  private _hasPage(pageId: string) {\n    return this.pages.has(pageId);\n  }\n\n  getPage(pageId: string): Page | null {\n    const space = this.pages.get(pageId) as Page | undefined;\n\n    return space ?? null;\n  }\n\n  private _bindPageMetaEvents() {\n    this.meta.pageMetaAdded.on(pageId => {\n      const page = new Page({\n        id: pageId,\n        workspace: this,\n        doc: this.doc,\n        awarenessStore: this.awarenessStore,\n        idGenerator: this._store.idGenerator,\n      });\n      this._store.addSpace(page);\n      this.slots.pageAdded.emit(page.id);\n    });\n\n    this.meta.pageMetasUpdated.on(() => this.slots.pagesUpdated.emit());\n\n    this.meta.pageMetaRemoved.on(id => {\n      const page = this.getPage(id) as Page;\n      this._store.removeSpace(page);\n      page.remove();\n      this.slots.pageRemoved.emit(id);\n    });\n  }\n\n  /**\n   * By default, only an empty page will be created.\n   * If the `init` parameter is passed, a `surface`, `note`, and `paragraph` block\n   * will be created in the page simultaneously.\n   */\n  createPage(options: { id?: string } | string = {}) {\n    // Migration guide\n    if (typeof options === 'string') {\n      options = { id: options };\n      console.warn(\n        '`createPage(pageId)` is deprecated, use `createPage()` directly or `createPage({ id: pageId })` instead'\n      );\n      console.warn(\n        'More details see https://github.com/toeverything/blocksuite/pull/2272'\n      );\n    }\n    // End of migration guide. Remove this in the next major version\n\n    const { id: pageId = this.idGenerator() } = options;\n    if (this._hasPage(pageId)) {\n      throw new Error('page already exists');\n    }\n\n    this.meta.addPageMeta({\n      id: pageId,\n      title: '',\n      createDate: +new Date(),\n      tags: [],\n    });\n    return this.getPage(pageId) as Page;\n  }\n\n  /** Update page meta state. Note that this intentionally does not mutate page state. */\n  setPageMeta(\n    pageId: string,\n    // You should not update subpageIds directly.\n    props: Partial<PageMeta>\n  ) {\n    this.meta.setPageMeta(pageId, props);\n  }\n\n  removePage(pageId: string) {\n    const pageMeta = this.meta.getPageMeta(pageId);\n    assertExists(pageMeta);\n\n    const page = this.getPage(pageId);\n    if (!page) return;\n\n    page.dispose();\n    this.meta.removePageMeta(pageId);\n    this._store.removeSpace(page);\n  }\n}\n","/// <reference types=\"@blocksuite/global\" />\n// eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference path=\"../shim.d.ts\" />\n\nexport type { Y };\nexport * from './adapter/index.js';\nexport * from './migration/index.js';\nexport { createIndexeddbStorage } from './persistence/blob/indexeddb-storage.js';\nexport { createMemoryStorage } from './persistence/blob/memory-storage.js';\nexport { createSimpleServerStorage } from './persistence/blob/mock-server-storage.js';\nexport type {\n  BlobManager,\n  BlobStorage,\n  BlobStorageCRUD,\n} from './persistence/blob/types.js';\nexport { sha } from './persistence/blob/utils.js';\nexport * from './providers/type.js';\nexport * from './reactive/index.js';\nexport * from './schema/index.js';\nexport * from './transformer/index.js';\nexport {\n  createAutoIncrementIdGenerator,\n  createAutoIncrementIdGeneratorByClientId,\n  type IdGenerator,\n  nanoid,\n  uuidv4,\n} from './utils/id-generator.js';\nexport * as Utils from './utils/utils.js';\nexport * from './workspace/index.js';\nexport * from './yjs/index.js';\nexport { Slot } from '@blocksuite/global/utils';\n\nimport './utils/formatter.js';\n\nimport type * as Y from 'yjs';\n\nconst env =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof window !== 'undefined'\n      ? window\n      : // @ts-ignore\n        typeof global !== 'undefined'\n        ? // @ts-ignore\n          global\n        : {};\nconst importIdentifier = '__ $BLOCKSUITE_STORE$ __';\n\n// @ts-ignore\nif (env[importIdentifier] === true) {\n  // https://github.com/yjs/yjs/issues/438\n  console.error(\n    '@blocksuite/store was already imported. This breaks constructor checks and will lead to issues!'\n  );\n}\n// @ts-ignore\nenv[importIdentifier] = true;\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=globalThis,i=t.trustedTypes,s=i?i.createPolicy(\"lit-html\",{createHTML:t=>t}):void 0,e=\"$lit$\",h=`lit$${(Math.random()+\"\").slice(9)}$`,o=\"?\"+h,n=`<${o}>`,r=document,l=()=>r.createComment(\"\"),c=t=>null===t||\"object\"!=typeof t&&\"function\"!=typeof t,a=Array.isArray,u=t=>a(t)||\"function\"==typeof t?.[Symbol.iterator],d=\"[ \\t\\n\\f\\r]\",f=/<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g,v=/-->/g,_=/>/g,m=RegExp(`>|${d}(?:([^\\\\s\"'>=/]+)(${d}*=${d}*(?:[^ \\t\\n\\f\\r\"'\\`<>=]|(\"|')|))|$)`,\"g\"),p=/'/g,g=/\"/g,$=/^(?:script|style|textarea|title)$/i,y=t=>(i,...s)=>({_$litType$:t,strings:i,values:s}),x=y(1),b=y(2),w=Symbol.for(\"lit-noChange\"),T=Symbol.for(\"lit-nothing\"),A=new WeakMap,E=r.createTreeWalker(r,129);function C(t,i){if(!Array.isArray(t)||!t.hasOwnProperty(\"raw\"))throw Error(\"invalid template strings array\");return void 0!==s?s.createHTML(i):i}const P=(t,i)=>{const s=t.length-1,o=[];let r,l=2===i?\"<svg>\":\"\",c=f;for(let i=0;i<s;i++){const s=t[i];let a,u,d=-1,y=0;for(;y<s.length&&(c.lastIndex=y,u=c.exec(s),null!==u);)y=c.lastIndex,c===f?\"!--\"===u[1]?c=v:void 0!==u[1]?c=_:void 0!==u[2]?($.test(u[2])&&(r=RegExp(\"</\"+u[2],\"g\")),c=m):void 0!==u[3]&&(c=m):c===m?\">\"===u[0]?(c=r??f,d=-1):void 0===u[1]?d=-2:(d=c.lastIndex-u[2].length,a=u[1],c=void 0===u[3]?m:'\"'===u[3]?g:p):c===g||c===p?c=m:c===v||c===_?c=f:(c=m,r=void 0);const x=c===m&&t[i+1].startsWith(\"/>\")?\" \":\"\";l+=c===f?s+n:d>=0?(o.push(a),s.slice(0,d)+e+s.slice(d)+h+x):s+h+(-2===d?i:x)}return[C(t,l+(t[s]||\"<?>\")+(2===i?\"</svg>\":\"\")),o]};class V{constructor({strings:t,_$litType$:s},n){let r;this.parts=[];let c=0,a=0;const u=t.length-1,d=this.parts,[f,v]=P(t,s);if(this.el=V.createElement(f,n),E.currentNode=this.el.content,2===s){const t=this.el.content.firstChild;t.replaceWith(...t.childNodes)}for(;null!==(r=E.nextNode())&&d.length<u;){if(1===r.nodeType){if(r.hasAttributes())for(const t of r.getAttributeNames())if(t.endsWith(e)){const i=v[a++],s=r.getAttribute(t).split(h),e=/([.?@])?(.*)/.exec(i);d.push({type:1,index:c,name:e[2],strings:s,ctor:\".\"===e[1]?k:\"?\"===e[1]?H:\"@\"===e[1]?I:R}),r.removeAttribute(t)}else t.startsWith(h)&&(d.push({type:6,index:c}),r.removeAttribute(t));if($.test(r.tagName)){const t=r.textContent.split(h),s=t.length-1;if(s>0){r.textContent=i?i.emptyScript:\"\";for(let i=0;i<s;i++)r.append(t[i],l()),E.nextNode(),d.push({type:2,index:++c});r.append(t[s],l())}}}else if(8===r.nodeType)if(r.data===o)d.push({type:2,index:c});else{let t=-1;for(;-1!==(t=r.data.indexOf(h,t+1));)d.push({type:7,index:c}),t+=h.length-1}c++}}static createElement(t,i){const s=r.createElement(\"template\");return s.innerHTML=t,s}}function N(t,i,s=t,e){if(i===w)return i;let h=void 0!==e?s._$Co?.[e]:s._$Cl;const o=c(i)?void 0:i._$litDirective$;return h?.constructor!==o&&(h?._$AO?.(!1),void 0===o?h=void 0:(h=new o(t),h._$AT(t,s,e)),void 0!==e?(s._$Co??=[])[e]=h:s._$Cl=h),void 0!==h&&(i=N(t,h._$AS(t,i.values),h,e)),i}class S{constructor(t,i){this._$AV=[],this._$AN=void 0,this._$AD=t,this._$AM=i}get parentNode(){return this._$AM.parentNode}get _$AU(){return this._$AM._$AU}u(t){const{el:{content:i},parts:s}=this._$AD,e=(t?.creationScope??r).importNode(i,!0);E.currentNode=e;let h=E.nextNode(),o=0,n=0,l=s[0];for(;void 0!==l;){if(o===l.index){let i;2===l.type?i=new M(h,h.nextSibling,this,t):1===l.type?i=new l.ctor(h,l.name,l.strings,this,t):6===l.type&&(i=new L(h,this,t)),this._$AV.push(i),l=s[++n]}o!==l?.index&&(h=E.nextNode(),o++)}return E.currentNode=r,e}p(t){let i=0;for(const s of this._$AV)void 0!==s&&(void 0!==s.strings?(s._$AI(t,s,i),i+=s.strings.length-2):s._$AI(t[i])),i++}}class M{get _$AU(){return this._$AM?._$AU??this._$Cv}constructor(t,i,s,e){this.type=2,this._$AH=T,this._$AN=void 0,this._$AA=t,this._$AB=i,this._$AM=s,this.options=e,this._$Cv=e?.isConnected??!0}get parentNode(){let t=this._$AA.parentNode;const i=this._$AM;return void 0!==i&&11===t?.nodeType&&(t=i.parentNode),t}get startNode(){return this._$AA}get endNode(){return this._$AB}_$AI(t,i=this){t=N(this,t,i),c(t)?t===T||null==t||\"\"===t?(this._$AH!==T&&this._$AR(),this._$AH=T):t!==this._$AH&&t!==w&&this._(t):void 0!==t._$litType$?this.g(t):void 0!==t.nodeType?this.$(t):u(t)?this.T(t):this._(t)}k(t){return this._$AA.parentNode.insertBefore(t,this._$AB)}$(t){this._$AH!==t&&(this._$AR(),this._$AH=this.k(t))}_(t){this._$AH!==T&&c(this._$AH)?this._$AA.nextSibling.data=t:this.$(r.createTextNode(t)),this._$AH=t}g(t){const{values:i,_$litType$:s}=t,e=\"number\"==typeof s?this._$AC(t):(void 0===s.el&&(s.el=V.createElement(C(s.h,s.h[0]),this.options)),s);if(this._$AH?._$AD===e)this._$AH.p(i);else{const t=new S(e,this),s=t.u(this.options);t.p(i),this.$(s),this._$AH=t}}_$AC(t){let i=A.get(t.strings);return void 0===i&&A.set(t.strings,i=new V(t)),i}T(t){a(this._$AH)||(this._$AH=[],this._$AR());const i=this._$AH;let s,e=0;for(const h of t)e===i.length?i.push(s=new M(this.k(l()),this.k(l()),this,this.options)):s=i[e],s._$AI(h),e++;e<i.length&&(this._$AR(s&&s._$AB.nextSibling,e),i.length=e)}_$AR(t=this._$AA.nextSibling,i){for(this._$AP?.(!1,!0,i);t&&t!==this._$AB;){const i=t.nextSibling;t.remove(),t=i}}setConnected(t){void 0===this._$AM&&(this._$Cv=t,this._$AP?.(t))}}class R{get tagName(){return this.element.tagName}get _$AU(){return this._$AM._$AU}constructor(t,i,s,e,h){this.type=1,this._$AH=T,this._$AN=void 0,this.element=t,this.name=i,this._$AM=e,this.options=h,s.length>2||\"\"!==s[0]||\"\"!==s[1]?(this._$AH=Array(s.length-1).fill(new String),this.strings=s):this._$AH=T}_$AI(t,i=this,s,e){const h=this.strings;let o=!1;if(void 0===h)t=N(this,t,i,0),o=!c(t)||t!==this._$AH&&t!==w,o&&(this._$AH=t);else{const e=t;let n,r;for(t=h[0],n=0;n<h.length-1;n++)r=N(this,e[s+n],i,n),r===w&&(r=this._$AH[n]),o||=!c(r)||r!==this._$AH[n],r===T?t=T:t!==T&&(t+=(r??\"\")+h[n+1]),this._$AH[n]=r}o&&!e&&this.O(t)}O(t){t===T?this.element.removeAttribute(this.name):this.element.setAttribute(this.name,t??\"\")}}class k extends R{constructor(){super(...arguments),this.type=3}O(t){this.element[this.name]=t===T?void 0:t}}class H extends R{constructor(){super(...arguments),this.type=4}O(t){this.element.toggleAttribute(this.name,!!t&&t!==T)}}class I extends R{constructor(t,i,s,e,h){super(t,i,s,e,h),this.type=5}_$AI(t,i=this){if((t=N(this,t,i,0)??T)===w)return;const s=this._$AH,e=t===T&&s!==T||t.capture!==s.capture||t.once!==s.once||t.passive!==s.passive,h=t!==T&&(s===T||e);e&&this.element.removeEventListener(this.name,this,s),h&&this.element.addEventListener(this.name,this,t),this._$AH=t}handleEvent(t){\"function\"==typeof this._$AH?this._$AH.call(this.options?.host??this.element,t):this._$AH.handleEvent(t)}}class L{constructor(t,i,s){this.element=t,this.type=6,this._$AN=void 0,this._$AM=i,this.options=s}get _$AU(){return this._$AM._$AU}_$AI(t){N(this,t)}}const z={j:e,P:h,A:o,C:1,M:P,L:S,R:u,V:N,D:M,I:R,H,N:I,U:k,B:L},Z=t.litHtmlPolyfillSupport;Z?.(V,M),(t.litHtmlVersions??=[]).push(\"3.1.1\");const j=(t,i,s)=>{const e=s?.renderBefore??i;let h=e._$litPart$;if(void 0===h){const t=s?.renderBefore??null;e._$litPart$=h=new M(i.insertBefore(l(),t),t,void 0,s??{})}return h._$AI(t),h};export{z as _$LH,x as html,w as noChange,T as nothing,j as render,b as svg};\n//# sourceMappingURL=lit-html.js.map\n","import{html as t,svg as r}from\"./lit-html.js\";\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const e=Symbol.for(\"\"),o=t=>{if(t?.r===e)return t?._$litStatic$},i=t=>({_$litStatic$:t,r:e}),s=(t,...r)=>({_$litStatic$:r.reduce(((r,e,o)=>r+(t=>{if(void 0!==t._$litStatic$)return t._$litStatic$;throw Error(`Value passed to 'literal' function must be a 'literal' result: ${t}. Use 'unsafeStatic' to pass non-literal values, but\\n            take care to ensure page security.`)})(e)+t[o+1]),t[0]),r:e}),a=new Map,l=t=>(r,...e)=>{const i=e.length;let s,l;const n=[],u=[];let c,$=0,f=!1;for(;$<i;){for(c=r[$];$<i&&void 0!==(l=e[$],s=o(l));)c+=s+r[++$],f=!0;$!==i&&u.push(l),n.push(c),$++}if($===i&&n.push(r[i]),f){const t=n.join(\"$$lit$$\");void 0===(r=a.get(t))&&(n.raw=n,a.set(t,r=n)),e=u}return t(r,...e)},n=l(t),u=l(r);export{n as html,s as literal,u as svg,i as unsafeStatic,l as withStatic};\n//# sourceMappingURL=static.js.map\n"],"file":"assets/static-yoecXErL.js"}